[
    {
        "query": "I want to check if the email address 'test@example.com' is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"test@example.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "123",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test-pg-prod.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test-pg-prod.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "test@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test-pg-prod.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test-pg-prod.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test pg prod",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you find the UK postal addresses for the query \"456 Elm Street\" and limit the results to 3?",
        "model_answer": "requests.get(\"https://uk-postcode.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"uk-postcode.p.rapidapi.com\"}, params={\"q\": \"456 Elm Street\", \"limit\": 3})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Integrate this API with your website's address form to quickly and accurately auto-fill UK postal addresses or find locations of addresses. This API contains a database of almost 1.7 million UK postcodes, along with address and location information.\n\nFor a simple demo, visit https://tomwimmenhove.com/ukpostcode/",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uk-postcode.p.rapidapi.com/search'\nquerystring = {\"q\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uk-postcode.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://uk-postcode.p.rapidapi.com/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "uk-postcode.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "456 Elm Street",
                            "limit": 3
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uk-postcode.p.rapidapi.com/search\"\nquerystring = {\"q\": \"Downing Street London\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uk-postcode.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "UK Postcode",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The query string",
                    "default": "Downing Street London"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results of the query (May be artificially limited)",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to get the location data for the IP address 172.217.20.174.",
        "model_answer": "requests.get(\"https://ip-to-location1.p.rapidapi.com/myip\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-to-location1.p.rapidapi.com\"}, params={\"ip\": \"172.217.20.174\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "API returns location data such as country, city, latitude, longitude, timezone ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-to-location1.p.rapidapi.com/myip'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-to-location1.p.rapidapi.com/myip\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ip-to-location1.p.rapidapi.com/myip"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ip-to-location1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ip": "172.217.20.174"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-to-location1.p.rapidapi.com/myip\"\nquerystring = {\"ip\": \"8.30.234.123\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-to-location1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ip-to-location_v2",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "If provide this query, API will return geo information for the given IP\n",
                    "default": "8.30.234.123"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get data from the YouTooSound API and log the output?",
        "model_answer": "requests.get(\"https://youtoosound.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtoosound.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "YouTooSound",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtoosound.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtoosound.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtoosound.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtoosound.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTooSound",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the latest lotto draw results for all available games using the Lotto Draw Results - Global API.",
        "model_answer": "requests.get(\"https://lotto-draw-results-global.p.rapidapi.com/get_games\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"lotto-draw-results-global.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Up to 65 countries lotto draw results available.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lotto-draw-results-global.p.rapidapi.com/get_games'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lotto-draw-results-global.p.rapidapi.com/get_games\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lotto-draw-results-global.p.rapidapi.com/get_games\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lotto-draw-results-global.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lotto Draw Results - Global",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the latest feed for the user \"johndoe\" using the Hummingbird API.",
        "model_answer": "requests.get(\"https://hbrd-v1.p.rapidapi.com/users/johndoe/feed\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hbrd-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "APIv1 is the old Hummingbird API that is already implemented in multiple applications, its syntax and functionality will surely not change in the future so it is recommended to use this for any long-running projects.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hbrd-v1.p.rapidapi.com/users/cybrox/feed'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hbrd-v1.p.rapidapi.com/users/cybrox/feed\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hbrd-v1.p.rapidapi.com/users/cybrox/feed\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hbrd-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hummingbird APIv1",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "cybrox"
                }
            ]
        }
    },
    {
        "query": "I want to search for the product \"Samsung Galaxy S21\" in the UK marketplace using the \"Get and Compare Products All Over the Web\" API.",
        "model_answer": "requests.get(\"https://get-and-compate-products-allover-the-web.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"get-and-compate-products-allover-the-web.p.rapidapi.com\"}, params={\"query\": \"Samsung Galaxy S21\", \"page\": 1, \"country\": \"UK\", \"location\": \"uk\", \"lang\": \"en\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "With our eCommerce products API you can easily search for products by name and retrieve newly added items from the last X days, among other features.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://get-and-compate-products-allover-the-web.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"page\": \"\", \"country\": \"\", \"location\": \"\", \"lang\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://get-and-compate-products-allover-the-web.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://get-and-compate-products-allover-the-web.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "get-and-compate-products-allover-the-web.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://get-and-compate-products-allover-the-web.p.rapidapi.com/\"\nquerystring = {\"country\": \"countryUS\", \"location\": \"us\", \"lang\": \"en\", \"period\": \"\", \"query\": \"ipone 14 256Gb\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"get-and-compate-products-allover-the-web.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Get and Compate products allover the web",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "ipone 14 256Gb"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": "countryUS"
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "",
                    "default": "us"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "period",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to convert 50 USD to EUR using the IP2Currency Exchange Rate API.",
        "model_answer": "requests.get(\"https://fraudlabs-ip2currency-v1.p.rapidapi.com/ip2currencywebservice.asmx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fraudlabs-ip2currency-v1.p.rapidapi.com\"}, params={\"VISITORIP\": \"\", \"FROMCURRENCYCODE\": \"USD\", \"TOCURRENCYCODE\": \"EUR\", \"FROMAMOUNT\": \"50\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "IP2Currency Exchange Rate Web Service provides the user with an easy way to get a localized & latest Currency Exchange Rate based on the visitor's IP address.\r\n\r\nSign up for free license key at http://www.fraudlabs.com/freelicense.aspx?PackageID=10 which allows up to 90 queries a month.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fraudlabs-ip2currency-v1.p.rapidapi.com/ip2currencywebservice.asmx'\nquerystring = {\"LICENSE\": \"\", \"VISITORIP\": \"\", \"FROMCURRENCYCODE\": \"\", \"TOCURRENCYCODE\": \"\", \"FROMAMOUNT\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fraudlabs-ip2currency-v1.p.rapidapi.com/ip2currencywebservice.asmx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fraudlabs-ip2currency-v1.p.rapidapi.com/ip2currencywebservice.asmx"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fraudlabs-ip2currency-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fraudlabs-ip2currency-v1.p.rapidapi.com/ip2currencywebservice.asmx\"\nquerystring = {\"VISITORIP\": \"\", \"FROMCURRENCYCODE\": \"\", \"TOCURRENCYCODE\": \"\", \"FROMAMOUNT\": \"\", \"LICENSE\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fraudlabs-ip2currency-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP2Currency",
            "api_arguments_original": [
                {
                    "name": "LICENSE",
                    "type": "STRING",
                    "description": "API license key.",
                    "default": ""
                },
                {
                    "name": "VISITORIP",
                    "type": "STRING",
                    "description": "IP address of visitor.",
                    "default": ""
                },
                {
                    "name": "FROMCURRENCYCODE",
                    "type": "STRING",
                    "description": "Base currency code.",
                    "default": ""
                },
                {
                    "name": "TOCURRENCYCODE",
                    "type": "STRING",
                    "description": "Target currency code.",
                    "default": ""
                },
                {
                    "name": "FROMAMOUNT",
                    "type": "STRING",
                    "description": "Currency amount for conversion.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with tide height and time predictions for Station ID 1234567?",
        "model_answer": "requests.get(\"https://noaa-tides.p.rapidapi.com/stations/1234567\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"noaa-tides.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "United States NOAA tide height and time predictions in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://noaa-tides.p.rapidapi.com/stations/8570283'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://noaa-tides.p.rapidapi.com/stations/8570283\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://noaa-tides.p.rapidapi.com/stations/1234567"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "noaa-tides.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://noaa-tides.p.rapidapi.com/stations/8570283\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"noaa-tides.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NOAA Tides",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "8570283"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the available versions for the Go Code Compiler API and log the output?",
        "model_answer": "requests.get(\"https://go-code-compiler.p.rapidapi.com/versions/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"go-code-compiler.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Go Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://go-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://go-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://go-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"go-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Go Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to convert the amount $500 to letters in Mexican Pesos?",
        "model_answer": "requests.get(\"https://numberstoletters.p.rapidapi.com/convert\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"numberstoletters.p.rapidapi.com\"}, params={\"moneda\": \"PESOS\", \"monto\":\"500\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Convierte cantidad a letras peso Mexicano, Espa\u00f1ol e Ingles",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://numberstoletters.p.rapidapi.com/convert'\nquerystring = {\"moneda\": \"\", \"monto\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://numberstoletters.p.rapidapi.com/convert\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://numberstoletters.p.rapidapi.com/convert"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "numberstoletters.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "moneda": "PESOS",
                            "monto": "500"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://numberstoletters.p.rapidapi.com/convert\"\nquerystring = {\"moneda\": \"DOLARES\", \"monto\": \"1000\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numberstoletters.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NumbersToLetters",
            "api_arguments_original": [
                {
                    "name": "moneda",
                    "type": "STRING",
                    "description": "",
                    "default": "DOLARES"
                },
                {
                    "name": "monto",
                    "type": "STRING",
                    "description": "",
                    "default": "1000"
                }
            ]
        }
    },
    {
        "query": "How can I get the character profile for the player \"JaneDoe\" in the US region and the realm \"Stormrage\" using the Raider.IO API?",
        "model_answer": "requests.get(\"https://raider-io.p.rapidapi.com/api/v1/characters/profile\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"raider-io.p.rapidapi.com\"}, params={\"region\": \"us\", \"realm\": \"stormrage\", \"fields\": \"mythic_plus_scores_by_season:current\", \"name\": \"JaneDoe\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Raider.IO API to gather Character information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://raider-io.p.rapidapi.com/api/v1/characters/profile'\nquerystring = {\"region\": \"\", \"realm\": \"\", \"fields\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://raider-io.p.rapidapi.com/api/v1/characters/profile\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://raider-io.p.rapidapi.com/api/v1/characters/profile"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "raider-io.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "region": "us",
                            "realm": "stormrage",
                            "fields": "mythic_plus_scores_by_season:current",
                            "name": "JaneDoe"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://raider-io.p.rapidapi.com/api/v1/characters/profile\"\nquerystring = {\"region\": \"us\", \"realm\": \"stormrage\", \"fields\": \"mythic_plus_scores_by_season:current\", \"name\": \"zadorie\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"raider-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Raider.IO",
            "api_arguments_original": [
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "Region (us)",
                    "default": "us"
                },
                {
                    "name": "realm",
                    "type": "STRING",
                    "description": "Realm (stormrage)",
                    "default": "stormrage"
                },
                {
                    "name": "fields",
                    "type": "STRING",
                    "description": "Field (gear or mythic_plus_scores_by_season:current",
                    "default": "mythic_plus_scores_by_season:current"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Character Name",
                    "default": "zadorie"
                }
            ]
        }
    },
    {
        "query": "I want to send a text message with \"How are you doing?\" to phone number 9876543210 using BroadNet SMS API.",
        "model_answer": "requests.get(\"https://broadnet-sms1.p.rapidapi.com/websmpp/websms\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"broadnet-sms1.p.rapidapi.com\"}, params={\"text\": \"How are you doing?\", \"accesskey\": \"\", \"sid\": \"\", \"mno\": \"9876543210\", \"type\": 1})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Broadnet is an international leading business messaging solution provider. We are a GSMA associate member, ISO in information security management and quality management system and GDPR Certified; Broadnet is well known for its services: Bulk SMS, A2P SMS, HLR Lookup, SMSC Gateway and SMS Firewall; more  than 60,000+ Clients. Direct connection to more than 680+ Operators & Carriers.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://broadnet-sms1.p.rapidapi.com/websmpp/websms'\nquerystring = {\"text\": \"\", \"accesskey\": \"\", \"sid\": \"\", \"mno\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://broadnet-sms1.p.rapidapi.com/websmpp/websms\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://broadnet-sms1.p.rapidapi.com/websmpp/websms"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "broadnet-sms1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "text": "How are you doing?",
                            "accesskey": "",
                            "sid": "",
                            "mno": "9876543210",
                            "type": 1
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://broadnet-sms1.p.rapidapi.com/websmpp/websms\"\nquerystring = {\"text\": \"Example text msg\", \"accesskey\": \"\", \"sid\": \"\", \"mno\": \"\", \"type\": 1}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"broadnet-sms1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BroadNet SMS",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Example text msg"
                },
                {
                    "name": "accesskey",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sid",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "mno",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "NUMBER",
                    "description": "",
                    "default": 1
                }
            ]
        }
    },
    {
        "query": "I want to get the detailed information of a specific video with ID '2B4AS90Da45' from the Youtube Music API (Detailed).",
        "model_answer": "requests.get(\"https://youtube-music-api-detailed.p.rapidapi.com/get_watch_playlist\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"youtube-music-api-detailed.p.rapidapi.com\"}, params={\"video_id\": \"2B4AS90Da45\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-music-api-detailed.p.rapidapi.com/get_watch_playlist'\nquerystring = {\"video_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-music-api-detailed.p.rapidapi.com/get_watch_playlist\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://youtube-music-api-detailed.p.rapidapi.com/get_watch_playlist"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "youtube-music-api-detailed.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-music-api-detailed.p.rapidapi.com/get_watch_playlist\"\nquerystring = {\"video_id\": \"1A7Qw88As64\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-music-api-detailed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Youtube Music API (Detailed)",
            "api_arguments_original": [
                {
                    "name": "video_id",
                    "type": "STRING",
                    "description": "",
                    "default": "1A7Qw88As64"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to retrieve the comments for a product with the ID 7654321 from \u00c7i\u00e7eksepeti and store the response in a variable called \"comments\". ",
        "model_answer": "requests.get(\"https://ciceksepeti-data.p.rapidapi.com/getCommentsFromProduct\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ciceksepeti-data.p.rapidapi.com\"}, params={\"product_id\": \"7654321\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "ARDIC's \u00c7i\u00e7eksepeti data retrieval service.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ciceksepeti-data.p.rapidapi.com/getCommentsFromProduct'\nquerystring = {\"product_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ciceksepeti-data.p.rapidapi.com/getCommentsFromProduct\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ciceksepeti-data.p.rapidapi.com/getCommentsFromProduct"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ciceksepeti-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ciceksepeti-data.p.rapidapi.com/getCommentsFromProduct\"\nquerystring = {\"product_id\": \"41892066\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ciceksepeti-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\u00c7i\u00e7eksepeti Data",
            "api_arguments_original": [
                {
                    "name": "product_id",
                    "type": "STRING",
                    "description": "",
                    "default": "41892066"
                }
            ]
        }
    },
    {
        "query": "I would like to convert 10 centimeters to meters using the Measurement Units Converter API.",
        "model_answer": "requests.get(\"https://measurement-units-converter.p.rapidapi.com/api/v1/market/conversions/convert\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"measurement-units-converter.p.rapidapi.com\"}, params={\"output_unit\": \"m\", \"input_unit\": \"cm\", \"value\": \"10\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Easily and quickly convert all types of measurement units using the API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://measurement-units-converter.p.rapidapi.com/api/v1/market/conversions/convert'\nquerystring = {\"output_unit\": \"\", \"input_unit\": \"\", \"value\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://measurement-units-converter.p.rapidapi.com/api/v1/market/conversions/convert\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://measurement-units-converter.p.rapidapi.com/api/v1/market/conversions/convert"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "measurement-units-converter.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://measurement-units-converter.p.rapidapi.com/api/v1/market/conversions/convert\"\nquerystring = {\"output_unit\": \"g\", \"input_unit\": \"kg\", \"value\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"measurement-units-converter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Measurement Units Converter",
            "api_arguments_original": [
                {
                    "name": "output_unit",
                    "type": "STRING",
                    "description": "",
                    "default": "g"
                },
                {
                    "name": "input_unit",
                    "type": "STRING",
                    "description": "",
                    "default": "kg"
                },
                {
                    "name": "value",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to exchange 0.2 BTC to ETH using ChangeNOW crypto exchange API.",
        "model_answer": "requests.get(\"https://changenow-crypto-exchange.p.rapidapi.com/v1/exchange-range/fixed-rate/btc_eth\",  headers={\"X-RapidAPI-Key\": \"your_api_key\",\"X-RapidAPI-Host\":\"changenow-crypto-exchange.p.rapidapi.com\"}, params={\"from_to\": \"btc_eth\", \"api_key\":\"your_api_key\", \"useRateId\":\"true\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Empower your business by letting your customers buy, sell, and exchange crypto. You will earn % on every transaction. 400+ cryptocurrencies and 75+ fiats are available. IMPORTANT: You should get your API key by creating a partner's account here: changenow.io/affiliate. Or email us: partners@changenow.io. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://changenow-crypto-exchange.p.rapidapi.com/v1/exchange-range/fixed-rate/btc_eth'\nquerystring = {\"from_to\": \"\", \"api_key\": \"\", \"useRateId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://changenow-crypto-exchange.p.rapidapi.com/v1/exchange-range/fixed-rate/btc_eth\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://changenow-crypto-exchange.p.rapidapi.com/v1/exchange-range/fixed-rate/btc_eth"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "your_api_key",
                            "X-RapidAPI-Host": "changenow-crypto-exchange.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://changenow-crypto-exchange.p.rapidapi.com/v1/exchange-range/fixed-rate/btc_eth\"\nquerystring = {\"useRateId\": \"true\", \"api_key\": \"your_api_key\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"changenow-crypto-exchange.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ChangeNOW crypto exchange",
            "api_arguments_original": [
                {
                    "name": "from_to",
                    "type": "STRING",
                    "description": "(Required) Underscore separated pair of tickers",
                    "default": "btc_eth"
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": "your_api_key"
                },
                {
                    "name": "useRateId",
                    "type": "STRING",
                    "description": "(Optional) Use rateId for fixed-rate flow. If this field is true, you could use returned field \\\\\\\\\\\\\\\"rateId\\\\\\\\\\\\\\\" in next method for creating transaction to freeze estimated amount that you got in this method. Current estimated amount would be valid until time in field \\\\\\\\\\\\\\\"validUntil\\\\\\\\\\\\\\\"",
                    "default": "true"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the Amazon product information for ASIN B09DKV849B in the US marketplace.",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "How many points did the DAX40 stock index gain or lose each month (during this period: Jan-Aug, 2022). This API will get the data that will answer that question.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dax1.p.rapidapi.com/points'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dax1.p.rapidapi.com/points\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "amazon-live-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dax1.p.rapidapi.com/points\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dax1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DAX",
            "api_arguments_original": []
        }
    },
    {
        "query": "Translate the sentence \"Bonjour, comment \u00e7a va?\" from French to English.",
        "model_answer": "requests.get(\"https://translate-it1.p.rapidapi.com/options\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"translate-it1.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Api translator, with this api you could get translate your text easily from one of the supported languages to another one",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translate-it1.p.rapidapi.com/options'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translate-it1.p.rapidapi.com/options\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translate-it1.p.rapidapi.com/options\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translate-it1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translate it",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the Python function call to retrieve a list of beers from Italy using the Beers List API.",
        "model_answer": "requests.get(\"https://beers-list.p.rapidapi.com/beers/italy\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"beers-list.p.rapidapi.com\"})",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "A list of beers from many European countries",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://beers-list.p.rapidapi.com/beers/italy'\nquerystring = {\"beerId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://beers-list.p.rapidapi.com/beers/italy\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://beers-list.p.rapidapi.com/beers/italy"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "beers-list.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://beers-list.p.rapidapi.com/beers/italy\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"beers-list.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Beers List",
            "api_arguments_original": [
                {
                    "name": "beerId",
                    "type": "string",
                    "description": "",
                    "default": "italy"
                }
            ]
        }
    },
    {
        "query": "Please check the WHOIS information for the domain name \"example.com\".",
        "model_answer": "requests.get(\"https://whoisapi-whois-v2-v1.p.rapidapi.com/whoisserver/WhoisService\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"whoisapi-whois-v2-v1.p.rapidapi.com\"}, params={\"domainName\": \"example.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "WHOIS API (v2) returns well-parsed WHOIS records with fields in XML and JSON formats for any IPv4, IPv6 address, domain name, or email.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://whoisapi-whois-v2-v1.p.rapidapi.com/whoisserver/WhoisService'\nquerystring = {\"domainName\": \"\", \"thinWhois\": \"\", \"callback\": \"\", \"preferfresh\": \"\", \"checkproxydata\": \"\", \"_parse\": \"\", \"registryrawtext\": \"\", \"registrarRawText\": \"\", \"ipwhois\": \"\", \"ip\": \"\", \"da\": \"\", \"outputFormat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://whoisapi-whois-v2-v1.p.rapidapi.com/whoisserver/WhoisService\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://whoisapi-whois-v2-v1.p.rapidapi.com/whoisserver/WhoisService"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "whoisapi-whois-v2-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domainName": "example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://whoisapi-whois-v2-v1.p.rapidapi.com/whoisserver/WhoisService\"\nquerystring = {\"thinWhois\": \"0\", \"callback\": \"\", \"preferfresh\": \"0\", \"checkproxydata\": \"0\", \"_parse\": \"0\", \"registryrawtext\": \"\", \"registrarRawText\": \"\", \"ipwhois\": \"0\", \"ip\": \"0\", \"domainName\": \"whoisxmlapi.com\", \"da\": \"0\", \"outputFormat\": \"XML\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whoisapi-whois-v2-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WHOIS v2",
            "api_arguments_original": [
                {
                    "name": "domainName",
                    "type": "STRING",
                    "description": "The name of the domain looked up.",
                    "default": "whoisxmlapi.com"
                },
                {
                    "name": "thinWhois",
                    "type": "STRING",
                    "description": "1 results in returning whois data from the registry only, without fetching data from the registrar. Returned registry data are to be found in the WhoisRecord \u2192 registryData schema element. Accepted values are 0 and 1, the default is 0.",
                    "default": "0"
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "A JAVAscript function used when outputFormat is JSON; this is an implementation known as JSONP which invokes the callback on the returned response.",
                    "default": ""
                },
                {
                    "name": "preferfresh",
                    "type": "STRING",
                    "description": "Can be 0 or 1. 1 results in getting the latest Whois record even if it is incomplete. Defaults to 0.",
                    "default": "0"
                },
                {
                    "name": "checkproxydata",
                    "type": "STRING",
                    "description": "1 results in fetching proxy/whois guard data, if found, they are returned in the WhoisRecord \u2192 privateWhoisProxy schema element. Accepted values are 0 and 1, the default is 0.",
                    "default": "0"
                },
                {
                    "name": "_parse",
                    "type": "STRING",
                    "description": "This parameter enables the use of the API for parsing WHOIS raw text provided in the query.1 provides parsing for input WHOIS raw texts described at the parameters registryRawText and registrarRawText. Accepted values are 0 and 1, the default is 0.",
                    "default": "0"
                },
                {
                    "name": "registryrawtext",
                    "type": "STRING",
                    "description": "The string containing the registry WHOIS raw text to be parsed; works only when the _parse parameter is equal to 1.",
                    "default": ""
                },
                {
                    "name": "registrarRawText",
                    "type": "STRING",
                    "description": "A string containing the registrar WHOIS raw text to be parsed; works only when the _parse parameter is equal to 1.",
                    "default": ""
                },
                {
                    "name": "ipwhois",
                    "type": "STRING",
                    "description": "1 results in returning the WHOIS record for the hosting IP if the WHOIS record for the domain is not supported. For unsupported TLDs, domain NameServers are returned if the ipWhois flag is activated, a WHOIS record for the hosting IP is added to the result.  Accepted values are 0 and 1, the default is 0.",
                    "default": "0"
                },
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "Return IPs for the domain name. Accepted values are 0 and 1. Defaults to 0: no IPs are returned. 1 results in returning IPs.",
                    "default": "0"
                },
                {
                    "name": "da",
                    "type": "STRING",
                    "description": "Perform domain availability check. Accepted values are 0, 1 and 2. Defaults to 0: no domain availability check is performed. When set to 1 the result contains a quick check on domain availability, 2 is slower but more accurate. Results are returned under WhoisRecord \u2192 domainAvailability (AVAILABLE | UNAVAILABLE | UNDETERMINED).",
                    "default": "0"
                },
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "Response output format.  Acceptable values: XML or JSON. Defaults to XML.",
                    "default": "XML"
                }
            ]
        }
    },
    {
        "query": "I want to get the metadata of Vietnamese news articles from January 2021 with an offset of 5.",
        "model_answer": "requests.get(\"https://vietnamese-news.p.rapidapi.com/date/2020-01-*/5\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"vietnamese-news.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Metadata of 250,000+ tagged Vietnamese local news articles from as soon as 2005. Updated hourly.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vietnamese-news.p.rapidapi.com/date/2020-02-*/2'\nquerystring = {\"dateString\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vietnamese-news.p.rapidapi.com/date/2020-02-*/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://vietnamese-news.p.rapidapi.com/date/2020-01-*/5"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "vietnamese-news.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vietnamese-news.p.rapidapi.com/date/2020-02-*/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vietnamese-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vietnamese News",
            "api_arguments_original": [
                {
                    "name": "dateString",
                    "type": "string",
                    "description": "",
                    "default": "2020-02-*"
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Please calculate the monthly payment for a loan of $500,000 with an interest rate of 3.5% and a term of 15 years.",
        "model_answer": "requests.get(\"https://mypeak-calculator-api.p.rapidapi.com/financial/payment-calculator\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mypeak-calculator-api.p.rapidapi.com\"}, params={\"termType\": 15, \"amortizationInYears\": 15, \"interestRate\": 3.5, \"loanAmount\": 500000})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Basic calculator",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mypeak-calculator-api.p.rapidapi.com/financial/payment-calculator'\nquerystring = {\"termType\": \"\", \"amortizationInYears\": \"\", \"interestRate\": \"\", \"loanAmount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mypeak-calculator-api.p.rapidapi.com/financial/payment-calculator\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://mypeak-calculator-api.p.rapidapi.com/financial/payment-calculator"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "mypeak-calculator-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "termType": 15,
                            "amortizationInYears": 15,
                            "interestRate": 3.5,
                            "loanAmount": 500000
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mypeak-calculator-api.p.rapidapi.com/financial/payment-calculator\"\nquerystring = {\"termType\": \"0\", \"amortizationInYears\": \"15\", \"interestRate\": \"6\", \"loanAmount\": \"200000\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mypeak-calculator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MyPEAK Calculator API",
            "api_arguments_original": [
                {
                    "name": "termType",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "amortizationInYears",
                    "type": "NUMBER",
                    "description": "",
                    "default": "15"
                },
                {
                    "name": "interestRate",
                    "type": "NUMBER",
                    "description": "",
                    "default": "6"
                },
                {
                    "name": "loanAmount",
                    "type": "NUMBER",
                    "description": "",
                    "default": "200000"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the trending stickers in the Mojitok Sticker Store SDK and log the output.",
        "model_answer": "requests.get(\"https://mojitok-sticker-store-sdk.p.rapidapi.com/stickers/trending\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mojitok-sticker-store-sdk.p.rapidapi.com\"}, params={\"include\":\"STICKER_PACK\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Mojitok Sticker Store API/SDK is a curated store of licensed animated stickers, emojis, and GIFs. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mojitok-sticker-store-sdk.p.rapidapi.com/stickers/trending'\nquerystring = {\"include\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mojitok-sticker-store-sdk.p.rapidapi.com/stickers/trending\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://mojitok-sticker-store-sdk.p.rapidapi.com/stickers/trending"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "mojitok-sticker-store-sdk.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "include": "STICKER_PACK"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mojitok-sticker-store-sdk.p.rapidapi.com/stickers/trending\"\nquerystring = {\"include\": \"STICKER_PACK\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mojitok-sticker-store-sdk.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mojitok Sticker Store SDK",
            "api_arguments_original": [
                {
                    "name": "include",
                    "type": "STRING",
                    "description": "Use when you want to receive a response including sticker pack or creator information",
                    "default": "STICKER_PACK"
                }
            ]
        }
    },
    {
        "query": "I want to verify if my friend is a registered nurse with the Indian Nurse Council using their request ID 9876543210.",
        "model_answer": "requests.get(\"https://nurse-verification.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"nurse-verification.p.rapidapi.com\"}, params={\"request_id\": \"9876543210\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Nurse verification is used to verify whether an individual is a registered nurse with the Indian Nurse Council (INC).\n\nUse GET Call API to fetch results, using the request_id received in response.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nurse-verification.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nurse-verification.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://nurse-verification.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "nurse-verification.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "request_id": "9876543210"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nurse-verification.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nurse-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Nurse Verification",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the compatibility score between Olivia S and Jacob B using The Love Calculator API.",
        "model_answer": "requests.get(\"https://the-love-calculator.p.rapidapi.com/love-calculator\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"the-love-calculator.p.rapidapi.com\"}, params={\"fname\": \"Olivia S\", \"sname\": \"Jacob B\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "A fun api that shows the compatibility of your crush!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-love-calculator.p.rapidapi.com/love-calculator'\nquerystring = {\"fname\": \"\", \"sname\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-love-calculator.p.rapidapi.com/love-calculator\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://the-love-calculator.p.rapidapi.com/love-calculator"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "the-love-calculator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "fname": "Olivia S",
                            "sname": "Jacob B"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-love-calculator.p.rapidapi.com/love-calculator\"\nquerystring = {\"fname\": \"oliver m\", \"sname\": \"chloe p\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-love-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Love Calculator",
            "api_arguments_original": [
                {
                    "name": "fname",
                    "type": "STRING",
                    "description": "",
                    "default": "oliver m"
                },
                {
                    "name": "sname",
                    "type": "STRING",
                    "description": "",
                    "default": "chloe p"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to track the location of a user with the user_id '987654', using the GeoSpark API and print the response?",
        "model_answer": "requests.get(\"https://geospark.p.rapidapi.com/user/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"geospark.p.rapidapi.com\"}, params={\"user_id\": \"987654\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "Location tracking simplified.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geospark.p.rapidapi.com/user/'\nquerystring = {\"user_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geospark.p.rapidapi.com/user/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://geospark.p.rapidapi.com/user/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "geospark.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "user_id": "987654"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geospark.p.rapidapi.com/user/\"\nquerystring = {\"user_id\": \"USER_ID\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geospark.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GeoSpark",
            "api_arguments_original": [
                {
                    "name": "user_id",
                    "type": "STRING",
                    "description": "user_id",
                    "default": "USER_ID"
                }
            ]
        }
    },
    {
        "query": "I want to get information about a user with the username \"user456\" using the PetStoreAPI2.0.",
        "model_answer": "requests.get(\"https://petstoreapi2-0.p.rapidapi.com/user/user456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"petstoreapi2-0.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://petstoreapi2-0.p.rapidapi.com/user/{username}'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://petstoreapi2-0.p.rapidapi.com/user/{username}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://petstoreapi2-0.p.rapidapi.com/user/{username}\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"petstoreapi2-0.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PetStoreAPI2.0",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The name that needs to be fetched. Use user1 for testing. ",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to convert my Excel file \"data.xlsx\" to a PDF file using the Aspose.Cells Cloud API?",
        "model_answer": "requests.get(\"https://aspose-cells-cloud.p.rapidapi.com/ocr/hc_full\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"aspose-cells-cloud.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Aspose.Cells Cloud is a REST API that enables you to perform a wide range of document processing operations including creation, manipulation, conversion and rendering of Excel documents in the cloud. You can convert your XLS and XLSX files to various other formats like PDF, HTML, ODS, XPS, CSV etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aspose-cells-cloud.p.rapidapi.com/ocr/hc_full'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aspose-cells-cloud.p.rapidapi.com/ocr/hc_full\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://aspose-cells-cloud.p.rapidapi.com/ocr/hc_full"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "aspose-cells-cloud.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aspose-cells-cloud.p.rapidapi.com/ocr/hc_full\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-cells-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aspose.Cells Cloud",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get a list of evergreen blogs ordered by author name.",
        "model_answer": "requests.get(\"https://blogsapi.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"blogsapi.p.rapidapi.com\"}, params={\"ordering\": \"author_name\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get evergreen blogs for your mobile apps.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://blogsapi.p.rapidapi.com/'\nquerystring = {\"ordering\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://blogsapi.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://blogsapi.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "blogsapi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://blogsapi.p.rapidapi.com/\"\nquerystring = {\"ordering\": \"-date_published\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"blogsapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BlogsAPI",
            "api_arguments_original": [
                {
                    "name": "ordering",
                    "type": "STRING",
                    "description": "",
                    "default": "-date_published"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve the top trending music for the United States using the SoundCloud Charts API?",
        "model_answer": "requests.get(\"https://soundcloud-charts-api.p.rapidapi.com/charts\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"soundcloud-charts-api.p.rapidapi.com\"}, params={\"genre\": \"soundcloud:genres:rbsoul\", \"kind\": \"trending\", \"limit\": \"50\", \"region\": \"soundcloud:regions:US\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Get trending and top charts (New & Hot and other)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://soundcloud-charts-api.p.rapidapi.com/charts'\nquerystring = {\"genre\": \"\", \"kind\": \"\", \"limit\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://soundcloud-charts-api.p.rapidapi.com/charts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://soundcloud-charts-api.p.rapidapi.com/charts"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "soundcloud-charts-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "genre": "soundcloud:genres:rbsoul",
                            "kind": "trending",
                            "limit": "50",
                            "region": "soundcloud:regions:US"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://soundcloud-charts-api.p.rapidapi.com/charts\"\nquerystring = {\"genre\": \"soundcloud:genres:rbsoul\", \"limit\": \"50\", \"kind\": \"trending\", \"region\": \"soundcloud:regions:US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"soundcloud-charts-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SoundCloud Charts API",
            "api_arguments_original": [
                {
                    "name": "genre",
                    "type": "STRING",
                    "description": "all-music, ambient, classical, hiphoprap, alternativerock, country, danceedm, dancehall, deephouse, disco, drumbass, dubstep, electronic, folksingersongwriter, hiphoprap, house, indie, jazzblues, latin, metal, piano, pop, reggae, reggaeton, rock, soundtrack, techno, trance, trap, triphop, world .\nAll in this format: soundcloud:genres:disco",
                    "default": "soundcloud:genres:rbsoul"
                },
                {
                    "name": "kind",
                    "type": "STRING",
                    "description": "'trending' or 'top'",
                    "default": "trending"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "50"
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "ISO2 Country codes like US, DE, GB. Use in this format:\nsoundcloud:regions:DE",
                    "default": "soundcloud:regions:US"
                }
            ]
        }
    },
    {
        "query": "Translate the phrase \"How are you?\" from English to Hindi and print the response.",
        "model_answer": "requests.get(\"https://indic-translator.p.rapidapi.com/rapidapi_translate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"indic-translator.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Indic Translator is an advance AI based Translator Indian languages translator API. It has outperformed Google and other translators for tricky Indian languages. Indic Translator has been especially designed for Indian languages, and has been trained on advance deep learning algorithm to perform well on nuanced Indian languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indic-translator.p.rapidapi.com/rapidapi_translate'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indic-translator.p.rapidapi.com/rapidapi_translate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://indic-translator.p.rapidapi.com/rapidapi_translate"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "indic-translator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indic-translator.p.rapidapi.com/rapidapi_translate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indic-translator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indic-Translator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please generate a QR code with the data \"https://www.example.com\" and size 15.",
        "model_answer": "requests.get(\"https://bar-qr-code-generator.p.rapidapi.com/encoded/api/download\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"bar-qr-code-generator.p.rapidapi.com\"}, params={\"type\": \"qr_code\", \"size\": 15, \"data\": \"https://www.example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Generate barcodes and QR codes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bar-qr-code-generator.p.rapidapi.com/encoded/api/download'\nquerystring = {\"type\": \"\", \"data\": \"\", \"size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bar-qr-code-generator.p.rapidapi.com/encoded/api/download\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bar-qr-code-generator.p.rapidapi.com/encoded/api/download"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bar-qr-code-generator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "type": "qr_code",
                            "size": 15,
                            "data": "https://www.example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bar-qr-code-generator.p.rapidapi.com/encoded/api/download\"\nquerystring = {\"type\": \"qr_code\", \"size\": \"5\", \"data\": \"https://www.wynk182.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bar-qr-code-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bar QR Code Generator",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "The type of barcode can be one of qr_code, code_128a, code_128b, code_128c, code_25, code_25_interleaved, code_25_iata, code_39, code_93, gs1_128, ean_13, bookland, ean_8, upc_supplemental, codabar",
                    "default": "qr_code"
                },
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "The data to be encoded",
                    "default": "https://www.wynk182.com"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the QR Code image for the URL \"https://google.com\"?",
        "model_answer": "requests.get(\"https://tvb-qr-code.p.rapidapi.com/qr-code\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"tvb-qr-code.p.rapidapi.com\"}, params={\"url\": \"https://example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This API takes the URL and returns the image of the QR code.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tvb-qr-code.p.rapidapi.com/qr-code'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tvb-qr-code.p.rapidapi.com/qr-code\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tvb-qr-code.p.rapidapi.com/qr-code"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tvb-qr-code.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tvb-qr-code.p.rapidapi.com/qr-code\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tvb-qr-code.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TVB QR Code",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide details about the site with ID 98765?",
        "model_answer": "requests.get(\"https://sitedomain1.p.rapidapi.com/siteDoamin/detail/98765\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"sitedomain1.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "site adm domain",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sitedomain1.p.rapidapi.com/siteDoamin/detail/{did}'\nquerystring = {\"did\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sitedomain1.p.rapidapi.com/siteDoamin/detail/{did}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://sitedomain1.p.rapidapi.com/siteDoamin/detail/98765"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "sitedomain1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sitedomain1.p.rapidapi.com/siteDoamin/detail/{did}\"\nquerystring = {\"did\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sitedomain1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "siteDomain",
            "api_arguments_original": [
                {
                    "name": "did",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to access the income statement for AAPL stock using the FmpCloud API, with the default parameters (apikey: demo, period: quarter).",
        "model_answer": "requests.get(\"https://fmpcloud.p.rapidapi.com/income-statement/AAPL\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"fmpcloud.p.rapidapi.com\"}, params={\"apikey\": \"demo\", \"period\": \"quarter\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Access stock prices. Financial statements, real stock price values. SEC EDGAR API with all filings in real time. Free stock API to discover financial data instantly more at https://fmpcloud.io/ ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fmpcloud.p.rapidapi.com/income-statement/AAPL'\nquerystring = {\"stock\": \"\", \"apikey\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fmpcloud.p.rapidapi.com/income-statement/AAPL\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fmpcloud.p.rapidapi.com/income-statement/AAPL"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fmpcloud.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "apikey": "demo",
                            "period": "quarter"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fmpcloud.p.rapidapi.com/income-statement/AAPL\"\nquerystring = {\"period\": \"quarter\", \"apikey\": \"demo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fmpcloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FmpCloud",
            "api_arguments_original": [
                {
                    "name": "stock",
                    "type": "string",
                    "description": "",
                    "default": "AAPL"
                },
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "get your apikey at https://fmpcloud.io/register",
                    "default": "demo"
                },
                {
                    "name": "period",
                    "type": "STRING",
                    "description": "annual / quarter",
                    "default": "quarter"
                }
            ]
        }
    },
    {
        "query": "How can I get real-time stock market data for company \"AMZN\"?",
        "model_answer": "requests.get(\"https://stock-cryptocurrency-forex-market-data.p.rapidapi.com/search/exchange\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"stock-cryptocurrency-forex-market-data.p.rapidapi.com\"}, params={\"q\": \"AMZN\", \"category\": \"Stock\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Real-time Stock, Cryptocurrency, and Forex market data from NASDAQ, NYSE, LSE, MYX, IDX, Binance, FTX, PancakeSwap, Uniswap, FRED etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stock-cryptocurrency-forex-market-data.p.rapidapi.com/search/exchange'\nquerystring = {\"q\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stock-cryptocurrency-forex-market-data.p.rapidapi.com/search/exchange\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://stock-cryptocurrency-forex-market-data.p.rapidapi.com/search/exchange"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "stock-cryptocurrency-forex-market-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "AMZN",
                            "category": "Stock"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stock-cryptocurrency-forex-market-data.p.rapidapi.com/search/exchange\"\nquerystring = {\"q\": \"B\", \"category\": \"Cryptocurrency\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stock-cryptocurrency-forex-market-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stock Cryptocurrency Forex Market Data",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "B"
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": "Cryptocurrency"
                }
            ]
        }
    },
    {
        "query": "Please retrieve a list of soccer matches from Soccerway for June 15, 2022, and include live matches.",
        "model_answer": "requests.get(\"https://soccerway-feed.p.rapidapi.com/v1/matches/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"soccerway-feed.p.rapidapi.com\"}, params={\"date\": \"2022-06-15\", \"add_live\": true})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://soccerway-feed.p.rapidapi.com/v1/matches/list'\nquerystring = {\"date\": \"\", \"add_live\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://soccerway-feed.p.rapidapi.com/v1/matches/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://soccerway-feed.p.rapidapi.com/v1/matches/list"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "soccerway-feed.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "date": "2022-06-15",
                            "add_live": true
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://soccerway-feed.p.rapidapi.com/v1/matches/list\"\nquerystring = {\"date\": \"2022-06-15\", \"add_live\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"soccerway-feed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Soccerway Feed",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "date",
                    "default": "2022-06-15"
                },
                {
                    "name": "add_live",
                    "type": "BOOLEAN",
                    "description": "is_playing",
                    "default": true
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve the latest news from The Times newspaper using the New Climate API?",
        "model_answer": "requests.get(\"https://new-climate.p.rapidapi.com/news/thetimes\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"new-climate.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Climate data sd",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://new-climate.p.rapidapi.com/news/thetimes'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://new-climate.p.rapidapi.com/news/thetimes\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://new-climate.p.rapidapi.com/news/thetimes"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "new-climate.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://new-climate.p.rapidapi.com/news/thetimes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"new-climate.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "New climate",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "thetimes"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the data from the deepsound API.",
        "model_answer": "requests.get(\"https://deepsound4.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"deepsound4.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "deepsound",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://deepsound4.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://deepsound4.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://deepsound4.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "deepsound4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://deepsound4.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"deepsound4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "deepsound",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the duration of a website visit on the site ABCR.",
        "model_answer": "requests.get(\"https://abcr.p.rapidapi.comhttp://abcr.sitescor.com.br\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"abcr.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Bloco de Tempo do Site ABCR",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://abcr.p.rapidapi.comhttp://abcr.sitescor.com.br'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://abcr.p.rapidapi.comhttp://abcr.sitescor.com.br\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://abcr.p.rapidapi.comhttp://abcr.sitescor.com.br\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"abcr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ABCR",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the top 5 songs of all time from the Billboard API.",
        "model_answer": "requests.get(\"https://billboard3.p.rapidapi.com/greatest-of-all-time-songs-of-the-summer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"billboard3.p.rapidapi.com\"}, params={\"range\": \"1-5\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://billboard3.p.rapidapi.com/greatest-of-all-time-songs-of-the-summer'\nquerystring = {\"range\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://billboard3.p.rapidapi.com/greatest-of-all-time-songs-of-the-summer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://billboard3.p.rapidapi.com/greatest-of-all-time-songs-of-the-summer"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "billboard3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://billboard3.p.rapidapi.com/greatest-of-all-time-songs-of-the-summer\"\nquerystring = {\"range\": \"1-10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"billboard3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Billboard_v2",
            "api_arguments_original": [
                {
                    "name": "range",
                    "type": "STRING",
                    "description": "Returns all results if range is not specified",
                    "default": "1-10"
                }
            ]
        }
    },
    {
        "query": "I want to get the COVID-19 data for USA from the Corona virus World and India data API.",
        "model_answer": "requests.get(\"https://corona-virus-world-and-india-data.p.rapidapi.com/api\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"corona-virus-world-and-india-data.p.rapidapi.com\"}, params={\"country_name\": \"USA\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "COVID-19  World and India data (Depricated since 13th August 2021)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://corona-virus-world-and-india-data.p.rapidapi.com/api'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://corona-virus-world-and-india-data.p.rapidapi.com/api\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://corona-virus-world-and-india-data.p.rapidapi.com/api\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"corona-virus-world-and-india-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Corona virus World and India data",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the news articles from the \"rttrt\" API?",
        "model_answer": "requests.get(\"https://rttrt.p.rapidapi.com/users\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"rttrt.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "juts build and connect",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://rttrt.p.rapidapi.com/users'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://rttrt.p.rapidapi.com/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://rttrt.p.rapidapi.com/users\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rttrt.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "rttrt",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to retrieve the current location of the International Space Station.",
        "model_answer": "requests.get(\"https://iss-location.p.rapidapi.com/get\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"iss-location.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Sends geographical location of NASA",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://iss-location.p.rapidapi.com/get'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://iss-location.p.rapidapi.com/get\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://iss-location.p.rapidapi.com/get"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "iss-location.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://iss-location.p.rapidapi.com/get\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iss-location.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ISS Location",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please translate the phrase \"Good morning!\" from English to Spanish using the Translator API.",
        "model_answer": "requests.get(\"https://translator97.p.rapidapi.com/translate\", headers={\"X-RapidAPI-Key\":\"YOUR_API_KEY\",\"X-RapidAPI-Host\":\"translator97.p.rapidapi.com\"}, params={\"text\":\"Good morning!\",\"source\":\"en\",\"target\":\"es\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Text Translation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translator97.p.rapidapi.com/languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translator97.p.rapidapi.com/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://translator97.p.rapidapi.com/translate"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "YOUR_API_KEY",
                            "X-RapidAPI-Host": "translator97.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "text": "Good morning!",
                            "source": "en",
                            "target": "es"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translator97.p.rapidapi.com/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translator97.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Retrieve the search results for the keyword \"python\" from Yandex and save them in a variable called \"response\".",
        "model_answer": "response = requests.get(\"https://yandex-serp.p.rapidapi.com/GetTaskResult\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yandex-serp.p.rapidapi.com\"}, params={\"task_id\": \"\"})",
        "original": {
            "domain": "Jobs",
            "framework": "RapidAPI",
            "functionality": "\ud83c\udf4f Gain an edge in SEO with our Yandex SERP API. Cost-effective and incredibly user-friendly. Unleash your potential today!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yandex-serp.p.rapidapi.com/GetTaskResult'\nquerystring = {\"task_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yandex-serp.p.rapidapi.com/GetTaskResult\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://yandex-serp.p.rapidapi.com/GetTaskResult"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "yandex-serp.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "task_id": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yandex-serp.p.rapidapi.com/GetTaskResult\"\nquerystring = {\"task_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yandex-serp.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yandex SERP",
            "api_arguments_original": [
                {
                    "name": "task_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the reviews for a specific topic with the data ID '0x123456789' from the Google Search 2 API.",
        "model_answer": "requests.get(\"https://google-search-2.p.rapidapi.com/reviews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"google-search-2.p.rapidapi.com\"}, params={\"data_id\": \"0x123456789\", \"next_page_token\":\"\", \"sort_by\":\"\", \"topic_id\":\"\", \"hl\":\"en_us\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Serpdog(https://serpdog.io) is a Google Search API that allows you to access Google Search Results in real time. It solves the problem of proxies and captchas for a smooth scraping journey. Serpdog supports results in both HTML and JSON format.\n\nGet your free trial by registering at https://api.serpdog.io\n\nIf you want to buy our plan, I recommend you to please visit https://serpdog.io/pricing for more information. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://google-search-2.p.rapidapi.com/reviews'\nquerystring = {\"data_id\": \"\", \"next_page_token\": \"\", \"sort_by\": \"\", \"topic_id\": \"\", \"hl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://google-search-2.p.rapidapi.com/reviews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://google-search-2.p.rapidapi.com/reviews"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "google-search-2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "data_id": "0x123456789",
                            "next_page_token": "",
                            "sort_by": "",
                            "topic_id": "",
                            "hl": "en_us"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://google-search-2.p.rapidapi.com/reviews\"\nquerystring = {\"next_page_token\": \"\", \"data_id\": \"0x89c25090129c363d:0x40c6a5770d25022b\", \"sort_by\": \"\", \"topic_id\": \"\", \"hl\": \"en_us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-search-2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google Search 2",
            "api_arguments_original": [
                {
                    "name": "data_id",
                    "type": "STRING",
                    "description": "",
                    "default": "0x89c25090129c363d:0x40c6a5770d25022b"
                },
                {
                    "name": "next_page_token",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sort_by",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "topic_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "",
                    "default": "en_us"
                }
            ]
        }
    },
    {
        "query": "Please provide the Python function call to retrieve all allowable words that can be formed using the letters \"BCDFHIJKLMOPRS\" in a Boggle game, using the Boggle API.",
        "model_answer": "requests.get(\"https://codebox-boggle-v1.p.rapidapi.com/BCDFHIJKLMOPRS\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"codebox-boggle-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "A Boggle solver - supply 16 letters representing the tiles on a Boggle board and the service will return all allowable words that can be found. Letters from the first row of the board should be listed first reading from left to right, followed by letters from the second row and so on down the board. On a traditional Boggle board, the letters 'Q' and 'U' appear together on a single square, in order to be consistent with this rule the web service will interpret the single letter 'Q' as the sequence 'QU'.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://codebox-boggle-v1.p.rapidapi.com/{letters}'\nquerystring = {\"letters\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://codebox-boggle-v1.p.rapidapi.com/{letters}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://codebox-boggle-v1.p.rapidapi.com/{letters}\"\nquerystring = {\"letters\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codebox-boggle-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Boggle",
            "api_arguments_original": [
                {
                    "name": "letters",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Perform a DNS lookup on google.com using the DNS Lookup API.",
        "model_answer": "requests.get(\"https://dns-lookup2.p.rapidapi.com/Api/a/google.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dns-lookup2.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "API to programmatically perform DNS lookups.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dns-lookup2.p.rapidapi.com/Api/a/oxog.net'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dns-lookup2.p.rapidapi.com/Api/a/oxog.net\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dns-lookup2.p.rapidapi.com/Api/a/google.com"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dns-lookup2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dns-lookup2.p.rapidapi.com/Api/a/oxog.net\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dns-lookup2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DNS Lookup",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "oxog.net"
                }
            ]
        }
    },
    {
        "query": "Can you generate a meme with the text \"I love coding\" and \"Programming is fun!\"?",
        "model_answer": "requests.get(\"https://memeados.p.rapidapi.com/drakelikehate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"memeados.p.rapidapi.com\"}, params={\"text2\": \"I love coding\", \"text1\": \"Programming is fun!\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Generate custom image, gif and video memes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://memeados.p.rapidapi.com/drakelikehate'\nquerystring = {\"text2\": \"\", \"text1\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://memeados.p.rapidapi.com/drakelikehate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://memeados.p.rapidapi.com/drakelikehate\"\nquerystring = {\"text2\": \"This text is liked.\", \"text1\": \"This text is hated\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"memeados.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Memeados",
            "api_arguments_original": [
                {
                    "name": "text2",
                    "type": "STRING",
                    "description": "",
                    "default": "This text is liked."
                },
                {
                    "name": "text1",
                    "type": "STRING",
                    "description": "",
                    "default": "This text is hated"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve a random quote using the provided API and print the response to the console.",
        "model_answer": "requests.get(\"https://quotes85.p.rapidapi.com/keyword\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quotes85.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "A Quotes API is an application programming interface that allows developers to access and retrieve a collection of quotes. It provides a convenient way to access a wide range of quotes from various authors, categories, or topics.Using a Quotes API, developers can integrate inspiring, motivational, or thought-provoking quotes into their applications, websites, or projects. The API typically offers endpoints that allow developers to fetch random quotes, search for quotes based on keywords or ca...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quotes85.p.rapidapi.com/keyword'\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quotes85.p.rapidapi.com/keyword\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "'https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quotes85.p.rapidapi.com/keyword\"\nquerystring = {\"word\": \"success\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quotes85.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quotes_v2",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "success"
                }
            ]
        }
    },
    {
        "query": "What is the distance between pincode 54321 and 98765?",
        "model_answer": "requests.get(\"https://pincode-distance-measurement.p.rapidapi.com/pincode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pincode-distance-measurement.p.rapidapi.com\"}, params={\"from\": \"54321\", \"to\":\"98765\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Pincode distance calculator API allows users to calculate the distance between two or more pin codes or zip codes. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pincode-distance-measurement.p.rapidapi.com/pincode'\nquerystring = {\"from\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pincode-distance-measurement.p.rapidapi.com/pincode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pincode-distance-measurement.p.rapidapi.com/pincode"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pincode-distance-measurement.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "from": "54321",
                            "to": "98765"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pincode-distance-measurement.p.rapidapi.com/pincode\"\nquerystring = {\"from\": \"415612\", \"to\": \"415639\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pincode-distance-measurement.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pincode Distance Measurement ",
            "api_arguments_original": [
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "",
                    "default": "415612"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "",
                    "default": "415639"
                }
            ]
        }
    },
    {
        "query": "Please check if the phone numbers 1111111111 and 2222222222 are valid using the Branded SMS Pakistan API.",
        "model_answer": "requests.get(\"https://branded-sms-pakistan.p.rapidapi.com/send\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"branded-sms-pakistan.p.rapidapi.com\"}, params={\"to\": \"1111111111, 2222222222\", \"key\": \"6014c421fd3dc1185d2b0603b41\", \"mask\": \"H3 TEST SMS\", \"email\": \"hello@brandedsmspakistan.com\", \"message\": \"Hello I am sending test message\", \"status\": \"\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Branded SMS Pakistan provide Mask or Short Code Messaging Gateway in Pakistan",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://branded-sms-pakistan.p.rapidapi.com/send'\nquerystring = {\"to\": \"\", \"key\": \"\", \"mask\": \"\", \"email\": \"\", \"message\": \"\", \"status\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://branded-sms-pakistan.p.rapidapi.com/send\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "to",
                    "enum": [
                        "1111111111, 2222222222"
                    ],
                    "description": "Destination Number (Default Format) 923151231016"
                },
                {
                    "name": "key",
                    "enum": [
                        "6014c421fd3dc1185d2b0603b41"
                    ],
                    "description": "Account API Key"
                },
                {
                    "name": "mask",
                    "enum": [
                        "H3 TEST SMS"
                    ],
                    "description": "Masking (Branded Name)"
                },
                {
                    "name": "email",
                    "enum": [
                        "hello@brandedsmspakistan.com"
                    ],
                    "description": "Account Email Address"
                },
                {
                    "name": "message",
                    "enum": [
                        "Hello I am sending test message"
                    ],
                    "description": "Message Limited to 640 characters"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://branded-sms-pakistan.p.rapidapi.com/send\"\nquerystring = {\"to\": \"923151231015, 923151231016\", \"key\": \"6014c421fd3dc1185d2b0603b41\", \"mask\": \"H3 TEST SMS\", \"email\": \"hello@brandedsmspakistan.com\", \"status\": \"\", \"message\": \"Hello I am sending test message\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"branded-sms-pakistan.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Branded SMS Pakistan",
            "api_arguments_original": [
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Destination Number (Default Format) 923151231016",
                    "default": "923151231015, 923151231016"
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Account API Key",
                    "default": "6014c421fd3dc1185d2b0603b41"
                },
                {
                    "name": "mask",
                    "type": "STRING",
                    "description": "Masking (Branded Name)",
                    "default": "H3 TEST SMS"
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Account Email Address",
                    "default": "hello@brandedsmspakistan.com"
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "Message Limited to 640 characters",
                    "default": "Hello I am sending test message"
                },
                {
                    "name": "status",
                    "type": "BOOLEAN",
                    "description": "Return Message ID",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you verify if the phone number 9876543210 is valid in Germany?",
        "model_answer": "requests.get(\"https://checky-verify-phone-number.p.rapidapi.com/verify\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"checky-verify-phone-number.p.rapidapi.com\"}, params={\"phone\": \"9876543210\", \"country\": \"DE\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Determine in realtime if a given phone number is valid and the type of phone line it is connected to. Works for all countries!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://checky-verify-phone-number.p.rapidapi.com/verify'\nquerystring = {\"phone\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://checky-verify-phone-number.p.rapidapi.com/verify\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://checky-verify-phone-number.p.rapidapi.com/verify"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "checky-verify-phone-number.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "phone": "9876543210",
                            "country": "DE"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://checky-verify-phone-number.p.rapidapi.com/verify\"\nquerystring = {\"phone\": \"6502530000\", \"country\": \"US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"checky-verify-phone-number.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Checky - Verify Phone Number",
            "api_arguments_original": [
                {
                    "name": "phone",
                    "type": "STRING",
                    "description": "The phone number to verify. It should be provided without any spaces or special characters.",
                    "default": "6502530000"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "The two-letter country code of the phone number.  eg **US**, **CA**, **FR** etc.",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "Please retrieve the featured cards for the user \"janedoe\" on Geeklist.",
        "model_answer": "requests.get(\"https://geeklist.p.rapidapi.com/users/janedoe/cards\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"geeklist.p.rapidapi.com\"}, params={\"featured\": \"true\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "The first social network for developers and the tech community.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geeklist.p.rapidapi.com/users/{user}/cards'\nquerystring = {\"user\": \"\", \"featured\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geeklist.p.rapidapi.com/users/{user}/cards\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://geeklist.p.rapidapi.com/users/janedoe/cards"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "geeklist.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "featured": "true"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geeklist.p.rapidapi.com/users/{user}/cards\"\nquerystring = {\"featured\": \"\", \"user\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geeklist.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Geeklist",
            "api_arguments_original": [
                {
                    "name": "user",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "featured",
                    "type": "STRING",
                    "description": "Returns only featured cards for user (only for cards and not contribs).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with detailed information about the Bugatti Chiron made in 2021.",
        "model_answer": "requests.get(\"https://infocarsapi.p.rapidapi.com/cars/bugatti/chiron/2021\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"infocarsapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Access detailed car data and captivating visuals effortlessly.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://infocarsapi.p.rapidapi.com/cars/bugatti/chiron/2021'\nquerystring = {\"model\": \"\", \"year\": \"\", \"maker\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://infocarsapi.p.rapidapi.com/cars/bugatti/chiron/2021\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://infocarsapi.p.rapidapi.com/cars/bugatti/chiron/2021\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"infocarsapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "InfoCarsAPI",
            "api_arguments_original": [
                {
                    "name": "model",
                    "type": "string",
                    "description": "",
                    "default": "chiron"
                },
                {
                    "name": "year",
                    "type": "string",
                    "description": "",
                    "default": "2021"
                },
                {
                    "name": "maker",
                    "type": "string",
                    "description": "",
                    "default": "bugatti"
                }
            ]
        }
    },
    {
        "query": "Please provide the Python function call to find the definition of the word \"banana\" using the Dictionary by API-Ninjas.",
        "model_answer": "requests.get(\"https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dictionary-by-api-ninjas.p.rapidapi.com\"}, params={\"word\": \"banana\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Look up any word in the English dictionary. See more info at https://api-ninjas.com/api/dictionary.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary'\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dictionary-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "word": "banana"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary\"\nquerystring = {\"word\": \"bright\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dictionary-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dictionary by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "Word to look up.",
                    "default": "bright"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to generate a random picture of a cute kitten for my website?",
        "model_answer": "requests.get(\"https://nijikokun-random-cats.p.rapidapi.com/random/kitten\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nijikokun-random-cats.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "Generate random pictures of cute kittens or adorable cats for your applications, website, or just for your personal amusement. Show me your creativity!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nijikokun-random-cats.p.rapidapi.com/random/kitten'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nijikokun-random-cats.p.rapidapi.com/random/kitten\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nijikokun-random-cats.p.rapidapi.com/random/kitten\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nijikokun-random-cats.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Kitten Placeholder",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the official match schedule for the 2022 FIFA World Cup Qatar.",
        "model_answer": "requests.get(\"https://community-official-world-cup.p.rapidapi.com/wc/matches\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"community-official-world-cup.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "The Official Match Schedule for the 2014 FIFA World Cup Brazil.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-official-world-cup.p.rapidapi.com/wc/matches'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-official-world-cup.p.rapidapi.com/wc/matches\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://community-official-world-cup.p.rapidapi.com/wc/matches"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "community-official-world-cup.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-official-world-cup.p.rapidapi.com/wc/matches\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-official-world-cup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Official World Cup",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me with the current Dota 2 tournaments in the Asia region?",
        "model_answer": "requests.get(\"https://dota-2.p.rapidapi.com/tournaments/asia\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dota-2.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Ranks, stats, news & more, provided by the fastest and most powerful API for Rocket League.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://rocket-league1.p.rapidapi.com/tournaments/{region}'\nquerystring = {\"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://rocket-league1.p.rapidapi.com/tournaments/{region}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://rocket-league1.p.rapidapi.com/tournaments/{region}\"\nquerystring = {\"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rocket-league1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Rocket League",
            "api_arguments_original": [
                {
                    "name": "region",
                    "type": "ENUM",
                    "description": "The region to search. Valid options include:\n- `asia-east`\n- `asia-se-mainland`\n- `asia-se-maritime`\n- `europe`\n- `india`\n- `asia-east`\n- `middle-east`\n- `oceania`\n- `south-africa`\n- `south-america`\n- `us-east`\n- `us-west`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to search for \"python\" and get related keywords using the JoJ Web Search API.",
        "model_answer": "requests.get(\"https://joj-web-search.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"joj-web-search.p.rapidapi.com\"}, params={\"query\": \"python\", \"related_keywords\": \"true\", \"limit\": \"10\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "JoJ Web Search API. Search the world's information, including webpages, related keywords and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://joj-web-search.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"related_keywords\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://joj-web-search.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://joj-web-search.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "joj-web-search.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "query": "python",
                            "related_keywords": "true",
                            "limit": "10"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://joj-web-search.p.rapidapi.com/\"\nquerystring = {\"related_keywords\": \"true\", \"query\": \"Nike\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"joj-web-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "JoJ Web Search",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query. You can use Google Search parameters.\n\ne.g. `adele site:youtube.com`\ne.g. `harry potter filetype:pdf`\ne.g. `inurl:store`\ne.g. `ronaldo -cristiano`",
                    "default": "Nike"
                },
                {
                    "name": "related_keywords",
                    "type": "STRING",
                    "description": "Shows related keywords. Default: `false`\n\n*Entering `true`, increases API latency*",
                    "default": "true"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Max results number. Max recommended value is `300`.",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to use the test_v3 API to get the test result using the provided endpoint URL and headers. <br>",
        "model_answer": "requests.get(\"https://test1285.p.rapidapi.com/test\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"test1285.p.rapidapi.com\"}, params={\"test\": \"\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "this is a test api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test1285.p.rapidapi.com/test'\nquerystring = {\"test\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test1285.p.rapidapi.com/test\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://test1285.p.rapidapi.com/test"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "test1285.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "test": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test1285.p.rapidapi.com/test\"\nquerystring = {\"test\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test1285.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test_v3",
            "api_arguments_original": [
                {
                    "name": "test",
                    "type": "STRING",
                    "description": "ddd",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you check if the credit card number 6011782896759578 is valid and log the response using the Credit Card Number Validator API?",
        "model_answer": "requests.get(\"https://credit-card-number-validator.p.rapidapi.com/v1/validatecard\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"credit-card-number-validator.p.rapidapi.com\"}, params={\"cardnumber\": \"6011782896759578\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Enter the first few all numbers of a Credit Card to determine if it is valid and its details. By simply providing the first few numbers or a complete credit card number, this API will validate what card type it is and if it is likely valid using algorithms.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://credit-card-number-validator.p.rapidapi.com/v1/validatecard'\nquerystring = {\"cardnumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://credit-card-number-validator.p.rapidapi.com/v1/validatecard\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://credit-card-number-validator.p.rapidapi.com/v1/validatecard"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "credit-card-number-validator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://credit-card-number-validator.p.rapidapi.com/v1/validatecard\"\nquerystring = {\"cardnumber\": \"4682776017589385\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"credit-card-number-validator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Credit Card Number Validator",
            "api_arguments_original": [
                {
                    "name": "cardnumber",
                    "type": "STRING",
                    "description": "",
                    "default": "4682776017589385"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a Python function call to retrieve the basic metadata of all dog breeds using the DogBreedDB API?",
        "model_answer": "requests.get(\"https://dogbreeddb.p.rapidapi.com/paginated/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dogbreeddb.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dogbreeddb.p.rapidapi.com/paginated/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dogbreeddb.p.rapidapi.com/paginated/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dogbreeddb.p.rapidapi.com/paginated/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dogbreeddb.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DogBreedDB",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the data for ASIN \"B07WXYZ8JH\" from the Amazon Live Data API in the \"us\" locale.",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B07WXYZ8JH\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Online Shop HaloBiru.store",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://halobiru-store.p.rapidapi.comadmin'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://halobiru-store.p.rapidapi.comadmin\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://halobiru-store.p.rapidapi.comadmin\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"halobiru-store.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "HaloBiru.store",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the email address example@gmail.com is a valid email address.",
        "model_answer": "requests.get(url=\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Increase your e-commerce business with this API, we offer all services that you **need**<br>1.  product detail from product ID<br>2.  shipping information<br>3.  detect the new future nuggets<br>4.  trend and hitoric of sales and price on more than **80000** products (best products)<br>5.  Request the products by categories filter by **brands** and **attributes**<br>",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://magic-aliexpress1.p.rapidapi.com/api/product/3256804150697616'\nquerystring = {\"productId\": \"\", \"targetCurrency\": \"\", \"lg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://magic-aliexpress1.p.rapidapi.com/api/product/3256804150697616\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/3256804150697616\"\nquerystring = {\"targetCurrency\": \"\", \"lg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Magic AliExpress",
            "api_arguments_original": [
                {
                    "name": "productId",
                    "type": "NUMBER",
                    "description": "The Aliexpress product ID",
                    "default": "3256804150697616"
                },
                {
                    "name": "targetCurrency",
                    "type": "STRING",
                    "description": "Represents the currency whished when the product is retrieved",
                    "default": ""
                },
                {
                    "name": "lg",
                    "type": "STRING",
                    "description": "Represents the language wished when displaying the single product. He must compliant with ISO 639-1 either have two digits",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get the video details for episode 456 using the VOD App API?",
        "model_answer": "requests.get(\"https://vod-app.p.rapidapi.com/video/456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"vod-app.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "API for video on demand app",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vod-app.p.rapidapi.com/video/{episodeHouseNumber}'\nquerystring = {\"episodeHouseNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vod-app.p.rapidapi.com/video/{episodeHouseNumber}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vod-app.p.rapidapi.com/video/{episodeHouseNumber}\"\nquerystring = {\"episodeHouseNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vod-app.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "VOD App",
            "api_arguments_original": [
                {
                    "name": "episodeHouseNumber",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the OAuth/OpenID Connect authentication information for Google using the AcroSuite OAuther API.",
        "model_answer": "requests.get(\"https://acrosuite-oauther.p.rapidapi.com/v0_1/CstService/tools/oauth/oidclist\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"acrosuite-oauther.p.rapidapi.com\"}, params={\"oAuthCode\":\"GoogleOIDC\", \"redirectHost\":\"\", \"redirectPort\":\"\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Get OAuth/OpenID Connect authentication information. OpenID Connect\u8a8d\u8a3c\u60c5\u5831\u53d6\u5f97\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3044\u307e\u3059\u3002",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://acrosuite-oauther.p.rapidapi.com/v0_1/CstService/tools/oauth/oidclist'\nquerystring = {\"oAuthCode\": \"\", \"redirectHost\": \"\", \"redirectPort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://acrosuite-oauther.p.rapidapi.com/v0_1/CstService/tools/oauth/oidclist\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://acrosuite-oauther.p.rapidapi.com/v0_1/CstService/tools/oauth/oidclist"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "acrosuite-oauther.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "oAuthCode": "GoogleOIDC",
                            "redirectHost": "",
                            "redirectPort": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://acrosuite-oauther.p.rapidapi.com/v0_1/CstService/tools/oauth/oidclist\"\nquerystring = {\"oAuthCode\": \"\", \"redirectHost\": \"\", \"redirectPort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"acrosuite-oauther.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AcroSuite OAuther",
            "api_arguments_original": [
                {
                    "name": "oAuthCode",
                    "type": "STRING",
                    "description": "OIDCProviderCode(GoogleOIDC/LineOIDC/YahooJPOIDC)",
                    "default": ""
                },
                {
                    "name": "redirectHost",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "redirectPort",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to generate a random GUID using the GUID generator API.",
        "model_answer": "requests.get(\"https://guid-generator1.p.rapidapi.com/GenerateGuid\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"guid-generator1.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "The API that generates random GUIDs.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://guid-generator1.p.rapidapi.com/GenerateGuid'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://guid-generator1.p.rapidapi.com/GenerateGuid\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://guid-generator1.p.rapidapi.com/GenerateGuid"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "guid-generator1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://guid-generator1.p.rapidapi.com/GenerateGuid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"guid-generator1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GUID generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide 10 easy words from the Mixy Word Guess API.",
        "model_answer": "requests.get(\"https://mixy-word-guess-api.p.rapidapi.com/api/v1/word\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mixy-word-guess-api.p.rapidapi.com\"}, params={\"amount\": \"10\", \"difficulty\": \"easy\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mixy-word-guess-api.p.rapidapi.com/api/v1/word'\nquerystring = {\"amount\": \"\", \"difficulty\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mixy-word-guess-api.p.rapidapi.com/api/v1/word\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "amount",
                    "enum": [
                        "10"
                    ],
                    "description": "Valid values: integer between 1 and 100"
                },
                {
                    "name": "difficulty",
                    "enum": [
                        "eas"
                    ],
                    "description": "valid values: \"easy\", \"medium\", \"hard\""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mixy-word-guess-api.p.rapidapi.com/api/v1/word\"\nquerystring = {\"amount\": \"10\", \"difficulty\": \"easy\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mixy-word-guess-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mixy Word Guess Api",
            "api_arguments_original": [
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "Valid values: integer between 1 and 100",
                    "default": "10"
                },
                {
                    "name": "difficulty",
                    "type": "STRING",
                    "description": "valid values: \"easy\", \"medium\", \"hard\"",
                    "default": "easy"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a Python function call to retrieve the details of the current free games available on the Epic Games Store using the Epic Free Games API?",
        "model_answer": "requests.get(\"https://epic-free-games.p.rapidapi.com/epic-free-games\", headers={\"X-RapidAPI-Key\": \"YOUR_API_KEY\", \"X-RapidAPI-Host\": \"epic-free-games.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Epic Games Store - Free Games with details.\n\nGame Name,\nGame Description,\nGame Image Wide - Tall,\nGame Publisher,\nGame Discount Price,\nGame Original Price,\nGame Price Currency Code,\nGame Epic URL\n\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://epic-free-games.p.rapidapi.com/epic-free-games'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://epic-free-games.p.rapidapi.com/epic-free-games\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://epic-free-games.p.rapidapi.com/epic-free-games"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "YOUR_API_KEY",
                            "X-RapidAPI-Host": "epic-free-games.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://epic-free-games.p.rapidapi.com/epic-free-games\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"epic-free-games.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Epic Free Games",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please validate the phone number +1 (987) 654-3210 using the phone validation API.",
        "model_answer": "requests.get(\"https://phone-validation.p.rapidapi.com/+19876543210\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"phone-validation.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Mobile phone validation with extended checks",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://phone-validation.p.rapidapi.com/{phone}'\nquerystring = {\"phone\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://phone-validation.p.rapidapi.com/{phone}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://phone-validation.p.rapidapi.com/+19876543210"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "phone-validation.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://phone-validation.p.rapidapi.com/{phone}\"\nquerystring = {\"phone\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"phone-validation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "phone validation",
            "api_arguments_original": [
                {
                    "name": "phone",
                    "type": "STRING",
                    "description": "Provided number should be in E.164 format. (E.164 numbers can have a maximum of fifteen digits and are usually written as follows: [+][country code][subscriber number including area code].)",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Could you please provide me with the exchange rates on February 3, 2005?",
        "model_answer": "requests.get(\"https://mlatman-currency-v1.p.rapidapi.com/{2005-02-03}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mlatman-currency-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Get current and historical currency exchange rates with ease. Rates from the European Central Bank, updated every 15 minutes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mlatman-currency-v1.p.rapidapi.com/{2005-02-03}'\nquerystring = {\"2005-02-03\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mlatman-currency-v1.p.rapidapi.com/{2005-02-03}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mlatman-currency-v1.p.rapidapi.com/{2005-02-03}\"\nquerystring = {\"2005-02-03\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mlatman-currency-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Currency_v3",
            "api_arguments_original": [
                {
                    "name": "2005-02-03",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide the address information for latitude 40.7128 and longitude -74.0060 after converting it to the World Geodetic System.",
        "model_answer": "requests.get(\"https://navitime-geocoding.p.rapidapi.com/datum_conversion\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"navitime-geocoding.p.rapidapi.com\"}, params={\"coord\": \"40.7128,-74.0060\", \"after_datum\":\"wgs84\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Return address informations including longitude/latitude and a postal code, by specifying keywords or a postal code. \nWe also provide Reverse geocoding function, which converts from longitude/latitude into address informations.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://navitime-geocoding.p.rapidapi.com/datum_conversion'\nquerystring = {\"coord\": \"\", \"after_datum\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://navitime-geocoding.p.rapidapi.com/datum_conversion\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://navitime-geocoding.p.rapidapi.com/datum_conversion"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "navitime-geocoding.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "coord": "40.7128,-74.0060",
                            "after_datum": "wgs84"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://navitime-geocoding.p.rapidapi.com/datum_conversion\"\nquerystring = {\"coord\": \"35.624822,139.742121\", \"after_datum\": \"wgs84\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"navitime-geocoding.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NAVITIME Geocoding",
            "api_arguments_original": [
                {
                    "name": "coord",
                    "type": "STRING",
                    "description": "Latitude and longitude before conversion.\nSupport millisecond and degree indication.",
                    "default": "35.624822,139.742121"
                },
                {
                    "name": "after_datum",
                    "type": "STRING",
                    "description": "Geodetic system after conversion.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System)",
                    "default": "wgs84"
                }
            ]
        }
    },
    {
        "query": "Can you help me get live data of a product with ASIN B09DKV849B on Amazon in the US marketplace?",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "daftar big89 dan login big89 judi online indonesia terpercaya",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://big89.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://big89.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "amazon-live-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://big89.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"big89.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "big89",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the details of the airport in Dublin and store the response in a variable called 'airport_details'?",
        "model_answer": "requests.get(\"https://world-airports-directory.p.rapidapi.com/v1/airports/dub\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"world-airports-directory.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "API returns all matching airpot details based on the most relevant keyword of city, airport code, city code etc. among collection of all airports around the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-airports-directory.p.rapidapi.com/v1/airports/dub'\nquerystring = {\"matchingKeywordAirportOrCityOrCode\": \"\", \"sortBy\": \"\", \"page\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-airports-directory.p.rapidapi.com/v1/airports/dub\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-airports-directory.p.rapidapi.com/v1/airports/dub\"\nquerystring = {\"sortBy\": \"AirportName:asc\", \"page\": 1, \"limit\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-airports-directory.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Airports Directory",
            "api_arguments_original": [
                {
                    "name": "matchingKeywordAirportOrCityOrCode",
                    "type": "string",
                    "description": "",
                    "default": "dub"
                },
                {
                    "name": "sortBy",
                    "type": "STRING",
                    "description": "Valid format to sort is `field:order`\ne.g. `AirportName:asc`, `AirportName:desc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                    "default": "AirportName:asc"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "This controls the pagination of results.\nDefault is `1`",
                    "default": 1
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "This indicates how many results you would like to query in one time.\nDefault value is `10` if limit is not provided.\nMaximum limit is `20`",
                    "default": 20
                }
            ]
        }
    },
    {
        "query": "I want to search for \"iPhone 12\" on Amazon using the Basic Amazon Scraper API.",
        "model_answer": "requests.get(\"https://basic-amazon-scraper.p.rapidapi.com/search/iPhone 12\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"basic-amazon-scraper.p.rapidapi.com\"}, params={\"api_key\": \"f03399e151f471ce4a771f1se2f5yg3d\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Free API to get Amazon product metadata. Product details, Reviews, Offers, and Search Queries.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://basic-amazon-scraper.p.rapidapi.com/search/macbook air'\nquerystring = {\"searchQuery\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://basic-amazon-scraper.p.rapidapi.com/search/macbook air\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://basic-amazon-scraper.p.rapidapi.com/search/iPhone 12"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "basic-amazon-scraper.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "api_key": "f03399e151f471ce4a771f1se2f5yg3d"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://basic-amazon-scraper.p.rapidapi.com/search/macbook air\"\nquerystring = {\"api_key\": \"f03399e151f471ce4a771f1se2f5yg3d\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"basic-amazon-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Basic Amazon Scraper",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "macbook air"
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": "f03399e151f471ce4a771f1se2f5yg3d"
                }
            ]
        }
    },
    {
        "query": "Can you help me complete the sentence \"All cats like to chase rats\" with an AI model?",
        "model_answer": "requests.get(\"https://walnut-word-completion.p.rapidapi.com/wrt_transformer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"walnut-word-completion.p.rapidapi.com\"}, params={\"payload\": \"All cats like to chase rats\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Complete any masked word in a sentence using AI.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://walnut-word-completion.p.rapidapi.com/wrt_transformer'\nquerystring = {\"payload\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://walnut-word-completion.p.rapidapi.com/wrt_transformer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://walnut-word-completion.p.rapidapi.com/wrt_transformer"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "walnut-word-completion.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "payload": "All cats like to chase rats"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://walnut-word-completion.p.rapidapi.com/wrt_transformer\"\nquerystring = {\"payload\": \"All [MASK] like to chase rats.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"walnut-word-completion.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Walnut Word Completion",
            "api_arguments_original": [
                {
                    "name": "payload",
                    "type": "STRING",
                    "description": "",
                    "default": "All [MASK] like to chase rats."
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get a random cocktail recipe and log the output?",
        "model_answer": "requests.get(\"https://the-cocktail-db3.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\",\"X-RapidAPI-Host\":\"the-cocktail-db3.p.rapidapi.com/\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Cocktail recipes with high-quality images stored on AWS S3 for fast accessibility. Easy to use!\nCategory: Food",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-cocktail-db3.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-cocktail-db3.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-cocktail-db3.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-cocktail-db3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Cocktail DB",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the live prices for Gold, Silver, Palladium, and Platinum in Euro currency.",
        "model_answer": "requests.get(\"https://live-metal-prices.p.rapidapi.com/v1/latest/XAU,XAG,PA,PL/EUR\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"live-metal-prices.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Live prices for Gold, Silver, Palladium and Platinum in 160+ currencies including USD, GBP and EUR.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://live-metal-prices.p.rapidapi.com/v1/latest/XAU,XAG,PA,PL,GBP,EUR/EUR'\nquerystring = {\"requestedSymbols\": \"\", \"requestedCurrency\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://live-metal-prices.p.rapidapi.com/v1/latest/XAU,XAG,PA,PL,GBP,EUR/EUR\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://live-metal-prices.p.rapidapi.com/v1/latest/XAU,XAG,PA,PL,GBP,EUR/EUR\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"live-metal-prices.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Live Metal Prices",
            "api_arguments_original": [
                {
                    "name": "requestedSymbols",
                    "type": "string",
                    "description": "",
                    "default": "XAU,XAG,PA,PL,GBP,EUR"
                },
                {
                    "name": "requestedCurrency",
                    "type": "string",
                    "description": "",
                    "default": "EUR"
                }
            ]
        }
    },
    {
        "query": "How can I get the details of Airbnb listings in Tenerife with a maximum guest capacity of 4 and 2 bedrooms?",
        "model_answer": "requests.get(\"https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"airbnb-listings.p.rapidapi.com\"}, params={\"market\": \"Tenerife\", \"offset\": 0, \"maxGuestCapacity\": 4, \"bedrooms\": 2})",
        "original": {
            "domain": "Logistics",
            "framework": "RapidAPI",
            "functionality": "Get airbnb listings details, prices, availability and more using listing IDs, latitude and longitude or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nData are not in realtime but updated as frequently as possible. Each time property prices, details or statuses are requested we prioritize this property to be updated multiple times/day for the next 24 hours. So on your very first request of a property data you may get not updated data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket'\nquerystring = {\"market\": \"\", \"offset\": \"\", \"maxGuestCapacity\": \"\", \"bedrooms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "airbnb-listings.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "market": "Tenerife",
                            "offset": 0,
                            "maxGuestCapacity": 4,
                            "bedrooms": 2
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket\"\nquerystring = {\"maxGuestCapacity\": \"2\", \"market\": \"Tenerife\", \"bedrooms\": \"1\", \"offset\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Airbnb listings",
            "api_arguments_original": [
                {
                    "name": "market",
                    "type": "STRING",
                    "description": "",
                    "default": "Tenerife"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "index to start from",
                    "default": "0"
                },
                {
                    "name": "maxGuestCapacity",
                    "type": "NUMBER",
                    "description": "Max guest the listing can accomodate",
                    "default": "2"
                },
                {
                    "name": "bedrooms",
                    "type": "NUMBER",
                    "description": "number of bedrooms",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you please check the license plate ABC123 using the \"Verifica Targhe Italiane\" API?",
        "model_answer": "requests.get(\"https://verifica-targhe-italiane-api.p.rapidapi.com/default/BVSLambda\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"verifica-targhe-italiane-api.p.rapidapi.com\"}, params={\"plate\": \"ABC123\", \"function\": \"getktypefornumplateitalian\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Verifica Targhe Italiane ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://verifica-targhe-italiane-api.p.rapidapi.com/default/BVSLambda'\nquerystring = {\"plate\": \"\", \"function\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://verifica-targhe-italiane-api.p.rapidapi.com/default/BVSLambda\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "plate",
                    "enum": [
                        "ABC123"
                    ],
                    "description": ""
                },
                {
                    "name": "function",
                    "enum": [
                        "getktypefornumplateitalia"
                    ],
                    "description": ""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://verifica-targhe-italiane-api.p.rapidapi.com/default/BVSLambda\"\nquerystring = {\"plate\": \"AB913CT\", \"function\": \"getktypefornumplateitalian\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"verifica-targhe-italiane-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Verifica Targhe Italiane - API",
            "api_arguments_original": [
                {
                    "name": "plate",
                    "type": "STRING",
                    "description": "",
                    "default": "AB913CT"
                },
                {
                    "name": "function",
                    "type": "STRING",
                    "description": "",
                    "default": "getktypefornumplateitalian"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the Italian Serie A standings for the current season (2022)?",
        "model_answer": "requests.get(\"https://serie-a-standings.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"serie-a-standings.p.rapidapi.com\"}, params={\"season\": \"2022\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Italian Serie A Standings & Table",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://serie-a-standings.p.rapidapi.com/'\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://serie-a-standings.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://serie-a-standings.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "serie-a-standings.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "season": "2022"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://serie-a-standings.p.rapidapi.com/\"\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"serie-a-standings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Serie A Standings",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please check if the domain microsoft.com is available?",
        "model_answer": "requests.get(\"https://domain-checker-api.p.rapidapi.com/lookup\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"domain-checker-api.p.rapidapi.com\"}, params={\"url\": \"microsoft.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "The Domain Checker API allows users to retrieve detailed information about a specific domain name. With this API, developers, businesses, and individuals can access valuable data such as the domain's registrar information and registrant contact details.\n\nBy making use of the Domain Checker API, users can obtain the following information related to a domain:\n\nRegistrar Info: This includes the name of the domain registrar, the WHOIS server responsible for providing domain registration informati...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://domain-checker-api.p.rapidapi.com/lookup'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://domain-checker-api.p.rapidapi.com/lookup\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://domain-checker-api.p.rapidapi.com/lookup"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "domain-checker-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "microsoft.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://domain-checker-api.p.rapidapi.com/lookup\"\nquerystring = {\"url\": \"https://rapidapi.com/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"domain-checker-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Domain Checker API",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://rapidapi.com/"
                }
            ]
        }
    },
    {
        "query": "Please provide the geographic coordinates for zip code 90210.",
        "model_answer": "requests.get(\"https://us-zipcodes.p.rapidapi.com/codes/90210\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"us-zipcodes.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The API offers detailed data about zip codes in the USA, including geographic coordinates, county, city, and time zone. This information is valuable for targeted marketing, data analysis, and location-based services. Users can retrieve location-specific details about a given zip code using the API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://us-zipcodes.p.rapidapi.com/codes/501'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://us-zipcodes.p.rapidapi.com/codes/501\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://us-zipcodes.p.rapidapi.com/codes/90210"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "us-zipcodes.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://us-zipcodes.p.rapidapi.com/codes/501\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"us-zipcodes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "US Zipcodes",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "",
                    "default": "501"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to retrieve the top 5 cryptocurrencies using the All-In-One Crypto Swiss Knife API and print the response.",
        "model_answer": "requests.get(\"https://all-in-one-crypto-swiss-knife.p.rapidapi.com/coins/toplist\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"all-in-one-crypto-swiss-knife.p.rapidapi.com\"}, params={\"limit\": \"5\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Coins, NFTS, Portfolio tracker, Whales, airdrops, news, tweets, YT videos, reddit posts, DeFi protocols,, games, podcasts, events, gas price and more!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-in-one-crypto-swiss-knife.p.rapidapi.com/coins/toplist'\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-in-one-crypto-swiss-knife.p.rapidapi.com/coins/toplist\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://all-in-one-crypto-swiss-knife.p.rapidapi.com/coins/toplist"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "all-in-one-crypto-swiss-knife.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "limit": "5"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-in-one-crypto-swiss-knife.p.rapidapi.com/coins/toplist\"\nquerystring = {\"limit\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-in-one-crypto-swiss-knife.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\ud83d\udd25 All-In-One Crypto Swiss Knife \ud83d\ude80",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with information about the user using the BogieApis API?",
        "model_answer": "requests.get(\"https://bogieapis.p.rapidapi.com/userinfo\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bogieapis.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "qqwerty",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bogieapis.p.rapidapi.com/userinfo'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bogieapis.p.rapidapi.com/userinfo\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bogieapis.p.rapidapi.com/userinfo"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bogieapis.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bogieapis.p.rapidapi.com/userinfo\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bogieapis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BogieApis",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to get the available languages for news content extraction and log the output using RapidAPI?",
        "model_answer": "requests.get(\"https://news-content-extraction-live.p.rapidapi.com/get_languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"news-content-extraction-live.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Comprehensive Extraction of Web News Content",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://news-content-extraction-live.p.rapidapi.com/get_languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://news-content-extraction-live.p.rapidapi.com/get_languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://news-content-extraction-live.p.rapidapi.com/get_languages"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "news-content-extraction-live.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://news-content-extraction-live.p.rapidapi.com/get_languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-content-extraction-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "News Content Extraction - Live",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please get the top 10 reviews for the product with app key \"APPKEY567\" and domain key \"DOMAINKEY890\".",
        "model_answer": "requests.get(\"https://yotpo.p.rapidapi.com/products/B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1/92431514/reviews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yotpo.p.rapidapi.com\"}, params={\"count\": \"10\", \"page\": \"1\", \"app_key\": \"APPKEY567\", \"domain_key\": \"DOMAINKEY890\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Yotpo is taking reviews social being a fun, social way for your e-commerce customers to read and write reviews!\r\n\r\nBEFORE YOU BEGIN, you must sign for a free account at Yotpo: https://www.yotpo.com/register , and you are more than welcome to further read on us at: http://www.yotpo.com . \r\n\r\nWe also encourage first time users to checkout our example sites where Yotpo is installed: \r\n\r\nhttp://magento.yotpo.com/\r\nhttp://shop.yotpo.com \r\n\r\nfor list of existing customers please refer to our website. \r\n\r\n\r\nYotpo API, works above the Yotpo Social Reviews service. It is designed to create more customised solutions for Yotpo customers, and to let them smartly integrate with Yotpo's system.\r\n\r\nStayed tuned, the Yotpo API is a work in progress.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yotpo.p.rapidapi.com/products/B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1/92431514/reviews'\nquerystring = {\"count\": \"\", \"page\": \"\", \"app_key\": \"\", \"domain_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yotpo.p.rapidapi.com/products/B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1/92431514/reviews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://yotpo.p.rapidapi.com/products/B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1/92431514/reviews"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "yotpo.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yotpo.p.rapidapi.com/products/B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1/92431514/reviews\"\nquerystring = {\"count\": \"3\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yotpo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yotpo",
            "api_arguments_original": [
                {
                    "name": "count",
                    "type": "STRING",
                    "description": "specify how many reviews you want to pull",
                    "default": "3"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "specify the page number you want to pull",
                    "default": "1"
                },
                {
                    "name": "app_key",
                    "type": "STRING",
                    "description": "your application key that is assigned to you after signing up to Yotpo (www.yotpo.com)",
                    "default": "B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1"
                },
                {
                    "name": "domain_key",
                    "type": "STRING",
                    "description": "unique identifier of the product as stored when creating the review",
                    "default": "92431514"
                }
            ]
        }
    },
    {
        "query": "I want to send a message saying \"How are you doing?\" using the message API and return the response in JSON format.",
        "model_answer": "requests.get(\"https://message-api.p.rapidapi.com/api/messages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"message-api.p.rapidapi.com\"}, params={\"Message\": \"How are you doing?\"}).json()",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "Some message api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://message-api.p.rapidapi.com/api/messages'\nquerystring = {\"Message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://message-api.p.rapidapi.com/api/messages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://message-api.p.rapidapi.com/api/messages"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "message-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "Message": "How are you doing?"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://message-api.p.rapidapi.com/api/messages\"\nquerystring = {\"Message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"message-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "message-api",
            "api_arguments_original": [
                {
                    "name": "Message",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the product details and pricing of the item with ASIN B07FR4ZLTD on IHerb, using the IHerb Product Data API?",
        "model_answer": "requests.get(\"https://iherb-product-data-api.p.rapidapi.com/api/IHerb/solicitations/3877908a2fb546228178436800372368\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"iherb-product-data-api.p.rapidapi.com\"}, params={\"protocol\":\"B07FR4ZLTD\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Query for products using many filters! Filter by price, review, discount percentage, if has stock, etc! Or export a .zip file with all updated products!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://iherb-product-data-api.p.rapidapi.com/api/IHerb/solicitations/3877908a2fb546228178436800372368'\nquerystring = {\"protocol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://iherb-product-data-api.p.rapidapi.com/api/IHerb/solicitations/3877908a2fb546228178436800372368\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://iherb-product-data-api.p.rapidapi.com/api/IHerb/solicitations/3877908a2fb546228178436800372368"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "iherb-product-data-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "protocol": "B07FR4ZLTD"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://iherb-product-data-api.p.rapidapi.com/api/IHerb/solicitations/3877908a2fb546228178436800372368\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iherb-product-data-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IHerb Product Data Api",
            "api_arguments_original": [
                {
                    "name": "protocol",
                    "type": "string",
                    "description": "",
                    "default": "3877908a2fb546228178436800372368"
                }
            ]
        }
    },
    {
        "query": "How can I check if the IP address 203.0.113.1 is a Tor node?",
        "model_answer": "requests.get(\"https://tor-detect.p.rapidapi.com/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"tor-detect.p.rapidapi.com\"}, params={\"ip\": \"203.0.113.1\", \"geo\":\"true\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "A fast and simple API to identify and retrieve information about Tor nodes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tor-detect.p.rapidapi.com/check'\nquerystring = {\"ip\": \"\", \"geo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tor-detect.p.rapidapi.com/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tor-detect.p.rapidapi.com/check"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tor-detect.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ip": "203.0.113.1",
                            "geo": "true"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tor-detect.p.rapidapi.com/check\"\nquerystring = {\"geo\": \"true\", \"ip\": \"95.214.54.97\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tor-detect.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tor detect",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "95.214.54.97"
                },
                {
                    "name": "geo",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                }
            ]
        }
    },
    {
        "query": "I want to resend the OTP to a customer with the mobile number 8888888888 using the Fund Transfer API.",
        "model_answer": "requests.get(\"https://mano2468-fund-transfer-v1.p.rapidapi.com/resend_ot_ps\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mano2468-fund-transfer-v1.p.rapidapi.com\"}, params={\"Body\": \"{\\\"name\\\": \\\"xyz\\\", \\\"customerMobileNo\\\": \\\"8888888888\\\"}\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This document details out the technical integration approach of FUND TRANSFER and merchants. This document refers to the server APIs.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mano2468-fund-transfer-v1.p.rapidapi.com/resend_ot_ps'\nquerystring = {\"Body\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mano2468-fund-transfer-v1.p.rapidapi.com/resend_ot_ps\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"Body\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mano2468-fund-transfer-v1.p.rapidapi.com/resend_ot_ps\"\nquerystring = {\"Body\": \"{   \\\"name\\\": \\\"xyz\\\",   \\\"customerMobileNo\\\": \\\"9999999999\\\" }\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mano2468-fund-transfer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fund Transfer",
            "api_arguments_original": [
                {
                    "name": "Body",
                    "type": "STRING",
                    "description": "Give customerMobileNo in json format",
                    "default": "{   \"name\": \"xyz\",   \"customerMobileNo\": \"9999999999\" }"
                }
            ]
        }
    },
    {
        "query": "Please provide the location details for postcode 3750-016 in Portugal, using the PT Postcodes API.",
        "model_answer": "response = requests.get(\"https://pt-postcodes.p.rapidapi.com/pt/address/3750/016\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pt-postcodes.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Portuguese postcode lookup",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pt-postcodes.p.rapidapi.com/pt/address/3750/016'\nquerystring = {\"cp4\": \"\", \"cp3\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pt-postcodes.p.rapidapi.com/pt/address/3750/016\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pt-postcodes.p.rapidapi.com/pt/address/3750/016\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pt-postcodes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PT Postcodes",
            "api_arguments_original": [
                {
                    "name": "cp4",
                    "type": "STRING",
                    "description": "",
                    "default": "3750"
                },
                {
                    "name": "cp3",
                    "type": "STRING",
                    "description": "",
                    "default": "016"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the archived web pages for the URL \"https://www.example.org/\" using the Wayback Machine API.",
        "model_answer": "requests.get(\"https://wayback-machine4.p.rapidapi.com/v1/sparkline/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"wayback-machine4.p.rapidapi.com\"}, params={\"url\": \"https://www.example.org/\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Wayback Machine Internet Archive API allows developers to access and retrieve archived web pages from the Internet Archive's extensive collection. It provides a convenient way to explore the evolution of websites over time and integrate web archival functionality into applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wayback-machine4.p.rapidapi.com/v1/sparkline/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wayback-machine4.p.rapidapi.com/v1/sparkline/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://wayback-machine4.p.rapidapi.com/v1/sparkline/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "wayback-machine4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://www.example.org/"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wayback-machine4.p.rapidapi.com/v1/sparkline/\"\nquerystring = {\"url\": \"https://www.google.com/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wayback-machine4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wayback Machine",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "Web URL",
                    "default": "https://www.google.com/"
                }
            ]
        }
    },
    {
        "query": "Can you give me the surf forecast for spot ID 987654?",
        "model_answer": "requests.get(\"https://simple-surf-forecast-api1.p.rapidapi.com/api/forecasts/today/987654\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"simple-surf-forecast-api1.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Surf forecast api very simple to use",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://simple-surf-forecast-api1.p.rapidapi.com/api/forecasts/today/{spotId}'\nquerystring = {\"spotId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://simple-surf-forecast-api1.p.rapidapi.com/api/forecasts/today/{spotId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://simple-surf-forecast-api1.p.rapidapi.com/api/forecasts/today/987654"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "simple-surf-forecast-api1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://simple-surf-forecast-api1.p.rapidapi.com/api/forecasts/today/{spotId}\"\nquerystring = {\"spotId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"simple-surf-forecast-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Simple Surf Forecast Api",
            "api_arguments_original": [
                {
                    "name": "spotId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to search for all motorcycle information.",
        "model_answer": "requests.get(\"https://all-cars-names-image-and-variants-info.p.rapidapi.com/motororchestrator/api/v1/mmv\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"all-cars-names-image-and-variants-info.p.rapidapi.com\"}, params={\"vehicle_type\": \"motorcycle\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Search All Cars Names, Image and Variants Info with this api ,search once and get list of all cars. use it for auto-suggestion",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-cars-names-image-and-variants-info.p.rapidapi.com/motororchestrator/api/v1/mmv'\nquerystring = {\"vehicle_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-cars-names-image-and-variants-info.p.rapidapi.com/motororchestrator/api/v1/mmv\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "vehicle_type",
                    "enum": [
                        "motorcycl"
                    ],
                    "description": ""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-cars-names-image-and-variants-info.p.rapidapi.com/motororchestrator/api/v1/mmv\"\nquerystring = {\"vehicle_type\": \"car\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-cars-names-image-and-variants-info.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "All Cars Names, Image and Variants Info",
            "api_arguments_original": [
                {
                    "name": "vehicle_type",
                    "type": "STRING",
                    "description": "",
                    "default": "car"
                }
            ]
        }
    },
    {
        "query": "I want to get the recent anime quotes for page 5.",
        "model_answer": "requests.get(\"https://10000-anime-quotes-with-pagination-support.p.rapidapi.com/rapidHandler/recent\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"10000-anime-quotes-with-pagination-support.p.rapidapi.com\"}, params={\"page\":\"5\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Access best quality anime quotes from over 10000+ animes with pagination supports. Easily access quotes ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://10000-anime-quotes-with-pagination-support.p.rapidapi.com/rapidHandler/recent'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://10000-anime-quotes-with-pagination-support.p.rapidapi.com/rapidHandler/recent\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://10000-anime-quotes-with-pagination-support.p.rapidapi.com/rapidHandler/recent"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "10000-anime-quotes-with-pagination-support.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "page": "5"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://10000-anime-quotes-with-pagination-support.p.rapidapi.com/rapidHandler/recent\"\nquerystring = {\"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"10000-anime-quotes-with-pagination-support.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "10000+ Anime Quotes With Pagination Support",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve data for places and facilities within a radius of 10 miles from a specified location in the United States.",
        "model_answer": "requests.get(\"https://places-in-radius.p.rapidapi.com/openapi.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"places-in-radius.p.rapidapi.com\"}, params={\"origin\": \"United States\", \"radius\": 10, \"facility_types\": []})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API for retrieving places &amp; facilities data for given origin, distance and list of facility types.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://places-in-radius.p.rapidapi.com/openapi.json'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://places-in-radius.p.rapidapi.com/openapi.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://places-in-radius.p.rapidapi.com/openapi.json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "places-in-radius.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "origin": "United States",
                            "radius": 10,
                            "facility_types": []
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://places-in-radius.p.rapidapi.com/openapi.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"places-in-radius.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Places in radius",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with an art quote?",
        "model_answer": "requests.get(\"https://quotes-villa.p.rapidapi.com/quotes/art\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"quotes-villa.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Quotes with different categories",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quotes-villa.p.rapidapi.com/quotes/art'\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quotes-villa.p.rapidapi.com/quotes/art\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://quotes-villa.p.rapidapi.com/quotes/art"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "quotes-villa.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quotes-villa.p.rapidapi.com/quotes/art\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quotes-villa.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quotes Villa",
            "api_arguments_original": [
                {
                    "name": "category",
                    "type": "string",
                    "description": "",
                    "default": "art"
                }
            ]
        }
    },
    {
        "query": "How can I get the details of the song currently playing on TuneIn?",
        "model_answer": "requests.get(\"https://community-tunein.p.rapidapi.com/Playing.ashx/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"community-tunein.p.rapidapi.com\"}, params={\"title\": \"\", \"artist\": \"\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "AIR is our broadcaster API. It offers several simple methods to allow broadcasters and other publishers to send radio directory content to TuneIn in realtime.\r\nWhen you implement the AIR API, your listeners will:\r\nSee current artist album artwork on TuneIn.com player\r\nDiscover your station by searching for your artists\r\nBrowse station playlist history on TuneIn mobile and TuneIn.com\r\nPlease e-mail broadcaster-support@tunein.com your TuneIn station URL (search for your station on TuneIn.com) for permission to use the API, and we will grant a partnerId and partnerKey. If you use a special broadcaster software, let us know as well.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-tunein.p.rapidapi.com/Playing.ashx/'\nquerystring = {\"title\": \"\", \"artist\": \"\", \"album\": \"\", \"commericial\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-tunein.p.rapidapi.com/Playing.ashx/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://community-tunein.p.rapidapi.com/Playing.ashx/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "community-tunein.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-tunein.p.rapidapi.com/Playing.ashx/\"\nquerystring = {\"title\": \"\", \"artist\": \"\", \"album\": \"\", \"commericial\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-tunein.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TuneIn",
            "api_arguments_original": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The name of the song",
                    "default": ""
                },
                {
                    "name": "artist",
                    "type": "STRING",
                    "description": "The artist associated with the song",
                    "default": ""
                },
                {
                    "name": "album",
                    "type": "STRING",
                    "description": "The name of the associated album",
                    "default": ""
                },
                {
                    "name": "commericial",
                    "type": "BOOLEAN",
                    "description": "Set to true if the now playing broadcast is in commercial rather than a song",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to use the \"lets\" API to get some data.",
        "model_answer": "requests.get(\"https://lets1.p.rapidapi.comlets\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"lets1.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "lets",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lets1.p.rapidapi.comlets'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lets1.p.rapidapi.comlets\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://lets1.p.rapidapi.comlets"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "lets1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lets1.p.rapidapi.comlets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lets1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "lets",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I check the number of comments for a TikTok video with URL \"https://www.tiktok.com/@tiktok/video/7093219391759764782\" using the Tiktok download video API?",
        "model_answer": "requests.get(\"https://tiktok-download-video1.p.rapidapi.com/commentList\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tiktok-download-video1.p.rapidapi.com\"}, params={\"url\": \"https://www.tiktok.com/@tiktok/video/7093219391759764782\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-download-video1.p.rapidapi.com/commentList'\nquerystring = {\"url\": \"\", \"count\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-download-video1.p.rapidapi.com/commentList\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tiktok-download-video1.p.rapidapi.com/commentList"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tiktok-download-video1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://www.tiktok.com/@tiktok/video/7093219391759764782"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-download-video1.p.rapidapi.com/commentList\"\nquerystring = {\"count\": \"10\", \"cursor\": \"0\", \"url\": \"https://www.tiktok.com/@tiktok/video/7093219391759764782\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-download-video1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "tiktok download video ",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "https://www.tiktok.com/@tiktok/video/7093219391759764782\nor\n7093219391759764782",
                    "default": "https://www.tiktok.com/@tiktok/video/7093219391759764782"
                },
                {
                    "name": "count",
                    "type": "STRING",
                    "description": "max 50",
                    "default": "10"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "hasMore is True",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to proxy the URL \"https://www.amazon.com\" using the Cors Proxy API.",
        "model_answer": "requests.get(\"https://cors-proxy.p.rapidapi.com/proxy\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"cors-proxy.p.rapidapi.com\"}, params={\"url\": \"https://www.amazon.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Cross-Origin Resource Sharing Proxy",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cors-proxy.p.rapidapi.com/proxy'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cors-proxy.p.rapidapi.com/proxy\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://cors-proxy.p.rapidapi.com/proxy"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "cors-proxy.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://www.amazon.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cors-proxy.p.rapidapi.com/proxy\"\nquerystring = {\"url\": \"https://www.google.de\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cors-proxy.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cors Proxy",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.google.de"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to fetch the details of the tweet with ID 648282286836559105 using the Twitter Data API?",
        "model_answer": "requests.get(\"https://twitter-data1.p.rapidapi.com/TweetDetail/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"twitter-data1.p.rapidapi.com\"}, params={\"id\": \"648282286836559105\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Twitter public and private data API for search, Tweets, users, followers, images, media and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitter-data1.p.rapidapi.com/TweetDetail/'\nquerystring = {\"id\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitter-data1.p.rapidapi.com/TweetDetail/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitter-data1.p.rapidapi.com/TweetDetail/\"\nquerystring = {\"cursor\": \"\", \"id\": \"1485953263040188416\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitter-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Twitter Data",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Tweet ID",
                    "default": "1485953263040188416"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Cursor for other results",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please fetch the latest posts using the 8prd2T1api1 API?",
        "model_answer": "requests.get(\"https://8prd2t1api1.p.rapidapi.com/posts\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"8prd2t1api1.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "8prd2T1",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://8prd2t1api1.p.rapidapi.com/posts'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://8prd2t1api1.p.rapidapi.com/posts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://8prd2t1api1.p.rapidapi.com/posts"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "8prd2t1api1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://8prd2t1api1.p.rapidapi.com/posts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"8prd2t1api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "8prd2T1api1",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if Jane Smith has any filed evictions, suits, liens, or judgments against her in the past 7 years.",
        "model_answer": "requests.get(\"https://evictions-suits-liens-and-judgments.p.rapidapi.com/GetArchiveReport\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"evictions-suits-liens-and-judgments.p.rapidapi.com\"}, params={\"AppId\": \"\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This API returns filed evictions, suits, liens and judgments against an individual within the past 7 years.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://evictions-suits-liens-and-judgments.p.rapidapi.com/GetArchiveReport'\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://evictions-suits-liens-and-judgments.p.rapidapi.com/GetArchiveReport\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"AppId\" \"\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://evictions-suits-liens-and-judgments.p.rapidapi.com/GetArchiveReport\"\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"evictions-suits-liens-and-judgments.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Evictions Suits Liens and Judgments",
            "api_arguments_original": [
                {
                    "name": "AppId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Could you please provide me with a Captcha image?",
        "model_answer": "requests.get(\"https://captcha9.p.rapidapi.com/api/captcha/errors\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"captcha9.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": " SmileMe's Captcha provide a Captcha image for you. Just call and the API will return the info Captcha ( include image base64, id, value ...) ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://captcha9.p.rapidapi.com/api/captcha/errors'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://captcha9.p.rapidapi.com/api/captcha/errors\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://captcha9.p.rapidapi.com/api/captcha/errors\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"captcha9.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Captcha_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve live weather data for New York City using the WeatherAPI, and log the output?",
        "model_answer": "requests.get(\"https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=New%20York%20City\")",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "E2open is a cloud-based, real-time operating platform that orchestrates the global supply chains of the world's best-known brands. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://e2open-llc.p.rapidapi.comhttps://www.e2open.com/intelligent-applications/demand-sensing/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://e2open-llc.p.rapidapi.comhttps://www.e2open.com/intelligent-applications/demand-sensing/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{}"
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://e2open-llc.p.rapidapi.comhttps://www.e2open.com/intelligent-applications/demand-sensing/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"e2open-llc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "E2open, LLC.",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the details of a specific dessert with an ID of \"67890\".",
        "model_answer": "requests.get(\"https://beverages-and-desserts.p.rapidapi.com/desserts/67890\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"beverages-and-desserts.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "This api returns various kinds of Beverages and Desserts",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://beverages-and-desserts.p.rapidapi.com/desserts/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://beverages-and-desserts.p.rapidapi.com/desserts/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://beverages-and-desserts.p.rapidapi.com/desserts/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"beverages-and-desserts.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Beverages and Desserts",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please check the health status of the test-api_v2 API and log the output?",
        "model_answer": "requests.get(\"https://test-api440.p.rapidapi.com/health\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test-api440.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test-api440.p.rapidapi.com/health'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test-api440.p.rapidapi.com/health\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://test-api440.p.rapidapi.com/health"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "test-api440.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test-api440.p.rapidapi.com/health\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test-api440.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test-api_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with a list of all live TV channels available in Kenya and Uganda?",
        "model_answer": "requests.get(\"https://live-tv-api1.p.rapidapi.com/channels\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"live-tv-api1.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API that has all live tv stations in Kenya and uganda **NOTE for educational purposes only**",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://live-tv-api1.p.rapidapi.com/channels'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://live-tv-api1.p.rapidapi.com/channels\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://live-tv-api1.p.rapidapi.com/channels"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "live-tv-api1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://live-tv-api1.p.rapidapi.com/channels\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"live-tv-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LIVE TV API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please fetch the live weather data for New York City.",
        "model_answer": "requests.get(\"https://52-in-kicks.p.rapidapi.com/test\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"52-in-kicks.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Travel blog for the connected generation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://52-in-kicks.p.rapidapi.com/test'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://52-in-kicks.p.rapidapi.com/test\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://52-in-kicks.p.rapidapi.com/test\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"52-in-kicks.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "52 In Kicks",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I check if a certain email address is valid using the Check Disposable Email API? (Assume the email address is example@gmail.com)",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "DASas",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dad1.p.rapidapi.com/asd'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dad1.p.rapidapi.com/asd\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dad1.p.rapidapi.com/asd\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dad1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DAd",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the latest outcome of the XXXTreme Lightning Roulette game and print the response in Python.",
        "model_answer": "requests.get(\"https://xxxtremelightningrouletteapi.p.rapidapi.com/latest-outcome\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"xxxtremelightningrouletteapi.p.rapidapi.com\"}).json()",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "XXXTremeLightningRoulette is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://xxxtremelightningrouletteapi.p.rapidapi.com/latest-outcome'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://xxxtremelightningrouletteapi.p.rapidapi.com/latest-outcome\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://xxxtremelightningrouletteapi.p.rapidapi.com/latest-outcome"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "xxxtremelightningrouletteapi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://xxxtremelightningrouletteapi.p.rapidapi.com/latest-outcome\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xxxtremelightningrouletteapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "XXXtremeLightningRouletteAPI",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to check if the email address \"john@example.com\" is valid.",
        "model_answer": "requests.get(\"https://alpha-email-verification.p.rapidapi.com/disposable/john@example.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"alpha-email-verification.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Email Validation Service. check if a specific e-mail address is valid. Is it a proper domain? Is the e-mail a temporary/disposable e-mail? Our API contains 180k disposable email domains and gives the most valid email",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://alpha-email-verification.p.rapidapi.com/disposable/rahul@gmail.com'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://alpha-email-verification.p.rapidapi.com/disposable/rahul@gmail.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://alpha-email-verification.p.rapidapi.com/disposable/rahul@gmail.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpha-email-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Alpha Email Verification",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "",
                    "default": "rahul@gmail.com"
                }
            ]
        }
    },
    {
        "query": "Please provide me with a list of independent tracks with label numbers from the Indie Songs API, limited to the first 10 tracks.",
        "model_answer": "requests.get(\"https://indie-songs-distrokid-unsigned.p.rapidapi.com/tracks/full\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"indie-songs-distrokid-unsigned.p.rapidapi.com\"}, params={\"offset\": \"0\", \"limit\":\"10\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Independent tracks with label numbers. Daily updating stats, weekly updating songs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indie-songs-distrokid-unsigned.p.rapidapi.com/tracks/full'\nquerystring = {\"offset\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indie-songs-distrokid-unsigned.p.rapidapi.com/tracks/full\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://indie-songs-distrokid-unsigned.p.rapidapi.com/tracks/full"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "indie-songs-distrokid-unsigned.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "offset": "0",
                            "limit": "10"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indie-songs-distrokid-unsigned.p.rapidapi.com/tracks/full\"\nquerystring = {\"offset\": \"0\", \"limit\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indie-songs-distrokid-unsigned.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indie Songs : DistroKid & Unsigned",
            "api_arguments_original": [
                {
                    "name": "offset",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve information about the user with the ID 456.",
        "model_answer": "requests.get(\"https://democracia.p.rapidapi.com/usuarios/456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"democracia.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "prueba democracia",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://democracia.p.rapidapi.comusuarios/{idusers}'\nquerystring = {\"idusers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://democracia.p.rapidapi.comusuarios/{idusers}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://democracia.p.rapidapi.com/usuarios/456"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "democracia.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://democracia.p.rapidapi.comusuarios/{idusers}\"\nquerystring = {\"idusers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"democracia.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "democracia",
            "api_arguments_original": [
                {
                    "name": "idusers",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide the Python function call to obtain a list of all dog breeds using the Dog API?",
        "model_answer": "requests.get(\"https://dog-api.p.rapidapi.com/list/all\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dog-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Do you care about accessing free images of dogs on the internet? Do you want your dog pictures to be served at lightning fast speed with 99.999% uptime? Do you care about DaaS (Dogs as a Service)? Help us pay our hosting bills and ensure that Dog API stays free to access and use for everyone. We'll even gift you an executive business tie for your pet (or small child) to say thanks.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dog-api.p.rapidapi.com/list/all'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dog-api.p.rapidapi.com/list/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dog-api.p.rapidapi.com/list/all"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dog-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dog-api.p.rapidapi.com/list/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dog-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dog API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please show me the TikTok posts for the challenge with the challenge_id '56789'?",
        "model_answer": "requests.get(\"https://tiktok87.p.rapidapi.com/challenge_posts/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tiktok87.p.rapidapi.com\"}, params={\"cursor\": \"\", \"challenge_id\": \"56789\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "TikTok API third party service, Stable and 24/7 maintenance. for any Help or Suggestions Contact me on https://t.me/dhmye",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok87.p.rapidapi.com/challenge_posts/'\nquerystring = {\"cursor\": \"\", \"challenge_id\": \"\", \"challenge_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok87.p.rapidapi.com/challenge_posts/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tiktok87.p.rapidapi.com/challenge_posts/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tiktok87.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "cursor": "",
                            "challenge_id": "56789"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok87.p.rapidapi.com/challenge_posts/\"\nquerystring = {\"cursor\": \"\", \"challenge_id\": \"42164\", \"challenge_name\": \"foryou\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok87.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok_v4",
            "api_arguments_original": [
                {
                    "name": "cursor",
                    "type": "NUMBER",
                    "description": "put the cursor ther returned from the server in your Url param to get the next posts/items",
                    "default": ""
                },
                {
                    "name": "challenge_id",
                    "type": "STRING",
                    "description": "if u have the challenge_id  already use \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param insted,\nit will return data faster then the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param.",
                    "default": "42164"
                },
                {
                    "name": "challenge_name",
                    "type": "STRING",
                    "description": "if u have the challenge_id already use \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param insted,\nit will return data faster then the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param.",
                    "default": "foryou"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to find the best vinyl records in my collection from the year 1990, using the YourVinylStore API?",
        "model_answer": "requests.get(\"https://yourvinylstore.p.rapidapi.com/endpoint\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yourvinylstore.p.rapidapi.com\"}, params={\"Year\": \"1990\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Best vinyl records in your collection.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yourvinylstore.p.rapidapi.com/endpoint'\nquerystring = {\"Year\": \"\", \"Artist\": \"\", \"Genre\": \"\", \"Album\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yourvinylstore.p.rapidapi.com/endpoint\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"Year\" \"1990\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yourvinylstore.p.rapidapi.com/endpoint\"\nquerystring = {\"Year\": \"\", \"Artist\": \"\", \"Genre\": \"\", \"Album\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yourvinylstore.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YourVinylStore",
            "api_arguments_original": [
                {
                    "name": "Year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "Artist",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "Genre",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "Album",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "How can I retrieve the trending articles in English from the Webit News Search API and store the response in a variable called \"trending_articles\"?",
        "model_answer": "trending_articles = requests.get(\"https://webit-news-search.p.rapidapi.com/trending\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"webit-news-search.p.rapidapi.com\"}, params={\"offset\": \"\", \"language\": \"en\", \"category\": \"\", \"from_sources\": \"\", \"number\": \"\", \"has_image\": \"\", \"exclude_sources\": \"\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "40+ Languages News Search, Trending articles feed.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webit-news-search.p.rapidapi.com/trending'\nquerystring = {\"offset\": \"\", \"language\": \"\", \"category\": \"\", \"from_sources\": \"\", \"number\": \"\", \"has_image\": \"\", \"exclude_sources\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webit-news-search.p.rapidapi.com/trending\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://webit-news-search.p.rapidapi.com/trending"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "webit-news-search.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "offset": "",
                            "language": "en",
                            "category": "",
                            "from_sources": "",
                            "number": "",
                            "has_image": "",
                            "exclude_sources": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webit-news-search.p.rapidapi.com/trending\"\nquerystring = {\"offset\": \"\", \"language\": \"en\", \"category\": \"\", \"from_sources\": \"\", \"number\": \"\", \"has_image\": \"\", \"exclude_sources\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-news-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webit News Search",
            "api_arguments_original": [
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Offset to start getting results from.\n\nFor example, if you search 10 articles at a time (number=10), then you should set offset=0 for page 1, offset=10 for page 2, offset=20 for page 3 and so on.",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Supported languages (ISO 639-1 codes):\nSupported languages (ISO 639-1 codes):\n- Stable: 'en', 'bg', 'de', 'es', 'fr', 'fi', 'it', 'ja', 'nl', 'pl', 'pt', 'ro', 'ru', 'zh';\n- Beta: 'ar', 'ca', 'ko', 'nb', 'sv', 'tr', 'uk';\n- Alpha: 'be', 'ca', 'da', 'el', 'et', 'fa', 'ga', 'gl', 'he', 'hi', 'hr', 'hu', 'id', 'lv', 'no', 'om', 'sk', 'sr', 'tt', 'vi'.",
                    "default": "en"
                },
                {
                    "name": "category",
                    "type": "ENUM",
                    "description": "[COMING SOON (APRIL 2021) - It is currently ignored] Category to restrict articles by.",
                    "default": ""
                },
                {
                    "name": "from_sources",
                    "type": "STRING",
                    "description": "[PREMIUM - PRO+ plans only] Comma separated list of sources hosts to pick news from. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc. This will exclude any other source.",
                    "default": ""
                },
                {
                    "name": "number",
                    "type": "NUMBER",
                    "description": "Number of articles to retrieve with a single request.\n\nMaximum allowed results number per request:\n- 10 results for Free/Basic plan;\n- 50 results for Pro plan;\n- 50 results for Ultra plan;\n- 100 results for Mega plan.\n\nFor requesting any customized quota, please contact our support team.",
                    "default": ""
                },
                {
                    "name": "has_image",
                    "type": "BOOLEAN",
                    "description": "Set this to \\\"True\\\" in order to get only articles having an image associated to. Default is \\\"False\\\".",
                    "default": ""
                },
                {
                    "name": "exclude_sources",
                    "type": "STRING",
                    "description": "[PREMIUM - PRO+ plans only] Comma separated list of sources hosts to exclude from the results. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me a random dog fact?",
        "model_answer": "requests.get(\"https://daily-cat-facts.p.rapidapi.com/facts/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"daily-cat-facts.p.rapidapi.com\"}, params={\"animal_type\": \"dog\",\"amount\": \"1\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "This  APIs and Services from the web to do just one thing... send cat facts.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://daily-cat-facts.p.rapidapi.com/facts/random'\nquerystring = {\"animal_type\": \"\", \"amount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://daily-cat-facts.p.rapidapi.com/facts/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "animal_type",
                    "enum": [
                        "dog"
                    ],
                    "description": "Type of animal the fact will describe . Default : \\\"cat\\\""
                },
                {
                    "name": "amount",
                    "enum": [
                        ""
                    ],
                    "description": "Number of Facts to retrieve. If set to one, response will be a fact object. If many, response will be an array of Facts . \nDefault : 1.\nLimit : 500."
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://daily-cat-facts.p.rapidapi.com/facts/random\"\nquerystring = {\"animal_type\": \"\", \"amount\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"daily-cat-facts.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Daily Cat Facts",
            "api_arguments_original": [
                {
                    "name": "animal_type",
                    "type": "STRING",
                    "description": "Type of animal the fact will describe . Default : \\\"cat\\\"",
                    "default": ""
                },
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "Number of Facts to retrieve. If set to one, response will be a fact object. If many, response will be an array of Facts . \nDefault : 1.\nLimit : 500.",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to get live data from the HelloRold API.",
        "model_answer": "requests.get(\"https://hellorold.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hellorold.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "HelloWorld",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hellorold.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hellorold.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://hellorold.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "hellorold.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hellorold.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hellorold.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "HelloRold",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the referral domains for the website \"example.com\".",
        "model_answer": "requests.get(\"https://referral-domain-checker-api.p.rapidapi.com/referraldomains.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"referral-domain-checker-api.p.rapidapi.com\"}, params={\"domain\": \"example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Get Referral Domains of a website, backlink counts , ranks etc ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://referral-domain-checker-api.p.rapidapi.com/referraldomains.php'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://referral-domain-checker-api.p.rapidapi.com/referraldomains.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://referral-domain-checker-api.p.rapidapi.com/referraldomains.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "referral-domain-checker-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domain": "example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://referral-domain-checker-api.p.rapidapi.com/referraldomains.php\"\nquerystring = {\"domain\": \"getecz.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"referral-domain-checker-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Referral Domain checker API",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "getecz.com"
                }
            ]
        }
    },
    {
        "query": "I want to get the location details for IP address 987.65.43.21.",
        "model_answer": "requests.get(\"https://ip-to-location3.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-to-location3.p.rapidapi.com\"}, params={\"ip\": \"987.65.43.21\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "100% free to use. Get location details from IP address, endpoint returns coordinates [latitude, longitude], ip, isp, host[ ip_address, prefix len, status, country, region, city, location,area code, country code",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-to-location3.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-to-location3.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ip-to-location3.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ip-to-location3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-to-location3.p.rapidapi.com/\"\nquerystring = {\"ip\": \"179.27.93.248\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-to-location3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ip To Location",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "179.27.93.248"
                }
            ]
        }
    },
    {
        "query": "I want to get a random recipe from a cocktail API and display the ingredients and instructions.",
        "model_answer": "response = requests.get(\"https://cocktails3.p.rapidapi.com/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"cocktails3.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "The cocktail API with over 300 Cocktails! Get Cocktail and the ingredients. Get a random one or search! ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cocktails3.p.rapidapi.com/random'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cocktails3.p.rapidapi.com/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://cocktails3.p.rapidapi.com/random"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "cocktails3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cocktails3.p.rapidapi.com/random\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cocktails3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cocktails",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please help me retrieve information about products related to \"clothing\" on yiwugo.com in English, but increase the page size to 20.",
        "model_answer": "requests.get(\"https://yiwugo-product-data.p.rapidapi.com/api/sc/yiwugo/search/product\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yiwugo-product-data.p.rapidapi.com\"}, params={\"keyword\": \"clothing\", \"lan\": \"en\", \"page\": \"1\", \"pageSize\": \"20\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Get the yiwugo.com(\u4e49\u4e4c\u8d2d) products'  information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yiwugo-product-data.p.rapidapi.com/api/sc/yiwugo/search/product'\nquerystring = {\"keyword\": \"\", \"lan\": \"\", \"page\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yiwugo-product-data.p.rapidapi.com/api/sc/yiwugo/search/product\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://yiwugo-product-data.p.rapidapi.com/api/sc/yiwugo/search/product"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "yiwugo-product-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "keyword": "clothing",
                            "lan": "en",
                            "page": "1",
                            "pageSize": "20"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yiwugo-product-data.p.rapidapi.com/api/sc/yiwugo/search/product\"\nquerystring = {\"lan\": \"\", \"page\": \"1\", \"keyword\": \"\", \"pageSize\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yiwugo-product-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "yiwugo product data",
            "api_arguments_original": [
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lan",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "How can I get the details of a specific basketball game with Eid 123456 using the LiveScore_v2 API?",
        "model_answer": "requests.get(\"https://livescore6.p.rapidapi.com/matches/v2/detail\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"livescore6.p.rapidapi.com\"}, params={\"Eid\": \"123456\", \"Category\":\"basketball\", \"Timezone\":\"-7\", \"LiveTable\":\"false\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "This API helps to query for football, cricket, basketball, tennis, hockey matches, leagues, news, etc... to create a sporting site/application such as livescore.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://livescore6.p.rapidapi.com/matches/v2/detail'\nquerystring = {\"Eid\": \"\", \"Category\": \"\", \"Timezone\": \"\", \"LiveTable\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://livescore6.p.rapidapi.com/matches/v2/detail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://livescore6.p.rapidapi.com/matches/v2/detail"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "livescore6.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "Eid": "123456",
                            "Category": "basketball",
                            "Timezone": "-7",
                            "LiveTable": "false"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://livescore6.p.rapidapi.com/matches/v2/detail\"\nquerystring = {\"Timezone\": \"-7\", \"Eid\": \"315868\", \"LiveTable\": \"false\", \"Category\": \"soccer\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"livescore6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LiveScore_v2",
            "api_arguments_original": [
                {
                    "name": "Eid",
                    "type": "NUMBER",
                    "description": "The value of Eid field returned in .../matches/v2/list-by-league or .../matches/v2/list-by-date or .../matches/v2/list-live endpoints",
                    "default": "315868"
                },
                {
                    "name": "Category",
                    "type": "STRING",
                    "description": "One of the followings : soccer|cricket|basketball|tennis|hockey",
                    "default": "soccer"
                },
                {
                    "name": "Timezone",
                    "type": "NUMBER",
                    "description": "One of the following : -11|-10|-9.5|-9|-8.5|-8|-7|-6|-5|-4.5|-4|-3.5|-3|-2.5|-2|-1|0|1|2|3|3.5|4|4.5|5|5.5|5.75|6|6.5|6.75|7|7.5|8|8.5|8.75|9|9.5|9.75|10|10.5|11|11.5|12|12.5|12.75|13|13.75|14",
                    "default": "-7"
                },
                {
                    "name": "LiveTable",
                    "type": "BOOLEAN",
                    "description": "true|false - Whether or not include live table relating to current match",
                    "default": "false"
                }
            ]
        }
    },
    {
        "query": "Can you fetch the details of the vehicle with the registration number MH01AB1234?",
        "model_answer": "requests.get(\"https://vehicle-rc-information.p.rapidapi.com/api/PB65AM0008\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"vehicle-rc-information.p.rapidapi.com\"}, params={\"VehicleNumber\": \"MH01AB1234\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Fetch any Indian Vehicle's Information through it's Registration Number/License Plate.\nThis API can fetch:-\n[+] Owner Name\n[+] Owner's Father Name\n[+] Owner's Permanent & Current Address\n[+] Vehicle Details\n[+] Financer Details\n[+] Permit & Insurance Details\n[+] NOC Details\n.......And Much More\n\nTags: Parivahan mParivahan Vehicle Info RC Details India Car Info Car Info RC database",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vehicle-rc-information.p.rapidapi.com/api/PB65AM0008'\nquerystring = {\"VehicleNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vehicle-rc-information.p.rapidapi.com/api/PB65AM0008\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://vehicle-rc-information.p.rapidapi.com/api/PB65AM0008"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "vehicle-rc-information.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "VehicleNumber": "MH01AB1234"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vehicle-rc-information.p.rapidapi.com/api/PB65AM0008\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vehicle-rc-information.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vehicle RC Information_v2",
            "api_arguments_original": [
                {
                    "name": "VehicleNumber",
                    "type": "string",
                    "description": "",
                    "default": "PB65AM0008"
                }
            ]
        }
    },
    {
        "query": "Please check if the email address john.smith@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"john.smith@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Temporary emails in code",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gettestmail.p.rapidapi.com/gettestmail/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gettestmail.p.rapidapi.com/gettestmail/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "john.smith@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gettestmail.p.rapidapi.com/gettestmail/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gettestmail.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GetTestMail",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The ID of the GetTestMail to retrieve",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to generate a QR code with the ID \"67890\" using the RapidAPI QRCode service?",
        "model_answer": "requests.get(\"https://qrcode3.p.rapidapi.com/images/67890\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qrcode3.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Customisable QR Codes. Support for styles, images and more! Bare metal engine gives it incredible speed. Full documentation can be found at: https://linqr.app/docs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qrcode3.p.rapidapi.com/images/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qrcode3.p.rapidapi.com/images/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qrcode3.p.rapidapi.com/images/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qrcode3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QRCode",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the Call of Duty leaderboard for season 3 with the limit of top 50 players.",
        "model_answer": "requests.get(\"https://cod-api-2-0.p.rapidapi.com/mw2/ranked/mp/season/s3\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cod-api-2-0.p.rapidapi.com\"}, params={\"limit\": \"50\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Provides an easy access to the COD api leaderboard endpoints.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cod-api-2-0.p.rapidapi.com/mw2/ranked/mp/season/s1'\nquerystring = {\"season\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cod-api-2-0.p.rapidapi.com/mw2/ranked/mp/season/s1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"limit\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cod-api-2-0.p.rapidapi.com/mw2/ranked/mp/season/s1\"\nquerystring = {\"limit\": \"250\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cod-api-2-0.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "COD API 2.0",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "string",
                    "description": "Example: s1",
                    "default": "s1"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Provide a number from 1 to 250",
                    "default": "250"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to obtain the boundaries of the German postal code at longitude 9.8972 and latitude 52.5163 using the \"de-boundaries-io1.p.rapidapi.com\" API.",
        "model_answer": "requests.get(\"https://de-boundaries-io1.p.rapidapi.com/rest/v1/public/boundary/postalcode/within\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"de-boundaries-io1.p.rapidapi.com\"}, params={\"longitude\": 9.8972, \"latitude\": 52.5163})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "A Germany PostalCode Boundaries API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://de-boundaries-io1.p.rapidapi.com/rest/v1/public/boundary/postalcode/within'\nquerystring = {\"longitude\": \"\", \"latitude\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://de-boundaries-io1.p.rapidapi.com/rest/v1/public/boundary/postalcode/within\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://de-boundaries-io1.p.rapidapi.com/rest/v1/public/boundary/postalcode/within"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "de-boundaries-io1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://de-boundaries-io1.p.rapidapi.com/rest/v1/public/boundary/postalcode/within\"\nquerystring = {\"longitude\": \"11.5835\", \"latitude\": \"48.1633\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"de-boundaries-io1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "de-boundaries-io",
            "api_arguments_original": [
                {
                    "name": "longitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "11.5835"
                },
                {
                    "name": "latitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "48.1633"
                }
            ]
        }
    },
    {
        "query": "Can you please check if the option with ID \"54321\" exists in TradingFlow Option Flow?",
        "model_answer": "requests.get(\"https://tradingflow-option-flow.p.rapidapi.com/admin/canary\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tradingflow-option-flow.p.rapidapi.com\"}, params={\"id\": \"54321\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Subscribe to TradingFlow TradingFlow Option Flow Api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tradingflow-option-flow.p.rapidapi.com/admin/canary'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tradingflow-option-flow.p.rapidapi.com/admin/canary\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tradingflow-option-flow.p.rapidapi.com/admin/canary"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tradingflow-option-flow.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tradingflow-option-flow.p.rapidapi.com/admin/canary\"\nquerystring = {\"id\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tradingflow-option-flow.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TradingFlow Option Flow",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to convert a YouTube video to mp4 using the YouTube to Mp4 API, given the video URL \"https://www.youtube.com/watch?v=IfNB5RTxnhI\" and the title \"Call of Duty Modern Warfare 2 Remastered - All Weapon Reload Animations in 4 Minutes\"?",
        "model_answer": "requests.get(\"https://youtube-to-mp4.p.rapidapi.com/url=&title\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"youtube-to-mp4.p.rapidapi.com\"}, params={\"url\": \"https://www.youtube.com/watch?v=IfNB5RTxnhI\", \"title\": \"Call of Duty Modern Warfare 2 Remastered - All Weapon Reload Animations in 4 Minutes\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "An online service that grabs YouTube video file from the unique server address on Google.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-to-mp4.p.rapidapi.com/url=&title'\nquerystring = {\"url\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-to-mp4.p.rapidapi.com/url=&title\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://youtube-to-mp4.p.rapidapi.com/url=&title"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "youtube-to-mp4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://www.youtube.com/watch?v=IfNB5RTxnhI",
                            "title": "Call of Duty Modern Warfare 2 Remastered - All Weapon Reload Animations in 4 Minutes"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-to-mp4.p.rapidapi.com/url=&title\"\nquerystring = {\"url\": \"https://www.youtube.com/watch?v=IfNB5RTxnhI\", \"title\": \"Call of Duty : Modern Warfare 2 Remastered - All Weapon Reload Animations in 4 Minutes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-to-mp4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube to Mp4",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.youtube.com/watch?v=IfNB5RTxnhI"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Call of Duty : Modern Warfare 2 Remastered - All Weapon Reload Animations in 4 Minutes"
                }
            ]
        }
    },
    {
        "query": "Can you please check the details of this product URL: \"https://www.shopee.ph/product/98765432\"?",
        "model_answer": "requests.get(\"https://shopee6.p.rapidapi.com/product/url\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shopee6.p.rapidapi.com\"}, params={\"url\": \"https://www.shopee.ph/product/98765432\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Shopee API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shopee6.p.rapidapi.com/product/url'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shopee6.p.rapidapi.com/product/url\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://shopee6.p.rapidapi.com/product/url"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "shopee6.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://www.shopee.ph/product/98765432"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shopee6.p.rapidapi.com/product/url\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shopee6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shopee_v2",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you use the ykapi API to search for videos with the keyword \"cute puppies\"?",
        "model_answer": "requests.get(\"https://ykapi.p.rapidapi.com/search/cocomelon\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ykapi.p.rapidapi.com\"}, params={\"searchQuery\": \"cute puppies\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "ykapi description",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ykapi.p.rapidapi.com/search/cocomelon'\nquerystring = {\"searchQuery\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ykapi.p.rapidapi.com/search/cocomelon\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ykapi.p.rapidapi.com/search/cocomelon"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ykapi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "searchQuery": "cute puppies"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ykapi.p.rapidapi.com/search/cocomelon\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ykapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ykapi",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "cocomelon"
                }
            ]
        }
    },
    {
        "query": "I want to generate a quiz on the topic of science using the Quizy API.",
        "model_answer": "requests.get(\"https://quizy-api2.p.rapidapi.com/generateQuiz\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"quizy-api2.p.rapidapi.com\"}, params={\"topic\": \"science\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "The Quizy API is a powerful tool that allows developers to create and customize quizzes programmatically. With this API, you can generate a wide variety of quizzes on different topics, ranging from educational quizzes for students to fun quizzes for entertainment purposes.\n\nThe API provides a simple and intuitive interface to generate quizzes based on parameters such as the number of questions, difficulty level, topic, and format. It leverages a vast repository of questions and answers, ensur...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quizy-api2.p.rapidapi.com/generateQuiz'\nquerystring = {\"topic\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quizy-api2.p.rapidapi.com/generateQuiz\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://quizy-api2.p.rapidapi.com/generateQuiz"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "quizy-api2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "topic": "science"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quizy-api2.p.rapidapi.com/generateQuiz\"\nquerystring = {\"topic\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quizy-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quizy API",
            "api_arguments_original": [
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with 5 random words that start with the letter \"a\".",
        "model_answer": "requests.get(\"https://random-words5.p.rapidapi.com/getMultipleRandom\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"random-words5.p.rapidapi.com\"}, params={\"count\": 5, \"beginsWith\": \"a\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "Random words api provides you a list of random words or a single random word",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-words5.p.rapidapi.com/getMultipleRandom'\nquerystring = {\"count\": \"\", \"maxLength\": \"\", \"endsWith\": \"\", \"wordLength\": \"\", \"includes\": \"\", \"beginsWith\": \"\", \"minLength\": \"\", \"excludes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-words5.p.rapidapi.com/getMultipleRandom\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://random-words5.p.rapidapi.com/getMultipleRandom"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "random-words5.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "count": 5,
                            "beginsWith": "a"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-words5.p.rapidapi.com/getMultipleRandom\"\nquerystring = {\"maxLength\": \"\", \"endsWith\": \"\", \"wordLength\": \"\", \"includes\": \"\", \"beginsWith\": \"\", \"minLength\": \"\", \"excludes\": \"\", \"count\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-words5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Words",
            "api_arguments_original": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "The word count must be between 2 and 20",
                    "default": "5"
                },
                {
                    "name": "maxLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "endsWith",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "includes",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "beginsWith",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "excludes",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Translate the phrase \"Bonjour, comment \u00e7a va?\" from French to English using the Simple & Elegant Translation Service.",
        "model_answer": "requests.get(\"https://simple-elegant-translation-service.p.rapidapi.com/translate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"simple-elegant-translation-service.p.rapidapi.com\"}, params={\"text\": \"Bonjour, comment \u00e7a va?\", \"source_lang\": \"fr\", \"target_lang\": \"en\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Simple & Elegant Translation Service. This translation service is similar to similar. You can actually do a lot of things with the help of the Google Translate API ranging from detecting languages to simple text translation, setting source and destination languages, and translating entire lists of text phrases",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://simple-elegant-translation-service.p.rapidapi.com/getSupportedLanguages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://simple-elegant-translation-service.p.rapidapi.com/getSupportedLanguages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://simple-elegant-translation-service.p.rapidapi.com/translate"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "simple-elegant-translation-service.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://simple-elegant-translation-service.p.rapidapi.com/getSupportedLanguages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"simple-elegant-translation-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Simple & Elegant Translation Service",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the data from the Telecom API?",
        "model_answer": "requests.get(\"https://api-telecom.p.rapidapi.com/products\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"api-telecom.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "servicio de prueba api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://api-telecom.p.rapidapi.com/products'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://api-telecom.p.rapidapi.com/products\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://api-telecom.p.rapidapi.com/products\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"api-telecom.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "api-telecom",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please help me retrieve the followers of user ID 98765432 on Twitter?",
        "model_answer": "requests.get(\"https://twitter135.p.rapidapi.com/v2/Followers/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"twitter135.p.rapidapi.com\"}, params={\"id\": \"98765432\", \"cursor\": \"\", \"count\": \"20\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Twitter public and private data API for search, Tweets, users, followers, images, media and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitter135.p.rapidapi.com/v2/Followers/'\nquerystring = {\"id\": \"\", \"cursor\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitter135.p.rapidapi.com/v2/Followers/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://twitter135.p.rapidapi.com/v2/Followers/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "twitter135.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "98765432",
                            "cursor": "",
                            "count": "20"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitter135.p.rapidapi.com/v2/Followers/\"\nquerystring = {\"cursor\": \"\", \"count\": \"20\", \"id\": \"44196397\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitter135.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Twitter_v4",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
                    "default": "44196397"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Cursor for other results",
                    "default": ""
                },
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "Number of results",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve news articles about technology in the United States using the RapidAPI Newscatcher API, considering that we might want to automate this and get the data periodically?",
        "model_answer": "requests.get(\"https://newscatcher.p.rapidapi.com/v1/aggregation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"newscatcher.p.rapidapi.com\"}, params={\"q\": \"technology\", \"country\": \"US\", \"topic\": \"tech\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "API to find news articles by any topic, country, language, website, or keyword",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://newscatcher.p.rapidapi.com/v1/aggregation'\nquerystring = {\"q\": \"\", \"country\": \"\", \"topic\": \"\", \"sources\": \"\", \"agg_by\": \"\", \"to_rank\": \"\", \"media\": \"\", \"lang\": \"\", \"not_sources\": \"\", \"to\": \"\", \"ranked_only\": \"\", \"from\": \"\", \"search_in\": \"\", \"from_rank\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://newscatcher.p.rapidapi.com/v1/aggregation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://newscatcher.p.rapidapi.com/v1/aggregation"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "newscatcher.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "technology",
                            "country": "US",
                            "topic": "tech"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://newscatcher.p.rapidapi.com/v1/aggregation\"\nquerystring = {\"country\": \"\", \"topic\": \"\", \"sources\": \"\", \"q\": \"Apple\", \"agg_by\": \"day\", \"to_rank\": \"\", \"media\": \"True\", \"lang\": \"\", \"not_sources\": \"\", \"to\": \"\", \"ranked_only\": \"\", \"from\": \"\", \"search_in\": \"\", \"from_rank\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"newscatcher.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Newscatcher",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "String to search for. Has to be [URL-encoded](https://en.wikipedia.org/wiki/Percent-encoding). ",
                    "default": "Apple"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "The country to which you want to narrow your search. This parameter is [experimental]. We advise you to use it in conjunction with the `lang` parameter. Accepts any [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes",
                    "default": ""
                },
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "The topic to which you want to restrict the articles of your choice. This parameter is [experimental]. Accepted values are `news`, `sport`, `tech`, `world`, `finance`, `politics`, `business`, `economics`, `entertainment`,`beauty`,`travel`,`music`,`food`,`science`\n- `news` usually means a general news feed (main headlines of a website).\n> Important: this parameter is [experimental]. Not all news articles are assigned with a `topic`, therefore, we cannot guarantee that 100% of topics talking about technology will be assigned a `tech` label.\n> One topic at a time, for example, `topic=sport`",
                    "default": ""
                },
                {
                    "name": "sources",
                    "type": "STRING",
                    "description": "One or more news resources to filter your search. It should be the normal form of the URL, for example, **[nytimes.com](http://nytimes.com/)**, **[theguardian.com](http://theguardian.com/)**\n> Comma separated string, for example `sources=nytimes.com,cnn.com,wsj.com`",
                    "default": ""
                },
                {
                    "name": "agg_by",
                    "type": "STRING",
                    "description": "- `day` \u2014 default option. Aggregate results by day. No more than 100 days \n- `hour` \u2014 Aggregate results by hour. No more than 100 hours",
                    "default": "day"
                },
                {
                    "name": "to_rank",
                    "type": "NUMBER",
                    "description": "Upper boundary of the rank of news website to filter by",
                    "default": ""
                },
                {
                    "name": "media",
                    "type": "STRING",
                    "description": "Adds to the output of the call two more variables: `media` and `media_content`\n\nMedia - the main image published with an article \n\nmedia_content  - a comma-separated string of all images used in an article",
                    "default": "True"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "Specifies the language of the search.  Allowed values are:\n`af`, `ar`, `bg`, `bn`, `ca`,`cn`, `cs`, `cy`, `da`, `de`, `el`, `en`, `es`, `et`, `fa`, `fi`, `fr`, `gu`, `he`, `hi`, `hr`, `hu`, `id`, `it`, `ja`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mr`, `ne`, `nl`, `no`, `pa`, `pl`, `pt`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`,`tw`, `uk`, `ur`, `vi`. \nSpecifying the language will make your search more relevant",
                    "default": ""
                },
                {
                    "name": "not_sources",
                    "type": "STRING",
                    "description": "One or more sources to be excluded from the search. \n> Comma separated string, for example, `not_sources=nytimes.com,cnn.com,wsj.com`",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Until which point in time to search for. The default timezone is UTC",
                    "default": ""
                },
                {
                    "name": "ranked_only",
                    "type": "STRING",
                    "description": "Limit the search only for the sources which are in top 1 million online websites. Defaults to `True` (`False` if you want to turn it off). Unranked sources are assigned a rank that equals to `999999`",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "From which point in time to start the search. No specific format is required. E.g. (`2020/05/01`, `2020-05-01` ,`2020-05-01 12:54:14`, `2020-05-01 4:15am`, `yesterday 2:02 am`, `2020/05/01 12:55 EST`) Default timezone is UTC. **\nThe default is set to one week ago at midnight UTC.** ",
                    "default": ""
                },
                {
                    "name": "search_in",
                    "type": "STRING",
                    "description": "By default, we search what you specified in `q` in both `title` and `summary` of the article. However, you can limit this to either `title` or `summary`",
                    "default": ""
                },
                {
                    "name": "from_rank",
                    "type": "NUMBER",
                    "description": "Lowest boundary of the rank of news website to filter by. **Important**: lower rank means that a source is more popular",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to check if the email address 'example@gmail.com' is valid using the RapidAPI.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asin-data.p.rapidapi.com/request'\nquerystring = {\"type\": \"\", \"refinements\": \"\", \"amazon_domain\": \"\", \"page\": \"\", \"sort_by\": \"\", \"category_id\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asin-data.p.rapidapi.com/request\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asin-data.p.rapidapi.com/request\"\nquerystring = {\"refinements\": \"\", \"amazon_domain\": \"\", \"page\": \"\", \"sort_by\": \"\", \"category_id\": \"\", \"url\": \"https://www.amazon.com/s?bbn=16225009011&rh=n%3A%2116225009011%2Cn%3A502394%2Cn%3A281052\", \"type\": \"category\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asin-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ASIN Data",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "category"
                },
                {
                    "name": "refinements",
                    "type": "STRING",
                    "description": "\nA comma-seperated list of refinement values to filter the category results by. These allow you to refine your category results by values such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reviews rating 4 and over\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"price range\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" and \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"brand\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\n\nRefinement values are returned in the refinements array of each type=category result. Refinement values are dynamic and change by category area or search term used. If you wish to use refinements you should first issue a type=category request without specifying any refinements to retrieve a master list of the available refinements for the given category area/search term. You can then cache these refinement values for use on subsequent requests.\n\nFor example, to run a type=search request specifying two refinements with values `p_85/2470955011` and `p_36/2421886011` the value of the refinements parameter would be `refinements=p_85/2470955011,p_36/2421886011`\n\nNote that sometimes Amazon do not present a explicit refinement value and instead a link is returned. In this instance you should pass the link into the url request parameter of your type=category request to retrieve data from that refinement-filtered page.",
                    "default": ""
                },
                {
                    "name": "amazon_domain",
                    "type": "STRING",
                    "description": "The Amazon domain to retrieve category results from. For a full list of supported Amazon domains see [Supported Amazon Domains](https://www.asindataapi.com/docs/product-data-api/reference/amazon-domains).",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The current page of category results to retrieve. Inspect the pagination.total_pages property in the Category results to see how many pages of category results are available.\n\nupdate value of num to get additional pages",
                    "default": ""
                },
                {
                    "name": "sort_by",
                    "type": "STRING",
                    "description": "Determines the sort order of category results to return. Valid values are:\n\n- most_recent\n- price_low_to_high\n- price_high_to_low\n- featured\n- average_review\n",
                    "default": ""
                },
                {
                    "name": "category_id",
                    "type": "STRING",
                    "description": "A category ID to retrieve results from. You may supply any arbitary value in the category_id parameter.\n\nASIN Data API will use the category_id in the following form: `https://amazon_domain/s?node=category_id.`\n\nNote that pagination for top-level categories is not supported by the Amazon sites. If you wish to iterate the contents of a category the recommended approach is to pick the lowest level categories to perform your iteration / pagination on.",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The Amazon category results page URL to retrieve category results from. Be sure to URL-encode the url parameter.\n\n**Note the url parameter is supplied, the category_id parameter cannot be used (as the url itself defines the category ID used).**",
                    "default": "https://www.amazon.com/s?bbn=16225009011&rh=n%3A%2116225009011%2Cn%3A502394%2Cn%3A281052"
                }
            ]
        }
    },
    {
        "query": "I want to convert the latitude 41.8781 and longitude -87.6298 to an address.",
        "model_answer": "requests.get(\"https://address-from-to-latitude-longitude1.p.rapidapi.com/GetLatLng\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"address-from-to-latitude-longitude1.p.rapidapi.com\"}, params={\"Lat\": \"41.8781\", \"Lng\":\"-87.6298\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Free API to convert coordinates (latitude, longitude) to and from address An Easy, Open, Worldwide, Free Geocoding API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://address-from-to-latitude-longitude1.p.rapidapi.com/GetLatLng'\nquerystring = {\"Lng\": \"\", \"Lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://address-from-to-latitude-longitude1.p.rapidapi.com/GetLatLng\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://address-from-to-latitude-longitude1.p.rapidapi.com/GetLatLng"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "address-from-to-latitude-longitude1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://address-from-to-latitude-longitude1.p.rapidapi.com/GetLatLng\"\nquerystring = {\"Lng\": \"88.4048656\", \"Lat\": \"22.5757344\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"address-from-to-latitude-longitude1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Address From To Latitude Longitude",
            "api_arguments_original": [
                {
                    "name": "Lng",
                    "type": "STRING",
                    "description": "",
                    "default": "88.4048656"
                },
                {
                    "name": "Lat",
                    "type": "STRING",
                    "description": "",
                    "default": "22.5757344"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to fetch the latest climate change news from The Guardian using the Climate Change API, considering that we are required to provide an API key and the host, and print the response?",
        "model_answer": "requests.get('https://climate-change-api20.p.rapidapi.com/news/guardian', headers={'X-RapidAPI-Key': 'YOUR_API_KEY', 'X-RapidAPI-Host': 'climate-change-api20.p.rapidapi.com'}, params={'newspaperId': ''})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API showing all the latest climate change news around the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-change-api20.p.rapidapi.com/news/guardian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-change-api20.p.rapidapi.com/news/guardian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "'https"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-change-api20.p.rapidapi.com/news/guardian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-change-api20.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate Change API_v3",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "guardian"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with images and videos of a specific location with latitude 37.422213 and longitude -122.084058?",
        "model_answer": "requests.get(\"https://geocoding-places.p.rapidapi.com/get_geocoding_images/v1\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"geocoding-places.p.rapidapi.com\"}, params={\"lat\":\"37.422213\", \"lng\":\"-122.084058\", \"version\":\"v1\", \"lang\":\"en\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Geocoding places Info with images & videos.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geocoding-places.p.rapidapi.com/get_geocoding_images/v1'\nquerystring = {\"lat\": \"\", \"lng\": \"\", \"version\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geocoding-places.p.rapidapi.com/get_geocoding_images/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://geocoding-places.p.rapidapi.com/get_geocoding_images/v1"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "geocoding-places.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "lat": "37.422213",
                            "lng": "-122.084058",
                            "version": "v1",
                            "lang": "en"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geocoding-places.p.rapidapi.com/get_geocoding_images/v1\"\nquerystring = {\"lat\": \"37.422213\", \"lang\": \"en\", \"lng\": \"-122.084058\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geocoding-places.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Geocoding Places",
            "api_arguments_original": [
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "Latitude in decimal degrees (wgs84)",
                    "default": "37.422213"
                },
                {
                    "name": "lng",
                    "type": "NUMBER",
                    "description": "Longitude in decimal degrees (wgs84)",
                    "default": "-122.084058"
                },
                {
                    "name": "version",
                    "type": "string",
                    "description": "",
                    "default": "v1"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "Prefered language of content.",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the answer to the question \"What is the capital of Japan?\"",
        "model_answer": "requests.get(\"https://question-answered.p.rapidapi.com/question/what is the capital of japan?\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"question-answered.p.rapidapi.com\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Ask a question and get an answer. Example: When did World War two end? answer -  September 2, 1945",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://question-answered.p.rapidapi.com/question/how far away is the sun from earth?'\nquerystring = {\"questionAsked\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://question-answered.p.rapidapi.com/question/how far away is the sun from earth?\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://question-answered.p.rapidapi.com/question/how far away is the sun from earth?\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"question-answered.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Question-Answered",
            "api_arguments_original": [
                {
                    "name": "questionAsked",
                    "type": "string",
                    "description": "",
                    "default": "how far away is the sun from earth?"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest 5 news from the Philippine News API?",
        "model_answer": "requests.get(\"https://philippine-news.p.rapidapi.com/latest\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"philippine-news.p.rapidapi.com\"}, params={\"limit\": 5})",
        "original": {
            "domain": "Cybersecurity",
            "framework": "RapidAPI",
            "functionality": "An unofficial API to find the latest and top Philippine stories and news.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://philippine-news.p.rapidapi.com/latest'\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://philippine-news.p.rapidapi.com/latest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://philippine-news.p.rapidapi.com/latest"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "philippine-news.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "limit": 5
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://philippine-news.p.rapidapi.com/latest\"\nquerystring = {\"limit\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"philippine-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Philippine News",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": " This is the maximum number of news that may be returned.",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to download a YouTube video in 720p resolution using the provided API.",
        "model_answer": "requests.get(\"https://youtube86.p.rapidapi.com/api/youtube/go\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube86.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Get a link to a YouTube video in any quality and resolution in less than 2 seconds! Over 3 mln users download videos thanks to us",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube86.p.rapidapi.com/api/youtube/go'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube86.p.rapidapi.com/api/youtube/go\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://youtube86.p.rapidapi.com/api/youtube/go"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "youtube86.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube86.p.rapidapi.com/api/youtube/go\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube86.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "youtube",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you estimate the success of a YouTube video from a channel named \"TechReview\" with channel ID \"UC123xyz\"?",
        "model_answer": "requests.get(\"https://youtuber-success-estimator.p.rapidapi.com/api/v0/analytics/creators/estimator\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"youtuber-success-estimator.p.rapidapi.com\"}, params={\"channelName\": \"TechReview\", \"channelType\": \"youtube\", \"channelId\": \"UC123xyz\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "Estimates how successful a hypothetical video from a given YouTube channel will be in the first 30 days of its lifecycle. Useful for influencer marketers to plan for successful campaigns and publishers to better rank their content",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtuber-success-estimator.p.rapidapi.com/api/v0/analytics/creators/estimator'\nquerystring = {\"channelType\": \"\", \"channelName\": \"\", \"channelId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtuber-success-estimator.p.rapidapi.com/api/v0/analytics/creators/estimator\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://youtuber-success-estimator.p.rapidapi.com/api/v0/analytics/creators/estimator"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "youtuber-success-estimator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "channelName": "TechReview",
                            "channelType": "youtube",
                            "channelId": "UC123xyz"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtuber-success-estimator.p.rapidapi.com/api/v0/analytics/creators/estimator\"\nquerystring = {\"channelName\": \"chrispirillo\", \"channelType\": \"youtube\", \"channelId\": \"UChQl2YkLt3dj-KDyGUBzcHw\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtuber-success-estimator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTuber Success Estimator",
            "api_arguments_original": [
                {
                    "name": "channelType",
                    "type": "STRING",
                    "description": "",
                    "default": "youtube"
                },
                {
                    "name": "channelName",
                    "type": "STRING",
                    "description": "Lookup a channel projection by the given name of the channel. Either channelName or channelId is required",
                    "default": "chrispirillo"
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Lookup the channel projection by the unique id provided by the channel's host platform (for example: YouTube, TikTok, Twitch). Either channelId or channelName is required",
                    "default": "UChQl2YkLt3dj-KDyGUBzcHw"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to check if the IP address 10.0.0.1 is a valid IP address and display the response as output.",
        "model_answer": "requests.get(\"https://ip-geo-location-find-ip-location-and-details.p.rapidapi.com/iplocation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-geo-location-find-ip-location-and-details.p.rapidapi.com\"}, params={\"ip\": \"10.0.0.1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON formats.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-geo-location-find-ip-location-and-details.p.rapidapi.com/iplocation'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-geo-location-find-ip-location-and-details.p.rapidapi.com/iplocation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ip-geo-location-find-ip-location-and-details.p.rapidapi.com/iplocation"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ip-geo-location-find-ip-location-and-details.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-geo-location-find-ip-location-and-details.p.rapidapi.com/iplocation\"\nquerystring = {\"ip\": \"182.182.36.128\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-geo-location-find-ip-location-and-details.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Geo Location - Find IP Location and Details",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "182.182.36.128"
                }
            ]
        }
    },
    {
        "query": "Please check if the phone number +987654321 is registered on WhatsApp.",
        "model_answer": "requests.get(\"https://bulk-whatsapp-validator.p.rapidapi.com/free/about\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bulk-whatsapp-validator.p.rapidapi.com\"}, params={\"phone\": \"+987654321\", \"token\": \"ENTER_HERE_A_TEMP_TOKEN\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Checks if a number is registered on whatsapp. Adds context to whatsapp profiles.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bulk-whatsapp-validator.p.rapidapi.com/free/about'\nquerystring = {\"phone\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bulk-whatsapp-validator.p.rapidapi.com/free/about\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "phone",
                    "enum": [
                        "+987654321"
                    ],
                    "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning."
                },
                {
                    "name": "token",
                    "enum": [
                        "ENTER_HERE_A_TEMP_TOKE"
                    ],
                    "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`."
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bulk-whatsapp-validator.p.rapidapi.com/free/about\"\nquerystring = {\"phone\": \"34655719560\", \"token\": \"ENTER_HERE_A_TEMP_TOKEN\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bulk-whatsapp-validator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bulk Whatsapp Validator",
            "api_arguments_original": [
                {
                    "name": "phone",
                    "type": "NUMBER",
                    "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.",
                    "default": "34655719560"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.",
                    "default": "ENTER_HERE_A_TEMP_TOKEN"
                }
            ]
        }
    },
    {
        "query": "Please fetch the details for the record id \"b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c\" using the Magical Taske API.",
        "model_answer": "requests.get(\"https://magical-taske.p.rapidapi.com/details\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"magical-taske.p.rapidapi.com\"}, params={\"id\": \"b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Fetch sceneries and getaways in Kenya.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://magical-taske.p.rapidapi.com/details'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://magical-taske.p.rapidapi.com/details\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://magical-taske.p.rapidapi.com/details"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "magical-taske.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://magical-taske.p.rapidapi.com/details\"\nquerystring = {\"id\": \"b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magical-taske.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Magical Taske",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Record id",
                    "default": "b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c"
                }
            ]
        }
    },
    {
        "query": "What is the exchange rate from GBP to EUR for 250 GBP?",
        "model_answer": "requests.get(\"https://currency23.p.rapidapi.com/exchange\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"currency23.p.rapidapi.com\"}, params={\"base\": \"GBP\", \"to\": \"EUR\", \"int\": \"250\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Find currency and bitcoin prices.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://currency23.p.rapidapi.com/exchange'\nquerystring = {\"base\": \"\", \"to\": \"\", \"int\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://currency23.p.rapidapi.com/exchange\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://currency23.p.rapidapi.com/exchange"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "currency23.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://currency23.p.rapidapi.com/exchange\"\nquerystring = {\"int\": \"1\", \"base\": \"USD\", \"to\": \"EUR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"currency23.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Currency_v2",
            "api_arguments_original": [
                {
                    "name": "base",
                    "type": "STRING",
                    "description": "Currency Code (USD, EUR etc.)",
                    "default": "USD"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Target Currency Code",
                    "default": "EUR"
                },
                {
                    "name": "int",
                    "type": "STRING",
                    "description": "Amount of Money (default: 1)",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to store a file named \"example.txt\" in Aniku Files Storage API.",
        "model_answer": "requests.get(\"https://aniku.p.rapidapi.comStorage\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"aniku.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Aniku Files Storage",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aniku.p.rapidapi.comStorage'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aniku.p.rapidapi.comStorage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://aniku.p.rapidapi.comStorage"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "aniku.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aniku.p.rapidapi.comStorage\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aniku.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aniku",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the next payout date or yield of the ticker AAPL.",
        "model_answer": "requests.get('https://sundayfinance.p.rapidapi.com/yield/aapl', headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sundayfinance.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Feed it a ticker and return next payout date or yield  in response.\n\n/payout example: \nhttps://sundayfinance.p.rapidapi.com/stock/agnc\noutput:\n{\"result\":[\"agnc,14.56%\"]}\n\n/yield example: \nhttps://sundayfinance.p.rapidapi.com/yield/aapl\noutput:\n{\"result\":[\"aapl,16 Feb 2023 (Thu)\"]}\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sundayfinance.p.rapidapi.com/yield/agnc'\nquerystring = {\"ticker\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sundayfinance.p.rapidapi.com/yield/agnc\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "'https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{ \"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sundayfinance.p.rapidapi.com/yield/agnc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sundayfinance.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "sundayfinance",
            "api_arguments_original": [
                {
                    "name": "ticker",
                    "type": "STRING",
                    "description": "",
                    "default": "agnc"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve chapters and verses from the book of Psalms in the Bible.",
        "model_answer": "requests.get(\"https://bible-search.p.rapidapi.com/books-by-name\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"bible-search.p.rapidapi.com\"}, params={\"bookName\": \"Psalms\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bible-search.p.rapidapi.com/books-by-name'\nquerystring = {\"bookName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bible-search.p.rapidapi.com/books-by-name\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bible-search.p.rapidapi.com/books-by-name"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bible-search.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "bookName": "Psalms"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bible-search.p.rapidapi.com/books-by-name\"\nquerystring = {\"bookName\": \"Isaiah\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bible-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bible Search",
            "api_arguments_original": [
                {
                    "name": "bookName",
                    "type": "STRING",
                    "description": "Name of the book.",
                    "default": "Isaiah"
                }
            ]
        }
    },
    {
        "query": "Can you generate a QR code for the website yahoo.com and capture the response data in Python?",
        "model_answer": "requests.get(\"https://quick-qr-code-generator.p.rapidapi.com/hello\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quick-qr-code-generator.p.rapidapi.com\"}, params={\"url\": \"yahoo.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Generate QR code",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quick-qr-code-generator.p.rapidapi.com/hello'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quick-qr-code-generator.p.rapidapi.com/hello\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://quick-qr-code-generator.p.rapidapi.com/hello"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "quick-qr-code-generator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "yahoo.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quick-qr-code-generator.p.rapidapi.com/hello\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quick-qr-code-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quick QR Code Generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please verify if the company with registration number \"98765\" is registered with the Registrar of Companies.",
        "model_answer": "requests.get(\"https://mca-corporate-verifications.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mca-corporate-verifications.p.rapidapi.com\"}, params={\"request_id\": \"98765\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Make your onboarding process safer, faster, and smarter by verifying if your merchants are registered with the Registrar of Companies, and are registered with the same details that you expect.\n\nWith the MCA Verification API, you can now confidently onboard merchants knowing that they are authorized and registered with the RoC.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mca-corporate-verifications.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mca-corporate-verifications.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://mca-corporate-verifications.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "mca-corporate-verifications.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "request_id": "98765"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mca-corporate-verifications.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mca-corporate-verifications.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MCA Corporate Verifications",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with detailed technical specifications on the Boeing 747 aircraft?",
        "model_answer": "requests.get(\"https://aircraft-by-api-ninjas.p.rapidapi.com/v1/aircraft\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"aircraft-by-api-ninjas.p.rapidapi.com\"}, params={\"model\": \"747\", \"manufacturer\": \"Boeing\"})",
        "original": {
            "domain": "Payments",
            "framework": "RapidAPI",
            "functionality": "Detailed technical specs on over 1000 airplane models. See more info at https://api-ninjas.com/api/aircraft",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aircraft-by-api-ninjas.p.rapidapi.com/v1/aircraft'\nquerystring = {\"min_height\": \"\", \"min_wingspan\": \"\", \"limit\": \"\", \"max_height\": \"\", \"max_length\": \"\", \"min_length\": \"\", \"max_range\": \"\", \"min_range\": \"\", \"max_speed\": \"\", \"max_wingspan\": \"\", \"engine_type\": \"\", \"min_speed\": \"\", \"model\": \"\", \"manufacturer\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aircraft-by-api-ninjas.p.rapidapi.com/v1/aircraft\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://aircraft-by-api-ninjas.p.rapidapi.com/v1/aircraft"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "aircraft-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "model": "747",
                            "manufacturer": "Boeing"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aircraft-by-api-ninjas.p.rapidapi.com/v1/aircraft\"\nquerystring = {\"min_height\": \"\", \"min_wingspan\": \"\", \"limit\": \"\", \"max_height\": \"\", \"max_length\": \"\", \"min_length\": \"\", \"max_range\": \"\", \"min_range\": \"\", \"max_speed\": \"\", \"max_wingspan\": \"\", \"engine_type\": \"\", \"min_speed\": \"\", \"model\": \"G550\", \"manufacturer\": \"Gulfstream\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aircraft-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aircraft by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "min_height",
                    "type": "NUMBER",
                    "description": "Minimum height of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "min_wingspan",
                    "type": "NUMBER",
                    "description": "Minimum wingspan of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "How many results to return. Must be between 1 and 30. Default is 1.",
                    "default": ""
                },
                {
                    "name": "max_height",
                    "type": "NUMBER",
                    "description": "Maximum height of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "max_length",
                    "type": "NUMBER",
                    "description": "Maximum length of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "min_length",
                    "type": "NUMBER",
                    "description": "Minimum length of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "max_range",
                    "type": "NUMBER",
                    "description": "Maximum range of the aircraft in nautical miles.",
                    "default": ""
                },
                {
                    "name": "min_range",
                    "type": "NUMBER",
                    "description": "Minimum range of the aircraft in nautical miles.",
                    "default": ""
                },
                {
                    "name": "max_speed",
                    "type": "NUMBER",
                    "description": "Maximum max. air speed in knots.",
                    "default": ""
                },
                {
                    "name": "max_wingspan",
                    "type": "NUMBER",
                    "description": "Maximum wingspan of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "engine_type",
                    "type": "STRING",
                    "description": "Type of engine. Must be one of: piston, propjet, jet.",
                    "default": ""
                },
                {
                    "name": "min_speed",
                    "type": "NUMBER",
                    "description": "Minimum max. air speed in knots.",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "Aircraft model name.",
                    "default": "G550"
                },
                {
                    "name": "manufacturer",
                    "type": "STRING",
                    "description": "Company that designed and built the aircraft.",
                    "default": "Gulfstream"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check if a document is plagiarized using the dedu API and log the output?",
        "model_answer": "requests.get(\"https://dedu.p.rapidapi.comhttp://14.102.40.116:8081/dedu_lnipe/index.aspx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dedu.p.rapidapi.com\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "dedu",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dedu.p.rapidapi.comhttp://14.102.40.116:8081/dedu_lnipe/index.aspx'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dedu.p.rapidapi.comhttp://14.102.40.116:8081/dedu_lnipe/index.aspx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{X-RapidAPI-Key"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dedu.p.rapidapi.comhttp://14.102.40.116:8081/dedu_lnipe/index.aspx\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dedu.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dedu",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if order number 987654 is valid?",
        "model_answer": "requests.get(\"https://petstore132.p.rapidapi.com/store/order/987654\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"petstore132.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Petstore API Example",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://petstore132.p.rapidapi.com/store/order/{orderId}'\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://petstore132.p.rapidapi.com/store/order/{orderId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://petstore132.p.rapidapi.com/store/order/987654"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "petstore132.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://petstore132.p.rapidapi.com/store/order/{orderId}\"\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"petstore132.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Petstore",
            "api_arguments_original": [
                {
                    "name": "orderId",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please check if the email address example@gmail.com is valid.",
        "model_answer": "requests.get(\"https://email-existence-validator.p.rapidapi.com/help\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"email-existence-validator.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "API which checks if email really exist on server or not.\nIt check for different parameters for giving end results .\nCheck for MX records, SMTP deliverability, Disposable check and many more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-existence-validator.p.rapidapi.com/help'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-existence-validator.p.rapidapi.com/help\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://email-existence-validator.p.rapidapi.com/help"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "email-existence-validator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-existence-validator.p.rapidapi.com/help\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-existence-validator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Existence Validator",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I obtain the server time using the ByBit Leaderboard API?",
        "model_answer": "requests.get(\"https://bybit-leaderboard.p.rapidapi.com/GetServerTime\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bybit-leaderboard.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "\ud83c\udfc6 Experience the power of ByBit Exchange with our ByBit API. Analyze, follow top crypto traders, dominate the market!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bybit-leaderboard.p.rapidapi.com/GetServerTime'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bybit-leaderboard.p.rapidapi.com/GetServerTime\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bybit-leaderboard.p.rapidapi.com/GetServerTime"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bybit-leaderboard.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bybit-leaderboard.p.rapidapi.com/GetServerTime\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bybit-leaderboard.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ByBit Leaderboard",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide the Python function call to get the trip details for the MF Reference \"DEF456\" using the ASR Hub API?",
        "model_answer": "requests.get(\"https://asr-hub.p.rapidapi.com/api/TripDetails/DEF456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"asr-hub.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "ASR Hub is a nomalized XML API which integrates airline content from multiple sources like Direct &amp; NDC connect, Multi-GDS and aggregators from various markets and\u00a0 offers search, ticket, Payments, ancillary sales, and post bookings services through a single API.\u00a0 ASR Hub 1.0 provides the complete Travel Tech Stack for Airline Retailing\u200b.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asr-hub.p.rapidapi.com/api/TripDetails/{MFRef}'\nquerystring = {\"MFRef\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asr-hub.p.rapidapi.com/api/TripDetails/{MFRef}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asr-hub.p.rapidapi.com/api/TripDetails/{MFRef}\"\nquerystring = {\"MFRef\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asr-hub.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ASR Hub",
            "api_arguments_original": [
                {
                    "name": "MFRef",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to convert 100 USD to EUR and GBP using the Currency Conversion and Exchange Rates API.",
        "model_answer": "requests.get(\"https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"currency-conversion-and-exchange-rates.p.rapidapi.com\"}, params={\"from\": \"USD\", \"to\": \"EUR,GBP\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Simple reliable API for current and historical foreign exchange (forex) currency rates.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest'\nquerystring = {\"from\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "currency-conversion-and-exchange-rates.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest\"\nquerystring = {\"from\": \"USD\", \"to\": \"EUR,GBP\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"currency-conversion-and-exchange-rates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Currency Conversion and Exchange Rates",
            "api_arguments_original": [
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Three-letter currency code of the currency would would like to convert from. This currency will be converted into the code of the currency provided in the `to` parameter",
                    "default": "USD"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "A comma-separated list of currency codes to convert the `from` parameter into.",
                    "default": "EUR,GBP"
                }
            ]
        }
    },
    {
        "query": "I want to check if john@example.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"john@example.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "ssssssssssssssssss",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ssssss.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ssssss.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "john@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ssssss.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ssssss.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ssssss",
            "api_arguments_original": []
        }
    },
    {
        "query": "Translate the sentence \"Good morning!\" from English to Spanish using the MyMemory - Translation Memory API.",
        "model_answer": "requests.get(\"https://translated-mymemory---translation-memory.p.rapidapi.com/get\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"translated-mymemory---translation-memory.p.rapidapi.com\"}, params={\"langpair\": \"en|es\", \"q\": \"Good morning!\", \"onlyprivate\": \"0\", \"mt\": \"1\", \"de\": \"a@b.c\", \"key\": \"\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Get a better translation! MyMemory is the world's largest Translation Memory that contains billions of words translated by professional translators. MyMemory will give you ModernMT machine translation  if a human translation is not available.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translated-mymemory---translation-memory.p.rapidapi.com/get'\nquerystring = {\"langpair\": \"\", \"q\": \"\", \"onlyprivate\": \"\", \"mt\": \"\", \"de\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translated-mymemory---translation-memory.p.rapidapi.com/get\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "langpair",
                    "enum": [
                        "en|es"
                    ],
                    "description": "The language pair. Two ISO-631 language codes, separated by |.\nMyMemory support over 80 languages but some combinations may contains no data. Nepali into Vietnamese?"
                },
                {
                    "name": "q",
                    "enum": [
                        "Good morning!"
                    ],
                    "description": "the text you want to translate. Normally a sentence."
                },
                {
                    "name": "onlyprivate",
                    "enum": [
                        "0"
                    ],
                    "description": "If a key has been specified, only private matches will be returned. 0 (disabled: default) | 1 (enabled)"
                },
                {
                    "name": "mt",
                    "enum": [
                        "1"
                    ],
                    "description": "Enables MT in results: 0 (disabled) | 1 (enabled: default)"
                },
                {
                    "name": "de",
                    "enum": [
                        "a@b.c"
                    ],
                    "description": "A valid email (recommended for CAT tools and high volume usage)"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translated-mymemory---translation-memory.p.rapidapi.com/get\"\nquerystring = {\"onlyprivate\": \"0\", \"mt\": \"1\", \"de\": \"a@b.c\", \"key\": \"\", \"langpair\": \"en|it\", \"q\": \"Hello World!\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translated-mymemory---translation-memory.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MyMemory - Translation Memory",
            "api_arguments_original": [
                {
                    "name": "langpair",
                    "type": "STRING",
                    "description": "The language pair. Two ISO-631 language codes, separated by |.\nMyMemory support over 80 languages but some combinations may contains no data. Nepali into Vietnamese?",
                    "default": "en|it"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "the text you want to translate. Normally a sentence.",
                    "default": "Hello World!"
                },
                {
                    "name": "onlyprivate",
                    "type": "STRING",
                    "description": "If a key has been specified, only private matches will be returned. 0 (disabled: default) | 1 (enabled)",
                    "default": "0"
                },
                {
                    "name": "mt",
                    "type": "STRING",
                    "description": "Enables MT in results: 0 (disabled) | 1 (enabled: default)",
                    "default": "1"
                },
                {
                    "name": "de",
                    "type": "STRING",
                    "description": "A valid email (recommended for CAT tools and high volume usage)",
                    "default": "a@b.c"
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Gives access to private memories and customized API limits",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide information about an astro photo and print the response?",
        "model_answer": "requests.get(\"https://astro-gallery.p.rapidapi.com/get_astro_photo_info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"astro-gallery.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Astro Photo Gallery",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://astro-gallery.p.rapidapi.com/get_astro_photo_info'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://astro-gallery.p.rapidapi.com/get_astro_photo_info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://astro-gallery.p.rapidapi.com/get_astro_photo_info"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "astro-gallery.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://astro-gallery.p.rapidapi.com/get_astro_photo_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"astro-gallery.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Astro Gallery",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the Python code to fetch traffic jam information from Waze/Google in real-time using the RapidAPI? Use the default values for the query, language, and coordinates.",
        "model_answer": "requests.get(\"https://waze.p.rapidapi.com/autocomplete\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"waze.p.rapidapi.com\"}, params={\"q\":\"traffic\", \"lang\":\"en\", \"coordinates\":\"37.376754, -122.023350\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Fetch alerts, traffic jams information and driving directions from Waze/Google in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://waze.p.rapidapi.com/autocomplete'\nquerystring = {\"q\": \"\", \"lang\": \"\", \"coordinates\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://waze.p.rapidapi.com/autocomplete\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"q\" \"traffic\", \"lang\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://waze.p.rapidapi.com/autocomplete\"\nquerystring = {\"q\": \"sunn\", \"lang\": \"en\", \"coordinates\": \"37.376754, -122.023350\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"waze.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Waze",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Free-text geographic query",
                    "default": "sunn"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "The language of the results. See https://wazeopedia.waze.com/wiki/USA/Countries_and_Languages for a list of supported languages.",
                    "default": "en"
                },
                {
                    "name": "coordinates",
                    "type": "STRING",
                    "description": "Geographic coordinates (latitude, longitude) bias. Highly recommended to use for getting accurate results.",
                    "default": "37.376754, -122.023350"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to find the nearest EV charging station within 30 miles of my current location, with longitude -122.4194 and latitude 37.7749?",
        "model_answer": "requests.get(\"https://vehicle-charging-stations.p.rapidapi.com/poi/\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\":\"vehicle-charging-stations.p.rapidapi.com\"}, params={\"distance\": \"30\", \"longitude\": \"-122.4194\", \"latitude\": \"37.7749\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Find EV charging stations for cars\nYou can use this API to retrieve charging location information,",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vehicle-charging-stations.p.rapidapi.com/poi/'\nquerystring = {\"distance\": \"\", \"longitude\": \"\", \"latitude\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vehicle-charging-stations.p.rapidapi.com/poi/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://vehicle-charging-stations.p.rapidapi.com/poi/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "vehicle-charging-stations.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vehicle-charging-stations.p.rapidapi.com/poi/\"\nquerystring = {\"distance\": \"100\", \"longitude\": \"2.4379392\", \"latitude\": \"44.351488\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vehicle-charging-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vehicle charging stations ",
            "api_arguments_original": [
                {
                    "name": "distance",
                    "type": "STRING",
                    "description": "Unit: Miles",
                    "default": "100"
                },
                {
                    "name": "longitude",
                    "type": "STRING",
                    "description": "",
                    "default": "2.4379392"
                },
                {
                    "name": "latitude",
                    "type": "STRING",
                    "description": "",
                    "default": "44.351488"
                }
            ]
        }
    },
    {
        "query": "I want to get the 5 latest property listings from the MLS Router API.",
        "model_answer": "requests.get(\"https://mls-router1.p.rapidapi.com/reso/odata/Property\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"mls-router1.p.rapidapi.com\"}, params={\"orderby\": \"ModificationTimestamp desc\", \"select\": \"\", \"top\": \"5\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The MLS Router API provides consumers access to MLS data feeds to develop apps using Property Listings and Headless Architecture. MLS Router API is ideal for developers across multiple platforms and languages to build their real estate solutions. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mls-router1.p.rapidapi.com/reso/odata/Property'\nquerystring = {\"orderby\": \"\", \"select\": \"\", \"top\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mls-router1.p.rapidapi.com/reso/odata/Property\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://mls-router1.p.rapidapi.com/reso/odata/Property"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "mls-router1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mls-router1.p.rapidapi.com/reso/odata/Property\"\nquerystring = {\"orderby\": \"ModificationTimestamp desc\", \"select\": \"\", \"top\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mls-router1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MLS Router",
            "api_arguments_original": [
                {
                    "name": "orderby",
                    "type": "STRING",
                    "description": "",
                    "default": "ModificationTimestamp desc"
                },
                {
                    "name": "select",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "top",
                    "type": "STRING",
                    "description": "",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to extract the taxpayer identification number (TIN) from a scanned image of a Philippines TIN card and obtain the result using the Philippines TIN OCR API.",
        "model_answer": "requests.get(\"https://philippines-tin-ocr.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"philippines-tin-ocr.p.rapidapi.com\"}, params={\"request_id\":\"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Philippines TIN OCR API allows you to onboard your customers with speed and precision.\n\nEnable them to pre-fill their onboarding forms instantly, by just uploading or scanning their Taxpayer Identification Number (TIN) card \u2013 IDfy will digitize the document for you!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://philippines-tin-ocr.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://philippines-tin-ocr.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://philippines-tin-ocr.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "philippines-tin-ocr.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "request_id": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://philippines-tin-ocr.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"philippines-tin-ocr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Philippines TIN OCR",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Could you please provide a Python function call to obtain the current version of the Fashion API and print the response?",
        "model_answer": "requests.get(\"https://fashion4.p.rapidapi.com/v1/version\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fashion4.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "This Fashion API offers an image class-prediction algorithm for clothes and accessories. [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/fashion) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/fashion?utm_source=fashion_rapidapi&utm_medium=endpoints&utm_campaign=rapidapi) [![Telegram](https://img.shields.io/badge/-Telegram%20demo-white?logo=tele...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fashion4.p.rapidapi.com/v1/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fashion4.p.rapidapi.com/v1/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fashion4.p.rapidapi.com/v1/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fashion4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fashion",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please check if the video with the job ID abc789 has been processed using the Videogrammer API?",
        "model_answer": "requests.get(\"https://videogrammer.p.rapidapi.com/video\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"videogrammer.p.rapidapi.com\"}, params={\"job_id\": \"abc789\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Videogrammer is a simple but powerful way to multiply social media videos",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://videogrammer.p.rapidapi.com/video'\nquerystring = {\"job_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://videogrammer.p.rapidapi.com/video\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"job_id\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://videogrammer.p.rapidapi.com/video\"\nquerystring = {\"job_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"videogrammer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "videogrammer",
            "api_arguments_original": [
                {
                    "name": "job_id",
                    "type": "STRING",
                    "description": "the previous recieved job_id",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me to find all known subdomains of the website example.com?",
        "model_answer": "requests.get(\"https://subdomains-lookup1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"subdomains-lookup1.p.rapidapi.com\"}, params={\"type\": \"SUBDOMAINS\", \"pagenum\": \"1\", \"q\":\"example.com\"})",
        "original": {
            "domain": "Storage",
            "framework": "RapidAPI",
            "functionality": "Return all known subdomains from root domain inquiry",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://subdomains-lookup1.p.rapidapi.com/'\nquerystring = {\"type\": \"\", \"pagenum\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://subdomains-lookup1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://subdomains-lookup1.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "subdomains-lookup1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "type": "SUBDOMAINS",
                            "pagenum": "1",
                            "q": "example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://subdomains-lookup1.p.rapidapi.com/\"\nquerystring = {\"type\": \"SUBDOMAINS\", \"pagenum\": \"1\", \"q\": \"tumblr.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"subdomains-lookup1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Subdomains lookup",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "SUBDOMAINS"
                },
                {
                    "name": "pagenum",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "tumblr.com"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to download the downloadable URLs of the tracks from the album \"https://scntstlab.bandcamp.com/track/mwidit-edit\" using the Bandcamp Downloader API and include the necessary headers for authentication.",
        "model_answer": "requests.get(\"https://bandamp-downloader-api.p.rapidapi.com/tracks/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"bandamp-downloader-api.p.rapidapi.com\"}, params={\"url\": \"https://scntstlab.bandcamp.com/track/mwidit-edit\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "An all-in-one scraper to get everything from Bandcamp. Get tracks, Albums details with downloadable URLs.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bandamp-downloader-api.p.rapidapi.com/tracks/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bandamp-downloader-api.p.rapidapi.com/tracks/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bandamp-downloader-api.p.rapidapi.com/tracks/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bandamp-downloader-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://scntstlab.bandcamp.com/track/mwidit-edit"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bandamp-downloader-api.p.rapidapi.com/tracks/\"\nquerystring = {\"url\": \"https://scntstlab.bandcamp.com/track/mwidit-edit\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bandamp-downloader-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bandamp Downloader API",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://scntstlab.bandcamp.com/track/mwidit-edit"
                }
            ]
        }
    },
    {
        "query": "I want to get the list of companies on the eNotas Gateway API with page number 3 and page size 100.",
        "model_answer": "requests.get(\"https://enotas-enotas-gateway-v1.p.rapidapi.com/empresas\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"enotas-enotas-gateway-v1.p.rapidapi.com\"}, params={\"pageNumber\": 3, \"pageSize\": 100})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Automatic e-Service Brazilian invoicing platform, the easy way.\r\nNota Fiscal Eletr\u00f4nica de Servi\u00e7o Autom\u00e1tica, em n\u00edvel nacional, da forma mais f\u00e1cil poss\u00edvel.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://enotas-enotas-gateway-v1.p.rapidapi.com/empresas'\nquerystring = {\"pageNumber\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://enotas-enotas-gateway-v1.p.rapidapi.com/empresas\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://enotas-enotas-gateway-v1.p.rapidapi.com/empresas"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "enotas-enotas-gateway-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://enotas-enotas-gateway-v1.p.rapidapi.com/empresas\"\nquerystring = {\"pageNumber\": \"0\", \"pageSize\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"enotas-enotas-gateway-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "eNotas Gateway",
            "api_arguments_original": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Pagina\u00e7\u00e3o, a partir de 0",
                    "default": "0"
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Tamanho da p\u00e1gina",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "Can you help me validate this email 'example2@gmail.com' using the Email Validator API?",
        "model_answer": "requests.get(\"https://email-validator9.p.rapidapi.com/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"email-validator9.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Clean your email list now!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-validator9.p.rapidapi.com/check'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-validator9.p.rapidapi.com/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-validator9.p.rapidapi.com/check\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-validator9.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Validator_v9",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if the zip code 54321 is valid in Mexico?",
        "model_answer": "requests.get(\"https://postali.p.rapidapi.com/v1\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"postali.p.rapidapi.com\"}, params={\"code\":\"54321\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Mexico zip codes / C\u00f3digos postales de M\u00e9xico",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://postali.p.rapidapi.com/v1'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://postali.p.rapidapi.com/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://postali.p.rapidapi.com/v1"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "postali.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "code": "54321"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://postali.p.rapidapi.com/v1\"\nquerystring = {\"code\": \"66446\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"postali.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Postali",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "",
                    "default": "66446"
                }
            ]
        }
    },
    {
        "query": "I want to search for properties in Kensington, London on Zoopla and filter for properties with a minimum of 3 bedrooms and a maximum price of 2,000,000 pounds.",
        "model_answer": "requests.get(\"https://zoopla3.p.rapidapi.com/to-rent/travel-time-search-to-rent\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"zoopla3.p.rapidapi.com\"}, params={\"search_area\": \"Kensington, London\", \"min_bedroom\": 3, \"max_price\": 2000000})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Real-time data, unofficial API zoopla co uk. Users can search for information on flats, houses, villas, serviced apartments, and various other types of properties across the country. Zoopla offers an easy way to view details about each property, including photos, descriptions, information on size, number of rooms, and amenities. Users can also explore parameters such as estimated value, sales history, and the surrounding market.\nThe occurrence rate of the response status code != 200 is &lt; 0...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://zoopla3.p.rapidapi.com/to-rent/travel-time-search-to-rent'\nquerystring = {\"search_area\": \"\", \"keywords\": \"\", \"furnishing_state\": \"\", \"show_let_or_let_agreed\": \"\", \"available_from\": \"\", \"added_to_site\": \"\", \"price_per\": \"\", \"min_bedroom\": \"\", \"has_garden\": \"\", \"has_bills_included\": \"\", \"has_parking_garage\": \"\", \"has_balcony_terrace\": \"\", \"has_pets_allowed\": \"\", \"max_travel_time\": \"\", \"max_price\": \"\", \"retirement_homes\": \"\", \"sort_order\": \"\", \"house_share\": \"\", \"max_bedroom\": \"\", \"transport_type\": \"\", \"min_price\": \"\", \"property_type\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://zoopla3.p.rapidapi.com/to-rent/travel-time-search-to-rent\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://zoopla3.p.rapidapi.com/to-rent/travel-time-search-to-rent"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "zoopla3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "search_area": "Kensington, London",
                            "min_bedroom": 3,
                            "max_price": 2000000
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://zoopla3.p.rapidapi.com/to-rent/travel-time-search-to-rent\"\nquerystring = {\"keywords\": \"\", \"furnishing_state\": \"\", \"show_let_or_let_agreed\": \"\", \"available_from\": \"\", \"added_to_site\": \"\", \"price_per\": \"\", \"min_bedroom\": \"\", \"has_garden\": \"\", \"has_bills_included\": \"\", \"has_parking_garage\": \"\", \"has_balcony_terrace\": \"\", \"has_pets_allowed\": \"\", \"max_travel_time\": \"\", \"max_price\": \"\", \"retirement_homes\": \"\", \"sort_order\": \"\", \"house_share\": \"\", \"search_area\": \"Chelsea, London\", \"max_bedroom\": \"\", \"transport_type\": \"\", \"min_price\": \"\", \"property_type\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"zoopla3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Zoopla",
            "api_arguments_original": [
                {
                    "name": "search_area",
                    "type": "STRING",
                    "description": "",
                    "default": "Chelsea, London"
                },
                {
                    "name": "keywords",
                    "type": "STRING",
                    "description": "e.g. conservatory or \\\"double garage\\\"",
                    "default": ""
                },
                {
                    "name": "furnishing_state",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "show_let_or_let_agreed",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "available_from",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "added_to_site",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "price_per",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "min_bedroom",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_garden",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_bills_included",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_parking_garage",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_balcony_terrace",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_pets_allowed",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "max_travel_time",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "max_price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "retirement_homes",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sort_order",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "house_share",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "max_bedroom",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "transport_type",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "min_price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "property_type",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Help me search for PlayStation products on eBay in Europe.",
        "model_answer": "requests.get(\"https://ebay-products-search-scraper.p.rapidapi.com/products\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ebay-products-search-scraper.p.rapidapi.com\"}, params={\"page\": 1, \"Item_Location\": \"europe\", \"query\": \"PlayStation\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "eBay products search scraper for getting search products data.\nYou can choose the Location: the US Only,  North America , Europe , Asia, or Default.\nYou will get 25 products per page .",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ebay-products-search-scraper.p.rapidapi.com/products'\nquerystring = {\"page\": \"\", \"Item_Location\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ebay-products-search-scraper.p.rapidapi.com/products\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "enum": [
                        "1"
                    ],
                    "description": "the number of the page"
                },
                {
                    "name": "Item_Location",
                    "enum": [
                        "europe"
                    ],
                    "description": "Item Location :  europe  , north___america.    , asia  ,us__only  , default"
                },
                {
                    "name": "query",
                    "enum": [
                        "PlayStatio"
                    ],
                    "description": ""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ebay-products-search-scraper.p.rapidapi.com/products\"\nquerystring = {\"page\": \"1\", \"Item_Location\": \"europe\", \"query\": \"xbox\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ebay-products-search-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "eBay products search scraper",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "the number of the page",
                    "default": "1"
                },
                {
                    "name": "Item_Location",
                    "type": "STRING",
                    "description": "Item Location :  europe  , north___america.    , asia  ,us__only  , default",
                    "default": "europe"
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "xbox"
                }
            ]
        }
    },
    {
        "query": "I want to make a GET request to the httpbin API and include a query parameter 'foo' with a value of 'bar'.",
        "model_answer": "requests.get(\"https://httpbin32.p.rapidapi.com/anything\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"httpbin32.p.rapidapi.com\"}, params={\"foo\": \"bar\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "httpbin",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://httpbin32.p.rapidapi.com/anything'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://httpbin32.p.rapidapi.com/anything\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://httpbin32.p.rapidapi.com/anything"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "httpbin32.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "foo": "bar"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://httpbin32.p.rapidapi.com/anything\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"httpbin32.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "httpbin",
            "api_arguments_original": []
        }
    },
    {
        "query": "Provide a Python function call to retrieve the regions information from the World Country API, using the default values for the parameters.",
        "model_answer": "requests.get(\"https://world-country.p.rapidapi.com/get/regions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"world-country.p.rapidapi.com\"}, params={\"keyword\": \"asia\",\"perpage\": \"50\",\"id\": \"\",\"page\": \"1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "More than 200+ countries, 5K states and 150K cities with various information.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-country.p.rapidapi.com/get/regions'\nquerystring = {\"keyword\": \"\", \"perpage\": \"\", \"id\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-country.p.rapidapi.com/get/regions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://world-country.p.rapidapi.com/get/regions"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "world-country.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "keyword": "asia",
                            "perpage": "50",
                            "id": "",
                            "page": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-country.p.rapidapi.com/get/regions\"\nquerystring = {\"keyword\": \"asia\", \"perpage\": \"50\", \"id\": \"\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-country.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Country",
            "api_arguments_original": [
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "search Region by keyword",
                    "default": "asia"
                },
                {
                    "name": "perpage",
                    "type": "NUMBER",
                    "description": "",
                    "default": "50"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "id of Region",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to find the logo of apple.com?",
        "model_answer": "requests.get(\"https://logo4.p.rapidapi.com/logo/apple.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"logo4.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "Find the Logo of each company in real-time.  Using our logo finder service is entirely free with attribution. However, we require a link back to companyurlfinder.com on any page the service is used.   Just use the following format to embed logos in your systems:  <img src=\"https://api.companyurlfinder.com/logo/amazon.com\" />",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://logo4.p.rapidapi.com/logo/amazon.com'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://logo4.p.rapidapi.com/logo/amazon.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://logo4.p.rapidapi.com/logo/apple.com"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "logo4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://logo4.p.rapidapi.com/logo/amazon.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"logo4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Logo",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "string",
                    "description": "",
                    "default": "amazon.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get a random cat fact using the Random Cat Fact API?",
        "model_answer": "requests.get(\"https://random-cat-fact.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"random-cat-fact.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Get some random cat facts",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-cat-fact.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-cat-fact.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://random-cat-fact.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "random-cat-fact.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-cat-fact.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-cat-fact.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Cat Fact",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the exchange rate for 50 USD to EUR on a specific date, let's say August 5th, 2021?",
        "model_answer": "requests.get(\"https://forexgo.p.rapidapi.com/fx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"forexgo.p.rapidapi.com\"}, params={\"amount\": 50, \"from\": \"USD\", \"to\": \"EUR\", \"date\": \"2021-08-05\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Introducing ForexGo API - the powerful currency exchange solution for developers. Effortlessly integrate real-time forex rates and conversion capabilities into your applications with our easy-to-use API. Enhance your projects with accurate and up-to-date exchange data, empowering users across the globe to make informed financial decisions. Get started with ForexGo API today!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://forexgo.p.rapidapi.com/fx'\nquerystring = {\"amount\": \"\", \"from\": \"\", \"to\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://forexgo.p.rapidapi.com/fx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://forexgo.p.rapidapi.com/fx"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "forexgo.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://forexgo.p.rapidapi.com/fx\"\nquerystring = {\"amount\": \"10\", \"from\": \"EUR\", \"date\": \"\", \"to\": \"USD\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"forexgo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ForexGo",
            "api_arguments_original": [
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "Defines the value of the amount.",
                    "default": "10"
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Supported currencies are listed below.\n\nEUR, USD, JPY, BGN, CZK, DKK, GBP, HUF, PLN, RON, SEK, CHF, ISK, NOK, TRY, AUD, BRL, CAD, CNY, HKD, IDR, ILS, INR, KRW, MXN, MYR, NZD, PHP, SGD, THB, ZAR",
                    "default": "EUR"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Supported currencies are listed below.\n\nEUR, USD, JPY, BGN, CZK, DKK, GBP, HUF, PLN, RON, SEK, CHF, ISK, NOK, TRY, AUD, BRL, CAD, CNY, HKD, IDR, ILS, INR, KRW, MXN, MYR, NZD, PHP, SGD, THB, ZAR",
                    "default": "USD"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "ISO Date format:\n\nYYYY-MM-DDTHH:mm:ss.sssZ\n\nPull data from requested date.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with some quiz questions using the QUIZ API?",
        "model_answer": "requests.get(\"https://quiz26.p.rapidapi.com/questions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quiz26.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "The Quiz API is a powerful and versatile tool designed to provide developers with easy access to a wide range of quiz-related functionalities. With this API, you can seamlessly integrate quizzes into your applications, websites, or educational platforms. Whether you're building a learning management system, a trivia game, or a quiz-based assessment platform, the Quiz API has got you covered.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quiz26.p.rapidapi.com/questions'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quiz26.p.rapidapi.com/questions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "X-RapidAPI-Key"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quiz26.p.rapidapi.com/questions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quiz26.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QUIZ",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide connection information about IP address 10.0.0.1?",
        "model_answer": "requests.get(\"https://about-my-ip.p.rapidapi.com/getipinfo/10.0.0.1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"about-my-ip.p.rapidapi.com\"})",
        "original": {
            "domain": "Monitoring",
            "framework": "RapidAPI",
            "functionality": "Connection information about an IP Address",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://about-my-ip.p.rapidapi.com/getipinfo/{ip}'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://about-my-ip.p.rapidapi.com/getipinfo/{ip}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://about-my-ip.p.rapidapi.com/getipinfo/{ip}\"\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"about-my-ip.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "About My IP",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to listen to the Rock station.",
        "model_answer": "requests.get(\"https://station1.p.rapidapi.com/Rock-Musiquecom-s115313/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"station1.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "radio",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://station1.p.rapidapi.com/Hip-Hop-Musiquecom-s115313/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://station1.p.rapidapi.com/Hip-Hop-Musiquecom-s115313/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://station1.p.rapidapi.com/Rock-Musiquecom-s115313/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "station1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://station1.p.rapidapi.com/Hip-Hop-Musiquecom-s115313/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"station1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "station",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the email \"example@gmail.com\" is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Parse quantities and units from text / text replace",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yoonit.p.rapidapi.com/currencies'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yoonit.p.rapidapi.com/currencies\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yoonit.p.rapidapi.com/currencies\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yoonit.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "yoonit",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the details of media ID 7 in the LiveScore Sports API?",
        "model_answer": "requests.get(\"https://livescore-sports.p.rapidapi.com/v1/media/details\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"livescore-sports.p.rapidapi.com\"}, params={\"timezone\": \"0\", \"locale\": \"EN\", \"media_id\": \"7\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "LiveScore Sports | The number one destination for real time scores for Football, Cricket, Tennis, Basketball, Hockey and more. Support: tipsters@rapi.one / t.me/api_tipsters Other sports api: https://rapi.one ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://livescore-sports.p.rapidapi.com/v1/media/details'\nquerystring = {\"timezone\": \"\", \"locale\": \"\", \"media_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://livescore-sports.p.rapidapi.com/v1/media/details\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://livescore-sports.p.rapidapi.com/v1/media/details"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "livescore-sports.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "timezone": "0",
                            "locale": "EN",
                            "media_id": "7"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://livescore-sports.p.rapidapi.com/v1/media/details\"\nquerystring = {\"timezone\": \"0\", \"locale\": \"EN\", \"media_id\": \"4\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"livescore-sports.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LiveScore Sports",
            "api_arguments_original": [
                {
                    "name": "timezone",
                    "type": "NUMBER",
                    "description": "Timezone, offsets from UTC",
                    "default": "0"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": "EN"
                },
                {
                    "name": "media_id",
                    "type": "NUMBER",
                    "description": "Media ID",
                    "default": "4"
                }
            ]
        }
    },
    {
        "query": "Please fetch the client data from the fachaapi API and log the output.",
        "model_answer": "requests.get(\"https://fachaapi.p.rapidapi.com/cliente\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fachaapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "testing",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fachaapi.p.rapidapi.com/cliente'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fachaapi.p.rapidapi.com/cliente\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fachaapi.p.rapidapi.com/cliente"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fachaapi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fachaapi.p.rapidapi.com/cliente\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fachaapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "fachaApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a python function call to get a motivational quote with id 8?",
        "model_answer": "requests.get(\"https://motivational-content.p.rapidapi.com/quotes/8\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"motivational-content.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get motivational quotes and motivational pictures.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://motivational-content.p.rapidapi.com/quotes/4'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://motivational-content.p.rapidapi.com/quotes/4\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://motivational-content.p.rapidapi.com/quotes/4\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"motivational-content.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Motivational Content",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "4"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve information about the best movies available.",
        "model_answer": "requests.get(\"https://porn-movies.p.rapidapi.com/index.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"porn-movies.p.rapidapi.com\"}, params={\"id\": 1})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Best Movies",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://porn-movies.p.rapidapi.com/index.php'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://porn-movies.p.rapidapi.com/index.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://porn-movies.p.rapidapi.com/index.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "porn-movies.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": 1
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://porn-movies.p.rapidapi.com/index.php\"\nquerystring = {\"id\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"porn-movies.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Porn Movies",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve a list of football team names using the Football (soccer) team names API and print the response?",
        "model_answer": "requests.get(\"https://football-soccer-team-names.p.rapidapi.com/get-teams\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\",\"X-RapidAPI-Host\":\"football-soccer-team-names.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Large database of team names, You'll receive 7000+ football (soccer) team names, with their short names from almost every league, nation etc\u2026 This API can be useful for you for ex.: if you want to create football (soccer) statistics based on team names and short names",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://football-soccer-team-names.p.rapidapi.com/get-teams'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://football-soccer-team-names.p.rapidapi.com/get-teams\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://football-soccer-team-names.p.rapidapi.com/get-teams\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"football-soccer-team-names.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Football (soccer) team names",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to get the listings from the OpenBlur API, with a page size of 5, ordered by listing price in descending order, and without specifying a contract address?",
        "model_answer": "requests.get(\"https://openblur.p.rapidapi.com/listings\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"openblur.p.rapidapi.com\"}, params={\"pageSize\": 5, \"pageNumber\": 1, \"orderBy\": \"DESC\", \"contractAddress\": \"\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Unofficial Listings API for blur.io\n\n- For Blur V1 endpoints use this API: https://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.\n\nJoin our Discord to inquire & find out the latest information and tools: \n\nhttps://discord.gg/Yezs2VDhBV",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://openblur.p.rapidapi.com/listings'\nquerystring = {\"pageSize\": \"\", \"pageNumber\": \"\", \"orderBy\": \"\", \"contractAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://openblur.p.rapidapi.com/listings\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://openblur.p.rapidapi.com/listings"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "openblur.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "pageSize": 5,
                            "pageNumber": 1,
                            "orderBy": "DESC",
                            "contractAddress": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://openblur.p.rapidapi.com/listings\"\nquerystring = {\"pageNumber\": \"1\", \"orderBy\": \"ASC\", \"pageSize\": \"20\", \"contractAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"openblur.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OpenBlur",
            "api_arguments_original": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": "20"
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "orderBy",
                    "type": "STRING",
                    "description": "Listing Price: ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "contractAddress",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to summarize the YouTube video with the URL \"https://www.youtube.com/watch?v=abcd1234\"?",
        "model_answer": "requests.get(\"https://youtube-video-summarizer1.p.rapidapi.com/v1/youtube/summarizeVideoFromCache\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"youtube-video-summarizer1.p.rapidapi.com\"}, params={\"videoURL\": \"https://www.youtube.com/watch?v=abcd1234\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "A powerful tool for generating concise summaries of YouTube videos, highlighting the most important points for easy note-taking and referencing.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-video-summarizer1.p.rapidapi.com/v1/youtube/summarizeVideoFromCache'\nquerystring = {\"videoURL\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-video-summarizer1.p.rapidapi.com/v1/youtube/summarizeVideoFromCache\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://youtube-video-summarizer1.p.rapidapi.com/v1/youtube/summarizeVideoFromCache"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "youtube-video-summarizer1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-video-summarizer1.p.rapidapi.com/v1/youtube/summarizeVideoFromCache\"\nquerystring = {\"videoURL\": \"https://www.youtube.com/watch?v=ykY69lSpDdo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-video-summarizer1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube Video Summarizer",
            "api_arguments_original": [
                {
                    "name": "videoURL",
                    "type": "STRING",
                    "description": "The URL of the YouTube video to get from the summary cache.",
                    "default": "https://www.youtube.com/watch?v=ykY69lSpDdo"
                }
            ]
        }
    },
    {
        "query": "I want to generate a QR code for the URL www.example.net and save it as a PNG image file.",
        "model_answer": "requests.get(\"https://qr-code-generator-pro1.p.rapidapi.com/qr\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"qr-code-generator-pro1.p.rapidapi.com\"}, params={\"url\":\"www.example.net\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Easily generate QR codes for urls, and receive a downloadable png image file",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-code-generator-pro1.p.rapidapi.com/qr'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-code-generator-pro1.p.rapidapi.com/qr\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://qr-code-generator-pro1.p.rapidapi.com/qr"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "qr-code-generator-pro1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-code-generator-pro1.p.rapidapi.com/qr\"\nquerystring = {\"url\": \"www.example.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-generator-pro1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR Code Generator Pro",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "www.example.com"
                }
            ]
        }
    },
    {
        "query": "Can you validate if the email address \"johndoe@example.com\" is a valid email address using the Email API?",
        "model_answer": "requests.get(\"https://email-api8.p.rapidapi.com/fake_email\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"email-api8.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "This Email API is helpful to validate email addresses(single or bulk, using txt and csv), detect temporary, get fake emails, check free emails, check MX records and identify free/paid email service providers.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-api8.p.rapidapi.com/fake_email'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-api8.p.rapidapi.com/fake_email\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://email-api8.p.rapidapi.com/fake_email"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "email-api8.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-api8.p.rapidapi.com/fake_email\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-api8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email API",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the per-capita income based on the coordinates (-87.6297982, 41.8781136) using the World Coordinates to Income API?",
        "model_answer": "requests.get(\"https://world-coordinates-to-income.p.rapidapi.com/test/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"world-coordinates-to-income.p.rapidapi.com\"}, params={\"lon\": \"-87.6297982\", \"lat\": \"41.8781136\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get sub-city level individual per-capita USD/yr income data from across the globe.\nUseful in LTV & user valuation modeling.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-coordinates-to-income.p.rapidapi.com/test/'\nquerystring = {\"lon\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-coordinates-to-income.p.rapidapi.com/test/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://world-coordinates-to-income.p.rapidapi.com/test/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "world-coordinates-to-income.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "lon": "-87.6297982",
                            "lat": "41.8781136"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-coordinates-to-income.p.rapidapi.com/test/\"\nquerystring = {\"lon\": \"0\", \"lat\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-coordinates-to-income.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Coordinates to Income",
            "api_arguments_original": [
                {
                    "name": "lon",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Can you provide the Python code to look up the product details for the barcode 9780143573659?",
        "model_answer": "requests.get(\"https://barcode-lookup.p.rapidapi.com/v3/products\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"barcode-lookup.p.rapidapi.com\"}, params={\"barcode\": \"9780143573659\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Lookup product data and pricing for over 635 million unique items by UPC, EAN, ISBN codes or search terms.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://barcode-lookup.p.rapidapi.com/v3/products'\nquerystring = {\"asin\": \"\", \"page\": \"\", \"barcode\": \"\", \"mpn\": \"\", \"search\": \"\", \"category\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://barcode-lookup.p.rapidapi.com/v3/products\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://barcode-lookup.p.rapidapi.com/v3/products"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "barcode-lookup.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "barcode": "9780143573659"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://barcode-lookup.p.rapidapi.com/v3/products\"\nquerystring = {\"asin\": \"\", \"page\": \"\", \"barcode\": \"\", \"mpn\": \"\", \"search\": \"\", \"category\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"barcode-lookup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Barcode Lookup",
            "api_arguments_original": [
                {
                    "name": "asin",
                    "type": "STRING",
                    "description": "ASIN",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number for any search query (10 results per page)",
                    "default": ""
                },
                {
                    "name": "barcode",
                    "type": "NUMBER",
                    "description": "UPC, EAN or ISBN number",
                    "default": ""
                },
                {
                    "name": "mpn",
                    "type": "STRING",
                    "description": "Manufacturer Part Number",
                    "default": ""
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "Any search term or phrase",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Product Name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the daily horoscope for the Leo sign and print the response?",
        "model_answer": "requests.get(\"https://horoscope-astrology.p.rapidapi.com/dailyphrase\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"horoscope-astrology.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "The Horoscope API Server provides daily horoscope predictions for all zodiac signs. Users can access the API to retrieve daily astrological forecasts for their specific sun sign, as well as general horoscope information for the entire zodiac. The API is designed to be simple and easy to use, allowing developers to integrate horoscope content into their own applications and websites. The predictions are generated using algorithms that consider the position of the planets and other astrological...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://horoscope-astrology.p.rapidapi.com/dailyphrase'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://horoscope-astrology.p.rapidapi.com/dailyphrase\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://horoscope-astrology.p.rapidapi.com/dailyphrase\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"horoscope-astrology.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Horoscope Astrology",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to retrieve the addresses for the postcode PL11DN in the UK, using the \"Find By PostCode\" API.",
        "model_answer": "requests.get(\"https://find-by-postcode.p.rapidapi.com/v1/postcodes/PL11DN\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"find-by-postcode.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "\u201cFind By PostCode\u201d API get addresses for the given UK PostCode. This API provides a JSON interface to search UK addresses for a postcode.his API uses the latest PAF and Multiple Residence data from Royal Mail.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://find-by-postcode.p.rapidapi.com/v1/postcodes/PL11DN'\nquerystring = {\"postcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://find-by-postcode.p.rapidapi.com/v1/postcodes/PL11DN\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://find-by-postcode.p.rapidapi.com/v1/postcodes/PL11DN"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "find-by-postcode.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://find-by-postcode.p.rapidapi.com/v1/postcodes/PL11DN\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"find-by-postcode.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Find By PostCode",
            "api_arguments_original": [
                {
                    "name": "postcode",
                    "type": "string",
                    "description": "",
                    "default": "PL11DN"
                }
            ]
        }
    },
    {
        "query": "I want to detect objects in the image located at \"https://example.com/image.jpg\" using Mantis Object Detection API.",
        "model_answer": "requests.get(\"https://mantis-object-detection.p.rapidapi.com/rest/v1/public/detectObjects\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mantis-object-detection.p.rapidapi.com\"}, params={\"url\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Reliable and Accurate Face and Object Detection via ResNet-50",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mantis-object-detection.p.rapidapi.com/rest/v1/public/detectObjects'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mantis-object-detection.p.rapidapi.com/rest/v1/public/detectObjects\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://mantis-object-detection.p.rapidapi.com/rest/v1/public/detectObjects"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "mantis-object-detection.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mantis-object-detection.p.rapidapi.com/rest/v1/public/detectObjects\"\nquerystring = {\"url\": \"https://dm0qx8t0i9gc9.cloudfront.net/thumbnails/video/4ZrVLdVKeijzurndz/people-emotion-and-facial-expression-concept-face-of-happy-smiling-middle-aged-woman-at-office_rleqp4y7g_thumbnail-1080_09.png\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mantis-object-detection.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mantis Object Detection",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://dm0qx8t0i9gc9.cloudfront.net/thumbnails/video/4ZrVLdVKeijzurndz/people-emotion-and-facial-expression-concept-face-of-happy-smiling-middle-aged-woman-at-office_rleqp4y7g_thumbnail-1080_09.png"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to search for upcoming games on the Epic Store in the US marketplace and log the output? Please consider that we might want to customize the search with specific keywords.",
        "model_answer": "requests.get(\"https://epic-store-games.p.rapidapi.com/comingSoon\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"epic-store-games.p.rapidapi.com\"}, params={\"searchWords\": \"\", \"categories\": \"\", \"country\": \"us\", \"locale\": \"us\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Search Games, Editions, Demos on Epic Store",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://epic-store-games.p.rapidapi.com/comingSoon'\nquerystring = {\"searchWords\": \"\", \"categories\": \"\", \"country\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://epic-store-games.p.rapidapi.com/comingSoon\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://epic-store-games.p.rapidapi.com/comingSoon"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "epic-store-games.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "searchWords": "",
                            "categories": "",
                            "country": "us",
                            "locale": "us"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://epic-store-games.p.rapidapi.com/comingSoon\"\nquerystring = {\"searchWords\": \"Assasin\", \"categories\": \"\", \"country\": \"us\", \"locale\": \"us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"epic-store-games.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Epic Store Games",
            "api_arguments_original": [
                {
                    "name": "searchWords",
                    "type": "STRING",
                    "description": "",
                    "default": "Assasin"
                },
                {
                    "name": "categories",
                    "type": "ENUM",
                    "description": "Default: **Games**",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Default: **us** --- *For the price*",
                    "default": "us"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "Default: **us** --- *For the language*",
                    "default": "us"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get the latest news related to artificial intelligence using the Artificial Intelligence News API and print the response?",
        "model_answer": "requests.get(\"https://artificial-intelligence-news-api.p.rapidapi.com/ai-news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"artificial-intelligence-news-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "The Artificial Intelligence News API is a web service that provides access to news articles related to the field of artificial intelligence from around the world. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://artificial-intelligence-news-api.p.rapidapi.com/ai-news'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://artificial-intelligence-news-api.p.rapidapi.com/ai-news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://artificial-intelligence-news-api.p.rapidapi.com/ai-news"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "artificial-intelligence-news-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://artificial-intelligence-news-api.p.rapidapi.com/ai-news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"artificial-intelligence-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Artificial intelligence News API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to test the API \"test10977.p.rapidapi.com/ee\" with a custom header value for \"X-RapidAPI-Key\" and \"X-RapidAPI-Host\".",
        "model_answer": "requests.get(\"https://test10977.p.rapidapi.com/ee\", headers={\"X-RapidAPI-Key\": \"CUSTOM-KEY\", \"X-RapidAPI-Host\": \"test10977.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test10977.p.rapidapi.com/ee'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test10977.p.rapidapi.com/ee\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://test10977.p.rapidapi.com/ee"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "CUSTOM-KEY",
                            "X-RapidAPI-Host": "test10977.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test10977.p.rapidapi.com/ee\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test10977.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please help me access real-time stock prices for Apple Inc. (AAPL) using the Yahoo Finance API.",
        "model_answer": "requests.get(\"https://yahoo-finance127.p.rapidapi.com/news/tsla\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yahoo-finance127.p.rapidapi.com\"}, params={\"symbol\": \"AAPL\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yahoo-finance127.p.rapidapi.com/news/tsla'\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yahoo-finance127.p.rapidapi.com/news/tsla\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://yahoo-finance127.p.rapidapi.com/news/tsla"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "yahoo-finance127.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "symbol": "AAPL"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yahoo-finance127.p.rapidapi.com/news/tsla\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance127.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yahoo Finance",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "string",
                    "description": "",
                    "default": "tsla"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check the current weather at LAX airport using the Aviation Weather Center API?",
        "model_answer": "requests.get(\"https://aviation-weather-center.p.rapidapi.com/adds/dataserver_current/httpparam\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\",\"X-RapidAPI-Host\":\"aviation-weather-center.p.rapidapi.com\"}, params={\"datasource\": \"stations\", \"stationString\": \"LAX\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "This API provides official aviation weather data, including SIGMETs, AIRMETs, METARs, TAFs and PIREPs from NOAA, available on aviationweather.gov",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aviation-weather-center.p.rapidapi.com/adds/dataserver_current/httpparam'\nquerystring = {\"datasource\": \"\", \"stationString\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aviation-weather-center.p.rapidapi.com/adds/dataserver_current/httpparam\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://aviation-weather-center.p.rapidapi.com/adds/dataserver_current/httpparam"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "aviation-weather-center.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aviation-weather-center.p.rapidapi.com/adds/dataserver_current/httpparam\"\nquerystring = {\"datasource\": \"stations\", \"stationString\": \"KSFO\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aviation-weather-center.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aviation Weather Center",
            "api_arguments_original": [
                {
                    "name": "datasource",
                    "type": "STRING",
                    "description": "",
                    "default": "stations"
                },
                {
                    "name": "stationString",
                    "type": "STRING",
                    "description": "",
                    "default": "KSFO"
                }
            ]
        }
    },
    {
        "query": "Can you give me a Python function call to retrieve a random insult from \"The Dozen - The Yo Mamsa Roast API\" and print the output?",
        "model_answer": "requests.get(\"https://the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com/insults/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Rest API that serves random, catagorized and filteres lighthearted familial insults/jokes",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com/insults/{category}'\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com/insults/{category}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com/insults/{category}\"\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Dozen - The Yo Mamsa Roast API",
            "api_arguments_original": [
                {
                    "name": "category",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the latest schedule and stats for FIFA World Cup 2022 with a date of November 10th, 2022 and UTC offset of 5.",
        "model_answer": "requests.get(\"https://fifa-2022-schedule-and-stats.p.rapidapi.com/schedule\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fifa-2022-schedule-and-stats.p.rapidapi.com\"}, params={\"date\": \"2022-11-10\", \"utc_offset\": \"5\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Get the latest FIFA World Cup Schedule and Stats ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fifa-2022-schedule-and-stats.p.rapidapi.com/schedule'\nquerystring = {\"date\": \"\", \"utc_offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fifa-2022-schedule-and-stats.p.rapidapi.com/schedule\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fifa-2022-schedule-and-stats.p.rapidapi.com/schedule"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fifa-2022-schedule-and-stats.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "date": "2022-11-10",
                            "utc_offset": "5"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fifa-2022-schedule-and-stats.p.rapidapi.com/schedule\"\nquerystring = {\"date\": \"2022-11-22\", \"utc_offset\": \"8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fifa-2022-schedule-and-stats.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FIFA 2022 Schedule and Stats",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "",
                    "default": "2022-11-22"
                },
                {
                    "name": "utc_offset",
                    "type": "NUMBER",
                    "description": "UTC Offset for timezone (Must be between -12 to 14)",
                    "default": "8"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the number of followers of a particular Instagram post. The shortcode for the post is EFG456.",
        "model_answer": "requests.get(\"https://instagram28.p.rapidapi.com/media_info_v2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"instagram28.p.rapidapi.com\"}, params={\"short_code\": \"EFG456\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "instagram api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram28.p.rapidapi.com/media_info_v2'\nquerystring = {\"short_code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram28.p.rapidapi.com/media_info_v2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instagram28.p.rapidapi.com/media_info_v2"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instagram28.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "short_code": "EFG456"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram28.p.rapidapi.com/media_info_v2\"\nquerystring = {\"short_code\": \"CA_ifcxMjFR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram28.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram_v6",
            "api_arguments_original": [
                {
                    "name": "short_code",
                    "type": "STRING",
                    "description": "",
                    "default": "CA_ifcxMjFR"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to search for information on Unicode codepoint \"U+0078\" using the RapidAPI.",
        "model_answer": "requests.get(\"https://codepoints.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"codepoints.p.rapidapi.com\"}, params={\"properties\": \"U+0078\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "A RESTful Interface to Unicode Data, this API gives easy and standardized access to all information from Codepoints.net. The detailed documentation is [available on Github](https://github.com/Boldewyn/Codepoints.net/wiki/API).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://codepoints.p.rapidapi.com/search'\nquerystring = {\"properties\": \"\", \"page\": \"\", \"per_page\": \"\", \"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://codepoints.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://codepoints.p.rapidapi.com/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "codepoints.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "properties": "U+0078"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/search\"\nquerystring = {\"properties\": \"age=1.1&gc=Na\", \"page\": \"2\", \"per_page\": \"10\", \"callback\": \"foo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Unicode Codepoints",
            "api_arguments_original": [
                {
                    "name": "properties",
                    "type": "STRING",
                    "description": "one or several key/value pairs of Unicode properties or int for decimal codepoint values or q for free text search.",
                    "default": "age=1.1&gc=Na"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number for paginated results",
                    "default": "2"
                },
                {
                    "name": "per_page",
                    "type": "STRING",
                    "description": "results per page",
                    "default": "10"
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSON-P return function name",
                    "default": "foo"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the geo location data for IP address 10.0.0.1?",
        "model_answer": "requests.get(\"https://ip-geo-location-and-ip-reputation.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ip-geo-location-and-ip-reputation.p.rapidapi.com\"}, params={\"ip\": \"10.0.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "This API will provide geo location data such as: country, Region, City, Latitude, Longitude, Time Zone, Zip Code, Flag and much more...Also provides: IP Blacklist, Currencies, Languages, TLD, Host,  and more...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-geo-location-and-ip-reputation.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-geo-location-and-ip-reputation.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ip-geo-location-and-ip-reputation.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ip-geo-location-and-ip-reputation.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-geo-location-and-ip-reputation.p.rapidapi.com/\"\nquerystring = {\"ip\": \"8.8.8.8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-geo-location-and-ip-reputation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Geo Location and IP Reputation",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "8.8.8.8"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get the statistics of a match with secret key \"abcd123\", match ID 12345, and API key \"efgh456\" using the Test_v2 API?",
        "model_answer": "requests.get(\"https://test2527.p.rapidapi.com/matches/stats.json\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\",\"X-RapidAPI-Host\":\"https://test2527.p.rapidapi.com/matches/stats.json\"}, params={\"secret\":\"abcd123\",\"match_id\":12345,\"key\":\"efgh456\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "This is the description",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test2527.p.rapidapi.com/matches/stats.json'\nquerystring = {\"secret\": \"\", \"match_id\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test2527.p.rapidapi.com/matches/stats.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://test2527.p.rapidapi.com/matches/stats.json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "https://test2527.p.rapidapi.com/matches/stats.json"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test2527.p.rapidapi.com/matches/stats.json\"\nquerystring = {\"secret\": \"\", \"match_id\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test2527.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Test_v2",
            "api_arguments_original": [
                {
                    "name": "secret",
                    "type": "STRING",
                    "description": "Your API Secret that you get from your account on our website",
                    "default": ""
                },
                {
                    "name": "match_id",
                    "type": "NUMBER",
                    "description": "Match ID",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Your API Key that you get from your account on our website API key",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the latest sports results of the NBA from the Futboleta API.",
        "model_answer": "requests.get(\"https://futboleta.p.rapidapi.comhttp://www.espn.com.co/nba/sports/results\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"futboleta.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "student practice for academy",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://futboleta.p.rapidapi.comhttp://www.espn.com.co/nhl/deportes/resultados'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://futboleta.p.rapidapi.comhttp://www.espn.com.co/nhl/deportes/resultados\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://futboleta.p.rapidapi.comhttp://www.espn.com.co/nba/sports/results"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "futboleta.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://futboleta.p.rapidapi.comhttp://www.espn.com.co/nhl/deportes/resultados\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"futboleta.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "futboleta",
            "api_arguments_original": []
        }
    },
    {
        "query": "What are the holidays in the United States in the year 2023?",
        "model_answer": "requests.get(\"https://holidays-by-api-ninjas.p.rapidapi.com/v1/holidays\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"holidays-by-api-ninjas.p.rapidapi.com\"}, params={\"year\": \"2023\", \"country\": \"us\"})",
        "original": {
            "domain": "Monitoring",
            "framework": "RapidAPI",
            "functionality": "Get past, present and future holiday data for any country. See more info at https://api-ninjas.com/api/holidays.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://holidays-by-api-ninjas.p.rapidapi.com/v1/holidays'\nquerystring = {\"year\": \"\", \"country\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://holidays-by-api-ninjas.p.rapidapi.com/v1/holidays\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://holidays-by-api-ninjas.p.rapidapi.com/v1/holidays"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "holidays-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "year": "2023",
                            "country": "us"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://holidays-by-api-ninjas.p.rapidapi.com/v1/holidays\"\nquerystring = {\"year\": \"2021\", \"type\": \"federal_holiday\", \"country\": \"us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"holidays-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Holidays by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "Calendar year between 2010 and 2030 (inclusive). Note: not all countries are guaranteed contain data going back to 2010.",
                    "default": "2021"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country name or ISO 3166-2 country code (preferred).",
                    "default": "us"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Holiday type filter. Possible values are:\n\n- public_holiday\n- observance\n- national_holiday\n- season\n- state_holiday\n- optional_holiday\n- clock_change_daylight_saving_time\n- local_holiday\n- united_nations_observance\n- observance_christian\n- bank_holiday\n- common_local_holiday\n- national_holiday_christian\n- christian\n- observance_hebrew\n- jewish_holiday\n- muslim\n- hindu_holiday\n- restricted_holiday\n- official_holiday\n- national_holiday_orthodox\n- local_observance\n- ",
                    "default": "federal_holiday"
                }
            ]
        }
    },
    {
        "query": "Please extract the text from this image URL: \"https://example.com/image.jpg\"",
        "model_answer": "requests.get(\"https://ocr-separate-text-from-images.p.rapidapi.com/parse/imageurl/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"ocr-separate-text-from-images.p.rapidapi.com\"}, params={\"language\": \"eng\", \"url\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Our OCR - Separate Text From Images API allows you to quickly and accurately extract text from images. Using advanced image processing and optical character recognition technology, our API can identify and separate text from any image format, including scanned documents, photographs, and screenshots. With our easy-to-use API, you can integrate this functionality into your own applications or services, saving time and effort while improving accuracy and efficiency in your workflow.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ocr-separate-text-from-images.p.rapidapi.com/parse/imageurl/'\nquerystring = {\"language\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ocr-separate-text-from-images.p.rapidapi.com/parse/imageurl/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ocr-separate-text-from-images.p.rapidapi.com/parse/imageurl/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ocr-separate-text-from-images.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "language": "eng",
                            "url": "https://example.com/image.jpg"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ocr-separate-text-from-images.p.rapidapi.com/parse/imageurl/\"\nquerystring = {\"language\": \"eng\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-separate-text-from-images.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OCR - Separate Text From Images",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "eng"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to print \"Hello, Python!\" using the print API.",
        "model_answer": "requests.get(\"https://print.p.rapidapi.com/dev\", headers={\"x-rapidapi-host\": \"print.p.rapidapi.com\", \"x-rapidapi-key\": \"TO BE FILLED\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "some print api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://print.p.rapidapi.com/dev'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://print.p.rapidapi.com/dev\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://print.p.rapidapi.com/dev"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "x-rapidapi-host": "print.p.rapidapi.com",
                            "x-rapidapi-key": "TO BE FILLED"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://print.p.rapidapi.com/dev\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"print.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "print",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve the daily football predictions and betting tips for the matches happening on September 15, 2022 in the Premier League using the Today Football Prediction API.",
        "model_answer": "requests.get(\"https://today-football-prediction.p.rapidapi.com/predictions/scores\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"today-football-prediction.p.rapidapi.com\"}, params={\"date\": \"2022-09-15\", \"league\": \"Premier League\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Daily Football Prediction & Betting Tips with AI powered analysis and probability statistics. High efficiency, average bookie odds, profit-loss calculation, value betting.  Limitted Time: Ultra Plan is only $2.99/mo\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://today-football-prediction.p.rapidapi.com/predictions/scores'\nquerystring = {\"page\": \"\", \"date\": \"\", \"league\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://today-football-prediction.p.rapidapi.com/predictions/scores\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://today-football-prediction.p.rapidapi.com/predictions/scores"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "today-football-prediction.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "date": "2022-09-15",
                            "league": "Premier League"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://today-football-prediction.p.rapidapi.com/predictions/scores\"\nquerystring = {\"page\": \"1\", \"date\": \"2022-08-13\", \"league\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"today-football-prediction.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Today Football Prediction",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2022-08-13"
                },
                {
                    "name": "league",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to obtain a joke from the 'puns' category using the Jokester API.",
        "model_answer": "requests.get(\"https://jokester.p.rapidapi.com/jokes/categories\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"jokester.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Your Source for Endless Laughter - Jokester API is your go-to source for hilarious jokes and puns.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jokester.p.rapidapi.com/jokes/categories'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jokester.p.rapidapi.com/jokes/categories\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jokester.p.rapidapi.com/jokes/categories\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jokester.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": " Jokester",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to generate a QR code with the text \"https://www.example.com\" and save it as a PNG image with a size of 300 pixels.",
        "model_answer": "requests.get(\"https://qrcodeutils.p.rapidapi.com/qrcodefree\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qrcodeutils.p.rapidapi.com\"}, params={\"text\": \"https://www.example.com\", \"validate\": True, \"size\": 300, \"type\": \"png\", \"level\": \"M\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "QR Code Generator API. The API will return directly QR Code image. For more details please visit https://www.qrcodeutils.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qrcodeutils.p.rapidapi.com/qrcodefree'\nquerystring = {\"text\": \"\", \"validate\": \"\", \"size\": \"\", \"type\": \"\", \"level\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qrcodeutils.p.rapidapi.com/qrcodefree\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://qrcodeutils.p.rapidapi.com/qrcodefree"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "qrcodeutils.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "text": "https://www.example.com",
                            "validate": true,
                            "size": 300,
                            "type": "png",
                            "level": "M"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qrcodeutils.p.rapidapi.com/qrcodefree\"\nquerystring = {\"validate\": true, \"text\": \"https://www.digicatech.com\", \"size\": \"150\", \"type\": \"svg\", \"level\": \"M\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qrcodeutils.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "qrcodeutils",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Barcode text",
                    "default": "https://www.digicatech.com"
                },
                {
                    "name": "validate",
                    "type": "BOOLEAN",
                    "description": "true / false . Default true",
                    "default": true
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Size of the output image in pixels. Max: 250 Default: 150",
                    "default": "150"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Warning: the parameter must be named lowercase png,svg or eps",
                    "default": "svg"
                },
                {
                    "name": "level",
                    "type": "STRING",
                    "description": "Correction Level L (Low) 7% of codewords can be restored. Level M (Medium) 15% of codewords can be restored. Level Q (Quartile)[39] 25% of codewords can be restored. Level H (High) 30% of codewords can be restored. H,L,Q,M . Default M",
                    "default": "M"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to capture a screenshot of the website \"https://www.example.com\" using the Pikwy API?",
        "model_answer": "requests.get(\"https://pikwy1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pikwy1.p.rapidapi.com\"})",
        "original": {
            "domain": "Devices",
            "framework": "RapidAPI",
            "functionality": "Capture a website screenshot online",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pikwy1.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pikwy1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pikwy1.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pikwy1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pikwy1.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pikwy1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pikwy",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the Minecraft user data for the player with the username \"Alex\"?",
        "model_answer": "requests.get(\"https://minecraft-user-data.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"minecraft-user-data.p.rapidapi.com\"}, params={\"name\": \"Alex\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Easily get minecraft user info.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://minecraft-user-data.p.rapidapi.com/'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://minecraft-user-data.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://minecraft-user-data.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "minecraft-user-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "name": "Alex"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://minecraft-user-data.p.rapidapi.com/\"\nquerystring = {\"name\": \"Notch\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"minecraft-user-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Minecraft User Data",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Notch"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain information about the Ministry of Education in Chile using the DataEstado API with the provided endpoint URL and headers?",
        "model_answer": "requests.get(\"https://dataestado1.p.rapidapi.com/Ministerio%20de%20Educaci%C3%B3n\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dataestado1.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Un esfuerzo por recopilar informaci\u00f3n de las instituciones p\u00fablicas de la Administraci\u00f3n Central del Estado chileno.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dataestado1.p.rapidapi.com/Ministerio de Educaci\u00f3n'\nquerystring = {\"nombre\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dataestado1.p.rapidapi.com/Ministerio de Educaci\u00f3n\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dataestado1.p.rapidapi.com/Ministerio%20de%20Educaci%C3%B3n"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dataestado1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dataestado1.p.rapidapi.com/Ministerio de Educaci\u00f3n\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dataestado1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DataEstado",
            "api_arguments_original": [
                {
                    "name": "nombre",
                    "type": "string",
                    "description": "",
                    "default": "Ministerio de Educaci\u00f3n"
                }
            ]
        }
    },
    {
        "query": "How can I use the Stable Diffusion v2 API to generate a high-quality image of a dog?",
        "model_answer": "requests.get(\"https://stable-diffusion-v2.p.rapidapi.com/stable-diffusion\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"stable-diffusion-v2.p.rapidapi.com\"}, params={\"description\": \"dog\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Generate high-quality images with the latest Stable Diffusion v2.1 model.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stable-diffusion-v2.p.rapidapi.com/stable-diffusion'\nquerystring = {\"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stable-diffusion-v2.p.rapidapi.com/stable-diffusion\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://stable-diffusion-v2.p.rapidapi.com/stable-diffusion"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "stable-diffusion-v2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "description": "dog"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stable-diffusion-v2.p.rapidapi.com/stable-diffusion\"\nquerystring = {\"description\": \"cat\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stable-diffusion-v2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stable Diffusion v2",
            "api_arguments_original": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "cat"
                }
            ]
        }
    },
    {
        "query": "What is the Python function call to retrieve the list of languages supported by the Deep Translate API using the RapidAPI library, and how can the response be logged?",
        "model_answer": "requests.get(\"https://deep-translate1.p.rapidapi.com/language/translate/v2/languages\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"deep-translate1.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "100x cheaper than Google Translate. Same API. Same quality.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://deep-translate1.p.rapidapi.com/language/translate/v2/languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://deep-translate1.p.rapidapi.com/language/translate/v2/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://deep-translate1.p.rapidapi.com/language/translate/v2/languages"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "deep-translate1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://deep-translate1.p.rapidapi.com/language/translate/v2/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"deep-translate1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Deep Translate",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please retrieve the information for file with ID '286a34ad2fb6c95b1490eae4' from the SendAPic API.",
        "model_answer": "requests.get(\"https://sendapic-api.p.rapidapi.com/api/v1/files/286a34ad2fb6c95b1490eae4\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sendapic-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "https://sendapic.xyz/\n\n\ud83d\udd10 Send confidential images securely and safely with an expiring link.\n\ud83d\udca3 Choose the duration of the expiry, and feel safe knowing it will be deleted after expiry.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sendapic-api.p.rapidapi.com/api/v1/files/639f7fda5ec4b33ef2e476b8'\nquerystring = {\"fileID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sendapic-api.p.rapidapi.com/api/v1/files/639f7fda5ec4b33ef2e476b8\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sendapic-api.p.rapidapi.com/api/v1/files/639f7fda5ec4b33ef2e476b8\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sendapic-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SendAPic API",
            "api_arguments_original": [
                {
                    "name": "fileID",
                    "type": "string",
                    "description": "",
                    "default": "639f7fda5ec4b33ef2e476b8"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the NBA fantasy stats for player with ID 987654 in the most recent 10 games?",
        "model_answer": "requests.get(\"https://tank01-fantasy-stats.p.rapidapi.com/getNBAGamesForPlayer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tank01-fantasy-stats.p.rapidapi.com\"}, params={\"playerID\": \"987654\", \"numberOfGames\": \"10\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "NBA (National Basketball League) Live In Game Fantasy Stats - NBA.  Delivering Accurate Real Time Game Statistics. Updated Rosters/Player Information, Current Schedules, and Updated Standings immediately after every game.  Very Useful for Fantasy Basketball Apps. NOW ALSO WITH BETTING / GAMBLING ODDS",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tank01-fantasy-stats.p.rapidapi.com/getNBAGamesForPlayer'\nquerystring = {\"playerID\": \"\", \"numberOfGames\": \"\", \"season\": \"\", \"gameID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tank01-fantasy-stats.p.rapidapi.com/getNBAGamesForPlayer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tank01-fantasy-stats.p.rapidapi.com/getNBAGamesForPlayer"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tank01-fantasy-stats.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tank01-fantasy-stats.p.rapidapi.com/getNBAGamesForPlayer\"\nquerystring = {\"numberOfGames\": \"\", \"season\": \"2023\", \"playerID\": \"28268405032\", \"gameID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tank01-fantasy-stats.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tank01 Fantasy Stats",
            "api_arguments_original": [
                {
                    "name": "playerID",
                    "type": "STRING",
                    "description": "playerID required",
                    "default": "28268405032"
                },
                {
                    "name": "numberOfGames",
                    "type": "STRING",
                    "description": "use this to restrict the results to the most recent numberOfGames you give here for the parameter",
                    "default": ""
                },
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "season in format YYYY\ndefaults to current season if gameID is not listed",
                    "default": "2023"
                },
                {
                    "name": "gameID",
                    "type": "STRING",
                    "description": "use this to restrict the results to the boxscore for only one game of this player.  This increases the speed of the call.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the live and historical information for the company with ticker symbol \"AAPL\" for the past 12 months.",
        "model_answer": "requests.get(\"https://stoxx1.p.rapidapi.com/api/v1/stoxx/company/aapl/history/articles/12\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"stoxx1.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Retrieve live and historical information for publicly traded companies",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stoxx1.p.rapidapi.com/api/v1/stoxx/company/amzn/history/articles/2'\nquerystring = {\"ticker\": \"\", \"months\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stoxx1.p.rapidapi.com/api/v1/stoxx/company/amzn/history/articles/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stoxx1.p.rapidapi.com/api/v1/stoxx/company/amzn/history/articles/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stoxx1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stoxx",
            "api_arguments_original": [
                {
                    "name": "ticker",
                    "type": "string",
                    "description": "",
                    "default": "amzn"
                },
                {
                    "name": "months",
                    "type": "string",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Can you help me generate a screenshot of a website with dimensions of 800x600 pixels and in full page?",
        "model_answer": "requests.get(\"https://website-screenshot6.p.rapidapi.com/screenshot\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"website-screenshot6.p.rapidapi.com\"}, params={\"height\": \"800\", \"width\": \"600\", \"url\": \"https://rapidapi.com/marketplace\", \"fullscreen\": True})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Generate screenshots of websites with simple api, accept various parameters such as width, height, full page",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://website-screenshot6.p.rapidapi.com/screenshot'\nquerystring = {\"height\": \"\", \"width\": \"\", \"url\": \"\", \"fullscreen\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://website-screenshot6.p.rapidapi.com/screenshot\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://website-screenshot6.p.rapidapi.com/screenshot"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "website-screenshot6.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "height": "800",
                            "width": "600",
                            "url": "https://rapidapi.com/marketplace",
                            "fullscreen": true
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://website-screenshot6.p.rapidapi.com/screenshot\"\nquerystring = {\"fullscreen\": true, \"height\": \"1080\", \"width\": \"1920\", \"url\": \"https://rapidapi.com/marketplace\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"website-screenshot6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "website screenshot",
            "api_arguments_original": [
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "",
                    "default": "1080"
                },
                {
                    "name": "width",
                    "type": "STRING",
                    "description": "",
                    "default": "1920"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://rapidapi.com/marketplace"
                },
                {
                    "name": "fullscreen",
                    "type": "STRING",
                    "description": "",
                    "default": true
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to check if the postal code 1234567 is valid in Japan using the PostcodeJP-API.",
        "model_answer": "requests.get(\"https://postcodejp-api.p.rapidapi.com/postcodes\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"postcodejp-api.p.rapidapi.com\"}, params={\"postcode\":\"1234567\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Japan postal code and address. Please check https://postcode-jp.com for details.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://postcodejp-api.p.rapidapi.com/postcodes'\nquerystring = {\"postcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://postcodejp-api.p.rapidapi.com/postcodes\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://postcodejp-api.p.rapidapi.com/postcodes"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "postcodejp-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://postcodejp-api.p.rapidapi.com/postcodes\"\nquerystring = {\"postcode\": \"1000001\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"postcodejp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PostcodeJP-API",
            "api_arguments_original": [
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "postcode",
                    "default": "1000001"
                }
            ]
        }
    },
    {
        "query": "Please provide the Python function call to obtain the location data for the IP address 192.168.0.1 and log the output.",
        "model_answer": "requests.get(\"https://geoip12.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"geoip12.p.rapidapi.com\"}, params={\"ip\": \"192.168.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON or XML formats.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geoip12.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geoip12.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://geoip12.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "geoip12.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geoip12.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geoip12.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GEOIP_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you give me a Python function call to fetch a random dirty drinking question and print the response?",
        "model_answer": "requests.get(\"https://drinking1.p.rapidapi.com/questions/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"drinking1.p.rapidapi.com\"}, params={\"type\": \"dirty\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "API that provides with drinking questions and challenges.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://drinking1.p.rapidapi.com/questions/random'\nquerystring = {\"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://drinking1.p.rapidapi.com/questions/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://drinking1.p.rapidapi.com/questions/random"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "drinking1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "type": "dirty"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://drinking1.p.rapidapi.com/questions/random\"\nquerystring = {\"type\": \"dirty\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"drinking1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Drinking",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "You can choose question type from: funny, dirty.",
                    "default": "dirty"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to search for the top sports news in the US from the News API and print the response.",
        "model_answer": "requests.get(\"https://news-api14.p.rapidapi.com/top-headlines\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"news-api14.p.rapidapi.com\"}, params={\"language\": \"en\", \"category\": \"sports\", \"country\": \"us\", \"sortBy\": \"\", \"pageSize\": \"10\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Google News and Bing News Alternative. The Best API to Search News from the 2500+ Publishers Around The World. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://news-api14.p.rapidapi.com/top-headlines'\nquerystring = {\"language\": \"\", \"category\": \"\", \"country\": \"\", \"sortBy\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://news-api14.p.rapidapi.com/top-headlines\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://news-api14.p.rapidapi.com/top-headlines"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "news-api14.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://news-api14.p.rapidapi.com/top-headlines\"\nquerystring = {\"language\": \"en\", \"category\": \"sports\", \"country\": \"us\", \"sortBy\": \"\", \"pageSize\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-api14.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "News API_v2",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "en, zh-Hans, zh-Hant, id, cs, uk, he, ar, de, es-419, ja, ko, fr, it, lv, lt, ml, th, hu, nl, no, pl, pt-419, pt-150, ro, sk, sl, sv, vi, tr, el, bg, ru, sr, mr, hi, bn, ta, te",
                    "default": "en"
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "Possible options: business, science, sports, entertainment, health, technology\n\nDefault value: all categories",
                    "default": "sports"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "MY, GB, CN, TW, AU, BW, ET, KR, GH, IE, KE, LV, NA, IN, BD, TH, NZ, NG, PK, PH, SG, ZA, TZ, UG, ZW, ID, CZ, DE, AT, CH, AR, EG, CL, CO, CU, US, MX, PE, VE, LB, CA, FR, MA, SN, IT, LT, HK, JP, HU, BE, NL, NO, PL, BR, PT, RO, SK, SI, SE, VN, TR, GR, BG, RU, RS, UA, IL, AE, SA",
                    "default": "us"
                },
                {
                    "name": "sortBy",
                    "type": "ENUM",
                    "description": "Default value: published_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to get the address from the API endpoint \"https://example-api.com/getaddress\" using the requests library.",
        "model_answer": "requests.get(\"https://example-api.com/getaddress\")",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Basic Functions",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://4bro-1337x.p.rapidapi.com/getaddress'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://4bro-1337x.p.rapidapi.com/getaddress\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://4bro-1337x.p.rapidapi.com/getaddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"4bro-1337x.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "4Bro  - 1337X",
            "api_arguments_original": []
        }
    },
    {
        "query": "What is the current temperature for latitude 40.7128 and longitude -74.0060?",
        "model_answer": "requests.get(\"https://oikoweather.p.rapidapi.com/weather\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"oikoweather.p.rapidapi.com\"}, params={\"lat\": 40.7128, \"lon\": -74.0060, \"param\": \"temperature\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Hourly time-series weather data for any location from 1950",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://oikoweather.p.rapidapi.com/weather'\nquerystring = {\"start\": \"\", \"lat\": \"\", \"param\": \"\", \"lon\": \"\", \"end\": \"\", \"freq\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://oikoweather.p.rapidapi.com/weather\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://oikoweather.p.rapidapi.com/weather"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "oikoweather.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://oikoweather.p.rapidapi.com/weather\"\nquerystring = {\"freq\": \"D\", \"start\": \"'2010-01-01'\", \"lat\": \"23.3\", \"param\": \"temperature\", \"lon\": \"114.2\", \"end\": \"'2019-12-31'\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"oikoweather.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OikoWeather",
            "api_arguments_original": [
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "",
                    "default": "'2010-01-01'"
                },
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "",
                    "default": "23.3"
                },
                {
                    "name": "param",
                    "type": "STRING",
                    "description": "",
                    "default": "temperature"
                },
                {
                    "name": "lon",
                    "type": "NUMBER",
                    "description": "",
                    "default": "114.2"
                },
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "",
                    "default": "'2019-12-31'"
                },
                {
                    "name": "freq",
                    "type": "STRING",
                    "description": "",
                    "default": "D"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the location and provider details for the mobile number 1234567890 using the Indian Mobile info API.",
        "model_answer": "requests.get(\"https://ajith-indian-mob-info.p.rapidapi.com/employees\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"ajith-indian-mob-info.p.rapidapi.com\"}, params={\"mobno\": \"1234567890\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Indian Mobile Info API is a powerful tool for those who need quick and easy access to important information about Indian mobile numbers. With this API, you can enter any 10 digit Indian mobile number and get detailed information such as location, provider, type, and more. This API is especially useful for businesses, researchers, and anyone else who needs to gather data on Indian mobile numbers.\nRecently, on Aug-23-2018, this API has been updated and bugs fixed, ensuring that the data pro...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ajith-indian-mob-info.p.rapidapi.com/employees'\nquerystring = {\"mobno\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ajith-indian-mob-info.p.rapidapi.com/employees\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ajith-indian-mob-info.p.rapidapi.com/employees"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ajith-indian-mob-info.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "mobno": "1234567890"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ajith-indian-mob-info.p.rapidapi.com/employees\"\nquerystring = {\"mobno\": \"9090909090\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ajith-indian-mob-info.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indian Mobile info",
            "api_arguments_original": [
                {
                    "name": "mobno",
                    "type": "NUMBER",
                    "description": "Enter your 10 digit mobile number.",
                    "default": "9090909090"
                }
            ]
        }
    },
    {
        "query": "Get the per capita income for the IP address 10.0.0.1 in the US.",
        "model_answer": "requests.get(\"https://ip-to-income.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-to-income.p.rapidapi.com\"}, params={\"ip\": \"10.0.0.1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get the per capita income USD/yr with the IP address in the US. Useful in LTV & user valuation modeling",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-to-income.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-to-income.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ip-to-income.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ip-to-income.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ip": "10.0.0.1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-to-income.p.rapidapi.com/\"\nquerystring = {\"ip\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-to-income.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP to Income",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to get the soundtracks for the movie with the id \"tt1234567\" using the IMDb API.",
        "model_answer": "requests.get(\"https://imdb8.p.rapidapi.com/title/get-sound-tracks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"imdb8.p.rapidapi.com\"}, params={\"tconst\": \"tt1234567\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://imdb8.p.rapidapi.com/title/get-sound-tracks'\nquerystring = {\"tconst\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://imdb8.p.rapidapi.com/title/get-sound-tracks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://imdb8.p.rapidapi.com/title/get-sound-tracks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "imdb8.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "tconst": "tt1234567"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://imdb8.p.rapidapi.com/title/get-sound-tracks\"\nquerystring = {\"tconst\": \"tt0944947\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imdb8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IMDb",
            "api_arguments_original": [
                {
                    "name": "tconst",
                    "type": "STRING",
                    "description": "You need to extract the value started with \\\"tt\\\" of id field returned from .../title/auto-complete or .../title/find endpoint. Ex : tt0944947",
                    "default": "tt0944947"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with details about the game with the ID 90f8c0f01b94340794adbb52 using the Unigamer API?",
        "model_answer": "requests.get(\"https://unigamer-api2.p.rapidapi.com/v1/games-service/games/90f8c0f01b94340794adbb52\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"unigamer-api2.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "We provide a REST API endpoint which can be used for free for up to 1000 requests per month",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://unigamer-api2.p.rapidapi.com/v1/games-service/games/60b3dad01b94340794adbb52'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://unigamer-api2.p.rapidapi.com/v1/games-service/games/60b3dad01b94340794adbb52\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://unigamer-api2.p.rapidapi.com/v1/games-service/games/90f8c0f01b94340794adbb52"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "unigamer-api2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://unigamer-api2.p.rapidapi.com/v1/games-service/games/60b3dad01b94340794adbb52\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"unigamer-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Unigamer API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the synonyms for the word \"joyful\" in Hindi language.",
        "model_answer": "requests.get(\"https://gruite.p.rapidapi.com/synonyms\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"gruite.p.rapidapi.com\"}, params={\"language\": \"hindi\", \"word\": \"joyful\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Get meanings and synonyms for words in vernacular language",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gruite.p.rapidapi.com/synonyms'\nquerystring = {\"language\": \"\", \"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gruite.p.rapidapi.com/synonyms\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://gruite.p.rapidapi.com/synonyms"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "gruite.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "language": "hindi",
                            "word": "joyful"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gruite.p.rapidapi.com/synonyms\"\nquerystring = {\"language\": \"hindi\", \"word\": \"\u092c\u093e\u091c\u093e\u0930\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gruite.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "gruite",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "language of the word",
                    "default": "hindi"
                },
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "word",
                    "default": "\u092c\u093e\u091c\u093e\u0930"
                }
            ]
        }
    },
    {
        "query": "Using the \"Forecast crypto and fiat currency exchange rates\" API, I would like to get the exchange rate forecast between the currencies USD and EUR.",
        "model_answer": "requests.get(\"https://forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com/api/get_cross?currency=usd&currency_cross=eur\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Exchange rates forecast for fiat and crypto. Currency converter with forecast and historical data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com/api/get_cross?currency=cny&currency_cross=gbp'\nquerystring = {\"currency\": \"\", \"currency_cross\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com/api/get_cross?currency=cny&currency_cross=gbp\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com/api/get_cross?currency=cny&currency_cross=gbp\"\nquerystring = {\"currency\": \"cny\", \"currency_cross\": \"gbp\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Forecast crypto and fiat currency exchange rates",
            "api_arguments_original": [
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "",
                    "default": "cny"
                },
                {
                    "name": "currency_cross",
                    "type": "STRING",
                    "description": "",
                    "default": "gbp"
                }
            ]
        }
    },
    {
        "query": "Please fetch the EPA Superfunds within a 10-mile radius of lat 34.0522 and lng -118.2437.",
        "model_answer": "requests.get(\"https://epa-superfunds.p.rapidapi.com/superfund\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"epa-superfunds.p.rapidapi.com\"}, params={\"radius\": \"10\", \"lat\": \"34.0522\", \"lng\": \"-118.2437\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "An intuitive endpoint to query the EPA Superfunds list. Query epaId, epaIdLink, frsLink, name, address, city, state, zipcode, county, federalFacilityStatus, nplStatus, lat, lng.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://epa-superfunds.p.rapidapi.com/superfund'\nquerystring = {\"radius\": \"\", \"lat\": \"\", \"lng\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://epa-superfunds.p.rapidapi.com/superfund\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://epa-superfunds.p.rapidapi.com/superfund"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "epa-superfunds.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "radius": "10",
                            "lat": "34.0522",
                            "lng": "-118.2437"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://epa-superfunds.p.rapidapi.com/superfund\"\nquerystring = {\"radius\": \"2\", \"lat\": \"37.391935\", \"lng\": \"-122.079515\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"epa-superfunds.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "EPA Superfunds",
            "api_arguments_original": [
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "",
                    "default": "2"
                },
                {
                    "name": "lat",
                    "type": "STRING",
                    "description": "",
                    "default": "37.391935"
                },
                {
                    "name": "lng",
                    "type": "STRING",
                    "description": "",
                    "default": "-122.079515"
                }
            ]
        }
    },
    {
        "query": "I want to create a chatbot using the AION API and print the response.",
        "model_answer": "requests.get(\"https://aion.p.rapidapi.com/resources/bot/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"aion.p.rapidapi.com\"}).json()",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Create and chat with your own chatGPT-like chatbots, with personalized instructions and automatic translations.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aion.p.rapidapi.com/resources/bot/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aion.p.rapidapi.com/resources/bot/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://aion.p.rapidapi.com/resources/bot/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "aion.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aion.p.rapidapi.com/resources/bot/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aion.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AION",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if \"test@example.com\" is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"test@example.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "FREE 20,000 , Email Debounce , Our bounce email API is a powerful tool that helps you manage your email deliverability by detecting, monitoring, and handling bounced emails from a range of ISPs. With our API, you can ensure your messages are delivered effectively, and that your sender reputation stays in good standing. Whether you're a small business or a large enterprise, our API is designed to simplify your email management and help you achieve better email performance. Contact us today to ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://emailbounceapi.p.rapidapi.com/email/mike.2023@gmail.com'\nquerystring = {\"email_string\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://emailbounceapi.p.rapidapi.com/email/mike.2023@gmail.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://emailbounceapi.p.rapidapi.com/email/mike.2023@gmail.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"emailbounceapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "EmailBounceAPI",
            "api_arguments_original": [
                {
                    "name": "email_string",
                    "type": "string",
                    "description": "",
                    "default": "mike.2023@gmail.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get live data for the item with ASIN B07WDSD7G7 on Amazon in the US marketplace using the RapidAPI service?",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B07WDSD7G7\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Test purpose",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gg43.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gg43.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://amazon-live-data.p.rapidapi.com/getasin/us/B07WDSD7G7"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "amazon-live-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gg43.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gg43.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GG",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the Python function call to obtain the list of all traffic cameras using the Tsaboin Cams API?",
        "model_answer": "requests.get(\"https://tsaboin-tsaboin-cams-v1.p.rapidapi.com/listall.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"tsaboin-tsaboin-cams-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "With our API, you can extend your projects (check terms and conditions for more details) by connecting to our servers for traffic details around bus-stops and for live traffic cams.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tsaboin-tsaboin-cams-v1.p.rapidapi.com/listall.json'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tsaboin-tsaboin-cams-v1.p.rapidapi.com/listall.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tsaboin-tsaboin-cams-v1.p.rapidapi.com/listall.json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tsaboin-tsaboin-cams-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tsaboin-tsaboin-cams-v1.p.rapidapi.com/listall.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tsaboin-tsaboin-cams-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tsaboin Cams",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve the latest chapter of the novel with the novel ID \"123456\" from the Web - Novel API.",
        "model_answer": "requests.get(\"https://web-novel-api.p.rapidapi.com/novel/fa102782f605163ddc1b3341709fd70221b4e23b/chapter/123456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"web-novel-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Looking for the latest and greatest in Korean, Chinese, and Japanese web novels? Look no further than Web - Novel API! Our platform offers access to thousands of titles and millions of chapters, all translated into English for your reading pleasure. We provide metadata, ratings, and other important information to help you find the perfect web novel. Our content is carefully crawled and formatted using Mozilla Readability to ensure the best reading experience possible. Join us today and discov...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://web-novel-api.p.rapidapi.com/novel/fa102782f605163ddc1b3341709fd70221b4e23b/chapter/aHR0cHM6Ly93d3cucmVhZGxpZ2h0bm92ZWwubWUvZ29ibGluLWtpbmdkb20vdm9sdW1lLTEvY2hhcHRlci1wcm9sb2d1ZQ=='\nquerystring = {\"chapter_id\": \"\", \"novel_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://web-novel-api.p.rapidapi.com/novel/fa102782f605163ddc1b3341709fd70221b4e23b/chapter/aHR0cHM6Ly93d3cucmVhZGxpZ2h0bm92ZWwubWUvZ29ibGluLWtpbmdkb20vdm9sdW1lLTEvY2hhcHRlci1wcm9sb2d1ZQ==\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://web-novel-api.p.rapidapi.com/novel/fa102782f605163ddc1b3341709fd70221b4e23b/chapter/123456"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "web-novel-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://web-novel-api.p.rapidapi.com/novel/fa102782f605163ddc1b3341709fd70221b4e23b/chapter/aHR0cHM6Ly93d3cucmVhZGxpZ2h0bm92ZWwubWUvZ29ibGluLWtpbmdkb20vdm9sdW1lLTEvY2hhcHRlci1wcm9sb2d1ZQ==\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"web-novel-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Web - Novel API",
            "api_arguments_original": [
                {
                    "name": "chapter_id",
                    "type": "string",
                    "description": "",
                    "default": "aHR0cHM6Ly93d3cucmVhZGxpZ2h0bm92ZWwubWUvZ29ibGluLWtpbmdkb20vdm9sdW1lLTEvY2hhcHRlci1wcm9sb2d1ZQ=="
                },
                {
                    "name": "novel_id",
                    "type": "string",
                    "description": "",
                    "default": "fa102782f605163ddc1b3341709fd70221b4e23b"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to get live updates on the prices of Bitcoin and Ethereum using the Crypto Update Live API.",
        "model_answer": "requests.get(\"https://crypto-update-live.p.rapidapi.com/multiplecoins/bitcoin_ethereum\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"crypto-update-live.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "This API gives live updates about cryptocurrency prices and the latest news regarding it.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crypto-update-live.p.rapidapi.com/multiplecoins/bitcoin_ethereum'\nquerystring = {\"crypto1-name_crypto2-name_crypto\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crypto-update-live.p.rapidapi.com/multiplecoins/bitcoin_ethereum\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crypto-update-live.p.rapidapi.com/multiplecoins/bitcoin_ethereum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-update-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crypto Update Live",
            "api_arguments_original": [
                {
                    "name": "crypto1-name_crypto2-name_crypto",
                    "type": "string",
                    "description": "",
                    "default": "bitcoin_ethereum"
                }
            ]
        }
    },
    {
        "query": "I want to generate a new token for the Unlimited Language API.",
        "model_answer": "requests.get(\"https://token-api.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"token-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Generate a new token for Unlimited Language API. Token is only valid for ~5 minuts, so it has to be generated frequently",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://token-api.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://token-api.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://token-api.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"token-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Token API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the messages for the email address p1amvpvxfh@bestparadize.com using the Temp Mail API.",
        "model_answer": "requests.get(\"https://temp-mail44.p.rapidapi.com/api/v3/email/p1amvpvxfh@bestparadize.com/messages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"temp-mail44.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Create a temp mail",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://temp-mail44.p.rapidapi.com/api/v3/email/p1amvpvxfh@bestparadize.com/messages'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://temp-mail44.p.rapidapi.com/api/v3/email/p1amvpvxfh@bestparadize.com/messages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://temp-mail44.p.rapidapi.com/api/v3/email/p1amvpvxfh@bestparadize.com/messages"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "temp-mail44.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://temp-mail44.p.rapidapi.com/api/v3/email/p1amvpvxfh@bestparadize.com/messages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"temp-mail44.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Temp Mail",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "",
                    "default": "p1amvpvxfh@bestparadize.com"
                }
            ]
        }
    },
    {
        "query": "I would like to search for images of cats on Google and retrieve the first 5 results.",
        "model_answer": "requests.get(\"https://google-search72.p.rapidapi.com/imagesearch\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"google-search72.p.rapidapi.com\"}, params={\"q\": \"cats\", \"num\": 5})",
        "original": {
            "domain": "Storage",
            "framework": "RapidAPI",
            "functionality": "API used to retrieve data from Google search results in real time. Support web search and image search",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://google-search72.p.rapidapi.com/imagesearch'\nquerystring = {\"q\": \"\", \"start\": \"\", \"num\": \"\", \"gl\": \"\", \"lr\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://google-search72.p.rapidapi.com/imagesearch\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://google-search72.p.rapidapi.com/imagesearch"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "google-search72.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "cats",
                            "num": 5
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://google-search72.p.rapidapi.com/imagesearch\"\nquerystring = {\"q\": \"Word Cup\", \"start\": \"0\", \"num\": \"10\", \"gl\": \"us\", \"lr\": \"lang_en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-search72.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google Search_v3",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "Word Cup"
                },
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "The index of the first result to return.",
                    "default": "0"
                },
                {
                    "name": "num",
                    "type": "NUMBER",
                    "description": "Number of search results to return.\nValid values are integers between 1 and 20, inclusive",
                    "default": "10"
                },
                {
                    "name": "gl",
                    "type": "STRING",
                    "description": "The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value.",
                    "default": "us"
                },
                {
                    "name": "lr",
                    "type": "STRING",
                    "description": "Restricts the search to documents written in a particular language",
                    "default": "lang_en"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the available language codes for the Language Detection_v2 API.",
        "model_answer": "requests.get(\"https://language-detection5.p.rapidapi.com/get_language_codes\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"language-detection5.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Detection of all possible languages with probability scores.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://language-detection5.p.rapidapi.com/get_language_codes'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://language-detection5.p.rapidapi.com/get_language_codes\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://language-detection5.p.rapidapi.com/get_language_codes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"language-detection5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Language Detection_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to create a fake request with the data {\"name\". ",
        "model_answer": "requests.get(\"https://request-boomerang.p.rapidapi.com/query-json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"request-boomerang.p.rapidapi.com\"}, params={\"data\": \"{\\\"name\\\"\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Easily create fake requests with your data, and send what you need to receive.  RequestBoomerang will help you to test, prototype, and mock, with real data. Give a boost to your frontend development without waiting for the backend.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://request-boomerang.p.rapidapi.com/query-json'\nquerystring = {\"data\": \"\", \"sleep\": \"\", \"return\": \"\", \"status\": \"\", \"shuffle\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://request-boomerang.p.rapidapi.com/query-json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://request-boomerang.p.rapidapi.com/query-json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "request-boomerang.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "data": "{\"name\""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://request-boomerang.p.rapidapi.com/query-json\"\nquerystring = {\"sleep\": \"\", \"return\": \"\", \"status\": \"\", \"shuffle\": \"\", \"data\": \"{\\\"a\\\":true,\\\"b\\\":[true,1,\\\"s\\\",null],\\\"o\\\":{\\\"a\\\":1}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"request-boomerang.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Request Boomerang",
            "api_arguments_original": [
                {
                    "name": "data",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\"a\":true,\"b\":[true,1,\"s\",null],\"o\":{\"a\":1}}"
                },
                {
                    "name": "sleep",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "return",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "status",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "shuffle",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please check if the record for the most consecutive vertical push-ups has any details?",
        "model_answer": "requests.get(\"https://guinness-world-records-api.p.rapidapi.com/guinness/recordDetails\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"guinness-world-records-api.p.rapidapi.com\"}, params={\"href\": \"/world-records/82145-most-consecutive-vertical-push-ups\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "An API To Fetch World Records Based On A Term, Or Details For A Specific Record.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://guinness-world-records-api.p.rapidapi.com/guinness/recordDetails'\nquerystring = {\"href\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://guinness-world-records-api.p.rapidapi.com/guinness/recordDetails\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://guinness-world-records-api.p.rapidapi.com/guinness/recordDetails"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "guinness-world-records-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "href": "/world-records/82145-most-consecutive-vertical-push-ups"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://guinness-world-records-api.p.rapidapi.com/guinness/recordDetails\"\nquerystring = {\"href\": \"/world-records/82145-most-consecutive-vertical-push-ups\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"guinness-world-records-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Guinness-World-Records-Api",
            "api_arguments_original": [
                {
                    "name": "href",
                    "type": "STRING",
                    "description": "",
                    "default": "/world-records/82145-most-consecutive-vertical-push-ups"
                }
            ]
        }
    },
    {
        "query": "Please provide me the current status of the Address Monitor service.",
        "model_answer": "requests.get(\"https://address-monitor.p.rapidapi.com/service-status\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"address-monitor.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Monitor EVM network address transactions and get prompt and reliable webhook call with transaction details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://address-monitor.p.rapidapi.com/service-status'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://address-monitor.p.rapidapi.com/service-status\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://address-monitor.p.rapidapi.com/service-status\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"address-monitor.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Address Monitor",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to get the details of a pet with ID 456 and log the output.",
        "model_answer": "requests.get(\"https://publicapitestinginbox.p.rapidapi.com/pet/456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"publicapitestinginbox.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "PublicAPITestingInbox",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://publicapitestinginbox.p.rapidapi.com/pet/{petId}'\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://publicapitestinginbox.p.rapidapi.com/pet/{petId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://publicapitestinginbox.p.rapidapi.com/pet/456"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "publicapitestinginbox.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://publicapitestinginbox.p.rapidapi.com/pet/{petId}\"\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"publicapitestinginbox.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PublicAPITestingInbox",
            "api_arguments_original": [
                {
                    "name": "petId",
                    "type": "NUMBER",
                    "description": "ID of pet to return",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get a list of movies with the genre \"action\" and a minimum rating of 8 from the YTS.am Torrent API?",
        "model_answer": "requests.get(\"https://yts-am-torrent.p.rapidapi.com/list_movies.jsonp\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yts-am-torrent.p.rapidapi.com\"}, params={\"genre\": \"action\", \"minimum_rating\": 8})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "This is a lightweight web service, (REST interface), which provides an easy way to access the YTS website.  An API (Application programming interface) is a protocol intended to be used as an interface by software components to communicate with each other.  Our API supports many methods, so there should not be a problem coding some nice applications. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yts-am-torrent.p.rapidapi.com/list_movies.jsonp'\nquerystring = {\"genre\": \"\", \"limit\": \"\", \"query_term\": \"\", \"quality\": \"\", \"minimum_rating\": \"\", \"with_rt_ratings\": \"\", \"page\": \"\", \"sort_by\": \"\", \"order_by\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yts-am-torrent.p.rapidapi.com/list_movies.jsonp\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://yts-am-torrent.p.rapidapi.com/list_movies.jsonp"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "yts-am-torrent.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "genre": "action",
                            "minimum_rating": 8
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yts-am-torrent.p.rapidapi.com/list_movies.jsonp\"\nquerystring = {\"genre\": \"\", \"limit\": \"\", \"query_term\": \"\", \"quality\": \"\", \"minimum_rating\": \"\", \"with_rt_ratings\": \"\", \"page\": \"\", \"sort_by\": \"\", \"order_by\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yts-am-torrent.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YTS.am Torrent",
            "api_arguments_original": [
                {
                    "name": "genre",
                    "type": "STRING",
                    "description": "\tUsed to filter by a given genre (See http://www.imdb.com/genre/ for full list)",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Integer between 1 - 50 (inclusive): The limit of results per page that has been set",
                    "default": ""
                },
                {
                    "name": "query_term",
                    "type": "STRING",
                    "description": "Used for movie search, matching on: Movie Title/IMDb Code, Actor Name/IMDb Code, Director Name/IMDb Code",
                    "default": ""
                },
                {
                    "name": "quality",
                    "type": "STRING",
                    "description": "String (720p, 1080p, 3D): \tUsed to filter by a given quality",
                    "default": ""
                },
                {
                    "name": "minimum_rating",
                    "type": "NUMBER",
                    "description": "\tInteger between 0 - 9 (inclusive): \tUsed to filter movie by a given minimum IMDb rating",
                    "default": ""
                },
                {
                    "name": "with_rt_ratings",
                    "type": "BOOLEAN",
                    "description": "Returns the list with the Rotten Tomatoes rating included",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Integer (Unsigned): Used to see the next page of movies, eg limit=15 and page=2 will show you movies 15-30",
                    "default": ""
                },
                {
                    "name": "sort_by",
                    "type": "STRING",
                    "description": "String (title, year, rating, peers, seeds, download_count, like_count, date_added): Sorts the results by choosen value",
                    "default": ""
                },
                {
                    "name": "order_by",
                    "type": "STRING",
                    "description": "String (desc, asc): Orders the results by either Ascending or Descending order",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get a response from the AI Chatbot API for the message \"How are you?\"?",
        "model_answer": "requests.get(\"https://ai-chatbot.p.rapidapi.com/chat/free\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ai-chatbot.p.rapidapi.com\"}, params={\"uid\": \"user1\", \"message\": \"How are you?\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "An AI Chatbot for your aplication.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ai-chatbot.p.rapidapi.com/chat/free'\nquerystring = {\"uid\": \"\", \"message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ai-chatbot.p.rapidapi.com/chat/free\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ai-chatbot.p.rapidapi.com/chat/free"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ai-chatbot.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "uid": "user1",
                            "message": "How are you?"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ai-chatbot.p.rapidapi.com/chat/free\"\nquerystring = {\"uid\": \"user1\", \"message\": \"What's your name?\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-chatbot.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AI Chatbot",
            "api_arguments_original": [
                {
                    "name": "uid",
                    "type": "STRING",
                    "description": "User Identification for personalised response and response continuity.",
                    "default": "user1"
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "Message that the chatbot has to respond to.",
                    "default": "What's your name?"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the historical trading data for BTC/USDT on the Binance spot market for the last 3 months.",
        "model_answer": "requests.get(\"https://qvantana.p.rapidapi.com/2crows\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"qvantana.p.rapidapi.com\"}, params={\"symbol\":\"btcusdt\", \"exchange\":\"binance\", \"market\":\"spot\", \"interval\":\"1m\", \"from\":\"UNIX_TIMESTAMP_OF_3_MONTHS_AGO\", \"backtracks\":\"1\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Our free API provides real-time and historical crypto trading data from 4 major exchanges, enriched with over 30 customizable trading indicators. It offers up to 5000 rows of data in a single request, ensuring comprehensive market analysis. The API is user-friendly and offers improved data fetching capabilities compared to standard exchange documentation, making it an essential tool for traders and developers alike.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qvantana.p.rapidapi.com/2crows'\nquerystring = {\"symbol\": \"\", \"exchange\": \"\", \"market\": \"\", \"interval\": \"\", \"from\": \"\", \"backtracks\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qvantana.p.rapidapi.com/2crows\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://qvantana.p.rapidapi.com/2crows"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "qvantana.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "symbol": "btcusdt",
                            "exchange": "binance",
                            "market": "spot",
                            "interval": "1m",
                            "from": "UNIX_TIMESTAMP_OF_3_MONTHS_AGO",
                            "backtracks": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qvantana.p.rapidapi.com/2crows\"\nquerystring = {\"symbol\": \"btcusdt\", \"exchange\": \"binance\", \"market\": \"spot\", \"interval\": \"1m\", \"from\": \"1683895800\", \"backtracks\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qvantana.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Qvantana",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "btcusdt"
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": "binance"
                },
                {
                    "name": "market",
                    "type": "STRING",
                    "description": "Available markets are:\n\nspot\nusdt-perpetual\ninverse-perpetual",
                    "default": "spot"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "",
                    "default": "1m"
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "",
                    "default": "1683895800"
                },
                {
                    "name": "backtracks",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please shorten the URL \"www.example.com\" using the Noly URL Shortener API.",
        "model_answer": "requests.get(\"https://noly-url-shortener.p.rapidapi.com/shorten/www.example.com\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"noly-url-shortener.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Shorten a long url to tiny link",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://noly-url-shortener.p.rapidapi.com/shorten/www.google.com'\nquerystring = {\"link\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://noly-url-shortener.p.rapidapi.com/shorten/www.google.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://noly-url-shortener.p.rapidapi.com/shorten/www.example.com"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "noly-url-shortener.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://noly-url-shortener.p.rapidapi.com/shorten/www.google.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"noly-url-shortener.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Noly url shortener",
            "api_arguments_original": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "",
                    "default": "www.google.com"
                }
            ]
        }
    },
    {
        "query": "Please create a Python function call to shorten the following URL: \"https://www.example.com/long-url-that-needs-to-be-shortened\" using the UptoSite Link Shortener API and print the response.",
        "model_answer": "requests.get(\"https://uptosite-link-shortener.p.rapidapi.com/long/ntt-chrome\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"uptosite-link-shortener.p.rapidapi.com\"}, params={\"slug\": \"https://www.example.com/long-url-that-needs-to-be-shortened\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Link Shortener API for developers",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uptosite-link-shortener.p.rapidapi.com/long/ntt-chrome'\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uptosite-link-shortener.p.rapidapi.com/long/ntt-chrome\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://uptosite-link-shortener.p.rapidapi.com/long/ntt-chrome"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "uptosite-link-shortener.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "slug": "https://www.example.com/long-url-that-needs-to-be-shortened"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uptosite-link-shortener.p.rapidapi.com/long/ntt-chrome\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uptosite-link-shortener.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "UptoSite Link Shortener",
            "api_arguments_original": [
                {
                    "name": "slug",
                    "type": "string",
                    "description": "",
                    "default": "ntt-chrome"
                }
            ]
        }
    },
    {
        "query": "Convert the Instagram user ID 123456789 to a username.",
        "model_answer": "requests.get(\"https://instagram210.p.rapidapi.com/pk_to_username\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram210.p.rapidapi.com\"}, params={\"pk\": \"123456789\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Instagram most needed endpoints",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram210.p.rapidapi.com/pk_to_username'\nquerystring = {\"pk\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram210.p.rapidapi.com/pk_to_username\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instagram210.p.rapidapi.com/pk_to_username"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instagram210.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram210.p.rapidapi.com/pk_to_username\"\nquerystring = {\"pk\": \"177402262\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram210.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram_v2",
            "api_arguments_original": [
                {
                    "name": "pk",
                    "type": "STRING",
                    "description": "",
                    "default": "177402262"
                }
            ]
        }
    },
    {
        "query": "I want to get a list of philosophers from the Philosophers API and log the output.",
        "model_answer": "requests.get(\"https://list-of-philosophers.p.rapidapi.com/Philosopher\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"list-of-philosophers.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "With the Philosophers API, you can learn about philosophers such as Socrates, Plato, and Aristotle, as well as lesser-known but equally important thinkers. You can access information on the philosophies of these thinkers, as well as the historical context in which they lived.  This API is perfect for anyone looking to build applications centered around philosophy, history, or culture. Whether you're developing a website, a mobile app, or a game, the Philosophers API by Pizza API will provide ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://list-of-philosophers.p.rapidapi.com/Philosopher'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://list-of-philosophers.p.rapidapi.com/Philosopher\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://list-of-philosophers.p.rapidapi.com/Philosopher\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"list-of-philosophers.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "List oF Philosophers",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to find the zip codes for a specific area in Mexico, using the zip code '12345'.",
        "model_answer": "requests.get(\"https://mexico-zip-codes.p.rapidapi.com/buscar/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mexico-zip-codes.p.rapidapi.com\"}, params={\"codigo_postal\": \"12345\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mexico-zip-codes.p.rapidapi.com/buscar/'\nquerystring = {\"codigo_postal\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mexico-zip-codes.p.rapidapi.com/buscar/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://mexico-zip-codes.p.rapidapi.com/buscar/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "mexico-zip-codes.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "codigo_postal": "12345"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mexico-zip-codes.p.rapidapi.com/buscar/\"\nquerystring = {\"codigo_postal\": \"646\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mexico-zip-codes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mexico ZIP Codes",
            "api_arguments_original": [
                {
                    "name": "codigo_postal",
                    "type": "STRING",
                    "description": "Part of a zip code",
                    "default": "646"
                }
            ]
        }
    },
    {
        "query": "Check if the MAC address 90:e2:ba:f5:11:9d is valid using the MAC Address to Manufacturer API.",
        "model_answer": "requests.get(\"https://mac-address-to-manufacturer.p.rapidapi.com/maclookup/90-e2-ba-f5-11-9d\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mac-address-to-manufacturer.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "MAC Address Lookup to find the hardware manufacturer and its postal address of a specific MAC Address",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mac-address-to-manufacturer.p.rapidapi.com/maclookup/14-AB-C5-D5-DA-F9'\nquerystring = {\"mac_number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mac-address-to-manufacturer.p.rapidapi.com/maclookup/14-AB-C5-D5-DA-F9\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mac-address-to-manufacturer.p.rapidapi.com/maclookup/14-AB-C5-D5-DA-F9\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mac-address-to-manufacturer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MAC Address to Manufacturer",
            "api_arguments_original": [
                {
                    "name": "mac_number",
                    "type": "STRING",
                    "description": "MAC Address Number to Find Manufacturer",
                    "default": "14-AB-C5-D5-DA-F9"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the car models available in the veiculos-api?",
        "model_answer": "requests.get(\"https://veiculos-api.p.rapidapi.com/carros\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"veiculos-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Tabela FIPE - Busca por marca, modelo e vers\u00e3o.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://veiculos-api.p.rapidapi.com/carros'\nquerystring = {\"veiculo_tipo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://veiculos-api.p.rapidapi.com/carros\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://veiculos-api.p.rapidapi.com/carros\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"veiculos-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "veiculos-api",
            "api_arguments_original": [
                {
                    "name": "veiculo_tipo",
                    "type": "string",
                    "description": "",
                    "default": "carros"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the top movie news sources available from the Kubric API?",
        "model_answer": "requests.get(\"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"kubric-the-comprehensive-movie-news-api.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Stay up-to-date with Kubric, your ultimate movie news API. Access top sources, search by title or keyword, and experience visually engaging cinema updates and insights.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "kubric-the-comprehensive-movie-news-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kubric-the-comprehensive-movie-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Kubric: The Comprehensive Movie News API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide a Python function call to check if the app with dev_id \"com.example.app\" is available on Google Play Store?",
        "model_answer": "requests.get(\"https://google-play-api2.p.rapidapi.com/apps_from_developer\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"google-play-api2.p.rapidapi.com\"}, params={\"dev_id\":\"com.example.app\", \"lang\":\"en\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Detaied Google Play API. Search, Suggest, Category Search, Dev Data, App Data etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://google-play-api2.p.rapidapi.com/apps_from_developer'\nquerystring = {\"dev_id\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://google-play-api2.p.rapidapi.com/apps_from_developer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://google-play-api2.p.rapidapi.com/apps_from_developer"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "google-play-api2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "dev_id": "com.example.app",
                            "lang": "en"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://google-play-api2.p.rapidapi.com/apps_from_developer\"\nquerystring = {\"dev_id\": \"QR Code Scanner.\", \"lang\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-play-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google Play API",
            "api_arguments_original": [
                {
                    "name": "dev_id",
                    "type": "STRING",
                    "description": "",
                    "default": "QR Code Scanner."
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please provide the details for House3 and House4 in the Real Estate API.",
        "model_answer": "requests.get(\"https://real_estate_heroku.p.rapidapi.com/House1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"real_estate_heroku.p.rapidapi.com\"}, params={\"House3\": \"1\", \"House4\": \"1\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Real Estate",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://real_estate_heroku.p.rapidapi.com/House1'\nquerystring = {\"House1\": \"\", \"House2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://real_estate_heroku.p.rapidapi.com/House1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://real_estate_heroku.p.rapidapi.com/House1"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "real_estate_heroku.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "House3": "1",
                            "House4": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://real_estate_heroku.p.rapidapi.com/House1\"\nquerystring = {\"House1\": \"1\", \"House2\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"real_estate_heroku.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Real_Estate_Heroku",
            "api_arguments_original": [
                {
                    "name": "House1",
                    "type": "OBJECT",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "House2",
                    "type": "OBJECT",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the test data from the Test_v14 API?",
        "model_answer": "requests.get(\"https://test804.p.rapidapi.comimage\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test804.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "testpk",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test804.p.rapidapi.comimage'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test804.p.rapidapi.comimage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://test804.p.rapidapi.comimage"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "test804.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test804.p.rapidapi.comimage\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test804.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Test_v14",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please generate a QR code for the website \"https://www.example.com\" with a size of 512 pixels and a transparent background color.",
        "model_answer": "requests.get(\"https://webit-qr-code.p.rapidapi.com/generate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"webit-qr-code.p.rapidapi.com\"}, params={\"format\":\"png\", \"data\":\"https://www.example.com\", \"size\":\"512\", \"background_color\":\"transparent\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Generate beautiful QR Codes with custom logo, colors, gradient effects and styles with ease.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webit-qr-code.p.rapidapi.com/generate'\nquerystring = {\"format\": \"\", \"data\": \"\", \"size\": \"\", \"error_correction\": \"\", \"image_margin\": \"\", \"image_size\": \"\", \"image_id\": \"\", \"gradient\": \"\", \"color\": \"\", \"background_gradient\": \"\", \"background_color\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webit-qr-code.p.rapidapi.com/generate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://webit-qr-code.p.rapidapi.com/generate"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "webit-qr-code.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "format": "png",
                            "data": "https://www.example.com",
                            "size": "512",
                            "background_color": "transparent"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webit-qr-code.p.rapidapi.com/generate\"\nquerystring = {\"error_correction\": \"\", \"image_margin\": \"10\", \"image_size\": \"\", \"image_id\": \"f222c8be0475292b2a23a82ff93ac496\", \"gradient\": \"024bda,8572ea\", \"color\": \"\", \"background_gradient\": \"\", \"background_color\": \"transparent\", \"format\": \"\", \"data\": \"https://your-qr-code.website/here\", \"size\": \"512\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-qr-code.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webit QR Code",
            "api_arguments_original": [
                {
                    "name": "format",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "https://your-qr-code.website/here"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "",
                    "default": "512"
                },
                {
                    "name": "error_correction",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image_margin",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                },
                {
                    "name": "image_size",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "",
                    "default": "f222c8be0475292b2a23a82ff93ac496"
                },
                {
                    "name": "gradient",
                    "type": "STRING",
                    "description": "",
                    "default": "024bda,8572ea"
                },
                {
                    "name": "color",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "background_gradient",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "background_color",
                    "type": "STRING",
                    "description": "",
                    "default": "transparent"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with container tracking information for tracking ID 12345abc?",
        "model_answer": "requests.get(\"https://create-container-tracking.p.rapidapi.com/tracking/12345abc\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"create-container-tracking.p.rapidapi.com\"})",
        "original": {
            "domain": "Logistics",
            "framework": "RapidAPI",
            "functionality": "User will be able to initiate the container tracking using this API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://create-container-tracking.p.rapidapi.com/tracking/6045e2f44e1b233199a5e77a'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://create-container-tracking.p.rapidapi.com/tracking/6045e2f44e1b233199a5e77a\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://create-container-tracking.p.rapidapi.com/tracking/12345abc"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "create-container-tracking.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://create-container-tracking.p.rapidapi.com/tracking/6045e2f44e1b233199a5e77a\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"create-container-tracking.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Create Container Tracking",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "6045e2f44e1b233199a5e77a"
                }
            ]
        }
    },
    {
        "query": "I want to check if the domain mydomain.com is available.",
        "model_answer": "requests.get(\"https://community-viewdns.p.rapidapi.com/whois\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"community-viewdns.p.rapidapi.com\"}, params={\"domain\": \"mydomain.com\", \"output\":\"json\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Your one source for DNS related tools! dns, info, reverse ip, pagerank, portscan, port scan, lookup, records, whois, ipwhois, dnstools, web hosting, hosting, traceroute, dns report, dnsreport, ip location, ip location finder, spam, spam database, dnsbl, propagation, dns propagation checker, checker, china, chinese, firewall, great firewall, is my site down, is site down, site down, down, dns propagate",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-viewdns.p.rapidapi.com/whois'\nquerystring = {\"domain\": \"\", \"output\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-viewdns.p.rapidapi.com/whois\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://community-viewdns.p.rapidapi.com/whois"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "community-viewdns.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domain": "mydomain.com",
                            "output": "json"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-viewdns.p.rapidapi.com/whois\"\nquerystring = {\"domain\": \"\", \"output\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-viewdns.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ViewDNS",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "the domain to perform a whois lookup on",
                    "default": ""
                },
                {
                    "name": "output",
                    "type": "STRING",
                    "description": "the output format required ('xml' or 'json')",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get data for a product with the ID \"67890\" using the AmazonAPI.",
        "model_answer": "requests.get(\"https://amazonapi2.p.rapidapi.com/products/67890\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"amazonapi2.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "ef",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazonapi2.p.rapidapi.com/products/{productId}'\nquerystring = {\"productId\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazonapi2.p.rapidapi.com/products/{productId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazonapi2.p.rapidapi.com/products/{productId}\"\nquerystring = {\"productId\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazonapi2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AmazonAPI",
            "api_arguments_original": [
                {
                    "name": "productId",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to fetch car data for cars with page number 5, limit 50, type \"hatchback\", make \"Honda\", and year \"2021\".",
        "model_answer": "requests.get(\"https://car-data1.p.rapidapi.com/cars\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"car-data1.p.rapidapi.com\"}, params={\"page\": \"5\", \"limit\": \"50\", \"type\": \"hatchback\", \"make\": \"Honda\", \"year\": \"2021\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Use this API to pull relevant automobile data such as the car make, model, type, and year.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://car-data1.p.rapidapi.com/cars'\nquerystring = {\"page\": \"\", \"limit\": \"\", \"type\": \"\", \"model\": \"\", \"make\": \"\", \"year\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://car-data1.p.rapidapi.com/cars\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://car-data1.p.rapidapi.com/cars"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "car-data1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "page": "5",
                            "limit": "50",
                            "type": "hatchback",
                            "make": "Honda",
                            "year": "2021"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://car-data1.p.rapidapi.com/cars\"\nquerystring = {\"page\": \"0\", \"type\": \"\", \"model\": \"\", \"make\": \"\", \"year\": \"\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Car Data_v2",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "10"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve all the employee details from the database using the provided API endpoint and headers.",
        "model_answer": "requests.get(\"https://testapi217.p.rapidapi.com/employees/all\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"testapi217.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "test api2",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testapi217.p.rapidapi.com/employees/all'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testapi217.p.rapidapi.com/employees/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"testapi217.p.rapidapi.com\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testapi217.p.rapidapi.com/employees/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testapi217.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "testapi2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the inventory of films and log the output.",
        "model_answer": "requests.get(\"https://films2.p.rapidapi.com/inventory\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"films2.p.rapidapi.com\"}, params={\"searchString\": \"\", \"limit\": 0, \"skip\": 0})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "Films",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://films2.p.rapidapi.com/inventory'\nquerystring = {\"searchString\": \"\", \"limit\": \"\", \"skip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://films2.p.rapidapi.com/inventory\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://films2.p.rapidapi.com/inventory"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "films2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "searchString": "",
                            "limit": 0,
                            "skip": 0
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://films2.p.rapidapi.com/inventory\"\nquerystring = {\"searchString\": \"string\", \"limit\": 0, \"skip\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"films2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Films",
            "api_arguments_original": [
                {
                    "name": "searchString",
                    "type": "STRING",
                    "description": "pass an optional search string for looking up inventory",
                    "default": "string"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "maximum number of records to return",
                    "default": 0
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "number of records to skip for pagination",
                    "default": 0
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call using the Pricer API to find the real-time price comparison of Samsung phones and store the response in a variable called \"price_comparison\".",
        "model_answer": "price_comparison = requests.get(\"https://pricer.p.rapidapi.com/str\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"pricer.p.rapidapi.com\"}, params={\"q\": \"Samsung\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "real time price comparison api ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pricer.p.rapidapi.com/str'\nquerystring = {\"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pricer.p.rapidapi.com/str\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pricer.p.rapidapi.com/str"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pricer.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pricer.p.rapidapi.com/str\"\nquerystring = {\"q\": \"iphone\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pricer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pricer",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "iphone"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the monthly search volume, keyword difficulty, and competition details for the keyword \"social media marketing\" on YouTube?",
        "model_answer": "requests.get(\"https://keyword-research-for-youtube.p.rapidapi.com/yttags.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"keyword-research-for-youtube.p.rapidapi.com\"}, params={\"keyword\": \"social media marketing\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Unlock the Power of Youtube Keyword Research for Your Youtube Channel with our API. Get Accurate Monthly Search Volume, Keyword Difficulty, and Competition Details to Drive Traffic and Boost Views!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://keyword-research-for-youtube.p.rapidapi.com/yttags.php'\nquerystring = {\"keyword\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://keyword-research-for-youtube.p.rapidapi.com/yttags.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://keyword-research-for-youtube.p.rapidapi.com/yttags.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "keyword-research-for-youtube.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "keyword": "social media marketing"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://keyword-research-for-youtube.p.rapidapi.com/yttags.php\"\nquerystring = {\"keyword\": \"Email Marketing\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"keyword-research-for-youtube.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Keyword Research for Youtube",
            "api_arguments_original": [
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": "Email Marketing"
                }
            ]
        }
    },
    {
        "query": "How can I analyze the backlinks of my website using the Backlink Checker API, provided that my domain is \"example.com\"?",
        "model_answer": "requests.get(\"https://seo-api-get-backlinks.p.rapidapi.com/backlinks.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"seo-api-get-backlinks.p.rapidapi.com\"}, params={\"domain\": \"example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": " Backlink Checker API, is the ultimate tool for analyzing your website's backlinks, as well as those of your competitors. With our API, you can easily check the quality of your backlinks, identify any issues that may be impacting your SEO efforts, and even discover new backlink opportunities",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://seo-api-get-backlinks.p.rapidapi.com/backlinks.php'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://seo-api-get-backlinks.p.rapidapi.com/backlinks.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://seo-api-get-backlinks.p.rapidapi.com/backlinks.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "seo-api-get-backlinks.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domain": "example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://seo-api-get-backlinks.p.rapidapi.com/backlinks.php\"\nquerystring = {\"domain\": \"fesh.store\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"seo-api-get-backlinks.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SEO API - Get Backlinks",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "fesh.store"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the list of available Perl code compiler versions using the Perl Code Compiler API and print the response in JSON format.",
        "model_answer": "requests.get(\"https://perl-code-compiler.p.rapidapi.com/versions/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"perl-code-compiler.p.rapidapi.com\"}).json()",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Perl Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://perl-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://perl-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://perl-code-compiler.p.rapidapi.com/versions/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "perl-code-compiler.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://perl-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"perl-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Perl Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to obtain a list of all food products available using the \"pizzaallapala\" API?",
        "model_answer": "requests.get(\"https://pizzaallapala.p.rapidapi.com/productos\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pizzaallapala.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "api fake to test frontend",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pizzaallapala.p.rapidapi.com/productos'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pizzaallapala.p.rapidapi.com/productos\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pizzaallapala.p.rapidapi.com/productos"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pizzaallapala.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pizzaallapala.p.rapidapi.com/productos\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pizzaallapala.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "pizzaallapala",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the user data for page 3 from the Reqres API.",
        "model_answer": "requests.get(\"https://reqres4.p.rapidapi.com/api/users\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"reqres4.p.rapidapi.com\"}, params={\"page\": \"3\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Reqres",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reqres4.p.rapidapi.com/api/users'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reqres4.p.rapidapi.com/api/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://reqres4.p.rapidapi.com/api/users"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "reqres4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "page": "3"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reqres4.p.rapidapi.com/api/users\"\nquerystring = {\"page\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reqres4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Reqres",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "I want to get information about a vehicle with the license plate \"AB-456-CD\" using the \"Api plaque immatriculation SIV\" API.",
        "model_answer": "requests.get(\"https://api-plaque-immatriculation-siv.p.rapidapi.com/get-vehicule-info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"api-plaque-immatriculation-siv.p.rapidapi.com\"}, params={\"immatriculation\": \"AB-456-CD\", \"token\": \"TokenDemoRapidapi\", \"host_name\": \"https://apiplaqueimmatriculation.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Immatriculation API (France) \n\nNotre service Web permettra \u00e0 votre site Internet ou \u00e0 vos applications d\u2019identifier les motos et les scooters en utilisant leur plaque d\u2019immatriculation. Cette m\u00e9thode est largement utilis\u00e9e par la plupart des boutiques en ligne de pi\u00e8ces d\u00e9tach\u00e9es pour identifier les v\u00e9hicules de leurs clients, afin d\u2019\u00e9viter les erreurs d\u2019identification, les insatisfactions clients et les retours de marchandise.\n\n\u00cates-vous \u00e0 la recherche de plaques d\u2019immatriculation fran\u00e7aises...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://api-plaque-immatriculation-siv.p.rapidapi.com/get-vehicule-info'\nquerystring = {\"immatriculation\": \"\", \"token\": \"\", \"host_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://api-plaque-immatriculation-siv.p.rapidapi.com/get-vehicule-info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://api-plaque-immatriculation-siv.p.rapidapi.com/get-vehicule-info"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "api-plaque-immatriculation-siv.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://api-plaque-immatriculation-siv.p.rapidapi.com/get-vehicule-info\"\nquerystring = {\"immatriculation\": \"AA-123-BC\", \"token\": \"TokenDemoRapidapi\", \"host_name\": \"https://apiplaqueimmatriculation.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"api-plaque-immatriculation-siv.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Api plaque immatriculation SIV",
            "api_arguments_original": [
                {
                    "name": "immatriculation",
                    "type": "STRING",
                    "description": "",
                    "default": "AA-123-BC"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": "TokenDemoRapidapi"
                },
                {
                    "name": "host_name",
                    "type": "STRING",
                    "description": "",
                    "default": "https://apiplaqueimmatriculation.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check the cell coverage for zip code 92101 on all US networks using the US Cell Coverage by Zip Code API and print the response?",
        "model_answer": "requests.get(\"https://us-cell-coverage-by-zip-code.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"us-cell-coverage-by-zip-code.p.rapidapi.com\"}, params={\"postcode\": \"92101\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Check Cell Coverage by zip code for all US networks",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://us-cell-coverage-by-zip-code.p.rapidapi.com/'\nquerystring = {\"postcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://us-cell-coverage-by-zip-code.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://us-cell-coverage-by-zip-code.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "us-cell-coverage-by-zip-code.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "postcode": "92101"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://us-cell-coverage-by-zip-code.p.rapidapi.com/\"\nquerystring = {\"postcode\": \"92101\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"us-cell-coverage-by-zip-code.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "US Cell Coverage by Zip Code",
            "api_arguments_original": [
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "",
                    "default": "92101"
                }
            ]
        }
    },
    {
        "query": "I want to get the next 20 crypto events from the Crypto Events Calendar API.",
        "model_answer": "requests.get(\"https://crypto-events-calendar.p.rapidapi.com/index\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"crypto-events-calendar.p.rapidapi.com\"}, params={\"pageSize\": \"20\", \"page\": \"1\"})",
        "original": {
            "domain": "Monitoring",
            "framework": "RapidAPI",
            "functionality": "Get crypto events like listing, airdrops, release, tokenomics, partnershiop, other.\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crypto-events-calendar.p.rapidapi.com/index'\nquerystring = {\"pageSize\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crypto-events-calendar.p.rapidapi.com/index\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://crypto-events-calendar.p.rapidapi.com/index"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "crypto-events-calendar.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "pageSize": "20",
                            "page": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crypto-events-calendar.p.rapidapi.com/index\"\nquerystring = {\"pageSize\": \"10\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-events-calendar.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\ud83d\udcc5 Crypto Events Calendar \ud83d\ude80",
            "api_arguments_original": [
                {
                    "name": "pageSize",
                    "type": "STRING",
                    "description": "Max pageSize = 10",
                    "default": "10"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to get the reviews for the business with ID \"0x1234567890123456:0xabcdefabcdefabcd\" in the United States region using the Local Business Data API.",
        "model_answer": "requests.get(\"https://local-business-data.p.rapidapi.com/business-reviews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"local-business-data.p.rapidapi.com\"}, params={\"business_id\": \"0x1234567890123456:0xabcdefabcdefabcd\", \"sort_by\": \"most_relevant\", \"region\": \"us\", \"language\": \"en\", \"offset\": \"0\", \"fields\": \"\", \"query\": \"\", \"limit\": \"5\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Extremely comprehensive and up-to-date local business search - get business reviews and rating, photos, phone, address / location, website, emails / social profiles and 30+ other fields.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://local-business-data.p.rapidapi.com/business-reviews'\nquerystring = {\"business_id\": \"\", \"sort_by\": \"\", \"region\": \"\", \"language\": \"\", \"offset\": \"\", \"fields\": \"\", \"query\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://local-business-data.p.rapidapi.com/business-reviews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://local-business-data.p.rapidapi.com/business-reviews"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "local-business-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "business_id": "0x1234567890123456:0xabcdefabcdefabcd",
                            "sort_by": "most_relevant",
                            "region": "us",
                            "language": "en",
                            "offset": "0",
                            "fields": "",
                            "query": "",
                            "limit": "5"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://local-business-data.p.rapidapi.com/business-reviews\"\nquerystring = {\"sort_by\": \"\", \"region\": \"us\", \"business_id\": \"0x89c259b5a9bd152b:0x31453e62a3be9f76\", \"language\": \"en\", \"offset\": \"\", \"fields\": \"\", \"query\": \"\", \"limit\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"local-business-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Local Business Data",
            "api_arguments_original": [
                {
                    "name": "business_id",
                    "type": "STRING",
                    "description": "Unique Business Id of the business for which to get reviews.",
                    "default": "0x89c259b5a9bd152b:0x31453e62a3be9f76"
                },
                {
                    "name": "sort_by",
                    "type": "ENUM",
                    "description": "How to sort the reviews in the results.\n\n**Allowed values**: *`most_relevant, newest, highest_ranking, lowest_ranking`*.\n\n**Default**: *`most_relevant`*",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "Query Google Maps from a particular region or country. For a list of supported region/country codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes (Alpha-2 code).\n\n**Default:** *`us`*",
                    "default": "us"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Set the language of the results. For a list of supported language codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes .\n\n**Default**: *`en`*",
                    "default": "en"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Number of business reviews to skip (for pagination/scrolling).\n\n**Default**: *`0`*",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "STRING",
                    "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.\n\n**e.g.** `review_id,review_text,rating`",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Return reviews matching a text query.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Maximum number of business reviews to return (1-150).\n\n**Default**: *`20`*",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to check if the email address 'test@example.com' is a disposable email or not.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"test@example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Real-Time Performance Monitoring API for TI Systems",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://perf-monitor-metrics.p.rapidapi.com/api/system/performance'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://perf-monitor-metrics.p.rapidapi.com/api/system/performance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "test@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://perf-monitor-metrics.p.rapidapi.com/api/system/performance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"perf-monitor-metrics.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Perf monitor metrics",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please check if there is a homeless shelter in zip code 90210? Return the response in JSON format.",
        "model_answer": "requests.get(\"https://homeless-shelter.p.rapidapi.com/zipcode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"homeless-shelter.p.rapidapi.com\"}, params={\"zipcode\": \"90210\"}).json()",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Introducing our National Registered Homeless Shelters API for the United States, featuring an extensive and up-to-date database.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://homeless-shelter.p.rapidapi.com/zipcode'\nquerystring = {\"zipcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://homeless-shelter.p.rapidapi.com/zipcode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://homeless-shelter.p.rapidapi.com/zipcode"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "homeless-shelter.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "zipcode": "90210"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://homeless-shelter.p.rapidapi.com/zipcode\"\nquerystring = {\"zipcode\": \"98004\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"homeless-shelter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Homeless Shelter",
            "api_arguments_original": [
                {
                    "name": "zipcode",
                    "type": "STRING",
                    "description": "Zip code",
                    "default": "98004"
                }
            ]
        }
    },
    {
        "query": "What is the current status of the scan with scan_id \"1234567890\" in WebLasso API?",
        "model_answer": "requests.get(\"https://weblasso.p.rapidapi.com/scan-status\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"weblasso.p.rapidapi.com\"}, params={\"scan_id\": \"1234567890\"})",
        "original": {
            "domain": "Cybersecurity",
            "framework": "RapidAPI",
            "functionality": "Scan the web for a diverse range of data including subdomains, IP Addresses, web technologies and emails!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weblasso.p.rapidapi.com/scan-status'\nquerystring = {\"scan_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weblasso.p.rapidapi.com/scan-status\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://weblasso.p.rapidapi.com/scan-status"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "weblasso.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "scan_id": "1234567890"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weblasso.p.rapidapi.com/scan-status\"\nquerystring = {\"scan_id\": \"e04d3e18-bda7-420b-b240-894fd3d4992d\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weblasso.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WebLasso",
            "api_arguments_original": [
                {
                    "name": "scan_id",
                    "type": "STRING",
                    "description": "",
                    "default": "e04d3e18-bda7-420b-b240-894fd3d4992d"
                }
            ]
        }
    },
    {
        "query": "I want to check if my package with tracking number 987654321 is shipped or not using the SOTI Sync API.",
        "model_answer": "requests.get(\"https://soti-sync.p.rapidapi.com/987654321\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"soti-sync.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Application to receive SOTI Sync Event Registration",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://soti-sync.p.rapidapi.com/{PNumber}'\nquerystring = {\"PNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://soti-sync.p.rapidapi.com/{PNumber}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://soti-sync.p.rapidapi.com/{PNumber}\"\nquerystring = {\"PNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"soti-sync.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SOTI Sync",
            "api_arguments_original": [
                {
                    "name": "PNumber",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to extract text from the image \"document.png\" using the OCR API.",
        "model_answer": "requests.get(\"https://ocr43.p.rapidapi.com/v1/algos\", headers={\"X-RapidAPI-Key\": \"API-KEY\", \"X-RapidAPI-Host\":\"ocr43.p.rapidapi.com\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "This API processes images and performs Optical Character Recognition. [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/ocr) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/ocr?utm_source=ocr_rapidapi&utm_medium=endpoints&utm_campaign=rapidapi) [![Telegram](https://img.shields.io/badge/-Telegram%20demo-white?logo=telegram&style=flat)](https://t.me/...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ocr43.p.rapidapi.com/v1/algos'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ocr43.p.rapidapi.com/v1/algos\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ocr43.p.rapidapi.com/v1/algos"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "API-KEY",
                            "X-RapidAPI-Host": "ocr43.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ocr43.p.rapidapi.com/v1/algos\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr43.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OCR",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me with the cryptocurrency exchange details for ID 10?",
        "model_answer": "requests.get(\"https://coinlore-cryptocurrency.p.rapidapi.com/api/exchange/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"coinlore-cryptocurrency.p.rapidapi.com\"}, params={\"id\": \"10\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Provides cryptocurrency prices,exchanges,markets api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://coinlore-cryptocurrency.p.rapidapi.com/api/exchange/'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://coinlore-cryptocurrency.p.rapidapi.com/api/exchange/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://coinlore-cryptocurrency.p.rapidapi.com/api/exchange/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "coinlore-cryptocurrency.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "10"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://coinlore-cryptocurrency.p.rapidapi.com/api/exchange/\"\nquerystring = {\"id\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"coinlore-cryptocurrency.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CoinLore Cryptocurrency",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to get information about a product by calling the provided API.",
        "model_answer": "requests.get(\"https://product39.p.rapidapi.com/products\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"product39.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "For Training",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://product39.p.rapidapi.com/products'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://product39.p.rapidapi.com/products\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://product39.p.rapidapi.com/products"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "product39.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://product39.p.rapidapi.com/products\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"product39.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Product",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please download the YouTube video with the ID \"ABC123\" in the UK region.",
        "model_answer": "requests.get(\"https://ytstream-download-youtube-videos.p.rapidapi.com/dl\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ytstream-download-youtube-videos.p.rapidapi.com\"}, params={\"id\": \"ABC123\", \"cgeo\": \"UK\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Download or stream YouTube Videos/MP4.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ytstream-download-youtube-videos.p.rapidapi.com/dl'\nquerystring = {\"id\": \"\", \"cgeo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ytstream-download-youtube-videos.p.rapidapi.com/dl\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ytstream-download-youtube-videos.p.rapidapi.com/dl"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ytstream-download-youtube-videos.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "ABC123",
                            "cgeo": "UK"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ytstream-download-youtube-videos.p.rapidapi.com/dl\"\nquerystring = {\"cgeo\": \"\", \"id\": \"UxxajLWwzqY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ytstream-download-youtube-videos.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YTStream - Download YouTube Videos",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Youtube Video Id.",
                    "default": "UxxajLWwzqY"
                },
                {
                    "name": "cgeo",
                    "type": "STRING",
                    "description": "Country code in ISO 3166 format of the end user.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the lowest bins data from the Hypixel Lowest Bins API and display the JSON response.",
        "model_answer": "requests.get(\"https://lowest-bins-api.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"lowest-bins-api.p.rapidapi.com\"}).json()",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Hypixel Lowest bins api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lowest-bins-api.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lowest-bins-api.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://lowest-bins-api.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "lowest-bins-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lowest-bins-api.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lowest-bins-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lowest Bins Api",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the options prices for the stock ticker GOOG?",
        "model_answer": "requests.get(\"https://stock-and-options.p.rapidapi.com/options/goog\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"stock-and-options.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "No. 1 rated U.S listed stock and options data provider with the lowest cost. The cloud based API has a simple interface and return easy to consume data in JSON format for options prices.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stock-and-options.p.rapidapi.com/options/aapl'\nquerystring = {\"ticker\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stock-and-options.p.rapidapi.com/options/aapl\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stock-and-options.p.rapidapi.com/options/aapl\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stock-and-options.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stock And Options",
            "api_arguments_original": [
                {
                    "name": "ticker",
                    "type": "string",
                    "description": "",
                    "default": "aapl"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the list of matches in the USA for the Surebets 2 API?",
        "model_answer": "requests.get(\"https://surebets-2.p.rapidapi.com/matches/usa\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"surebets-2.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://surebets-2.p.rapidapi.com/matches/usa'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://surebets-2.p.rapidapi.com/matches/usa\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://surebets-2.p.rapidapi.com/matches/usa"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "surebets-2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://surebets-2.p.rapidapi.com/matches/usa\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"surebets-2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Surebets 2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve a list of FM radio stations from around the world, limiting the results to 5 stations and displaying the second page?",
        "model_answer": "requests.get(\"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_quotes.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com\"}, params={\"limit\": \"5\", \"page\": \"2\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "This is one of the largest collection of FM Radios API from around the world. Listen Updated 79,000+ Radio stations. All the Stations are Updating Daily & Weekly basis, New stations are Adding As soon as possible. At least 100+ Stations Are adding and 1000+ Stations are fixing to this API Weekly (This is minium ratio).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_quotes.php'\nquerystring = {\"limit\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_quotes.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "enum": [
                        "5"
                    ],
                    "description": "Item limitations per page. (default: 10)"
                },
                {
                    "name": "page",
                    "enum": [
                        ""
                    ],
                    "description": "Page number to be displayed. (default: 1)"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_quotes.php\"\nquerystring = {\"limit\": \"10\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Radio World - 75,000+ Worldwide FM Radio stations..",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Item limitations per page. (default: 10)",
                    "default": "10"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number to be displayed. (default: 1)",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check the ESG risk rating for the stock ticker MSFT?",
        "model_answer": "requests.get(\"https://esg-risk-ratings-for-stocks.p.rapidapi.com/api/v1/resources/esg\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"esg-risk-ratings-for-stocks.p.rapidapi.com\"}, params={\"ticker\": \"MSFT\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "ESG Risk Ratings assess the degree to which a company's enterprise business value is at risk driven by environmental, social and governance issues.  Rating companies along ESG dimensions allows socially conscious investors to screen potential investments to fit with their investment goals and values.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://esg-risk-ratings-for-stocks.p.rapidapi.com/api/v1/resources/esg'\nquerystring = {\"ticker\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://esg-risk-ratings-for-stocks.p.rapidapi.com/api/v1/resources/esg\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://esg-risk-ratings-for-stocks.p.rapidapi.com/api/v1/resources/esg"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "esg-risk-ratings-for-stocks.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ticker": "MSFT"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://esg-risk-ratings-for-stocks.p.rapidapi.com/api/v1/resources/esg\"\nquerystring = {\"ticker\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"esg-risk-ratings-for-stocks.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ESG Risk Ratings for Stocks",
            "api_arguments_original": [
                {
                    "name": "ticker",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ]
        }
    },
    {
        "query": "I want to extract topics from the text \"I enjoy hiking and cooking\" using the Walnut Topic API.",
        "model_answer": "requests.get(\"https://walnut-topic.p.rapidapi.com/wrt_transformer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"walnut-topic.p.rapidapi.com\"}, params={\"text\": \"I enjoy hiking and cooking\", \"topics\": \"furniture,eletronics,books,billing,promotion,urgent,design\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "AI powered topic extraction from texts.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://walnut-topic.p.rapidapi.com/wrt_transformer'\nquerystring = {\"text\": \"\", \"topics\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://walnut-topic.p.rapidapi.com/wrt_transformer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://walnut-topic.p.rapidapi.com/wrt_transformer"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "walnut-topic.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://walnut-topic.p.rapidapi.com/wrt_transformer\"\nquerystring = {\"text\": \"My tablet is not working and I want a refund as soon as possible!\", \"topics\": \"furniture,eletronics,books,billing,promotion,urgent,design\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"walnut-topic.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Walnut Topic",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "My tablet is not working and I want a refund as soon as possible!"
                },
                {
                    "name": "topics",
                    "type": "STRING",
                    "description": "",
                    "default": "furniture,eletronics,books,billing,promotion,urgent,design"
                }
            ]
        }
    },
    {
        "query": "Can you provide the Python function call to obtain the K\u04e7ppen climate classification for a location with latitude 35.6895 and longitude 139.6917?",
        "model_answer": "requests.get(\"https://koppen-climate-classification.p.rapidapi.com/classification\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"koppen-climate-classification.p.rapidapi.com\"}, params={\"lon\": \"139.6917\", \"lat\": \"35.6895\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Get the K\u00f6ppen climate classificatin for any location in the world using latitude and longitude.  Results in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://koppen-climate-classification.p.rapidapi.com/classification'\nquerystring = {\"lon\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://koppen-climate-classification.p.rapidapi.com/classification\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://koppen-climate-classification.p.rapidapi.com/classification"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "koppen-climate-classification.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://koppen-climate-classification.p.rapidapi.com/classification\"\nquerystring = {\"lon\": \"-60.069\", \"lat\": \"-3.198\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"koppen-climate-classification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Koppen Climate Classification",
            "api_arguments_original": [
                {
                    "name": "lon",
                    "type": "STRING",
                    "description": "",
                    "default": "-60.069"
                },
                {
                    "name": "lat",
                    "type": "STRING",
                    "description": "",
                    "default": "-3.198"
                }
            ]
        }
    },
    {
        "query": "I want to get the general product description for the Amazon product with ID B07KXLNFHM using the Abiola Amazon Data Scraper API.",
        "model_answer": "requests.get(\"https://abiola-amazon-data-scraper.p.rapidapi.com/products/B07KXLNFHM\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"abiola-amazon-data-scraper.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Amazon Data Scrapper makes it easy and fast to access products, price and review data from Amazon in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://abiola-amazon-data-scraper.p.rapidapi.com/products/B08L5NP6NG'\nquerystring = {\"productId\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://abiola-amazon-data-scraper.p.rapidapi.com/products/B08L5NP6NG\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://abiola-amazon-data-scraper.p.rapidapi.com/products/B07KXLNFHM"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "abiola-amazon-data-scraper.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://abiola-amazon-data-scraper.p.rapidapi.com/products/B08L5NP6NG\"\nquerystring = {\"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"abiola-amazon-data-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Abiola Amazon Data Scraper",
            "api_arguments_original": [
                {
                    "name": "productId",
                    "type": "STRING",
                    "description": "This endpoint get the general product description of any amazon product.",
                    "default": "B08L5NP6NG"
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide the current fear and greed index.",
        "model_answer": "requests.get(\"https://fear-and-greed-index.p.rapidapi.com/v1/fgi\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fear-and-greed-index.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Index calculated by https://money.cnn.com/data/fear-and-greed/ ![](https://tip.ep-proxy.net/t/ra-fgi)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fear-and-greed-index.p.rapidapi.com/v1/fgi'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fear-and-greed-index.p.rapidapi.com/v1/fgi\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fear-and-greed-index.p.rapidapi.com/v1/fgi"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fear-and-greed-index.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fear-and-greed-index.p.rapidapi.com/v1/fgi\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fear-and-greed-index.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fear and greed index",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to check if the city Yogyakarta is experiencing rain right now?",
        "model_answer": "requests.get(\"https://indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com/weather/yogyakarta\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Provide most accurate data of Indonesian cities weather and forecast plus latest earthquake alert.\n\nPrakiraan cuaca, suhu udara, kelembapan udara, kecepatan angin, dan arah angin untuk kota-kota besar di 34 provinsi di Indonesia dalam waktu 3 harian dan gempa terbaru dengan format JSON yang lebih ramah.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com/weather/jawa-timur/surabaya'\nquerystring = {\"province\": \"\", \"city\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com/weather/jawa-timur/surabaya\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com/weather/jawa-timur/surabaya\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indonesia Most Accurate Weather and Earthquake",
            "api_arguments_original": [
                {
                    "name": "province",
                    "type": "string",
                    "description": "",
                    "default": "jawa-timur"
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "",
                    "default": "surabaya"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to retrieve the latest economical events from the Palmy Investing API, using the default parameters for page number and page size.",
        "model_answer": "requests.get(\"https://palmy-investing-api.p.rapidapi.com/api/economical/events/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"palmy-investing-api.p.rapidapi.com\"}, params={\"page\": \"\", \"page_size\": \"\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "The best fit for quantitative stock research. It's free and without data restrictions. 35+ endpoints.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://palmy-investing-api.p.rapidapi.com/api/economical/events/'\nquerystring = {\"page\": \"\", \"page_size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://palmy-investing-api.p.rapidapi.com/api/economical/events/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://palmy-investing-api.p.rapidapi.com/api/economical/events/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "palmy-investing-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://palmy-investing-api.p.rapidapi.com/api/economical/events/\"\nquerystring = {\"page\": \"\", \"page_size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"palmy-investing-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Palmy Investing API",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "A page number within the paginated result set.",
                    "default": ""
                },
                {
                    "name": "page_size",
                    "type": "NUMBER",
                    "description": "Number of results to return per page.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "How can I use the D7 Viber API to check my Viber balance?",
        "model_answer": "requests.get(\"https://d7-viber.p.rapidapi.com/messages/v1/balance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"d7-viber.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Experience boundless connectivity with the D7API Gateway, connecting you to a vast messaging network. Now with Viber integration, enjoy seamless communication and stay connected like never before.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://d7-viber.p.rapidapi.com/messages/v1/balance'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://d7-viber.p.rapidapi.com/messages/v1/balance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://d7-viber.p.rapidapi.com/messages/v1/balance"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "d7-viber.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://d7-viber.p.rapidapi.com/messages/v1/balance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"d7-viber.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "D7 Viber",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve car data by calling the Car Specs API and save it to a local file for further analysis.",
        "model_answer": "requests.get('https://car-specs.p.rapidapi.com/v2/cars/download-database', headers={\"X-RapidAPI-Key\": \"YOUR-API-KEY\", \"X-RapidAPI-Host\": \"car-specs.p.rapidapi.com\"}, params={}).write('car_data.json', response.text)",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Fast, simple and reliable API to retrieve car data. Contains data on almost all car manufacturers and models, updated regularly.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://car-specs.p.rapidapi.com/v2/cars/download-database'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://car-specs.p.rapidapi.com/v2/cars/download-database\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "'https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://car-specs.p.rapidapi.com/v2/cars/download-database\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-specs.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Car Specs",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the activity details for this TripIt object ID 'abc123'? I want to obtain the JSON response.",
        "model_answer": "requests.get(\"https://community-tripit.p.rapidapi.com/get/activity/id/abc123/format/json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"community-tripit.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "TripIt organizes travel plans into an itinerary that has all of your trip details in one place. Simply forward confirmation emails to plans@tripit.com and TripIt will automatically build an itinerary for your trip that you can access anytime, either online or from a mobile device. With the TripIt API, you can...\r\n\r\nAdd travel information to a TripIt account, enabling:\r\nInstant availability of clean, professional looking itineraries accessible on the web or via mobile device\r\nSeamless calendar integration via TripIt\u2019s iCal feeds feature\r\nAccess to many third party productivity applications that use the TripIt API\r\n\r\nImport travel information from a TripIt traveler\u2019s account, enabling:\r\nSeamless email import technology for your customers to add travel plans to your application\r\nInsight into a traveler\u2019s entire trip (air, hotel, car, restaurants, meetings, etc.)\r\nOutputting travel data to social network applications such as Facebook and LinkedIn",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-tripit.p.rapidapi.com/get/{object_type}/id/{TripIt_Object_ID}/format/json'\nquerystring = {\"object_type\": \"\", \"tripit_object_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-tripit.p.rapidapi.com/get/{object_type}/id/{TripIt_Object_ID}/format/json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://community-tripit.p.rapidapi.com/get/activity/id/abc123/format/json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "community-tripit.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-tripit.p.rapidapi.com/get/{object_type}/id/{TripIt_Object_ID}/format/json\"\nquerystring = {\"object_type\": \"\", \"tripit_object_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-tripit.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tripit",
            "api_arguments_original": [
                {
                    "name": "object_type",
                    "type": "STRING",
                    "description": "is one of the following strings:  air activity car cruise directions lodging map note points_program profile rail restaurant transport trip weather",
                    "default": ""
                },
                {
                    "name": "tripit_object_id",
                    "type": "STRING",
                    "description": "is the object ID of the TripIt object being requested.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the top 50 greatest movies of all time according to IMDb?",
        "model_answer": "requests.get(\"https://imdb-top-100-movies.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"imdb-top-100-movies.p.rapidapi.com\"}, params={\"limit\":50})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Top 100 Greatest Movies of All Time. Easy to use. It also includes the YouTube trailers.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://imdb-top-100-movies.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://imdb-top-100-movies.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://imdb-top-100-movies.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "imdb-top-100-movies.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://imdb-top-100-movies.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imdb-top-100-movies.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IMDb Top 100 Movies",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to convert the number 1234 to spelled-out format in English using the Spellout API?",
        "model_answer": "requests.get(\"https://spellout.p.rapidapi.com/v1/languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"spellout.p.rapidapi.com\"}, params={\"nameFilter\": \"\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "This API allows converting numbers to spelled-out format in any language, e.g.: 1234 -> \u201cone thousand two hundred thirty-four\u201d.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://spellout.p.rapidapi.com/v1/languages'\nquerystring = {\"nameFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://spellout.p.rapidapi.com/v1/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://spellout.p.rapidapi.com/v1/languages"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "spellout.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "nameFilter": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://spellout.p.rapidapi.com/v1/languages\"\nquerystring = {\"nameFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spellout.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Spellout",
            "api_arguments_original": [
                {
                    "name": "nameFilter",
                    "type": "STRING",
                    "description": "Filter as \"contains\" by language name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please fetch the order details with orderId=67890 from the platformbil API.",
        "model_answer": "requests.get(\"https://platformbil.p.rapidapi.com/store/order/67890\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"platformbil.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": null,
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://platformbil.p.rapidapi.com/store/order/{orderId}'\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://platformbil.p.rapidapi.com/store/order/{orderId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://platformbil.p.rapidapi.com/store/order/{orderId}\"\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"platformbil.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "platformbil",
            "api_arguments_original": [
                {
                    "name": "orderId",
                    "type": "NUMBER",
                    "description": "ID of pet that needs to be fetched",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve energy emission data from the CAISO API for the interval between November 1, 2022 and November 30, 2022.",
        "model_answer": "requests.get(\"https://caiso.p.rapidapi.com/caiso\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"caiso.p.rapidapi.com\"}, params={\"type\": \"co2\", \"enddate\": \"20221130\", \"interval\": \"30\", \"startdate\": \"20221101\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "API for California Independent System Operator data provided from caiso.com. It includes data on energy emissions, demand, supply, and prices. Updated daily.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://caiso.p.rapidapi.com/caiso'\nquerystring = {\"type\": \"\", \"enddate\": \"\", \"interval\": \"\", \"startdate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://caiso.p.rapidapi.com/caiso\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://caiso.p.rapidapi.com/caiso"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "caiso.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "type": "co2",
                            "enddate": "20221130",
                            "interval": "30",
                            "startdate": "20221101"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://caiso.p.rapidapi.com/caiso\"\nquerystring = {\"enddate\": \"20220901\", \"interval\": \"30\", \"type\": \"co2\", \"startdate\": \"20220101\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"caiso.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CAISO",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Type needs to be one of \\\\\\\\\\\\\\\"co2\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"fuelsource\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"netdemand\\\\\\\\\\\\\\\", or \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\". The \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" value will combine the results for the three other tables into a single CSV file with all the columns you requested.",
                    "default": "co2"
                },
                {
                    "name": "enddate",
                    "type": "STRING",
                    "description": "",
                    "default": "20220901"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "",
                    "default": "30"
                },
                {
                    "name": "startdate",
                    "type": "STRING",
                    "description": "",
                    "default": "20220101"
                }
            ]
        }
    },
    {
        "query": "I want to check if test@email.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"test@email.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fast-email-verifier.p.rapidapi.com/IsRoleAccount'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fast-email-verifier.p.rapidapi.com/IsRoleAccount\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "test@email.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fast-email-verifier.p.rapidapi.com/IsRoleAccount\"\nquerystring = {\"domain\": \"domain.org\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fast-email-verifier.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "fast Email verifier",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "domain.org"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to extract the entities, full matches URLs, partial matches URLs, visual matches URLs, pages, locale, and dimensions from this image: 'https://example.com/image.jpg', using the Web Detection API?",
        "model_answer": "requests.get(\"https://web-detection.p.rapidapi.com/web-detection\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"web-detection.p.rapidapi.com\"}, params={\"image\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Extract list of entities, full matches urls, partial matches urls, visual matches urls, pages, locale and dimensions from image using (google vision web detection)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://web-detection.p.rapidapi.com/web-detection'\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://web-detection.p.rapidapi.com/web-detection\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://web-detection.p.rapidapi.com/web-detection"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "web-detection.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://web-detection.p.rapidapi.com/web-detection\"\nquerystring = {\"image\": \"https://avatars.mds.yandex.net/get-mpic/5215925/img_id4862938180215999126.jpeg/orig\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"web-detection.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Web Detection",
            "api_arguments_original": [
                {
                    "name": "image",
                    "type": "STRING",
                    "description": "",
                    "default": "https://avatars.mds.yandex.net/get-mpic/5215925/img_id4862938180215999126.jpeg/orig"
                }
            ]
        }
    },
    {
        "query": "Please fetch the real estate property details for property_id 54321.",
        "model_answer": "requests.get(\"https://realtor16.p.rapidapi.com/property\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"realtor16.p.rapidapi.com\"}, params={\"property_id\": \"54321\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Query real time data of US real estate properties and agents",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://realtor16.p.rapidapi.com/property'\nquerystring = {\"property_id\": \"\", \"address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://realtor16.p.rapidapi.com/property\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://realtor16.p.rapidapi.com/property"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "realtor16.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://realtor16.p.rapidapi.com/property\"\nquerystring = {\"property_id\": \"1497548641\", \"address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"realtor16.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Realtor",
            "api_arguments_original": [
                {
                    "name": "property_id",
                    "type": "STRING",
                    "description": "",
                    "default": "1497548641"
                },
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get live match updates for basketball in real-time.",
        "model_answer": "requests.get(\"https://allscores.p.rapidapi.com/api/allscores/news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"allscores.p.rapidapi.com\"}, params={\"sport\": 4, \"timezone\": \"America/Chicago\", \"langId\": 1})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Beware! Our live match updates may be faster than other API's.\nEnjoy our 24/7 wide coverage of real time scores data for 10 different sports and over 2,000 competitions worldwide, including Real-time Stats, Breaking News, In-Play Insights, Lineups, Live Tables, Fixtures, Social Buzz, Odds and much more.\nSupported 10 Sports Types: Football, Rugby, Tennis, Basketball, Cricket, Ice Hockey, Baseball, Volleyball, American football and Handball.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://allscores.p.rapidapi.com/api/allscores/news'\nquerystring = {\"sport\": \"\", \"timezone\": \"\", \"langId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://allscores.p.rapidapi.com/api/allscores/news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://allscores.p.rapidapi.com/api/allscores/news"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "allscores.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "sport": 4,
                            "timezone": "America/Chicago",
                            "langId": 1
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://allscores.p.rapidapi.com/api/allscores/news\"\nquerystring = {\"sport\": 1, \"timezone\": \"America/Chicago\", \"langId\": 1}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"allscores.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AllScores",
            "api_arguments_original": [
                {
                    "name": "sport",
                    "type": "NUMBER",
                    "description": "The sport.",
                    "default": 1
                },
                {
                    "name": "timezone",
                    "type": "STRING",
                    "description": "The timezone name. Check the tutorials.",
                    "default": "America/Chicago"
                },
                {
                    "name": "langId",
                    "type": "NUMBER",
                    "description": "The language id. Check the tutorials.",
                    "default": 1
                }
            ]
        }
    },
    {
        "query": "I want to get user information from the testing API.",
        "model_answer": "requests.get(\"https://testing144.p.rapidapi.com/test/instore/wechat/getUserInformation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"testing144.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "test api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testing144.p.rapidapi.com/test/instore/wechat/getUserInformation'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testing144.p.rapidapi.com/test/instore/wechat/getUserInformation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testing144.p.rapidapi.com/test/instore/wechat/getUserInformation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testing144.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Testing_v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check the definition of the word \"dog\" using the Dicolink API.",
        "model_answer": "requests.get(\"https://dicolink.p.rapidapi.com/mot/dog/definitions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dicolink.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Dicolink API lets you retrieve information about French words, including definitions, synonyms, antonyms, quotes, expressions, lexical field, scrabble score, and much more...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dicolink.p.rapidapi.com/mot/cheval/definitions'\nquerystring = {\"mot\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dicolink.p.rapidapi.com/mot/cheval/definitions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dicolink.p.rapidapi.com/mot/dog/definitions"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dicolink.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dicolink.p.rapidapi.com/mot/cheval/definitions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dicolink.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dicolink",
            "api_arguments_original": [
                {
                    "name": "mot",
                    "type": "string",
                    "description": "Set the word you want to search",
                    "default": "cheval"
                }
            ]
        }
    },
    {
        "query": "Please provide me with a list of mineable coins.",
        "model_answer": "requests.get(\"https://mineable-coins.p.rapidapi.com/coins\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mineable-coins.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Access coin rewards, mining difficulty, algorithms, and other useful data for hundreds of coins and multi pools.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mineable-coins.p.rapidapi.com/coins'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mineable-coins.p.rapidapi.com/coins\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mineable-coins.p.rapidapi.com/coins\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mineable-coins.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mineable coins",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the latest information about the product with ASIN B09DKV849B on Amazon's U.S. marketplace.",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "clickbank",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://clickbankuniversity.p.rapidapi.comemail'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://clickbankuniversity.p.rapidapi.comemail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://clickbankuniversity.p.rapidapi.comemail\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"clickbankuniversity.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ClickbankUniversity",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get information about the user's web browser using the BrowserObject API and print the response, considering that we already have an API license key and the user agent string is 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3'?",
        "model_answer": "requests.get(\"https://fraudlabs-browserobject-v1.p.rapidapi.com/browserobjectwebservice.asmx\", headers={\"X-RapidAPI-Key\": \"YOUR-API-LICENSE-KEY\", \"X-RapidAPI-Host\":\"fraudlabs-browserobject-v1.p.rapidapi.com\"}, params={\"USERAGENTSTRING\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\", \"LICENSE\": \"YOUR-API-LICENSE-KEY\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "The BrowserObject Browser Detection Web Service allows instant detection of online visitor's Web Browser information.\r\n\r\nSign up for free license key at http://www.fraudlabs.com/freelicense.aspx?PackageID=8 which allows up to 90 queries a month.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fraudlabs-browserobject-v1.p.rapidapi.com/browserobjectwebservice.asmx'\nquerystring = {\"USERAGENTSTRING\": \"\", \"LICENSE\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fraudlabs-browserobject-v1.p.rapidapi.com/browserobjectwebservice.asmx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fraudlabs-browserobject-v1.p.rapidapi.com/browserobjectwebservice.asmx"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "YOUR-API-LICENSE-KEY",
                            "X-RapidAPI-Host": "fraudlabs-browserobject-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fraudlabs-browserobject-v1.p.rapidapi.com/browserobjectwebservice.asmx\"\nquerystring = {\"USERAGENTSTRING\": \"\", \"LICENSE\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fraudlabs-browserobject-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BrowserObject",
            "api_arguments_original": [
                {
                    "name": "USERAGENTSTRING",
                    "type": "STRING",
                    "description": "The browser user agent string.",
                    "default": ""
                },
                {
                    "name": "LICENSE",
                    "type": "STRING",
                    "description": "API license key.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to convert my file image.jpg to a PDF using the All in One File Converter API.",
        "model_answer": "requests.get(\"https://all-in-one-file-converter.p.rapidapi.com/api/supported-file\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"all-in-one-file-converter.p.rapidapi.com\"}, params={\"input\": \"jpg\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "All in one file converter can convert different types of files. It can convert audio, video, images, documents, and archive files.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-in-one-file-converter.p.rapidapi.com/api/supported-file'\nquerystring = {\"input\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-in-one-file-converter.p.rapidapi.com/api/supported-file\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://all-in-one-file-converter.p.rapidapi.com/api/supported-file"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "all-in-one-file-converter.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "input": "jpg"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-in-one-file-converter.p.rapidapi.com/api/supported-file\"\nquerystring = {\"input\": \"jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-in-one-file-converter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "All in One FIle Converter",
            "api_arguments_original": [
                {
                    "name": "input",
                    "type": "STRING",
                    "description": "",
                    "default": "jpg"
                }
            ]
        }
    },
    {
        "query": "Please provide me with today's Wordle answers.",
        "model_answer": "requests.get(\"https://wordle-answers-solutions.p.rapidapi.com/today\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"wordle-answers-solutions.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Wordle Answers is an api where you can get all the answers of the popular word game Wordle.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wordle-answers-solutions.p.rapidapi.com/today'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wordle-answers-solutions.p.rapidapi.com/today\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wordle-answers-solutions.p.rapidapi.com/today\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wordle-answers-solutions.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wordle Answers Solutions",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check the VIN number \"1HGCM82633A123456\" for me.",
        "model_answer": "requests.get(\"https://license-plate-lookup2.p.rapidapi.com/license_plate_lookup\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"license-plate-lookup2.p.rapidapi.com\"}, params={\"state_code\": \"AL\", \"license_plate\": \"1HGCM82633A123456\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Check VIN by US license plate and state. \nVIN decoder from [VIN decoder](https://rapidapi.com/dominonet-lTpEE6zONeS/api/vin-decoder19).\n[View documents](https://rapidapi.com/dominonet-lTpEE6zONeS/api/vin-decoder19/details)\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://license-plate-lookup2.p.rapidapi.com/license_plate_lookup'\nquerystring = {\"state_code\": \"\", \"license_plate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://license-plate-lookup2.p.rapidapi.com/license_plate_lookup\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://license-plate-lookup2.p.rapidapi.com/license_plate_lookup"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "license-plate-lookup2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "state_code": "AL",
                            "license_plate": "1HGCM82633A123456"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://license-plate-lookup2.p.rapidapi.com/license_plate_lookup\"\nquerystring = {\"state_code\": \"AL\", \"license_plate\": \"S8TAN\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"license-plate-lookup2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "License Plate Lookup",
            "api_arguments_original": [
                {
                    "name": "state_code",
                    "type": "STRING",
                    "description": "**Run a License Plate Search By State**\nAL,AK,AZ,AR,CA,CO,CT,DE,DC,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY",
                    "default": "AL"
                },
                {
                    "name": "license_plate",
                    "type": "STRING",
                    "description": "",
                    "default": "S8TAN"
                }
            ]
        }
    },
    {
        "query": "I want to search for information about Jeff Bezos in the B2BHint API.",
        "model_answer": "requests.get(\"https://b2bhint.p.rapidapi.com/api/v1/rapidapi/person/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"b2bhint.p.rapidapi.com\"}, params={\"q\": \"Jeff Bezos\", \"countryCode\":\"us\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "B2BHint is a business tool that provides access to official registry data on companies and the people associated with them. With B2BHint, everyone can easily search and explore information on companies, making informed decisions and growing their business.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://b2bhint.p.rapidapi.com/api/v1/rapidapi/person/search'\nquerystring = {\"q\": \"\", \"countryCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://b2bhint.p.rapidapi.com/api/v1/rapidapi/person/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://b2bhint.p.rapidapi.com/api/v1/rapidapi/person/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "b2bhint.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "Jeff Bezos",
                            "countryCode": "us"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://b2bhint.p.rapidapi.com/api/v1/rapidapi/person/search\"\nquerystring = {\"q\": \"Elon Musk\", \"countryCode\": \"us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"b2bhint.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "B2BHint",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "Elon Musk"
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "",
                    "default": "us"
                }
            ]
        }
    },
    {
        "query": "I want to get the earnings per share for the stock symbol AMZN in the US region.",
        "model_answer": "requests.get(\"https://yh-finance8.p.rapidapi.com/stock/get_earnings_per_share\",headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yh-finance8.p.rapidapi.com\"}, params={\"symbol\": \"AMZN\", \"region\":\"US\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yh-finance8.p.rapidapi.com/stock/get_earnings_per_share'\nquerystring = {\"symbol\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yh-finance8.p.rapidapi.com/stock/get_earnings_per_share\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://yh-finance8.p.rapidapi.com/stock/get_earnings_per_share"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "yh-finance8.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "symbol": "AMZN",
                            "region": "US"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yh-finance8.p.rapidapi.com/stock/get_earnings_per_share\"\nquerystring = {\"symbol\": \"AAPL\", \"region\": \"US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yh-finance8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YH Finance_v2",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Ticker Symbol ( Ex. \\\\\"AAPL\\\\\" is Ticker symbol for Apple Inc. on the stock market )",
                    "default": "AAPL"
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "One of the following is allowed\nUS|BR|AU|CA|FR|DE|HK|IN|IT|ES|GB|S",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "How can I get data from the FastAPI Project API for the country \"US\" and with another interest \"technology\"?",
        "model_answer": "requests.get(\"https://fastapi-project.p.rapidapi.com/api/v2/explore\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fastapi-project.p.rapidapi.com\"}, params={\"country\": \"US\", \"another_interest\": \"technology\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Python FastAPI Test Project",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fastapi-project.p.rapidapi.com/api/v2/explore'\nquerystring = {\"country\": \"\", \"another_interest\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fastapi-project.p.rapidapi.com/api/v2/explore\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fastapi-project.p.rapidapi.com/api/v2/explore"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fastapi-project.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "country": "US",
                            "another_interest": "technology"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fastapi-project.p.rapidapi.com/api/v2/explore\"\nquerystring = {\"country\": \"\", \"another_interest\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fastapi-project.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FastAPI Project",
            "api_arguments_original": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "another_interest",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get the information of the upcoming events at mbar club?",
        "model_answer": "requests.get(\"https://mikaraunio-mbar.p.rapidapi.com/event/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"mikaraunio-mbar.p.rapidapi.com\"}, params={\"datefilter\": \"upcoming\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "mbar offers a free, read only REST API for access to its programme data, including event, artist and club series information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mikaraunio-mbar.p.rapidapi.com/event/'\nquerystring = {\"name\": \"\", \"club\": \"\", \"club__name\": \"\", \"start_time\": \"\", \"end_time\": \"\", \"time_modified\": \"\", \"datefilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mikaraunio-mbar.p.rapidapi.com/event/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://mikaraunio-mbar.p.rapidapi.com/event/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "mikaraunio-mbar.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "datefilter": "upcoming"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mikaraunio-mbar.p.rapidapi.com/event/\"\nquerystring = {\"name\": \"\", \"club\": \"\", \"club__name\": \"\", \"start_time\": \"\", \"end_time\": \"\", \"time_modified\": \"\", \"datefilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mikaraunio-mbar.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "mbar",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "the name of the event",
                    "default": ""
                },
                {
                    "name": "club",
                    "type": "STRING",
                    "description": "the id of the club series the event belongs to.",
                    "default": ""
                },
                {
                    "name": "club__name",
                    "type": "STRING",
                    "description": "the name of the club series the event belongs to.",
                    "default": ""
                },
                {
                    "name": "start_time",
                    "type": "STRING",
                    "description": "the event's start time, in YYYY-MM-DD HH:MM[:ss[.uuuuuu]] format.",
                    "default": ""
                },
                {
                    "name": "end_time",
                    "type": "STRING",
                    "description": "the event's end time, in YYYY-MM-DD HH:MM[:ss[.uuuuuu]] format.",
                    "default": ""
                },
                {
                    "name": "time_modified",
                    "type": "STRING",
                    "description": "the timestamp of the last modification, in YYYY-MM-DD HH:MM[:ss[.uuuuuu]] format.",
                    "default": ""
                },
                {
                    "name": "datefilter",
                    "type": "STRING",
                    "description": "ongoing \u2014 ongoing events, next \u2014 next events, including any ongoing ones., upcoming \u2014 upcoming events, excluding any ongoing ones.today \u2014 all events happening today (day changes at 4 in the morning).tomorrow \u2014 all events happening tomorrow (day changes at 4 in the morning).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest earthquake data in Indonesia and log the output?",
        "model_answer": "requests.get(\"https://indonesia-latest-weather-and-earthquake.p.rapidapi.com/feelbylocal_top15_earthquake\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"indonesia-latest-weather-and-earthquake.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "This API provides Weather forecast data for districts and cities in Indonesia within 3 days and data on earthquake events that occur throughout Indonesia.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indonesia-latest-weather-and-earthquake.p.rapidapi.com/feelbylocal_top15_earthquake'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indonesia-latest-weather-and-earthquake.p.rapidapi.com/feelbylocal_top15_earthquake\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://indonesia-latest-weather-and-earthquake.p.rapidapi.com/feelbylocal_top15_earthquake"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "indonesia-latest-weather-and-earthquake.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indonesia-latest-weather-and-earthquake.p.rapidapi.com/feelbylocal_top15_earthquake\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indonesia-latest-weather-and-earthquake.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indonesia Latest Weather and Earthquake",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get a screenshot of www.google.com using the Images Infos - API1.",
        "model_answer": "requests.get(\"https://images-infos-api1.p.rapidapi.com/getWebsitesScreenshot\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"images-infos-api1.p.rapidapi.com\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Get screenshot or PDF from a website",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://images-infos-api1.p.rapidapi.com/getWebsitesScreenshot'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://images-infos-api1.p.rapidapi.com/getWebsitesScreenshot\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://images-infos-api1.p.rapidapi.com/getWebsitesScreenshot"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "images-infos-api1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://images-infos-api1.p.rapidapi.com/getWebsitesScreenshot\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"images-infos-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Images Infos - API1",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to search for email addresses containing \"example\" and retrieve the results on the 2nd page?",
        "model_answer": "requests.get(\"https://email-address-search.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"email-address-search.p.rapidapi.com\"}, params={\"q\": \"example\", \"type\": \"EMAIL\", \"pagenum\": \"2\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Search our database of email addresses by partial match",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-address-search.p.rapidapi.com/'\nquerystring = {\"q\": \"\", \"type\": \"\", \"pagenum\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-address-search.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://email-address-search.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "email-address-search.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "example",
                            "type": "EMAIL",
                            "pagenum": "2"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-address-search.p.rapidapi.com/\"\nquerystring = {\"pagenum\": \"1\", \"q\": \"craig\", \"type\": \"EMAIL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-address-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email address search",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "craig"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "EMAIL"
                },
                {
                    "name": "pagenum",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the latest news in Cameroon and log the output?",
        "model_answer": "requests.get(\"https://instant-cameroon-news.p.rapidapi.com/camerounnews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"instant-cameroon-news.p.rapidapi.com\"}, params={\"rank\": \"\", \"page\": \"\", \"search\": \"\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Instantly provide the latest news and the latest information on Cameroon. It is the easier way to  get latest news about Cameroon.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instant-cameroon-news.p.rapidapi.com/camerounnews'\nquerystring = {\"rank\": \"\", \"page\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instant-cameroon-news.p.rapidapi.com/camerounnews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instant-cameroon-news.p.rapidapi.com/camerounnews"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instant-cameroon-news.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "rank": "",
                            "page": "",
                            "search": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instant-cameroon-news.p.rapidapi.com/camerounnews\"\nquerystring = {\"rank\": \"\", \"page\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instant-cameroon-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instant Cameroon News",
            "api_arguments_original": [
                {
                    "name": "rank",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with a Python function call to validate the email address \"jane.smith@gmail.com\". I would like to use the email validation API from RapidAPI.",
        "model_answer": "requests.get(\"https://metropolis-api-email.p.rapidapi.com/analysis\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"metropolis-api-email.p.rapidapi.com\"}, params={\"email\": \"jane.smith@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Analyse the content of an Email Address and check if it is valid or not. Email API can recode the Email Address if any common error or misspelling is found. The API can also check for invalid or fake DNS. [This API is under maintenance and is not working properly] ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://metropolis-api-email.p.rapidapi.com/analysis'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://metropolis-api-email.p.rapidapi.com/analysis\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://metropolis-api-email.p.rapidapi.com/analysis"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "metropolis-api-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://metropolis-api-email.p.rapidapi.com/analysis\"\nquerystring = {\"email\": \"support@acme,com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"metropolis-api-email.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email Address",
                    "default": "support@acme,com"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to extract text from a PDF using the Reword PDF API? Here is the file path: \"/path/to/file.pdf\".",
        "model_answer": "requests.get(\"https://reword-pdf1.p.rapidapi.com/v1/pdfs/{pdfId}/download\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"reword-pdf1.p.rapidapi.com\"}, params={\"pdfId\":\"/path/to/file.pdf\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Reword PDF is a pdf editor tool. \nCapabilities:\n- Extract text in a pdf\n- Replace any of these given texts in the pdf.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reword-pdf1.p.rapidapi.com/v1/pdfs/{pdfId}/download'\nquerystring = {\"pdfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reword-pdf1.p.rapidapi.com/v1/pdfs/{pdfId}/download\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://reword-pdf1.p.rapidapi.com/v1/pdfs/{pdfId}/download"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "reword-pdf1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "pdfId": "/path/to/file.pdf"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reword-pdf1.p.rapidapi.com/v1/pdfs/{pdfId}/download\"\nquerystring = {\"pdfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reword-pdf1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Reword PDF",
            "api_arguments_original": [
                {
                    "name": "pdfId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to calculate the age of a person born on January 15, 1995 in the US/Eastern timezone.",
        "model_answer": "requests.get(\"https://age-calculator.p.rapidapi.com/age\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"age-calculator.p.rapidapi.com\"}, params={\"date\": \"19950115\", \"timezone\": \"US/Eastern\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Returns Age calculation based on requested date. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://age-calculator.p.rapidapi.com/age'\nquerystring = {\"date\": \"\", \"timezone\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://age-calculator.p.rapidapi.com/age\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://age-calculator.p.rapidapi.com/age"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "age-calculator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "date": "19950115",
                            "timezone": "US/Eastern"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://age-calculator.p.rapidapi.com/age\"\nquerystring = {\"timezone\": \"US/Eastern\", \"date\": \"19870630\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"age-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Age Calculator",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "This endpoint will accept to following parameters formats:\nYYYYMMDD\nYYY-MM-DD\nMMDDYYYY\nMM-DD-YYYY",
                    "default": "19870630"
                },
                {
                    "name": "timezone",
                    "type": "STRING",
                    "description": "Optional: Default time zone is US/Eastern. To get the correct age based on your local time you can select your timezone. Use the /timezone service to see all available time zones. \nExample: US/Eastern, US/Pacific, Europe/London",
                    "default": "US/Eastern"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the available collections of Sahih Bukhari hadiths from the Hadiths API.",
        "model_answer": "requests.get(\"https://hadiths-api.p.rapidapi.com/collections/639caf9a9ba6cf29e8b8c221\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"hadiths-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "A collection of hadiths API in one place, Sahih Bukhari, Sahih muslim, Ibn majah, Abu Dawud. working on compiling timidhi and nezai insha Allah.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hadiths-api.p.rapidapi.com/collections/639caf9a9ba6cf29e8b8c221'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hadiths-api.p.rapidapi.com/collections/639caf9a9ba6cf29e8b8c221\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://hadiths-api.p.rapidapi.com/collections/639caf9a9ba6cf29e8b8c221"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "hadiths-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hadiths-api.p.rapidapi.com/collections/639caf9a9ba6cf29e8b8c221\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hadiths-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hadiths API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the history and tourism information for the street \"Broadway\" in New York City.",
        "model_answer": "requests.get(\"https://streetnarrator.p.rapidapi.com/prod/street\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"streetnarrator.p.rapidapi.com\"}, params={\"topics\": \"history:1,tourism:1\", \"temperature\": \"0\", \"style\": \"audioguide\", \"language\": \"en\", \"street\": \"Broadway, New York City\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Give us a Street name! Our artificial intelligence will search for information and writes a paragraph according to your options.  StreetNarrator API provides a unique history/touristic AI text for any street around the world.\nThe Stories behind Streets API & From a Street name to the behind story",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://streetnarrator.p.rapidapi.com/prod/street'\nquerystring = {\"street\": \"\", \"topics\": \"\", \"temperature\": \"\", \"style\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://streetnarrator.p.rapidapi.com/prod/street\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://streetnarrator.p.rapidapi.com/prod/street"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "streetnarrator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "topics": "history:1,tourism:1",
                            "temperature": "0",
                            "style": "audioguide",
                            "language": "en",
                            "street": "Broadway, New York City"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://streetnarrator.p.rapidapi.com/prod/street\"\nquerystring = {\"topics\": \"history:1,tourism:1\", \"temperature\": \"0\", \"style\": \"audioguide\", \"language\": \"en\", \"street\": \"1600 Broadway, New York, NY 10019, United States\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"streetnarrator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "StreetNarrator",
            "api_arguments_original": [
                {
                    "name": "street",
                    "type": "STRING",
                    "description": "",
                    "default": "1600 Broadway, New York, NY 10019, United States"
                },
                {
                    "name": "topics",
                    "type": "STRING",
                    "description": "",
                    "default": "history:1,tourism:1"
                },
                {
                    "name": "temperature",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "style",
                    "type": "STRING",
                    "description": "",
                    "default": "audioguide"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to find the distance between postcodeA \"CF103NP\" and postcodeB \"CF103RB\" using the Dargan API and log the output.",
        "model_answer": "requests.get(\"https://dargan.p.rapidapi.com/distance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dargan.p.rapidapi.com\"}, params={\"postcodeA\": \"CF103NP\", \"postcodeB\": \"CF103RB\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Limitless radial search from UK postcodes with distance and coordinate information returned",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dargan.p.rapidapi.com/distance'\nquerystring = {\"postcodeA\": \"\", \"postcodeB\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dargan.p.rapidapi.com/distance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dargan.p.rapidapi.com/distance"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dargan.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dargan.p.rapidapi.com/distance\"\nquerystring = {\"postcodeA\": \"CF103NP\", \"postcodeB\": \"CF103RB\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dargan.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dargan",
            "api_arguments_original": [
                {
                    "name": "postcodeA",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103NP"
                },
                {
                    "name": "postcodeB",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103RB"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the sign hexagram for category 3.",
        "model_answer": "requests.get(\"https://sign-hexagram.p.rapidapi.com/get_sign/3\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"sign-hexagram.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "\u63d0\u4f9b\u7075\u7b7e\u5728\u7ebf\u62bd\u7b7e\u89e3\u7b7e\u3001\u7075\u7b7e\u795e\u5366\u5360\u535c\u3002",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sign-hexagram.p.rapidapi.com/get_sign/{category}'\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sign-hexagram.p.rapidapi.com/get_sign/{category}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sign-hexagram.p.rapidapi.com/get_sign/{category}\"\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sign-hexagram.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sign Hexagram",
            "api_arguments_original": [
                {
                    "name": "category",
                    "type": "ENUM",
                    "description": "Category ID",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "What is the fuel rate for Mumbai city in India?",
        "model_answer": "requests.get(\"https://indian-fuel.p.rapidapi.com/fuel/data\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indian-fuel.p.rapidapi.com\"}, params={\"city\": \"Mumbai\", \"country\": \"India\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "This API contains the fuel rate of every city in India. The fuel price of a particular city can also be viewed.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indian-fuel.p.rapidapi.com/fuel/data'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indian-fuel.p.rapidapi.com/fuel/data\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://indian-fuel.p.rapidapi.com/fuel/data"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "indian-fuel.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "city": "Mumbai",
                            "country": "India"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indian-fuel.p.rapidapi.com/fuel/data\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indian-fuel.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "INDIAN FUEL",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please retrieve the latest results of the Tower game on the Vai de Bob platform?",
        "model_answer": "requests.get(\"https://vai-de-bob-tower-api.p.rapidapi.com/vaidebob-tower-latest\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"vai-de-bob-tower-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "This endpoint allows you to retrieve the latest results of the Aviator game on the Vai de Bob ( vaidebob.com )  platform.  \n\nYou can access the array containing the most recent results of the Aviator game. \n\nEach element of the array represents the numerical value of the result obtained in the game, with the first element being the most recent and the last being the oldest.   \n\nThis endpoint can be integrated into other applications to provide up-to-date information on the results of the Avia...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vai-de-bob-aviator-api.p.rapidapi.com/vaidebob-aviator-latest'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vai-de-bob-aviator-api.p.rapidapi.com/vaidebob-aviator-latest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vai-de-bob-aviator-api.p.rapidapi.com/vaidebob-aviator-latest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vai-de-bob-aviator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vai de Bob Aviator API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check the exchange rate for EUR on a specific date, October 20, 2022, using the Words World API.",
        "model_answer": "requests.get(\"https://words-world.p.rapidapi.com/checkkurs\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"words-world.p.rapidapi.com\"}, params={\"date\": \"2022-10-20\", \"valuta\":\"EUR\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Quote from world people",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://words-world.p.rapidapi.com/checkkurs'\nquerystring = {\"date\": \"\", \"valuta\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://words-world.p.rapidapi.com/checkkurs\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://words-world.p.rapidapi.com/checkkurs"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "words-world.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "date": "2022-10-20",
                            "valuta": "EUR"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://words-world.p.rapidapi.com/checkkurs\"\nquerystring = {\"date\": \"\", \"valuta\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"words-world.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Words World",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "valuta",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a question from ASE's Quiz API for the category \"Entertainment\" and difficulty level \"Hard\"?",
        "model_answer": "requests.get(\"https://ases-quiz-api1.p.rapidapi.com/difficulties/63343ba898b44503fecc49e9\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ases-quiz-api1.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Question API with 500+ questions, 8 categories and 3 difficulties for your apps.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ases-quiz-api1.p.rapidapi.com/difficulties/63343ba898b44503fecc49e9'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ases-quiz-api1.p.rapidapi.com/difficulties/63343ba898b44503fecc49e9\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ases-quiz-api1.p.rapidapi.com/difficulties/63343ba898b44503fecc49e9\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ases-quiz-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ASE's Quiz API",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "63343ba898b44503fecc49e9"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get the description, title, and image of a given URL using the Unfurl API written in go, with the URL set to 'https://example.com'?",
        "model_answer": "requests.get(\"https://unfurl-api-written-in-go.p.rapidapi.com/unfurl\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"unfurl-api-written-in-go.p.rapidapi.com\"}, params={\"url\": \"https://example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Simplest API to unfurl URL descriptions, titles, images, and products, from all sites without being blocked. Fast and reliable.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://unfurl-api-written-in-go.p.rapidapi.com/unfurl'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://unfurl-api-written-in-go.p.rapidapi.com/unfurl\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://unfurl-api-written-in-go.p.rapidapi.com/unfurl"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "unfurl-api-written-in-go.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://unfurl-api-written-in-go.p.rapidapi.com/unfurl\"\nquerystring = {\"url\": \"youtube.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"unfurl-api-written-in-go.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Unfurl API written in go",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "youtube.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve the standings for the Primeira Liga for the 2022 season using the RapidAPI service and print the response?",
        "model_answer": "requests.get(\"https://primeira-liga-standings.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"primeira-liga-standings.p.rapidapi.com\"}, params={\"season\": \"2022\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Portuguese Primeira Liga Standings & Table",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://primeira-liga-standings.p.rapidapi.com/'\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://primeira-liga-standings.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{ \"X-RapidAPI-Key\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{ \"season\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://primeira-liga-standings.p.rapidapi.com/\"\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"primeira-liga-standings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Primeira Liga Standings",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me find the prices of gasoline and diesel in different fuel stations in different cities in Europe?",
        "model_answer": "requests.get(\"https://gas-price.p.rapidapi.com/europeanCountries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"gas-price.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Reach gasoline and diesel prices in different fuel stations in different cities.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gas-price.p.rapidapi.com/europeanCountries'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gas-price.p.rapidapi.com/europeanCountries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://gas-price.p.rapidapi.com/europeanCountries"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "gas-price.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/europeanCountries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Gas Price",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to detect the language of the text \"Hola a todos\" using the Text Language by API-Ninjas API?",
        "model_answer": "requests.get(\"https://text-language-by-api-ninjas.p.rapidapi.com/v1/textlanguage\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"text-language-by-api-ninjas.p.rapidapi.com\"}, params={\"text\": \"Hola a todos\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Detect the language from any input text. See more info at https://api-ninjas.com/api/textlanguage.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://text-language-by-api-ninjas.p.rapidapi.com/v1/textlanguage'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://text-language-by-api-ninjas.p.rapidapi.com/v1/textlanguage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://text-language-by-api-ninjas.p.rapidapi.com/v1/textlanguage"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "text-language-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://text-language-by-api-ninjas.p.rapidapi.com/v1/textlanguage\"\nquerystring = {\"text\": \"hello world!\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"text-language-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Text Language by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "hello world!"
                }
            ]
        }
    },
    {
        "query": "Please convert the number 1000000 into a human-readable form.",
        "model_answer": "requests.get(\"https://refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com/1000\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com\"}, params={\"number\": \"1000000\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "By this API, you can refactor any number into human-readable form like 1000 can be read as 1K, or 1000000 can be read as 1M.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com/1000'\nquerystring = {\"number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com/1000\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com/1000"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com/1000\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Refactor numbers in human readable form like 1K or 1M",
            "api_arguments_original": [
                {
                    "name": "number",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1000"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the available versions for C# Code Compiler?",
        "model_answer": "requests.get(\"https://c-sharp-code-compiler.p.rapidapi.com/versions/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"c-sharp-code-compiler.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "C# Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://c-sharp-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://c-sharp-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://c-sharp-code-compiler.p.rapidapi.com/versions/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "c-sharp-code-compiler.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://c-sharp-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"c-sharp-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "C Sharp Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to extract text from a national ID card image using the National ID Vietnam OCR API, by passing the request_id as '68bbb910-da9b-4d8a-9a1d-4bd878b19846' as a parameter?",
        "model_answer": "requests.get(\"https://national-id-vietnam-ocr.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"national-id-vietnam-ocr.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Vietnam NID OCR API allows you to onboard your customers with speed and precision.\n\nEnable them to pre-fill their onboarding forms instantly, by just uploading or scanning their NID card \u2013 IDfy will digitize the document for you!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://national-id-vietnam-ocr.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://national-id-vietnam-ocr.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://national-id-vietnam-ocr.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "national-id-vietnam-ocr.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "request_id": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://national-id-vietnam-ocr.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-id-vietnam-ocr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "National ID Vietnam OCR",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you find the gender of the name \"Emily\" using the Gender From Name API and store the response in a variable called \"gender_response\"?",
        "model_answer": "gender_response = requests.get(\"https://gender-from-name.p.rapidapi.com/gender/Emily\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"gender-from-name.p.rapidapi.com\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Find the gender by just using a name.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gender-from-name.p.rapidapi.com/gender/Jane'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gender-from-name.p.rapidapi.com/gender/Jane\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://gender-from-name.p.rapidapi.com/gender/Emily"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "gender-from-name.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gender-from-name.p.rapidapi.com/gender/Jane\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gender-from-name.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Gender From Name",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "",
                    "default": "Jane"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me details and statistics about the TV show with the Season IDs 24680 and 13579 from the Netflix Data API?",
        "model_answer": "requests.get(\"https://netflix-data.p.rapidapi.com/season/episodes/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"netflix-data.p.rapidapi.com\"}, params={\"ids\": \"24680, 13579\", \"limit\": \"25\", \"offset\": \"0\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://netflix-data.p.rapidapi.com/season/episodes/'\nquerystring = {\"ids\": \"\", \"limit\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://netflix-data.p.rapidapi.com/season/episodes/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://netflix-data.p.rapidapi.com/season/episodes/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "netflix-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ids": "24680, 13579",
                            "limit": "25",
                            "offset": "0"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://netflix-data.p.rapidapi.com/season/episodes/\"\nquerystring = {\"limit\": \"25\", \"offset\": \"0\", \"ids\": \"80077209,80117715\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"netflix-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Netflix Data",
            "api_arguments_original": [
                {
                    "name": "ids",
                    "type": "STRING",
                    "description": "Season IDs (you can separate with commas)",
                    "default": "80077209,80117715"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Episode Limit",
                    "default": "25"
                },
                {
                    "name": "offset",
                    "type": "STRING",
                    "description": "Offset",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "How can I search for an entity with the uid 10001 in OFAC Service API?",
        "model_answer": "requests.get(\"https://ofac-service.p.rapidapi.com/data/entity/10001\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"ofac-service.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Searches an entity from OFAC's Sanctions List with fuzzy logic on its name search field to look for potential matches on the Specially Designated Nationals (SDN) List and on its Non-SDN Consolidated Sanctions List.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ofac-service.p.rapidapi.com/data/entity/7178'\nquerystring = {\"uid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ofac-service.p.rapidapi.com/data/entity/7178\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ofac-service.p.rapidapi.com/data/entity/10001"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ofac-service.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ofac-service.p.rapidapi.com/data/entity/7178\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ofac-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OFAC Service",
            "api_arguments_original": [
                {
                    "name": "uid",
                    "type": "NUMBER",
                    "description": "",
                    "default": "7178"
                }
            ]
        }
    },
    {
        "query": "I want to check the number of working days in Canada from 2022-01-01 to 2022-12-31.",
        "model_answer": "requests.get(\"https://working-days.p.rapidapi.com/1.3/get_info_day\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"working-days.p.rapidapi.com\"}, params={\"country_code\": \"CA\", \"date\": \"2022-01-01\", \"configuration\": \"\", \"profile_id\": \"\"})",
        "original": {
            "domain": "Events",
            "framework": "RapidAPI",
            "functionality": "The API returns the number of days,  hours, working days, working hours, wages, weekend days, and the list of public holidays of the requested date period and country. You can also add any number of working days or working hours to a given date. 50 countries and over 230 regional calendars are supported and we work hard to keep our database up to date by following government announcements regarding public holidays changes. All the calendars can be fully customized from our friendly working da...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://working-days.p.rapidapi.com/1.3/get_info_day'\nquerystring = {\"country_code\": \"\", \"date\": \"\", \"configuration\": \"\", \"profile_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://working-days.p.rapidapi.com/1.3/get_info_day\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://working-days.p.rapidapi.com/1.3/get_info_day"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "working-days.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "country_code": "CA",
                            "date": "2022-01-01",
                            "configuration": "",
                            "profile_id": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://working-days.p.rapidapi.com/1.3/get_info_day\"\nquerystring = {\"configuration\": \"Federal holidays\", \"country_code\": \"US\", \"profile_id\": \"\", \"date\": \"2013-12-31\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"working-days.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Working days",
            "api_arguments_original": [
                {
                    "name": "country_code",
                    "type": "STRING",
                    "description": "The ISO country code (2 letters).  See <a href=https://api.workingdays.org/1.2/api-countries.php>available countries & configurations</a>",
                    "default": "US"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "The date to analyze (YYYY-MM-DD)",
                    "default": "2013-12-31"
                },
                {
                    "name": "configuration",
                    "type": "STRING",
                    "description": "The name of the preset configuration to be used. See <a href=https://api.workingdays.org/1.2/api-countries.php>available countries & configurations</a>",
                    "default": "Federal holidays"
                },
                {
                    "name": "profile_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you show me a random collection of 5 shoes?",
        "model_answer": "requests.get(\"https://shoes-collections.p.rapidapi.com/shoes/5\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"shoes-collections.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "This api provides you 30 random shoes ..",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shoes-collections.p.rapidapi.com/shoes/3'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shoes-collections.p.rapidapi.com/shoes/3\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shoes-collections.p.rapidapi.com/shoes/3\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shoes-collections.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shoes collections",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the city and country data for placeId \"789\" in miles distance unit and the distance to placeId \"012\".",
        "model_answer": "requests.get(\"https://wft-geo-db.p.rapidapi.com/v1/geo/places/789/distance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"wft-geo-db.p.rapidapi.com\"}, params={\"placeId\": \"789\", \"distanceUnit\":\"MI\", \"toPlaceId\":\"012\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get global city, region, and country data. Filter and display results in multiple languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/distance'\nquerystring = {\"placeId\": \"\", \"distanceUnit\": \"\", \"toPlaceId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/distance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://wft-geo-db.p.rapidapi.com/v1/geo/places/789/distance"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "wft-geo-db.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/distance\"\nquerystring = {\"placeId\": \"\", \"distanceUnit\": \"\", \"toPlaceId\": \"Q60\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GeoDB Cities",
            "api_arguments_original": [
                {
                    "name": "placeId",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance: KM | MI [default]",
                    "default": ""
                },
                {
                    "name": "toPlaceId",
                    "type": "STRING",
                    "description": "The distance to this place",
                    "default": "Q60"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain a short URL using the SMSAPI.com API?",
        "model_answer": "requests.get(\"https://smsapi-com3.p.rapidapi.com/short_url/links\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"smsapi-com3.p.rapidapi.com\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Powerful and easy SMS communication at your fingertips!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://smsapi-com3.p.rapidapi.com/short_url/links'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://smsapi-com3.p.rapidapi.com/short_url/links\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://smsapi-com3.p.rapidapi.com/short_url/links"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "smsapi-com3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://smsapi-com3.p.rapidapi.com/short_url/links\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsapi-com3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SMSAPI.com",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me get the download URLs for a song on ReverbNation with the URL \"https://www.reverbnation.com/artist/song/54321\"?",
        "model_answer": "requests.get(\"https://reverbnation-song-downloader.p.rapidapi.com/reverbnation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"reverbnation-song-downloader.p.rapidapi.com\"}, params={\"url\": \"https://www.reverbnation.com/artist/song/54321\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Get ReverbNation data of any paid song(s) with download URLs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reverbnation-song-downloader.p.rapidapi.com/reverbnation'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reverbnation-song-downloader.p.rapidapi.com/reverbnation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://reverbnation-song-downloader.p.rapidapi.com/reverbnation"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "reverbnation-song-downloader.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reverbnation-song-downloader.p.rapidapi.com/reverbnation\"\nquerystring = {\"url\": \"https://www.reverbnation.com/lenafayre/song/22754745-this-world\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reverbnation-song-downloader.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ReverbNation Song Downloader",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.reverbnation.com/lenafayre/song/22754745-this-world"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the news, learning resources, events, samples, and other information from Microsoft Power BI API?",
        "model_answer": "requests.get(\"https://powerbi.p.rapidapi.com/sponsorships/today/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"powerbi.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://powerbi.p.rapidapi.com/sponsorships/today/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://powerbi.p.rapidapi.com/sponsorships/today/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://powerbi.p.rapidapi.com/sponsorships/today/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"powerbi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PowerBI",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I use the MyNewTestApi to get data and log the response?",
        "model_answer": "requests.get(\"https://mynewtestapi.p.rapidapi.com/my-new-test-endpoint\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mynewtestapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "My new test API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mynewtestapi.p.rapidapi.com/my-new-test-endpoint'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mynewtestapi.p.rapidapi.com/my-new-test-endpoint\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mynewtestapi.p.rapidapi.com/my-new-test-endpoint\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mynewtestapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MyNewTestApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the available versions of Haskell Code Compiler.",
        "model_answer": "requests.get(\"https://haskell-code-compiler.p.rapidapi.com/versions/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"haskell-code-compiler.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Haskell Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://haskell-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://haskell-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://haskell-code-compiler.p.rapidapi.com/versions/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "haskell-code-compiler.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://haskell-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"haskell-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Haskell Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to generate a random username for a website with a minimum age of 25 and a maximum age of 35, in the en_GB locale and the domain example.com.",
        "model_answer": "requests.get(\"https://random-username-generate.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"random-username-generate.p.rapidapi.com\"}, params={\"minAge\": 25, \"maxAge\": 35, \"locale\": \"en_GB\", \"domain\": \"example.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "If you need a random username for a website or application, then Ugener is the perfect choice for millions of random ideas.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-username-generate.p.rapidapi.com/'\nquerystring = {\"minAge\": \"\", \"locale\": \"\", \"maxAge\": \"\", \"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-username-generate.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://random-username-generate.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "random-username-generate.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "minAge": 25,
                            "maxAge": 35,
                            "locale": "en_GB",
                            "domain": "example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-username-generate.p.rapidapi.com/\"\nquerystring = {\"domain\": \"ugener.com\", \"minAge\": \"18\", \"locale\": \"en_US\", \"maxAge\": \"50\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-username-generate.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Username Generate",
            "api_arguments_original": [
                {
                    "name": "minAge",
                    "type": "NUMBER",
                    "description": "",
                    "default": "18"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": "en_US"
                },
                {
                    "name": "maxAge",
                    "type": "NUMBER",
                    "description": "",
                    "default": "50"
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "ugener.com"
                }
            ]
        }
    },
    {
        "query": "Can you please provide the latest news for tickers AAPL, MSFT, and GOOG using the Webull API?",
        "model_answer": "requests.get(\"https://webull.p.rapidapi.com/news/list-by-portfolio\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"webull.p.rapidapi.com\"}, params={\"tickerIds\": \"AAPL,MSFT,GOOG\", \"currentNewsId\": \"0\", \"pageSize\": \"20\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Query public data for investment products including stocks, fractional shares, options, ETFs, and ADRs as on webull.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webull.p.rapidapi.com/news/list-by-portfolio'\nquerystring = {\"tickerIds\": \"\", \"currentNewsId\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webull.p.rapidapi.com/news/list-by-portfolio\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://webull.p.rapidapi.com/news/list-by-portfolio"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "webull.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webull.p.rapidapi.com/news/list-by-portfolio\"\nquerystring = {\"currentNewsId\": \"0\", \"pageSize\": \"20\", \"tickerIds\": \"913353822,913354090,913256135,913303964\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webull.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webull",
            "api_arguments_original": [
                {
                    "name": "tickerIds",
                    "type": "STRING",
                    "description": "The value of tickerId field returned in other endpoints, such as .../stock/search or .../market/get-common-ranking or .../market/get-top-active or .../market/get-top-gainers or etc...Separated by comma for multiple tickers",
                    "default": "913353822,913354090,913256135,913303964"
                },
                {
                    "name": "currentNewsId",
                    "type": "NUMBER",
                    "description": "For paging purpose, the last news id returned right in this endpoint, pass 0 for the first query",
                    "default": "0"
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "For paging purpose, maximum is 20",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the leaderboard for the Binance Futures Exchange for the encrypted user with ID \"def456\" and trade type \"DELIVERY\".",
        "model_answer": "requests.get(\"https://binance-futures-leaderboard1.p.rapidapi.com/v1/getOtherPerformance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"binance-futures-leaderboard1.p.rapidapi.com\"}, params={\"encryptedUid\": \"def456\", \"tradeType\": \"DELIVERY\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://binance-futures-leaderboard1.p.rapidapi.com/v1/getOtherPerformance'\nquerystring = {\"encryptedUid\": \"\", \"tradeType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://binance-futures-leaderboard1.p.rapidapi.com/v1/getOtherPerformance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://binance-futures-leaderboard1.p.rapidapi.com/v1/getOtherPerformance"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "binance-futures-leaderboard1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "encryptedUid": "def456",
                            "tradeType": "DELIVERY"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://binance-futures-leaderboard1.p.rapidapi.com/v1/getOtherPerformance\"\nquerystring = {\"encryptedUid\": \"\", \"tradeType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-futures-leaderboard1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Binance Futures Leaderboard",
            "api_arguments_original": [
                {
                    "name": "encryptedUid",
                    "type": "STRING",
                    "description": "The encrypted UID of the trader",
                    "default": ""
                },
                {
                    "name": "tradeType",
                    "type": "ENUM",
                    "description": "The trade type to search. PERPETUAL is USD\u24c8-M and DELIVERY is COIN-M",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Is there an API that can check if the scooter rental is available in Athens?",
        "model_answer": "requests.get(\"https://sigma-scooters.p.rapidapi.comhttps://sigma-scooters-offers.weebly.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sigma-scooters.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Electric Scooter rental in Athens",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sigma-scooters.p.rapidapi.comhttps://sigma-scooters-offers.weebly.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sigma-scooters.p.rapidapi.comhttps://sigma-scooters-offers.weebly.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sigma-scooters.p.rapidapi.comhttps://sigma-scooters-offers.weebly.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sigma-scooters.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sigma Scooters",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to check if the email address \"example@gmail.com\" is a valid email address?",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Test api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://currencyconverter4.p.rapidapi.comvk.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://currencyconverter4.p.rapidapi.comvk.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://currencyconverter4.p.rapidapi.comvk.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"currencyconverter4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CurrencyConverter",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check the DNS information for the IP address 10.0.0.1?",
        "model_answer": "requests.get(\"https://dns-lookup11.p.rapidapi.com/reverse\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dns-lookup11.p.rapidapi.com\"}, params={\"ip\": \"10.0.0.1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "NsLookup queries the specified DNS server and retrieves records associated with the domain name you provided.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dns-lookup11.p.rapidapi.com/reverse'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dns-lookup11.p.rapidapi.com/reverse\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dns-lookup11.p.rapidapi.com/reverse"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dns-lookup11.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ip": "10.0.0.1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dns-lookup11.p.rapidapi.com/reverse\"\nquerystring = {\"ip\": \"8.8.8.8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dns-lookup11.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DNS Lookup",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "8.8.8.8"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the worldwide flight schedules with connection building?",
        "model_answer": "requests.get(\"https://timetable-lookup.p.rapidapi.com/codes/entertainment/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"timetable-lookup.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Access Worldwide Flight Schedules with connection building.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://timetable-lookup.p.rapidapi.com/codes/entertainment/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://timetable-lookup.p.rapidapi.com/codes/entertainment/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://timetable-lookup.p.rapidapi.com/codes/entertainment/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "timetable-lookup.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://timetable-lookup.p.rapidapi.com/codes/entertainment/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"timetable-lookup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TimeTable Lookup ",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I translate the word \"goodbye\" from English to Spanish?",
        "model_answer": "requests.get(\"https://hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com/languages/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "FREE Dictionary Translation API Hablaa. Use it to translate words from and into more than 160 languages. The API use is free and requires no authentication. Have fun!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com/languages/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com/languages/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com/languages/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com/languages/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dictionary Translation Hablaa",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the Python code to check the latest results of the Aviator game on the Estrelabet platform using the Estrelabet Aviator API?",
        "model_answer": "requests.get('https://estrelabet-aviator-api.p.rapidapi.com/estrelabet-aviator-latest', headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"estrelabet-aviator-api.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "This endpoint allows you to retrieve the latest results of the Aviator game on the Estrelabet ( \nestrelabet.com )platform.  \n\nYou can access the array containing the most recent results of the Aviator game. \n\nEach element of the array represents the numerical value of the result obtained in the game, with the first element being the most recent and the last being the oldest.   \n\nThis endpoint can be integrated into other applications to provide up-to-date information on the results of the Avi...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://estrelabet-aviator-api.p.rapidapi.com/estrelabet-aviator-latest'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://estrelabet-aviator-api.p.rapidapi.com/estrelabet-aviator-latest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "'https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://estrelabet-aviator-api.p.rapidapi.com/estrelabet-aviator-latest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"estrelabet-aviator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Estrelabet Aviator API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the historical data for the domain yahoo.com using the SimilarWeb API.",
        "model_answer": "requests.get(\"https://similarweb-historical-data.p.rapidapi.com/api/getCountries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"similarweb-historical-data.p.rapidapi.com\"}, params={\"domain\": \"yahoo.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "More than 36 month visits and countries share SimilarWeb data ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://similarweb-historical-data.p.rapidapi.com/api/getCountries'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://similarweb-historical-data.p.rapidapi.com/api/getCountries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://similarweb-historical-data.p.rapidapi.com/api/getCountries"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "similarweb-historical-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domain": "yahoo.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://similarweb-historical-data.p.rapidapi.com/api/getCountries\"\nquerystring = {\"domain\": \"google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"similarweb-historical-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SimilarWeb (historical data)",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "Domain name (like google.com)",
                    "default": "google.com"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve a list of cities that start with the prefix \"San\" in the United States and Canada, and I want to limit the results to 5. ",
        "model_answer": "requests.get(\"https://spott.p.rapidapi.com/places/autocomplete\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"spott.p.rapidapi.com\"}, params={\"limit\": 5, \"skip\": 0, \"language\": \"\", \"country\": \"US,CA\", \"adminDivision1\": \"\", \"accuracyRadiusKm\": \"\", \"latitude\": \"\", \"adminDivision2\": \"\", \"q\": \"San\", \"longitude\": \"\", \"type\": \"CITY\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Search cities, countries and administrative divisions by name, autocompletion or IP.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://spott.p.rapidapi.com/places/autocomplete'\nquerystring = {\"limit\": \"\", \"skip\": \"\", \"language\": \"\", \"country\": \"\", \"adminDivision1\": \"\", \"accuracyRadiusKm\": \"\", \"latitude\": \"\", \"adminDivision2\": \"\", \"q\": \"\", \"longitude\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://spott.p.rapidapi.com/places/autocomplete\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://spott.p.rapidapi.com/places/autocomplete"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "spott.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "limit": 5,
                            "skip": 0,
                            "language": "",
                            "country": "US,CA",
                            "adminDivision1": "",
                            "accuracyRadiusKm": "",
                            "latitude": "",
                            "adminDivision2": "",
                            "q": "San",
                            "longitude": "",
                            "type": "CITY"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://spott.p.rapidapi.com/places/autocomplete\"\nquerystring = {\"limit\": \"10\", \"skip\": \"0\", \"language\": \"\", \"country\": \"US,CA\", \"adminDivision1\": \"\", \"accuracyRadiusKm\": \"\", \"latitude\": \"\", \"adminDivision2\": \"\", \"q\": \"Sea\", \"longitude\": \"\", \"type\": \"CITY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spott.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Spott",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                    "default": "10"
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                    "default": "0"
                },
                {
                    "name": "language",
                    "type": "ENUM",
                    "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                    "default": "US,CA"
                },
                {
                    "name": "adminDivision1",
                    "type": "STRING",
                    "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                    "default": ""
                },
                {
                    "name": "accuracyRadiusKm",
                    "type": "NUMBER",
                    "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                    "default": ""
                },
                {
                    "name": "latitude",
                    "type": "NUMBER",
                    "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                    "default": ""
                },
                {
                    "name": "adminDivision2",
                    "type": "STRING",
                    "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Query string to find places which name starts with this prefix.",
                    "default": "Sea"
                },
                {
                    "name": "longitude",
                    "type": "NUMBER",
                    "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                    "default": "CITY"
                }
            ]
        }
    },
    {
        "query": "Please extract the main article content from the URL \"https://www.example.com/article\".",
        "model_answer": "requests.get(\"https://article-content-extractor1.p.rapidapi.com/extract\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"article-content-extractor1.p.rapidapi.com\"}, params={\"url\": \"https://www.example.com/article\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Provide a URL and get main article content from news articles or blog",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://article-content-extractor1.p.rapidapi.com/extract'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://article-content-extractor1.p.rapidapi.com/extract\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://article-content-extractor1.p.rapidapi.com/extract"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "article-content-extractor1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://article-content-extractor1.p.rapidapi.com/extract\"\nquerystring = {\"url\": \"https://rapidapi.com/blog/api-glossary/api/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"article-content-extractor1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Article Content Extractor",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://rapidapi.com/blog/api-glossary/api/"
                }
            ]
        }
    },
    {
        "query": "Please retrieve the annotation details for the file \"/documents/myfile.docx\" in the storage \"myStorage\" and store the response in a variable called \"annotation_details\".",
        "model_answer": "annotation_details = requests.get(\"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/documents/myfile.docx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"groupdocs-annotation-cloud.p.rapidapi.com\"}, params={\"storageName\": \"myStorage\", \"versionId\":\"\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "The GroupDocs.Annotation Cloud is a REST API that helps you apply text & figure annotations to the documents in the cloud.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/{path}'\nquerystring = {\"path\": \"\", \"storageName\": \"\", \"versionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/{path}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/documents/myfile.docx"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "groupdocs-annotation-cloud.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/{path}\"\nquerystring = {\"storageName\": \"\", \"versionId\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GroupDocs.Annotation Cloud",
            "api_arguments_original": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/folder/file.ext'",
                    "default": ""
                },
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                },
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID to download",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to translate the text \"Hello world\" into Spanish using the RapidAPI Text Translator_v2 API?",
        "model_answer": "requests.get(\"https://text-translator2.p.rapidapi.com/getLanguages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"text-translator2.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Translate text to 100+ languages \u200b. Fast processing, cost saving. Free up to 100,000 characters per month",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://text-translator2.p.rapidapi.com/getLanguages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://text-translator2.p.rapidapi.com/getLanguages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://text-translator2.p.rapidapi.com/getLanguages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"text-translator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Text Translator_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Get information about the company \"XYZ Corporation\" from the Uganda Company Data API.",
        "model_answer": "requests.get(\"https://uganda-company-data.p.rapidapi.com/namesearch/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"uganda-company-data.p.rapidapi.com\"}, params={\"name\": \"XYZ Corporation\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Access the official Uganda Governmnent company register, ideal for KYB purposes",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uganda-company-data.p.rapidapi.com/namesearch/search'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uganda-company-data.p.rapidapi.com/namesearch/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://uganda-company-data.p.rapidapi.com/namesearch/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "uganda-company-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "name": "XYZ Corporation"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uganda-company-data.p.rapidapi.com/namesearch/search\"\nquerystring = {\"name\": \"Uganda Airlines\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uganda-company-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Uganda Company Data",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Uganda Airlines"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to validate the email address \"test@example.com\" using the Email Utilities API. Additionally, save the response in a variable called \"response\".",
        "model_answer": "requests.get(\"https://email-utilities.p.rapidapi.com/normalize\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"email-utilities.p.rapidapi.com\"}, params={\"email\": \"test@example.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "API to validate email and normalize email",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-utilities.p.rapidapi.com/normalize'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-utilities.p.rapidapi.com/normalize\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://email-utilities.p.rapidapi.com/normalize"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "email-utilities.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-utilities.p.rapidapi.com/normalize\"\nquerystring = {\"email\": \"cognitive.camp@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-utilities.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Utilities",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "email id",
                    "default": "cognitive.camp@gmail.com"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest Climate Change news from The New York Times.",
        "model_answer": "requests.get(\"https://climate-change-api-tutorial.p.rapidapi.com/news/nytimes\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"climate-change-api-tutorial.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API showing all the latest Climate Change News around the world",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-change-api-tutorial.p.rapidapi.com/news/guardian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-change-api-tutorial.p.rapidapi.com/news/guardian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-change-api-tutorial.p.rapidapi.com/news/guardian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-change-api-tutorial.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate Change API Tutorial",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "guardian"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the API key for Gigopost using the email exampleemail@gmail.com?",
        "model_answer": "requests.get(\"https://gigopost.p.rapidapi.com/get_api_key\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"gigopost.p.rapidapi.com\"}, params={\"email\": \"exampleemail@gmail.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "The simplest way to involve your teams to share company brand content",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gigopost.p.rapidapi.com/get_api_key'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gigopost.p.rapidapi.com/get_api_key\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://gigopost.p.rapidapi.com/get_api_key"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "gigopost.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "exampleemail@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gigopost.p.rapidapi.com/get_api_key\"\nquerystring = {\"email\": \"yardilloapi@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gigopost.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Gigopost",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "yardilloapi@gmail.com"
                }
            ]
        }
    },
    {
        "query": "Can you help me search for the price of an iPhone 12 Pro on Amazon using the AG Amazon Data Web Scraper API?",
        "model_answer": "requests.get(\"https://ag-amazon-data-web-scraper.p.rapidapi.com/search/iPhone 12 Pro\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ag-amazon-data-web-scraper.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "AG Amazon Data Web Scraper Is The Easiest Way To Get Access To Any Of The Products Including Prices, Offers, Sales Rank, Reviews And Other Information Regarding The Products On Amazon In JSON Format. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ag-amazon-data-web-scraper.p.rapidapi.com/search/Macbook Air'\nquerystring = {\"searchQuery\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ag-amazon-data-web-scraper.p.rapidapi.com/search/Macbook Air\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ag-amazon-data-web-scraper.p.rapidapi.com/search/iPhone 12 Pro"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ag-amazon-data-web-scraper.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ag-amazon-data-web-scraper.p.rapidapi.com/search/Macbook Air\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ag-amazon-data-web-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AG Amazon Data Web Scraper",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "Macbook Air"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with some fake users?",
        "model_answer": "requests.get(\"https://fake-users6.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"fake-users6.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "fake users is a Api that give you fake users",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fake-users6.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fake-users6.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fake-users6.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fake-users6.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fake-users6.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fake-users6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "fake users",
            "api_arguments_original": []
        }
    },
    {
        "query": "Is there an API to check whether a given phone number is valid? Please provide a Python function call that calls the API and passes the phone number '1234567890' as a parameter.",
        "model_answer": "requests.get(\"https://phone-validator.p.rapidapi.com/validate/phone-number\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"phone-validator.p.rapidapi.com\"}, params={\"phoneNumber\": \"1234567890\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Fodase fodase",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fodase1.p.rapidapi.com/users'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fodase1.p.rapidapi.com/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://phone-validator.p.rapidapi.com/validate/phone-number"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "phone-validator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "phoneNumber": "1234567890"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fodase1.p.rapidapi.com/users\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fodase1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fodase",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to get the current gas prices in the USA and log the output?",
        "model_answer": "requests.get(\"https://canadian-gas-prices.p.rapidapi.com/usa\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"canadian-gas-prices.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Provides current gas prices in Canada. Try the `/locations-list` endpoint to view all supported locations.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://canadian-gas-prices.p.rapidapi.com/usa'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://canadian-gas-prices.p.rapidapi.com/usa\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://canadian-gas-prices.p.rapidapi.com/usa\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"canadian-gas-prices.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Canadian Gas Prices",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if this URL \"http://example.com\" is a phishing attempt using the Exerra phishing check API?",
        "model_answer": "requests.get(\"https://exerra-phishing-check.p.rapidapi.com/stats\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"exerra-phishing-check.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This API checks URLs to see whether they are known phishing attempts. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://exerra-phishing-check.p.rapidapi.com/stats'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://exerra-phishing-check.p.rapidapi.com/stats\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://exerra-phishing-check.p.rapidapi.com/stats"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "exerra-phishing-check.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://exerra-phishing-check.p.rapidapi.com/stats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"exerra-phishing-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Exerra phishing check",
            "api_arguments_original": []
        }
    },
    {
        "query": "I have a PDF file called \"QRCodeFieldExamples.pdf\" and I want to decode the QR codes from this PDF file.",
        "model_answer": "requests.get(\"https://qr-decoder.p.rapidapi.com/getQRCodesFromPDForImage\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\",\"X-RapidAPI-Host\":\"qr-decoder.p.rapidapi.com\"}, params={\"src\": \"https://www.pdfscripting.com/public/FreeStuff/PDFSamples/QRCodeFieldExamples.pdf\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Decode QRCodes from an image or PDF.\nReturns an array of decoded messages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-decoder.p.rapidapi.com/getQRCodesFromPDForImage'\nquerystring = {\"src\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-decoder.p.rapidapi.com/getQRCodesFromPDForImage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://qr-decoder.p.rapidapi.com/getQRCodesFromPDForImage"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "qr-decoder.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "src": "https://www.pdfscripting.com/public/FreeStuff/PDFSamples/QRCodeFieldExamples.pdf"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-decoder.p.rapidapi.com/getQRCodesFromPDForImage\"\nquerystring = {\"src\": \"https://www.pdfscripting.com/public/FreeStuff/PDFSamples/QRCodeFieldExamples.pdf\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-decoder.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR Decoder",
            "api_arguments_original": [
                {
                    "name": "src",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.pdfscripting.com/public/FreeStuff/PDFSamples/QRCodeFieldExamples.pdf"
                }
            ]
        }
    },
    {
        "query": "I want to generate a QR code for the URL \"www.example.org\" using the QR Code API.",
        "model_answer": "requests.get(\"https://qr-code-api137.p.rapidapi.com/qr\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qr-code-api137.p.rapidapi.com\"}, params={\"url\": \"www.example.org\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": " This Api takes URL, or string and returns the QR code image",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-code-api137.p.rapidapi.com/qr'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-code-api137.p.rapidapi.com/qr\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://qr-code-api137.p.rapidapi.com/qr"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "qr-code-api137.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "www.example.org"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-code-api137.p.rapidapi.com/qr\"\nquerystring = {\"url\": \"www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-api137.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR Code API_v33",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "www.google.com"
                }
            ]
        }
    },
    {
        "query": "I want to download the display picture and basic details of the Instagram profile with the username \"janesmith\".",
        "model_answer": "requests.get(\"https://instagram-dp-download1.p.rapidapi.com/api/id1\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"instagram-dp-download1.p.rapidapi.com\"}, params={\"id\":\"janesmith\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Download Instagram profile dp and basic details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-dp-download1.p.rapidapi.com/api/id1'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-dp-download1.p.rapidapi.com/api/id1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instagram-dp-download1.p.rapidapi.com/api/id1"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instagram-dp-download1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "janesmith"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-dp-download1.p.rapidapi.com/api/id1\"\nquerystring = {\"id\": \"deepikapadukone\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-dp-download1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram DP Download",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Enter your username or profile link",
                    "default": "deepikapadukone"
                }
            ]
        }
    },
    {
        "query": "Can you help me scan the QR code from this image URL: \"https://example.com/image.png\"",
        "model_answer": "requests.get(\"https://qr-scanner-api.p.rapidapi.com/api/QR/scanimageurl\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"qr-scanner-api.p.rapidapi.com\"}, params={\"imageUrl\": \"https://example.com/image.png\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Scan QR & Barcode images from files or URLs and return the equivalent QR-Text or Barcode-Number plus code format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-scanner-api.p.rapidapi.com/api/QR/scanimageurl'\nquerystring = {\"imageUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-scanner-api.p.rapidapi.com/api/QR/scanimageurl\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://qr-scanner-api.p.rapidapi.com/api/QR/scanimageurl"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "qr-scanner-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-scanner-api.p.rapidapi.com/api/QR/scanimageurl\"\nquerystring = {\"imageUrl\": \"set-your-image-URL-here\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-scanner-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR-Scanner-Api",
            "api_arguments_original": [
                {
                    "name": "imageUrl",
                    "type": "STRING",
                    "description": "Image URL which you want to scan",
                    "default": "set-your-image-URL-here"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to preview the link https://www.example.com using the OG Link Preview API?",
        "model_answer": "requests.get(\"https://og-link-preview.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"og-link-preview.p.rapidapi.com\"}, params={\"url\": \"https://www.example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Link preview uses Open Graph protocol to get metadata from a website such as a title, description, images, favicon and raw data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://og-link-preview.p.rapidapi.com/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://og-link-preview.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://og-link-preview.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "og-link-preview.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://og-link-preview.p.rapidapi.com/\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"og-link-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OG Link preview",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the details of the movie \"Inception\"?",
        "model_answer": "requests.get(\"https://movies-details1.p.rapidapi.com/title/find\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"movies-details1.p.rapidapi.com\"}, params={\"q\": \"Inception\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "we will provide movies details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://movies-details1.p.rapidapi.com/title/find'\nquerystring = {\"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://movies-details1.p.rapidapi.com/title/find\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://movies-details1.p.rapidapi.com/title/find"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "movies-details1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "Inception"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://movies-details1.p.rapidapi.com/title/find\"\nquerystring = {\"q\": \"game of thr\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"movies-details1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Movies details",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "game of thr"
                }
            ]
        }
    },
    {
        "query": "How can I use the Mocking Rock API to retrieve the geolocation data for IP address 192.168.1.1?",
        "model_answer": "requests.get(\"https://mocking-rock.p.rapidapi.com/country/getipgeodata\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mocking-rock.p.rapidapi.com\"}, params={\"ip\": \"192.168.1.1\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.    ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mocking-rock.p.rapidapi.com/country/getipgeodata'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mocking-rock.p.rapidapi.com/country/getipgeodata\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://mocking-rock.p.rapidapi.com/country/getipgeodata"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "mocking-rock.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ip": "192.168.1.1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mocking-rock.p.rapidapi.com/country/getipgeodata\"\nquerystring = {\"ip\": \"34.89.89.28\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mocking-rock.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mocking Rock ",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "Send a proper IPV4 .If valid IP will return result.",
                    "default": "34.89.89.28"
                }
            ]
        }
    },
    {
        "query": "Generate 10 Bingo cards using the BingoAPI.",
        "model_answer": "requests.get(\"https://bingoapi.p.rapidapi.com/us\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"bingoapi.p.rapidapi.com\"}, params={\"cards\": \"10\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Offload your server resources with Bingo API! It is a straightforward API that generates  Bingo cards in US and EU  game standards (75 or 90 numbers). Feel free to play with it with the free Basic Plan. If you have suggestions or requests just drop me a line.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bingoapi.p.rapidapi.com/us'\nquerystring = {\"cards\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bingoapi.p.rapidapi.com/us\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bingoapi.p.rapidapi.com/us"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bingoapi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "cards": "10"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bingoapi.p.rapidapi.com/us\"\nquerystring = {\"cards\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bingoapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BingoAPI",
            "api_arguments_original": [
                {
                    "name": "cards",
                    "type": "STRING",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to find real estate listings in San Francisco using the Zillow Base API?",
        "model_answer": "requests.get(\"https://zillow-base1.p.rapidapi.com/WebAPIs/zillow/locationSuggestions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"zillow-base1.p.rapidapi.com\"}, params={\"location\": \"San Francisco\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "[IMPROVED SEARCH API] These APIs provide a powerful and user-friendly real estate search feature. Users can enter an address, city, state, or ZIP code to search for apartments, houses, land, and homes for rent or sale in the United States. Additionally, they can customize their search results by using filters to specify price, square footage, property type, number of bedrooms and bathrooms, construction year, and various other criteria. Furthermore, users can view detailed information about e...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://zillow-base1.p.rapidapi.com/WebAPIs/zillow/locationSuggestions'\nquerystring = {\"location\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://zillow-base1.p.rapidapi.com/WebAPIs/zillow/locationSuggestions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://zillow-base1.p.rapidapi.com/WebAPIs/zillow/locationSuggestions"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "zillow-base1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "location": "San Francisco"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://zillow-base1.p.rapidapi.com/WebAPIs/zillow/locationSuggestions\"\nquerystring = {\"location\": \"Brownsville, TX\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"zillow-base1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Zillow Base",
            "api_arguments_original": [
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "State, county, neighborhood, city, street name, zip code",
                    "default": "Brownsville, TX"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with details and stats of the TV show with Season IDs 12345678 and 87654321 on Netflix?",
        "model_answer": "requests.get(\"https://netflix54.p.rapidapi.com/season/episodes/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"netflix54.p.rapidapi.com\"}, params={\"ids\": \"12345678,87654321\", \"lang\": \"en\", \"limit\":25, \"offset\":0})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://netflix54.p.rapidapi.com/season/episodes/'\nquerystring = {\"ids\": \"\", \"lang\": \"\", \"limit\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://netflix54.p.rapidapi.com/season/episodes/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://netflix54.p.rapidapi.com/season/episodes/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "netflix54.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ids": "12345678,87654321",
                            "lang": "en",
                            "limit": 25,
                            "offset": 0
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://netflix54.p.rapidapi.com/season/episodes/\"\nquerystring = {\"lang\": \"en\", \"limit\": \"25\", \"ids\": \"80077209,80117715\", \"offset\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"netflix54.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Netflix_v2",
            "api_arguments_original": [
                {
                    "name": "ids",
                    "type": "STRING",
                    "description": "Season IDs (you can separate with commas)",
                    "default": "80077209,80117715"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Episode Limit",
                    "default": "25"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Offset",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to convert the DNA sequence \"ATGCATCGATTG\" into its corresponding mRNA sequence using the DNA2mRNA API?",
        "model_answer": "requests.get(\"https://dna2protein.p.rapidapi.com/DNA2mRNA\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dna2protein.p.rapidapi.com\"}, params={\"dna\": \"ATGCATCGATTG\"})",
        "original": {
            "domain": "Science",
            "framework": "RapidAPI",
            "functionality": "A set of simple end-points to convert DNA and mRNA sequences to amino-acids",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dna2protein.p.rapidapi.com/DNA2mRNA'\nquerystring = {\"dna\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dna2protein.p.rapidapi.com/DNA2mRNA\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dna2protein.p.rapidapi.com/DNA2mRNA"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dna2protein.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "dna": "ATGCATCGATTG"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dna2protein.p.rapidapi.com/DNA2mRNA\"\nquerystring = {\"dna\": \"TACAAAGGCTAACGTCCTAGAGCTATT\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dna2protein.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dna2protein",
            "api_arguments_original": [
                {
                    "name": "dna",
                    "type": "STRING",
                    "description": "The DNA sequence to transform into an mRNA sequence.",
                    "default": "TACAAAGGCTAACGTCCTAGAGCTATT"
                }
            ]
        }
    },
    {
        "query": "What are the items in the Yardillo vault that match the filter \"fruits\"?",
        "model_answer": "requests.get(\"https://yardillo.p.rapidapi.com/vault/all\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"yardillo.p.rapidapi.com\"}, params={\"filter\": \"fruits\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "No code API orchestration workflow",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yardillo.p.rapidapi.com/vault/all'\nquerystring = {\"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yardillo.p.rapidapi.com/vault/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://yardillo.p.rapidapi.com/vault/all"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "yardillo.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "filter": "fruits"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yardillo.p.rapidapi.com/vault/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yardillo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yardillo",
            "api_arguments_original": [
                {
                    "name": "filter",
                    "type": "string",
                    "description": "",
                    "default": "all"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to check the country of the IP address 10.0.0.1 and print the output.",
        "model_answer": "requests.get(\"https://hajana1-ip-to-country-name-v1.p.rapidapi.com/free-ip-country-api.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"hajana1-ip-to-country-name-v1.p.rapidapi.com\"}, params={\"ip\": \"10.0.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Using This free API developers can check Country of any IP, and this API can be used absolutly free in any application. or website.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hajana1-ip-to-country-name-v1.p.rapidapi.com/free-ip-country-api.php'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hajana1-ip-to-country-name-v1.p.rapidapi.com/free-ip-country-api.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://hajana1-ip-to-country-name-v1.p.rapidapi.com/free-ip-country-api.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "hajana1-ip-to-country-name-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ip": "10.0.0.1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hajana1-ip-to-country-name-v1.p.rapidapi.com/free-ip-country-api.php\"\nquerystring = {\"ip\": \"103.255.5.26\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hajana1-ip-to-country-name-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP to Country Name",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "You Can Change IP address.",
                    "default": "103.255.5.26"
                }
            ]
        }
    },
    {
        "query": "I want to check if the email address \"example@example.com\" is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@example.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Welcome to our e-commerce API! Our API is designed to make it easy for you to build and manage your online store and also build projects you can show on your porfolio. With our API, you can create products, manage orders, track shipments, and more. Our API is built on modern technologies and is easy to integrate with your existing systems.  Our API provides a secure and reliable platform for your e-commerce needs. You can trust us to keep your data safe and secure. We also provide a range of ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cartify.p.rapidapi.com/users/api/v1/admin/orders'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cartify.p.rapidapi.com/users/api/v1/admin/orders\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cartify.p.rapidapi.com/users/api/v1/admin/orders\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cartify.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cartify",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please fetch the available recipe collection IDs from the BBC Good Food API.",
        "model_answer": "requests.get(\"https://bbc-good-food-api.p.rapidapi.com/categories-collections-ids\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"bbc-good-food-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Fetch recipies from search keyword, Author profile + recipes, collections recipes..\n\nNote: The API is deployed on basic plan server after the first subscriber I will upgrade the plan currently server go to sleep and first request wake up the server it takes 3 to 5 minutes.After 30 min of inactivity server go to sleep.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bbc-good-food-api.p.rapidapi.com/categories-collections-ids'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bbc-good-food-api.p.rapidapi.com/categories-collections-ids\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bbc-good-food-api.p.rapidapi.com/categories-collections-ids"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bbc-good-food-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bbc-good-food-api.p.rapidapi.com/categories-collections-ids\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bbc-good-food-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BBC Good Food API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the live-game odds for Dreambet.",
        "model_answer": "requests.get(\"https://dreambet.p.rapidapi.com/odds/dreambet\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dreambet.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Games and pre-game Odds for Dreambet",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dreambet.p.rapidapi.com/odds/dreambet'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dreambet.p.rapidapi.com/odds/dreambet\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dreambet.p.rapidapi.com/odds/dreambet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dreambet.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dreambet",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with information about the device with the ID \"98765\" and API key \"xyz789\" using the TrumpetBox Cloud API?",
        "model_answer": "requests.get(\"https://trumpetbox-cloud.p.rapidapi.com/device\", headers={\"X-RapidAPI-Key\": \"abc123\", \"X-RapidAPI-Host\":\"trumpetbox-cloud.p.rapidapi.com\"}, params={\"id\": \"98765\", \"key\": \"xyz789\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Thousands of businesses rely on TrumpetBox Cloud to communicate with their audience via text message. With our API, developers can access many of our platform\u2019s features and integrate them with other websites or applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://trumpetbox-cloud.p.rapidapi.com/device'\nquerystring = {\"id\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://trumpetbox-cloud.p.rapidapi.com/device\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://trumpetbox-cloud.p.rapidapi.com/device"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "abc123",
                            "X-RapidAPI-Host": "trumpetbox-cloud.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "98765",
                            "key": "xyz789"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://trumpetbox-cloud.p.rapidapi.com/device\"\nquerystring = {\"id\": \"\\\"{{id}}\\\"\", \"key\": \"\\\"{{API_KEY}}\\\"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"trumpetbox-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TrumpetBox Cloud",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of the device",
                    "default": "\"{{id}}\""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "TrumpetBox Cloud API KEY",
                    "default": "\"{{API_KEY}}\""
                }
            ]
        }
    },
    {
        "query": "Please check if the IP address 192.168.0.1 is a proxy.",
        "model_answer": "requests.get(\"https://proxy-detection.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"proxy-detection.p.rapidapi.com\"}, params={\"ip\": \"192.168.0.1\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Proxy Rotator is the world's first enterprise grade proxy ip rotation service. HTTPS proxies on a combination of over 26 million Residential, Private and Public Exclusive IP's. It's Easy to Use, Reliable and used by 1000's of Businesses daily.\r\n\r\nThe Proxy Detection API can detect if an IP address is, or has ever been, related to a proxy. With a database of over 26,000,000 worldwide proxies our probability of detecting a proxy based upon the ip address is unmatched. This API is useful for many scenario's such as reducing fraud on e-commerece sites, protecting your site from automated hacking attempts (XSS,SQLi,brute force), Prevent promotional offer abuse (multiple signups), limiting access on proxy IPs (prevent password / email changes) and many more uses!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://proxy-detection.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://proxy-detection.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://proxy-detection.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "proxy-detection.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ip": "192.168.0.1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://proxy-detection.p.rapidapi.com/\"\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"proxy-detection.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Proxy Detection",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "The IP address to be tested.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with a Python function call to fetch a random premium anime mobile wallpaper?",
        "model_answer": "requests.get(\"https://premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com/rapidHandler/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Fetch The Best Quality Anime  Mobile Wallpapers & Illustrations From The 100k+ Collection. Easily Find Wallpaper Based On Requirements Which Are Categorized By Illustrations, Anime Name, Premium, and Genre (Boy, Christmas, Couple, Halloween, Family, Valentine, Wedding) with sensitivity control.\n\n1/06/2023 - Ultra & Mega plan changed, request increase at the same price.\n\nOur Quote API: https://shorturl.at/egkOQ \n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com/rapidHandler/random'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com/rapidHandler/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{'X-RapidAPI-Key'"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com/rapidHandler/random\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Premium-Anime-Mobile-Wallpapers-Illustrations",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with information about the domain \"example.com\" using the Domain Info API?",
        "model_answer": "requests.get(\"https://domain-info.p.rapidapi.com/domain-full-info/example.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"domain-info.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "This API returns informations on any domain online.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://domain-info.p.rapidapi.com/domain-full-info/{domain}'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://domain-info.p.rapidapi.com/domain-full-info/{domain}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://domain-info.p.rapidapi.com/domain-full-info/example.com"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "domain-info.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://domain-info.p.rapidapi.com/domain-full-info/{domain}\"\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"domain-info.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Domain Info",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the news from Puerto Plata.",
        "model_answer": "requests.get(\"https://depuertoplata.p.rapidapi.comdepuertoplata.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"depuertoplata.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "tu ciudad en la red",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://depuertoplata.p.rapidapi.comdepuertoplata.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://depuertoplata.p.rapidapi.comdepuertoplata.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://depuertoplata.p.rapidapi.comdepuertoplata.com"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "depuertoplata.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://depuertoplata.p.rapidapi.comdepuertoplata.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"depuertoplata.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "depuertoplata",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you recommend some stocks for me? I am particularly interested in getting recommendations for the stock symbol \"AAPL\".",
        "model_answer": "requests.get(\"https://yh-finance-complete.p.rapidapi.com/recommendation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yh-finance-complete.p.rapidapi.com\"}, params={\"symbol\": \"AAPL\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This API helps you to query stocks, quotes, movers and other financial summary.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yh-finance-complete.p.rapidapi.com/recommendation'\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yh-finance-complete.p.rapidapi.com/recommendation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://yh-finance-complete.p.rapidapi.com/recommendation"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "yh-finance-complete.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yh-finance-complete.p.rapidapi.com/recommendation\"\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yh-finance-complete.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YH Finance Complete",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "i.e: TSLA",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide the Python code to obtain a temporary email address using the GetTempMail API?",
        "model_answer": "requests.get(\"https://gettempmail.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gettempmail.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Getting temp mail pr",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gettempmail.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gettempmail.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gettempmail.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gettempmail.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GetTempMail",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide a response from the SimSimi Conversation API for the text \"How are you?\" in English with no sexual contents?",
        "model_answer": "requests.get(\"https://simsimi.p.rapidapi.com/request.p\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"simsimi.p.rapidapi.com\"}, params={\"text\": \"How are you?\", \"lc\": \"en\", \"ft\": \"0.0\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "SimSimi database consists of simple \"Request - Response\" set.\r\nWhen you request \"Hi\", SimSimi API send \"response\" by similarity with request sentence\r\n\r\nConversation API enables you to get SimSimi's response data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://simsimi.p.rapidapi.com/request.p'\nquerystring = {\"text\": \"\", \"lc\": \"\", \"ft\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://simsimi.p.rapidapi.com/request.p\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://simsimi.p.rapidapi.com/request.p"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "simsimi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://simsimi.p.rapidapi.com/request.p\"\nquerystring = {\"text\": \"hi\", \"lc\": \"en\", \"ft\": \"0.0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"simsimi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SimSimi Conversation",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Query message",
                    "default": "hi"
                },
                {
                    "name": "lc",
                    "type": "STRING",
                    "description": "Language code",
                    "default": "en"
                },
                {
                    "name": "ft",
                    "type": "NUMBER",
                    "description": "Sexual Contents",
                    "default": "0.0"
                }
            ]
        }
    },
    {
        "query": "I want to generate 10 sentences of Lorem Ipsum text.",
        "model_answer": "requests.get(\"https://lorem-ipsum-api.p.rapidapi.com/sentence\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"lorem-ipsum-api.p.rapidapi.com\"}, params={\"amount\": \"10\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Generate Lorem Ipsum placeholder text for your applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lorem-ipsum-api.p.rapidapi.com/sentence'\nquerystring = {\"amount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lorem-ipsum-api.p.rapidapi.com/sentence\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://lorem-ipsum-api.p.rapidapi.com/sentence"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "lorem-ipsum-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "amount": "10"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lorem-ipsum-api.p.rapidapi.com/sentence\"\nquerystring = {\"amount\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lorem-ipsum-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lorem Ipsum Api",
            "api_arguments_original": [
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest cryptocurrency news from CoinDesk?",
        "model_answer": "requests.get(\"https://cryptocurrency-news2.p.rapidapi.com/v1/coindesk\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cryptocurrency-news2.p.rapidapi.com\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "Get the latest crypto news direct from your preferred sources (fast & reliable). News sources will be continuously added.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cryptocurrency-news2.p.rapidapi.com/v1/coindesk'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cryptocurrency-news2.p.rapidapi.com/v1/coindesk\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{ \"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cryptocurrency-news2.p.rapidapi.com/v1/coindesk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cryptocurrency-news2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cryptocurrency News",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to obtain basic information on all weed strains and print the response?",
        "model_answer": "requests.get(\"https://weed-strain1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"weed-strain1.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Basic information on all weed strain. Build mobile apps for weed strains.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weed-strain1.p.rapidapi.com/'\nquerystring = {\"ordering\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weed-strain1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weed-strain1.p.rapidapi.com/\"\nquerystring = {\"ordering\": \"-strain\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weed-strain1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Weed Strain",
            "api_arguments_original": [
                {
                    "name": "ordering",
                    "type": "STRING",
                    "description": "",
                    "default": "-strain"
                }
            ]
        }
    },
    {
        "query": "I want to login to a user account with the username \"jane\" and password \"password123\".",
        "model_answer": "requests.get(\"https://multipleteamscallingtest.p.rapidapi.com/user/login\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"multipleteamscallingtest.p.rapidapi.com\"}, params={\"username\": \"jane\", \"password\": \"password123\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "MultipleTeamsCallingTest",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://multipleteamscallingtest.p.rapidapi.com/user/login'\nquerystring = {\"password\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://multipleteamscallingtest.p.rapidapi.com/user/login\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://multipleteamscallingtest.p.rapidapi.com/user/login"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "multipleteamscallingtest.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "username": "jane",
                            "password": "password123"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://multipleteamscallingtest.p.rapidapi.com/user/login\"\nquerystring = {\"password\": \"string\", \"username\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multipleteamscallingtest.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MultipleTeamsCallingTest",
            "api_arguments_original": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "The password for login in clear text",
                    "default": "string"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The user name for login",
                    "default": "string"
                }
            ]
        }
    },
    {
        "query": "What is the Python function call to retrieve the languages supported by the Image Text Recognition API and print the response?",
        "model_answer": "requests.get(\"https://image-text-recognition.p.rapidapi.com/get_languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"image-text-recognition.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Recognizing text content from images",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://image-text-recognition.p.rapidapi.com/get_languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://image-text-recognition.p.rapidapi.com/get_languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://image-text-recognition.p.rapidapi.com/get_languages"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "image-text-recognition.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://image-text-recognition.p.rapidapi.com/get_languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-text-recognition.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Image Text Recognition",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to retrieve all the data from the Sports API and print the output.",
        "model_answer": "requests.get(\"https://all-data.p.rapidapi.comhttps://pubhub.yesitlabs.xyz/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"all-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "all sports data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-data.p.rapidapi.comhttps://pubhub.yesitlabs.xyz/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-data.p.rapidapi.comhttps://pubhub.yesitlabs.xyz/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-data.p.rapidapi.comhttps://pubhub.yesitlabs.xyz/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "All data",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me with the proxy data for the URL http://example.com?",
        "model_answer": "requests.get(\"https://scrapers-proxy2.p.rapidapi.com/tor\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"scrapers-proxy2.p.rapidapi.com\"}, params={\"url\": \"http://example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Simple HTTP proxy API made for scrapers.  Scrape anonymously without having to worry about restrictions, blocks or captchas. Our goal is to provide you with faster response times and higher success rates.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://scrapers-proxy2.p.rapidapi.com/tor'\nquerystring = {\"user_agent\": \"\", \"device\": \"\", \"params\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://scrapers-proxy2.p.rapidapi.com/tor\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://scrapers-proxy2.p.rapidapi.com/tor"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "scrapers-proxy2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "http://example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://scrapers-proxy2.p.rapidapi.com/tor\"\nquerystring = {\"user_agent\": \"\", \"device\": \"\", \"params\": \"\", \"url\": \"http://expyuzz4wqqyqhjn.onion/about/history/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Scraper's Proxy",
            "api_arguments_original": [
                {
                    "name": "user_agent",
                    "type": "STRING",
                    "description": "Pass in `user_agent` if the page you are trying to scrape requires a specific user agent. If the page does not require a specific user agent, but a user agent from a type of device using `device` is recommended",
                    "default": ""
                },
                {
                    "name": "device",
                    "type": "STRING",
                    "description": "Pass in `device` to specify the type of web page you would like to see without needing to specify a user agent. This is recommended as an alternative to using `user_agent ` since it has a higher success rate",
                    "default": ""
                },
                {
                    "name": "params",
                    "type": "OBJECT",
                    "description": " Pass in `params` as json serialized object to specify url query parameters. This is an alternative to adding a query string to the `url` parameter",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "http://expyuzz4wqqyqhjn.onion/about/history/"
                }
            ]
        }
    },
    {
        "query": "Please provide the Python function call to check if the username \"johnsmith\" exists in the test API.",
        "model_answer": "requests.get(\"https://teste693.p.rapidapi.com/user/johnsmith\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"teste693.p.rapidapi.com\"})",
        "original": {
            "domain": "Science",
            "framework": "RapidAPI",
            "functionality": "teste",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://teste693.p.rapidapi.com/user/{username}'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://teste693.p.rapidapi.com/user/{username}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://teste693.p.rapidapi.com/user/johnsmith"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "teste693.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://teste693.p.rapidapi.com/user/{username}\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"teste693.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "teste",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The name that needs to be fetched. Use user1 for testing. ",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please validate the email address info@rapidapi.com using the Email Validation_v3 API.",
        "model_answer": "requests.get(\"https://email-validation12.p.rapidapi.com/support@rapidapi.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"email-validation12.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Check disposable email addresses",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-validation12.p.rapidapi.com/support@rapidapi.com'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-validation12.p.rapidapi.com/support@rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://email-validation12.p.rapidapi.com/support@rapidapi.com"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "email-validation12.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-validation12.p.rapidapi.com/support@rapidapi.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-validation12.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Validation_v3",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "",
                    "default": "support@rapidapi.com"
                }
            ]
        }
    },
    {
        "query": "I want to search for operas in multiple genres, including \"opera1\", \"opera2\", \"opera3\", and \"opera4\", with years either \"2020\" or \"2021\", published after January 1, 2021, and catalogue IDs \"catalogue2\" or \"catalogue3\" in the rapidAPI Testing options API.",
        "model_answer": "requests.get(\"https://testing-options.p.rapidapi.com/opera/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"testing-options.p.rapidapi.com\"}, params={\"genre__name_hy__in\": \"opera1,opera2\", \"genre__name_ru__in\": \"opera3\", \"genre__name_en__in\": \"opera4\", \"year__in\": \"2020,2021\", \"published_at__gt\": \"2021-01-01\", \"catalogue_id__in\": \"catalogue2,catalogue3\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "This is my test API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testing-options.p.rapidapi.com/opera/'\nquerystring = {\"genre__name_hy__in\": \"\", \"genre__name_ru__in\": \"\", \"genre__name_en__in\": \"\", \"year__in\": \"\", \"published_at__gt\": \"\", \"catalogue_id\": \"\", \"genre__name_en\": \"\", \"published_at\": \"\", \"published_at__gte\": \"\", \"genre__name_hy\": \"\", \"year\": \"\", \"catalogue_id__in\": \"\", \"genre__name_ru\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testing-options.p.rapidapi.com/opera/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://testing-options.p.rapidapi.com/opera/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "testing-options.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "genre__name_hy__in": "opera1,opera2",
                            "genre__name_ru__in": "opera3",
                            "genre__name_en__in": "opera4",
                            "year__in": "2020,2021",
                            "published_at__gt": "2021-01-01",
                            "catalogue_id__in": "catalogue2,catalogue3"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testing-options.p.rapidapi.com/opera/\"\nquerystring = {\"genre__name_hy__in\": \"\", \"genre__name_ru__in\": \"\", \"genre__name_en__in\": \"\", \"year__in\": \"\", \"published_at__gt\": \"\", \"catalogue_id\": \"\", \"genre__name_en\": \"\", \"published_at\": \"\", \"published_at__gte\": \"\", \"genre__name_hy\": \"\", \"year\": \"\", \"catalogue_id__in\": \"\", \"genre__name_ru\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testing-options.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Testing options",
            "api_arguments_original": [
                {
                    "name": "genre__name_hy__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "genre__name_ru__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "genre__name_en__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "year__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "published_at__gt",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "catalogue_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "genre__name_en",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "published_at",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "published_at__gte",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "genre__name_hy",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "catalogue_id__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "genre__name_ru",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the history of the channel \"news_channel\" in the PubNub network.",
        "model_answer": "requests.get(\"https://pubnub-pubnub.p.rapidapi.com/history/demo/news_channel/0/2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pubnub-pubnub.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "The PubNub Network makes Real-time Communications Simple  with an easy API. Two Functions: Send/Receive (Publish/Subscribe). We provide a web-scale API for businesses to build scalable Data Push communication apps on Mobile, Tablet and Web. Bidirectional JSON. Ask for commit access - via Twitter: @pubnub - via IRC: #pubnub on FreeNode",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pubnub-pubnub.p.rapidapi.com/history/demo/my_channel/0/2'\nquerystring = {\"callback\": \"\", \"limit\": \"\", \"subscribe_key\": \"\", \"channel\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pubnub-pubnub.p.rapidapi.com/history/demo/my_channel/0/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "callback",
                    "enum": [
                        "0"
                    ],
                    "description": "JSONP Callback"
                },
                {
                    "name": "limit",
                    "enum": [
                        "2"
                    ],
                    "description": "Limit of messages to return"
                },
                {
                    "name": "subscribe_key",
                    "enum": [
                        "demo"
                    ],
                    "description": "Subscribe Key"
                },
                {
                    "name": "channel",
                    "enum": [
                        "news_channe"
                    ],
                    "description": "Channel Name"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pubnub-pubnub.p.rapidapi.com/history/demo/my_channel/0/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pubnub-pubnub.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PubNub Network",
            "api_arguments_original": [
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSONP Callback",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Limit of messages to return",
                    "default": "2"
                },
                {
                    "name": "subscribe_key",
                    "type": "STRING",
                    "description": "Subscribe Key",
                    "default": "demo"
                },
                {
                    "name": "channel",
                    "type": "STRING",
                    "description": "Channel Name",
                    "default": "my_channel"
                }
            ]
        }
    },
    {
        "query": "I want to get the climate risk assessment score for London, UK with a radius of 30 km.",
        "model_answer": "requests.get(\"https://rankiteo-climate-risk-assessment.p.rapidapi.com/GetPowerplantByRadiusAndAddress\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"rankiteo-climate-risk-assessment.p.rapidapi.com\"}, params={\"address\": \"London, UK\", \"radius_km\": 30})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "We provide an API to give a climate risk assessment score for any locations in the world.\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://rankiteo-climate-risk-assessment.p.rapidapi.com/GetPowerplantByRadiusAndAddress'\nquerystring = {\"address\": \"\", \"radius_km\": \"\", \"page_number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://rankiteo-climate-risk-assessment.p.rapidapi.com/GetPowerplantByRadiusAndAddress\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://rankiteo-climate-risk-assessment.p.rapidapi.com/GetPowerplantByRadiusAndAddress"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "rankiteo-climate-risk-assessment.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://rankiteo-climate-risk-assessment.p.rapidapi.com/GetPowerplantByRadiusAndAddress\"\nquerystring = {\"radius_km\": \"\", \"page_number\": \"\", \"address\": \"Paris,France\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rankiteo-climate-risk-assessment.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Rankiteo Climate Risk Assessment",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "Paris,France"
                },
                {
                    "name": "radius_km",
                    "type": "NUMBER",
                    "description": "default value is 100 km (100)",
                    "default": ""
                },
                {
                    "name": "page_number",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you recommend a collection of TikTok recipe videos from the user 'bakingqueen'?",
        "model_answer": "requests.get(\"https://tiktok-api6.p.rapidapi.com/collection/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tiktok-api6.p.rapidapi.com\"}, params={\"collection_id\": \"(Recipes & Good Eats)-7084615222824045358\", \"username\": \"bakingqueen\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Reliable TikTok API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-api6.p.rapidapi.com/collection/'\nquerystring = {\"collection_id\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-api6.p.rapidapi.com/collection/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tiktok-api6.p.rapidapi.com/collection/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tiktok-api6.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-api6.p.rapidapi.com/collection/\"\nquerystring = {\"collection_id\": \"(Recipes & Good Eats)-7084615222824045358\", \"username\": \"abbeychaplain\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-api6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok API",
            "api_arguments_original": [
                {
                    "name": "collection_id",
                    "type": "STRING",
                    "description": "",
                    "default": "(Recipes & Good Eats)-7084615222824045358"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "abbeychaplain"
                }
            ]
        }
    },
    {
        "query": "I want to search for a random quote with a maximum length of 50 characters and tagged with \"love\" and \"inspiration\".",
        "model_answer": "requests.get(\"https://semantic-quotes.p.rapidapi.com/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"semantic-quotes.p.rapidapi.com\"}, params={\"max_length\":50, \"tags\":\"love,inspiration\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Semantic search for quotes. Wondering which celebrities have said something similar? Look no more, this API gives you the power to search for quotes semantically from over 1M+ quotes. The Artificial Intelligence (NLP) engine behind the scene seeks to understand the meaning of your query rather than simply matching keywords. We allows user to flexibly filter the results by the length of the quote, and/or by a large variety of tags.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://semantic-quotes.p.rapidapi.com/random'\nquerystring = {\"max_length\": \"\", \"tags\": \"\", \"min_length\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://semantic-quotes.p.rapidapi.com/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://semantic-quotes.p.rapidapi.com/random"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "semantic-quotes.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "max_length": 50,
                            "tags": "love,inspiration"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://semantic-quotes.p.rapidapi.com/random\"\nquerystring = {\"max_length\": 4000, \"tags\": \"inspirational,motivational\", \"min_length\": \"0\", \"limit\": 3}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"semantic-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Semantic Quotes",
            "api_arguments_original": [
                {
                    "name": "max_length",
                    "type": "NUMBER",
                    "description": "Maximum length of the quote.",
                    "default": 4000
                },
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "Comma seperated tags for filtering, for example, \n                `faith`,\n                `god`,\n                `humor`, \n                `hope`,\n                `inspirational`, \n                `love`, \n                `life`,\n                `motivational`,\n                `philosophy`,\n                `religion`,\n                `science`,\n                `spirituality`,\n                `success`,\n                `truth`,\n                `wisdom`,\n                `poetry`,\n                and much more.\n        ",
                    "default": "inspirational,motivational"
                },
                {
                    "name": "min_length",
                    "type": "NUMBER",
                    "description": "Minimum length of the quote.",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of results returned.",
                    "default": 3
                }
            ]
        }
    },
    {
        "query": "Please generate a face using the FaceGen API and print the response.",
        "model_answer": "requests.get(\"https://facegen.p.rapidapi.com/fg/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"facegen.p.rapidapi.com\"}, params={\"AI\": \"1\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Generation of faces by AI. (Occasionally, a neural network makes mistakes, which is why artifacts appear: an incorrectly bent pattern, a strange hair color, and so on.)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://facegen.p.rapidapi.com/fg/'\nquerystring = {\"AI\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://facegen.p.rapidapi.com/fg/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://facegen.p.rapidapi.com/fg/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "facegen.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "AI": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://facegen.p.rapidapi.com/fg/\"\nquerystring = {\"AI\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"facegen.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FaceGen",
            "api_arguments_original": [
                {
                    "name": "AI",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to get information about the brewery with ID 7285 from the Open Brewery DB API.",
        "model_answer": "requests.get(\"https://brianiswu-open-brewery-db-v1.p.rapidapi.com/breweries/7285\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"brianiswu-open-brewery-db-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Looking for a Beer API? Open Brewery DB is a free API for public information on breweries, cideries, brewpubs, and bottleshops. Currently it is focused to the United States, but future plans are to import world-wide data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://brianiswu-open-brewery-db-v1.p.rapidapi.com/breweries/5494'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://brianiswu-open-brewery-db-v1.p.rapidapi.com/breweries/5494\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://brianiswu-open-brewery-db-v1.p.rapidapi.com/breweries/7285"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "brianiswu-open-brewery-db-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://brianiswu-open-brewery-db-v1.p.rapidapi.com/breweries/5494\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"brianiswu-open-brewery-db-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Open Brewery DB",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of Brewery",
                    "default": "5494"
                }
            ]
        }
    },
    {
        "query": "What is the estimated taxi fare from latitude 40.7128 to longitude -74.0060, with a departure latitude of 34.0522 and a departure longitude of -118.2437?",
        "model_answer": "requests.get(\"https://taxi-fare-calculator.p.rapidapi.com/search-geo\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"taxi-fare-calculator.p.rapidapi.com\"}, params={\"arr_lat\": 40.7128, \"arr_lng\": -74.0060, \"dep_lat\": 34.0522, \"dep_lng\": -118.2437})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "How much does a taxi cost? Estimate your taxicab fare & rates. Get your taxi fare now and compare taxi prices. Taxi Fare Calculator provides taxi & cab fares for any trip in any city. The API provides you with a price for the best possible route for your cab ride.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://taxi-fare-calculator.p.rapidapi.com/search-geo'\nquerystring = {\"arr_lat\": \"\", \"arr_lng\": \"\", \"dep_lat\": \"\", \"dep_lng\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://taxi-fare-calculator.p.rapidapi.com/search-geo\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://taxi-fare-calculator.p.rapidapi.com/search-geo"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "taxi-fare-calculator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "arr_lat": 40.7128,
                            "arr_lng": -74.006,
                            "dep_lat": 34.0522,
                            "dep_lng": -118.2437
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://taxi-fare-calculator.p.rapidapi.com/search-geo\"\nquerystring = {\"arr_lat\": \"52.47\", \"arr_lng\": \"13.63\", \"dep_lat\": \"52.50\", \"dep_lng\": \"13.43\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"taxi-fare-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Taxi Fare Calculator",
            "api_arguments_original": [
                {
                    "name": "arr_lat",
                    "type": "NUMBER",
                    "description": "Latitude of arrival point",
                    "default": "52.47"
                },
                {
                    "name": "arr_lng",
                    "type": "NUMBER",
                    "description": "Longitude of arrival point",
                    "default": "13.63"
                },
                {
                    "name": "dep_lat",
                    "type": "NUMBER",
                    "description": "Latitude of departure point",
                    "default": "52.50"
                },
                {
                    "name": "dep_lng",
                    "type": "NUMBER",
                    "description": "Longitude of departure point",
                    "default": "13.43"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to generate a quote from Joe Rogan, using the Joe Rogan Quote Generator API?",
        "model_answer": "requests.get(\"https://joe-rogan-quote-generator.p.rapidapi.com/generate_rogan\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"joe-rogan-quote-generator.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Get quotes from the man himself",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://joe-rogan-quote-generator.p.rapidapi.com/generate_rogan'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://joe-rogan-quote-generator.p.rapidapi.com/generate_rogan\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://joe-rogan-quote-generator.p.rapidapi.com/generate_rogan\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"joe-rogan-quote-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Joe Rogan Quote Generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with live data for the game on the Sports API by John Smith.",
        "model_answer": "requests.get(\"https://johnsmith-sportsapi.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"johnsmith-sportsapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Api for games",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uros-kovcic.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uros-kovcic.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://johnsmith-sportsapi.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "johnsmith-sportsapi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uros-kovcic.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uros-kovcic.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Uros Kovcic",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please generate a YouTube video description for the keywords \"unreal engine ai\" and \"npcs\" using the Blogzee AI - SEO & Social Content Generator API.",
        "model_answer": "requests.get(\"https://blogzee-ai-seo-social-content-generator.p.rapidapi.com/generate_youtube_video_description\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"blogzee-ai-seo-social-content-generator.p.rapidapi.com\"}, params={\"keyword1\": \"unreal engine ai\", \"keyword2\": \"npcs\", \"include_emojis\": \"True\", \"video_title\": \"Telling NPCs they Live in a Simulation - Unreal Engine 5 AI NPCs\", \"facebook_link\": \"https://www.facebook.com/\", \"linkedin_link\": \"https://www.linkedin.com\", \"tiktok_link\": \"https://www.tiktok.com/en/\", \"twitter_link\": \"https://twitter.com/home?lang=en\", \"instagram_link\": \"https://www.instagram.com/\", \"keyword4\": \"\", \"keyword3\": \"\", \"keyword5\": \"\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Blogzee AI is an innovative SEO content generator API powered by advanced machine learning algorithms. It uses OpenAI's cutting-edge language model to produce high-quality, SEO-optimized blog post ideas and content based on the user-specified keywords. Blogzee AI is capable of generating engaging blog posts, incorporating HTML, emojis, and up to five keywords to enhance readability and search engine visibility. Perfect for bloggers, content marketers, and SEO professionals who need a quick bo...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://blogzee-ai-seo-social-content-generator.p.rapidapi.com/generate_youtube_video_description'\nquerystring = {\"keyword1\": \"\", \"keyword2\": \"\", \"include_emojis\": \"\", \"video_title\": \"\", \"keyword5\": \"\", \"facebook_link\": \"\", \"linkedin_link\": \"\", \"tiktok_link\": \"\", \"twitter_link\": \"\", \"instagram_link\": \"\", \"keyword4\": \"\", \"keyword3\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://blogzee-ai-seo-social-content-generator.p.rapidapi.com/generate_youtube_video_description\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "keyword1",
                    "enum": [
                        "unreal engine ai"
                    ],
                    "description": ""
                },
                {
                    "name": "keyword2",
                    "enum": [
                        "npcs"
                    ],
                    "description": ""
                },
                {
                    "name": "include_emojis",
                    "enum": [
                        "True"
                    ],
                    "description": ""
                },
                {
                    "name": "video_title",
                    "enum": [
                        "Telling NPCs they Live in a Simulation - Unreal Engine 5 AI NPCs"
                    ],
                    "description": ""
                },
                {
                    "name": "facebook_link",
                    "enum": [
                        "https"
                    ],
                    "description": ""
                },
                {
                    "name": "linkedin_link",
                    "enum": [
                        "https"
                    ],
                    "description": ""
                },
                {
                    "name": "tiktok_link",
                    "enum": [
                        "https"
                    ],
                    "description": ""
                },
                {
                    "name": "twitter_link",
                    "enum": [
                        "https"
                    ],
                    "description": ""
                },
                {
                    "name": "instagram_link",
                    "enum": [
                        "https"
                    ],
                    "description": ""
                },
                {
                    "name": "keyword4",
                    "enum": [
                        ""
                    ],
                    "description": ""
                },
                {
                    "name": "keyword3",
                    "enum": [
                        ""
                    ],
                    "description": ""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://blogzee-ai-seo-social-content-generator.p.rapidapi.com/generate_youtube_video_description\"\nquerystring = {\"keyword1\": \"unreal engine ai\", \"keyword5\": \"\", \"facebook_link\": \"https://www.facebook.com/\", \"linkedin_link\": \"https://www.linkedin.com\", \"keyword2\": \"npcs\", \"tiktok_link\": \"https://www.tiktok.com/en/\", \"twitter_link\": \"https://twitter.com/home?lang=en\", \"instagram_link\": \"https://www.instagram.com/\", \"keyword4\": \"\", \"keyword3\": \"\", \"include_emojis\": \"True\", \"video_title\": \"Telling NPCs they Live in a Simulation - Unreal Engine 5 AI NPCs\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"blogzee-ai-seo-social-content-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Blogzee AI - SEO & Social Content Generator",
            "api_arguments_original": [
                {
                    "name": "keyword1",
                    "type": "STRING",
                    "description": "",
                    "default": "unreal engine ai"
                },
                {
                    "name": "keyword2",
                    "type": "STRING",
                    "description": "",
                    "default": "npcs"
                },
                {
                    "name": "include_emojis",
                    "type": "STRING",
                    "description": "",
                    "default": "True"
                },
                {
                    "name": "video_title",
                    "type": "STRING",
                    "description": "",
                    "default": "Telling NPCs they Live in a Simulation - Unreal Engine 5 AI NPCs"
                },
                {
                    "name": "keyword5",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "facebook_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.facebook.com/"
                },
                {
                    "name": "linkedin_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.linkedin.com"
                },
                {
                    "name": "tiktok_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.tiktok.com/en/"
                },
                {
                    "name": "twitter_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://twitter.com/home?lang=en"
                },
                {
                    "name": "instagram_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.instagram.com/"
                },
                {
                    "name": "keyword4",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "keyword3",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the supported locations for the LinkedIn Company and Profile Data API?",
        "model_answer": "requests.get(\"https://linkedin-company-and-profile-data.p.rapidapi.com/supported-locations\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"linkedin-company-and-profile-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Introducing our LinkedIn Company and Profile Data API! With our API, you can access valuable insights and data from LinkedIn's vast network of professionals and companies. Our API provides real-time access to company and profile information, including company size, industry, employee information, job titles, and more. With this data, you can create powerful applications that empower your users with actionable insights and help them make informed decisions. Whether you're building a recruiting...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://linkedin-company-and-profile-data.p.rapidapi.com/supported-locations'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://linkedin-company-and-profile-data.p.rapidapi.com/supported-locations\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://linkedin-company-and-profile-data.p.rapidapi.com/supported-locations"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "linkedin-company-and-profile-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://linkedin-company-and-profile-data.p.rapidapi.com/supported-locations\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linkedin-company-and-profile-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Linkedin Company and Profile Data",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the items in a list with ListId 'def456' using the Ishan API.",
        "model_answer": "requests.get(\"https://ishan1.p.rapidapi.com/v1.0/sites/root/lists/def456/items\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ishan1.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Ishan",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ishan1.p.rapidapi.com/v1.0/sites/root/lists/ListId/items'\nquerystring = {\"ListId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ishan1.p.rapidapi.com/v1.0/sites/root/lists/ListId/items\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ishan1.p.rapidapi.com/v1.0/sites/root/lists/def456/items"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ishan1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ishan1.p.rapidapi.com/v1.0/sites/root/lists/ListId/items\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ishan1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ishan",
            "api_arguments_original": [
                {
                    "name": "ListId",
                    "type": "STRING",
                    "description": "",
                    "default": "ListId"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve images from the Chevereto API and log the output?",
        "model_answer": "requests.get(\"https://chevereto.p.rapidapi.comhttp://chevereto.ec/rapidapi/images\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"chevereto.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "chevereto",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://chevereto.p.rapidapi.comhttp://chevereto.ec/rapidapi/images'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://chevereto.p.rapidapi.comhttp://chevereto.ec/rapidapi/images\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://chevereto.p.rapidapi.comhttp://chevereto.ec/rapidapi/images"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "chevereto.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://chevereto.p.rapidapi.comhttp://chevereto.ec/rapidapi/images\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chevereto.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "chevereto",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the localizations for the DigiXpress API and log the output?",
        "model_answer": "requests.get(\"https://digixpress.p.rapidapi.com/api/localisations/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"digixpress.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "DigiXpress is a solution for shipping and delivering parcels and letters through a vast network of relay points and door-to-door; based on a parcel rating algorithm knowing only the name of the parcel.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://digixpress.p.rapidapi.com/api/localisations/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://digixpress.p.rapidapi.com/api/localisations/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://digixpress.p.rapidapi.com/api/localisations/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "digixpress.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://digixpress.p.rapidapi.com/api/localisations/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"digixpress.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DigiXpress",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the information of the article with DOI 10.5555/12345678 using the Crossref API.",
        "model_answer": "requests.get(\"https://crossref.p.rapidapi.com/10.5555/12345678\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crossref.p.rapidapi.com\"})",
        "original": {
            "domain": "Science",
            "framework": "RapidAPI",
            "functionality": "Crossref makes research outputs easy to find, cite, link, assess, and reuse.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crossref.p.rapidapi.com/10.1111/fima.12262'\nquerystring = {\"doi\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crossref.p.rapidapi.com/10.1111/fima.12262\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crossref.p.rapidapi.com/10.1111/fima.12262\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crossref.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "crossref",
            "api_arguments_original": [
                {
                    "name": "doi",
                    "type": "string",
                    "description": "",
                    "default": "10.1111/fima.12262"
                }
            ]
        }
    },
    {
        "query": "Please search for information about the barcode \"9780143111597\" using the barcode-monster API.",
        "model_answer": "requests.get(\"https://barcode-monster.p.rapidapi.com/code\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"barcode-monster.p.rapidapi.com\"}, params={\"code\": \"9780143111597\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Search for barcode information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://barcode-monster.p.rapidapi.com/code'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://barcode-monster.p.rapidapi.com/code\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://barcode-monster.p.rapidapi.com/code"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "barcode-monster.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "code": "9780143111597"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://barcode-monster.p.rapidapi.com/code\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"barcode-monster.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "barcode.monster",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "Barcode to search",
                    "default": "code"
                }
            ]
        }
    },
    {
        "query": "I want to get the live currency exchange rate between USD and EUR. <br>",
        "model_answer": "requests.get(\"https://mony.p.rapidapi.comhttps://testphp1997.000webhostapp.com\")",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": " get mony",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mony.p.rapidapi.comhttps://testphp1997.000webhostapp.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mony.p.rapidapi.comhttps://testphp1997.000webhostapp.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{}"
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mony.p.rapidapi.comhttps://testphp1997.000webhostapp.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mony.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "mony",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to verify the legitimacy of a merchant with Udyam Aadhaar Verification API using the provided request ID \"a1b2c3d4\". <br>",
        "model_answer": "requests.get(\"https://udyam-aadhaar-verification.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"udyam-aadhaar-verification.p.rapidapi.com\"}, params={\"request_id\": \"a1b2c3d4\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Make your onboarding process safer, faster, and smarter by verifying the legitimacy of the MSME merchants operating in the manufacturing or service sectors, on your platform.\n\nWith IDfy\u2019s Udyam Aadhaar verification API, you can now confidently onboard merchants knowing that the merchant exists, is genuine and is authorized to partake in the manufacture or service sector by the Ministry of MSME.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://udyam-aadhaar-verification.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://udyam-aadhaar-verification.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://udyam-aadhaar-verification.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "udyam-aadhaar-verification.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "request_id": "a1b2c3d4"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://udyam-aadhaar-verification.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"udyam-aadhaar-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Udyam Aadhaar Verification",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the exchange rates for USD using the \"Exchange rates live\" API.",
        "model_answer": "requests.get(\"https://exchange-rates-live.p.rapidapi.com/rates/eur\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"exchange-rates-live.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "An API showing all the latest currencies from official banks.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://exchange-rates-live.p.rapidapi.com/rates/eur'\nquerystring = {\"bankId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://exchange-rates-live.p.rapidapi.com/rates/eur\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://exchange-rates-live.p.rapidapi.com/rates/eur"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "exchange-rates-live.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://exchange-rates-live.p.rapidapi.com/rates/eur\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"exchange-rates-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Exchange rates live",
            "api_arguments_original": [
                {
                    "name": "bankId",
                    "type": "string",
                    "description": "",
                    "default": "eur"
                }
            ]
        }
    },
    {
        "query": "I want to get the trading dashboard URL for Walnut Trading Dash API.",
        "model_answer": "requests.get(\"https://walnuttradingdash.p.rapidapi.com/free_access\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"walnuttradingdash.p.rapidapi.com\"}, params={\"get_dash_url\": \"True\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Algo trading dashboard to backtest strategies with over 170 digital assets (crypto, forex, stocks) and 30 technical analysis strategies. Performance metrics, charts, and interactive visualizations available in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://walnuttradingdash.p.rapidapi.com/free_access'\nquerystring = {\"get_dash_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://walnuttradingdash.p.rapidapi.com/free_access\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://walnuttradingdash.p.rapidapi.com/free_access"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "walnuttradingdash.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "get_dash_url": "true"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://walnuttradingdash.p.rapidapi.com/free_access\"\nquerystring = {\"get_dash_url\": \"True\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"walnuttradingdash.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WalnutTradingDash",
            "api_arguments_original": [
                {
                    "name": "get_dash_url",
                    "type": "STRING",
                    "description": "",
                    "default": "True"
                }
            ]
        }
    },
    {
        "query": "I want to get the performance details of the call with account_id '12345' and callid '67890' using the CallTrackingMetrics API.",
        "model_answer": "requests.get(\"https://ctm.p.rapidapi.com/accounts/12345/calls/67890.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ctm.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Track the performance of your advertising with instantly activated tracking numbers in 30 countries. Integrate with Google and track down to keyword level.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ctm.p.rapidapi.com/accounts/{account_id}/calls/{callid}.json'\nquerystring = {\"account_id\": \"\", \"callid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ctm.p.rapidapi.com/accounts/{account_id}/calls/{callid}.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ctm.p.rapidapi.com/accounts/12345/calls/67890.json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ctm.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ctm.p.rapidapi.com/accounts/{account_id}/calls/{callid}.json\"\nquerystring = {\"account_id\": \"\", \"callid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ctm.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CallTrackingMetrics",
            "api_arguments_original": [
                {
                    "name": "account_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "callid",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to calculate the calories burned while swimming for 45 minutes, weighing 150 pounds, and log the output?",
        "model_answer": "requests.get(\"https://calories-burned-by-api-ninjas.p.rapidapi.com/v1/caloriesburned\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"calories-burned-by-api-ninjas.p.rapidapi.com\"}, params={\"activity\": \"swimming\", \"weight\": 150, \"duration\": 45})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Calories burned calculator for hundreds of different sports/activities. See more info at https://api-ninjas.com/api/caloriesburned.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://calories-burned-by-api-ninjas.p.rapidapi.com/v1/caloriesburned'\nquerystring = {\"activity\": \"\", \"weight\": \"\", \"duration\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://calories-burned-by-api-ninjas.p.rapidapi.com/v1/caloriesburned\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://calories-burned-by-api-ninjas.p.rapidapi.com/v1/caloriesburned"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "calories-burned-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://calories-burned-by-api-ninjas.p.rapidapi.com/v1/caloriesburned\"\nquerystring = {\"activity\": \"skiing\", \"weight\": \"\", \"duration\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"calories-burned-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Calories Burned by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "activity",
                    "type": "STRING",
                    "description": "name of the given activity. This value can be partial (e.g. ski will match water skiing and downhill skiing)",
                    "default": "skiing"
                },
                {
                    "name": "weight",
                    "type": "NUMBER",
                    "description": "weight of the user performing the activity in pounds. Must be between 50 and 500. Default value is 160.",
                    "default": ""
                },
                {
                    "name": "duration",
                    "type": "STRING",
                    "description": "how long the activity was performed in minutes. Must be 1 or greater. Default value is 60 (1 hour).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide the Power BI news for page 3.",
        "model_answer": "requests.get(\"https://power-bi-smartable.p.rapidapi.com/news/page/3/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"power-bi-smartable.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://power-bi-smartable.p.rapidapi.com/news/page/1/'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://power-bi-smartable.p.rapidapi.com/news/page/1/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://power-bi-smartable.p.rapidapi.com/news/page/1/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"power-bi-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Power BI Smartable",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the domain authority and page authority of the website 'example.com' using the Domain Authority API and log the response?",
        "model_answer": "requests.get(\"https://domain-authority1.p.rapidapi.com/GetDomainAuthority\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"domain-authority1.p.rapidapi.com\"}, params={\"url\": \"example.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Get Domain Authority and Page Authority of any Domain or URL.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://domain-authority1.p.rapidapi.com/GetDomainAuthority'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://domain-authority1.p.rapidapi.com/GetDomainAuthority\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://domain-authority1.p.rapidapi.com/GetDomainAuthority"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "domain-authority1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://domain-authority1.p.rapidapi.com/GetDomainAuthority\"\nquerystring = {\"url\": \"h-supertools.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"domain-authority1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Domain Authority",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "h-supertools.com"
                }
            ]
        }
    },
    {
        "query": "I want to hash the string \"Goodbye World\" using the Hashing-Api.",
        "model_answer": "requests.get(\"https://hashing-api.p.rapidapi.com/api/sha/256/hashtext\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"hashing-api.p.rapidapi.com\"}, params={\"dataString\": \"Goodbye World\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Blake2B/MD5/SHA Text/File/Bytes Hashing",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hashing-api.p.rapidapi.com/api/sha/256/hashtext'\nquerystring = {\"dataString\": \"\", \"mode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hashing-api.p.rapidapi.com/api/sha/256/hashtext\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://hashing-api.p.rapidapi.com/api/sha/256/hashtext"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "hashing-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "dataString": "Goodbye World"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hashing-api.p.rapidapi.com/api/sha/256/hashtext\"\nquerystring = {\"dataString\": \"enter-your-string-here\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hashing-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hashing-Api",
            "api_arguments_original": [
                {
                    "name": "dataString",
                    "type": "STRING",
                    "description": "",
                    "default": "enter-your-string-here"
                },
                {
                    "name": "mode",
                    "type": "NUMBER",
                    "description": "",
                    "default": "256"
                }
            ]
        }
    },
    {
        "query": "Please provide the prayer times for Kuala Lumpur, Malaysia using the \"Waktu Solat\" API.",
        "model_answer": "requests.get(\"https://waktu-solat4.p.rapidapi.com/solat/time\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"waktu-solat4.p.rapidapi.com\"}, params={\"code\": \"KUL01\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Information on prayer times in Malaysia. Sources of information from e-solat.gov.my",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://waktu-solat4.p.rapidapi.com/solat/time'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://waktu-solat4.p.rapidapi.com/solat/time\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://waktu-solat4.p.rapidapi.com/solat/time"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "waktu-solat4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "code": "KUL01"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://waktu-solat4.p.rapidapi.com/solat/time\"\nquerystring = {\"code\": \"SWK07\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"waktu-solat4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Waktu Solat",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "zone code, get from API /solat/list",
                    "default": "SWK07"
                }
            ]
        }
    },
    {
        "query": "I want to get the monthly price for an Airbnb property with property ID 654321 for check-in on 2023-01-01 and check-out on 2023-01-31 for 3 adults, 2 children, and 1 pet, with currency in USD.",
        "model_answer": "requests.get(\"https://airbnb19.p.rapidapi.com/api/v1/getPropertyCheckoutPrice\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"airbnb19.p.rapidapi.com\"}, params={\"checkOut\": \"2023-01-31\", \"checkIn\": \"2023-01-01\", \"propertyId\": 654321, \"adults\": 3, \"children\": 2, \"pets\": 1, \"currency\": \"USD\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": " Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. This API has all needed by any developer to create a new application with some extended features.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://airbnb19.p.rapidapi.com/api/v1/getPropertyCheckoutPrice'\nquerystring = {\"checkOut\": \"\", \"checkIn\": \"\", \"propertyId\": \"\", \"adults\": \"\", \"pets\": \"\", \"children\": \"\", \"currency\": \"\", \"languageId\": \"\", \"infants\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://airbnb19.p.rapidapi.com/api/v1/getPropertyCheckoutPrice\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://airbnb19.p.rapidapi.com/api/v1/getPropertyCheckoutPrice"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "airbnb19.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "checkOut": "2023-01-31",
                            "checkIn": "2023-01-01",
                            "propertyId": 654321,
                            "adults": 3,
                            "children": 2,
                            "pets": 1,
                            "currency": "USD"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://airbnb19.p.rapidapi.com/api/v1/getPropertyCheckoutPrice\"\nquerystring = {\"checkOut\": \"\", \"adults\": \"\", \"pets\": \"\", \"children\": \"\", \"currency\": \"USD\", \"checkIn\": \"\", \"languageId\": \"\", \"propertyId\": \"\", \"infants\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"airbnb19.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Airbnb_v2",
            "api_arguments_original": [
                {
                    "name": "checkOut",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "Check-out date",
                    "default": ""
                },
                {
                    "name": "checkIn",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "Check-in date",
                    "default": ""
                },
                {
                    "name": "propertyId",
                    "type": "NUMBER",
                    "description": "Required filed **propertyId** can be got from search property api as **id** parameter.",
                    "default": ""
                },
                {
                    "name": "adults",
                    "type": "NUMBER",
                    "description": "Number of adult guests (13 years and over). Default is set to 1.",
                    "default": ""
                },
                {
                    "name": "pets",
                    "type": "NUMBER",
                    "description": "Number of pets",
                    "default": ""
                },
                {
                    "name": "children",
                    "type": "NUMBER",
                    "description": "Number of children (2-12 years)",
                    "default": ""
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "Default currency is **USD**. To get other available currency please call **Get Currency** API",
                    "default": "USD"
                },
                {
                    "name": "languageId",
                    "type": "STRING",
                    "description": "Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.",
                    "default": ""
                },
                {
                    "name": "infants",
                    "type": "NUMBER",
                    "description": "Number of infants (under 2 years)",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide the API call to retrieve data from the KVStore API?",
        "model_answer": "requests.get(\"https://kvstore.p.rapidapi.com/collections\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"kvstore.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The simple storage service",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kvstore.p.rapidapi.com/collections'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kvstore.p.rapidapi.com/collections\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kvstore.p.rapidapi.com/collections\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kvstore.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "KVStore",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to show an image of Times Square with a marker using the Address to Image API, with the image type set as 'png', a zoom level of 2, and a width and height of 800 pixels each.",
        "model_answer": "requests.get(\"https://address-to-image.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"address-to-image.p.rapidapi.com\"}, params={\"output\":\"image\", \"type\":\"png\", \"marker\":\"1\", \"zoom\":\"2\", \"address\":\"Times Square\", \"width\":\"800\", \"height\":\"800\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Shows an image of an address, using Google Street View.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://address-to-image.p.rapidapi.com/'\nquerystring = {\"output\": \"\", \"type\": \"\", \"marker\": \"\", \"zoom\": \"\", \"address\": \"\", \"width\": \"\", \"height\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://address-to-image.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://address-to-image.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "address-to-image.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://address-to-image.p.rapidapi.com/\"\nquerystring = {\"output\": \"image\", \"type\": \"jpeg\", \"marker\": \"0\", \"zoom\": \"1\", \"address\": \"Times Square\", \"width\": \"1024\", \"height\": \"1024\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"address-to-image.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Address to Image",
            "api_arguments_original": [
                {
                    "name": "output",
                    "type": "STRING",
                    "description": "",
                    "default": "image"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Image type, either **png **or **jpeg**",
                    "default": "jpeg"
                },
                {
                    "name": "marker",
                    "type": "NUMBER",
                    "description": "Whether or not to display a marker on the image at the desired address, 0 or 1",
                    "default": "0"
                },
                {
                    "name": "zoom",
                    "type": "NUMBER",
                    "description": "The level of image zoom. Default is 1, range is 0-5",
                    "default": "1"
                },
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "Address or location.",
                    "default": "Times Square"
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "Image width - maximum 1024px",
                    "default": "1024"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "Image height- maximum 1024px",
                    "default": "1024"
                }
            ]
        }
    },
    {
        "query": "I want to send an SMS notification to +9876543210 with the message \"This is a sample SMS.\" using the SMSto API.",
        "model_answer": "requests.post(\"https://smsto.p.rapidapi.com/messages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"smsto.p.rapidapi.com\"}, json={\"to\": \"+9876543210\", \"message\": \"This is a sample SMS.\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Implement SMS notifications, OTP, reminders, etc. into your workflow and build apps that send SMS with our redundant SSL SMS API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://smsto.p.rapidapi.com/messages'\nquerystring = {\"created_at\": \"\", \"order_by\": \"\", \"to\": \"\", \"order_direction\": \"\", \"status\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://smsto.p.rapidapi.com/messages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        null
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "smsto.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://smsto.p.rapidapi.com/messages\"\nquerystring = {\"created_at\": \"2022-08-19\", \"order_by\": \"created_at\", \"to\": \"+3579865333\", \"order_direction\": \"desc\", \"status\": \"REJECTED\", \"limit\": \"15\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsto.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SMSto",
            "api_arguments_original": [
                {
                    "name": "created_at",
                    "type": "STRING",
                    "description": "Filter by created at",
                    "default": "2022-08-19"
                },
                {
                    "name": "order_by",
                    "type": "STRING",
                    "description": "Field to sort by",
                    "default": "created_at"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Filter by recipient number",
                    "default": "+3579865333"
                },
                {
                    "name": "order_direction",
                    "type": "STRING",
                    "description": "Sort messages.",
                    "default": "desc"
                },
                {
                    "name": "status",
                    "type": "STRING",
                    "description": "Filter by status",
                    "default": "REJECTED"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The number of messages per page.",
                    "default": "15"
                }
            ]
        }
    },
    {
        "query": "Please get the location data for IP address 987.654.321.0.",
        "model_answer": "requests.get(\"https://ip-geo3.p.rapidapi.com/location\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"ip-geo3.p.rapidapi.com\"}, params={\"ip\": \"987.654.321.0\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON formats.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-geo3.p.rapidapi.com/location'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-geo3.p.rapidapi.com/location\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ip-geo3.p.rapidapi.com/location"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ip-geo3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-geo3.p.rapidapi.com/location\"\nquerystring = {\"ip\": \"77.129.21.184\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-geo3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Geo",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "77.129.21.184"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the details of the YouTube channel with the ID \"UC-AbcXYZ123\"?",
        "model_answer": "requests.get(\"https://youtube-channel-details.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"youtube-channel-details.p.rapidapi.com\"}, params={\"id\":\"UC-AbcXYZ123\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "YouTube Channel Details API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-channel-details.p.rapidapi.com/'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-channel-details.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://youtube-channel-details.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "youtube-channel-details.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "UC-AbcXYZ123"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-channel-details.p.rapidapi.com/\"\nquerystring = {\"id\": \"UC-lHJZR3Gqxm24_Vd_AJ5Yw\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-channel-details.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube Channel Details",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "**Channel ID** starting with the `UC` prefix, or **Channel URL**\n\ne.g. `https://www.youtube.com/user/PewDiePie`\ne.g. `UC-lHJZR3Gqxm24_Vd_AJ5Yw`",
                    "default": "UC-lHJZR3Gqxm24_Vd_AJ5Yw"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the tennis matches information for September 8, 2020?",
        "model_answer": "requests.get(\"https://tennis-live-data.p.rapidapi.com/matches-by-date/2020-09-08\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tennis-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Tennis data for top competitions around the world including tournaments, matches, results, and rankings.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tennis-live-data.p.rapidapi.com/matches-by-date/2020-09-06'\nquerystring = {\"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tennis-live-data.p.rapidapi.com/matches-by-date/2020-09-06\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tennis-live-data.p.rapidapi.com/matches-by-date/2020-09-08"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tennis-live-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tennis-live-data.p.rapidapi.com/matches-by-date/2020-09-06\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tennis-live-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tennis Live Data",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "",
                    "default": "2020-09-06"
                }
            ]
        }
    },
    {
        "query": "Please provide the Python function call to obtain information about the IP address 192.168.0.1.",
        "model_answer": "requests.get(\"https://all-information-about-ip.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"all-information-about-ip.p.rapidapi.com\"}, params={\"query\": \"192.168.0.1\", \"lang\": \"en\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API for getting information about ip address, taken from several databases, compared.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-information-about-ip.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-information-about-ip.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://all-information-about-ip.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "all-information-about-ip.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "query": "192.168.0.1",
                            "lang": "en"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-information-about-ip.p.rapidapi.com/\"\nquerystring = {\"lang\": \"en\", \"query\": \"188.68.223.26\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-information-about-ip.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "All information about IP",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "188.68.223.26"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "I want to calculate the distance between two locations with latitude 38.8951 and longitude -77.0364 and latitude 34.0522 and longitude -118.2437 in kilometers.",
        "model_answer": "requests.get(\"https://distance-calculation-api-by-pizza-api.p.rapidapi.com/distance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"distance-calculation-api-by-pizza-api.p.rapidapi.com\"}, params={\"metric\": \"km\", \"lat1\": \"38.8951\", \"lon1\": \"-77.0364\", \"lat2\": \"34.0522\", \"lon2\": \"-118.2437\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "The Distance Calculation API is incredibly simple to use. Simply provide the latitude and longitude coordinates of the two locations you want to measure and the metric whether you want the result to be in km, mi (miles), m(metres), feet,  and the API will return the distance between them in a user-friendly format. The API uses the latest algorithms and techniques to provide fast and accurate results, making it the ideal solution for developers who need to incorporate distance calculation into...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://distance-calculation-api-by-pizza-api.p.rapidapi.com/distance'\nquerystring = {\"metric\": \"\", \"lat2\": \"\", \"lon2\": \"\", \"lon1\": \"\", \"lat1\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://distance-calculation-api-by-pizza-api.p.rapidapi.com/distance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://distance-calculation-api-by-pizza-api.p.rapidapi.com/distance"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "distance-calculation-api-by-pizza-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://distance-calculation-api-by-pizza-api.p.rapidapi.com/distance\"\nquerystring = {\"metric\": \"mi\", \"lat2\": \"40.730610\", \"lon2\": \"-73.935242\", \"lon1\": \"-87.836723\", \"lat1\": \"41.977226\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"distance-calculation-api-by-pizza-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Distance Calculation API by Pizza API",
            "api_arguments_original": [
                {
                    "name": "metric",
                    "type": "STRING",
                    "description": "",
                    "default": "mi"
                },
                {
                    "name": "lat2",
                    "type": "STRING",
                    "description": "",
                    "default": "40.730610"
                },
                {
                    "name": "lon2",
                    "type": "STRING",
                    "description": "",
                    "default": "-73.935242"
                },
                {
                    "name": "lon1",
                    "type": "STRING",
                    "description": "",
                    "default": "-87.836723"
                },
                {
                    "name": "lat1",
                    "type": "STRING",
                    "description": "",
                    "default": "41.977226"
                }
            ]
        }
    },
    {
        "query": "Please give me details of a pizza with an ID of 5.",
        "model_answer": "requests.get(\"https://pizza-and-desserts.p.rapidapi.com/pizzas/5\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pizza-and-desserts.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "decent collection of pizzas and desserts for your next food app project..",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pizza-and-desserts.p.rapidapi.com/pizzas/1'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pizza-and-desserts.p.rapidapi.com/pizzas/1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pizza-and-desserts.p.rapidapi.com/pizzas/5"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pizza-and-desserts.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pizza-and-desserts.p.rapidapi.com/pizzas/1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pizza-and-desserts.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pizza and Desserts",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to extract the structure from the text \"This is Jane and I live in Los Angeles\" using the Walnut Entity API.",
        "model_answer": "requests.get(\"https://walnut-entity.p.rapidapi.com/wrt_transformer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"walnut-entity.p.rapidapi.com\"}, params={\"payload\": \"This is Jane and I live in Los Angeles\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Extract structure from text data (who, what, where..) automatically using AI.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://walnut-entity.p.rapidapi.com/wrt_transformer'\nquerystring = {\"payload\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://walnut-entity.p.rapidapi.com/wrt_transformer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://walnut-entity.p.rapidapi.com/wrt_transformer"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "walnut-entity.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://walnut-entity.p.rapidapi.com/wrt_transformer\"\nquerystring = {\"payload\": \"I am Richard from New York and I work at Microsoft.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"walnut-entity.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Walnut Entity",
            "api_arguments_original": [
                {
                    "name": "payload",
                    "type": "STRING",
                    "description": "",
                    "default": "I am Richard from New York and I work at Microsoft."
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to download this TikTok video? Here's the link: \"https://www.tiktok.com/@tiktok/video/1234567890\"",
        "model_answer": "requests.get(\"https://tiktok-video-downloader8.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"tiktok-video-downloader8.p.rapidapi.com\"}, params={\"url\": \"https://www.tiktok.com/@tiktok/video/1234567890\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Simple and Lightweight Api to Download TikTok Videos Easily.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-video-downloader8.p.rapidapi.com/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-video-downloader8.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tiktok-video-downloader8.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tiktok-video-downloader8.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-video-downloader8.p.rapidapi.com/\"\nquerystring = {\"url\": \"https://www.tiktok.com/@world_dawgxx/video/7228270440354204974?is_from_webapp=1&sender_device=mobile&sender_web_id=7166870640249718273\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-video-downloader8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok Video Downloader",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.tiktok.com/@world_dawgxx/video/7228270440354204974?is_from_webapp=1&sender_device=mobile&sender_web_id=7166870640249718273"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the historical ESG scores for Apple Inc. in 2020 from the GaiaLens Historical ESG Scores API.",
        "model_answer": "requests.get(\"https://gaialens-historical-esg-scores.p.rapidapi.com/scores/historical/2020\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"gaialens-historical-esg-scores.p.rapidapi.com\"}, params={\"year\": \"2020\", \"companyname\": \"Apple Inc.\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Data-driven and transparent historical ESG scores for over 17,000 companies",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gaialens-historical-esg-scores.p.rapidapi.com/scores/historical/2020'\nquerystring = {\"year\": \"\", \"sedol\": \"\", \"isin\": \"\", \"companyname\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gaialens-historical-esg-scores.p.rapidapi.com/scores/historical/2020\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://gaialens-historical-esg-scores.p.rapidapi.com/scores/historical/2020"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "gaialens-historical-esg-scores.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "year": "2020",
                            "companyname": "Apple Inc."
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gaialens-historical-esg-scores.p.rapidapi.com/scores/historical/2020\"\nquerystring = {\"sedol\": \"\", \"isin\": \"\", \"companyname\": \"Apple Inc.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gaialens-historical-esg-scores.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GaiaLens Historical ESG Scores",
            "api_arguments_original": [
                {
                    "name": "year",
                    "type": "string",
                    "description": "<= 2020",
                    "default": "2020"
                },
                {
                    "name": "sedol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "isin",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "companyname",
                    "type": "STRING",
                    "description": "",
                    "default": "Apple Inc."
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to capture a screenshot of the website https://google.com and store it in a variable?",
        "model_answer": "screenshot = requests.get(\"https://webcap-website-screenshot-capture.p.rapidapi.com/v1/getscreenshot\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"webcap-website-screenshot-capture.p.rapidapi.com\"}, params={\"url\": \"https://google.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Turn websites into high definition screenshot images super quick and super easy. Simply provide a URL and the API will generate a screenshot for you. The returned file will be cached for continuous use",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webcap-website-screenshot-capture.p.rapidapi.com/v1/getscreenshot'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webcap-website-screenshot-capture.p.rapidapi.com/v1/getscreenshot\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://webcap-website-screenshot-capture.p.rapidapi.com/v1/getscreenshot"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "webcap-website-screenshot-capture.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://google.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webcap-website-screenshot-capture.p.rapidapi.com/v1/getscreenshot\"\nquerystring = {\"url\": \"https://apple.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webcap-website-screenshot-capture.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WebCap - Website Screenshot Capture",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://apple.com"
                }
            ]
        }
    },
    {
        "query": "I want to check if test@example.com is a valid email address.",
        "model_answer": "requests.get(\"https://email-validator18.p.rapidapi.com/email/validate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-validator18.p.rapidapi.com\"}, params={\"email\": \"test@example.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Deep email verify. Supports: Gmail, Mail.Ru, iCloud, Hotmail, Yahoo, Outlook, Rambler, Yandex and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-validator18.p.rapidapi.com/email/validate'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-validator18.p.rapidapi.com/email/validate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://email-validator18.p.rapidapi.com/email/validate"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "email-validator18.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "test@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-validator18.p.rapidapi.com/email/validate\"\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-validator18.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Validator_v2",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email for validation",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to verify if this email address jane@example.com is valid using the Quick Email Verification API.",
        "model_answer": "requests.get(\"https://quickemailverification.p.rapidapi.com/v1/verify\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"quickemailverification.p.rapidapi.com\"}, params={\"email\": \"jane@example.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Improve your mail deliverability rates and protect your IP reputation by using our Free Email Verification Service. Need further help? You can contact us at https://quickemailverification.com/contact-us",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quickemailverification.p.rapidapi.com/v1/verify'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quickemailverification.p.rapidapi.com/v1/verify\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://quickemailverification.p.rapidapi.com/v1/verify"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "quickemailverification.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "jane@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quickemailverification.p.rapidapi.com/v1/verify\"\nquerystring = {\"email\": \"youremail@domain.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quickemailverification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quick Email Verification",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Enter email address to validate",
                    "default": "youremail@domain.com"
                }
            ]
        }
    },
    {
        "query": "What campaigns are available for Vouchery.io?",
        "model_answer": "requests.get(\"https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\":\"https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Welcome to Vouchery.io API v2.0! Vouchery provides a REST-oriented API which gives you access to easily create main campaign that includes multiple promo campaigns, add rewards, validate and redeem vouchers.   You will find a detailed description of API design, authentication and authorisation, available endpoints, and responses on successful requests and errors at https://docs.vouchery.io/reference",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vouchery-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vouchery.io",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to find all the suburbs in Australia within a 5 km radius of latitude -33.86885141 and longitude 151.2093319.",
        "model_answer": "requests.get(\"https://australian-postcode-to-suburb.p.rapidapi.com/radius/-33.86885141/151.2093319/5\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"australian-postcode-to-suburb.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Find out all the Australian  suburbs using postcode.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://australian-postcode-to-suburb.p.rapidapi.com/radius/-33.86885141/151.2093319/25'\nquerystring = {\"lat\": \"\", \"radius\": \"\", \"lng\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://australian-postcode-to-suburb.p.rapidapi.com/radius/-33.86885141/151.2093319/25\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://australian-postcode-to-suburb.p.rapidapi.com/radius/-33.86885141/151.2093319/5"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "australian-postcode-to-suburb.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://australian-postcode-to-suburb.p.rapidapi.com/radius/-33.86885141/151.2093319/25\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"australian-postcode-to-suburb.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Australian postcode to suburb",
            "api_arguments_original": [
                {
                    "name": "lat",
                    "type": "string",
                    "description": "",
                    "default": "-33.86885141"
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "",
                    "default": "25"
                },
                {
                    "name": "lng",
                    "type": "string",
                    "description": "",
                    "default": "151.2093319"
                }
            ]
        }
    },
    {
        "query": "Can you check if my email address, sam@example.com, has been compromised in any data breaches?",
        "model_answer": "requests.get(\"https://data-breach-checker.p.rapidapi.com/api/breach\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"data-breach-checker.p.rapidapi.com\"}, params={\"email\": \"sam@example.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "The Data Breach Checker API allows users to check if their data has been compromised in any known data breaches. By simply entering an email address, the API searches through a vast database of known data breaches using the reputable \"Have I Been Pwned\" backend. The API is easy to integrate into existing applications, making it an essential tool for companies and individuals seeking to enhance their cybersecurity posture. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://data-breach-checker.p.rapidapi.com/api/breach'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://data-breach-checker.p.rapidapi.com/api/breach\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://data-breach-checker.p.rapidapi.com/api/breach"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "data-breach-checker.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://data-breach-checker.p.rapidapi.com/api/breach\"\nquerystring = {\"email\": \"example@xyz.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"data-breach-checker.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Data Breach Checker",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "example@xyz.com"
                }
            ]
        }
    },
    {
        "query": "I want to get information on countries around the world using the RapidAPI's Countries API.",
        "model_answer": "requests.get(\"https://countries59.p.rapidapi.com/list_countries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"countries59.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Get information on countries around the world. ISO2, ISO3, capitals, currencies, surface area, and more!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://countries59.p.rapidapi.com/list_countries'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://countries59.p.rapidapi.com/list_countries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://countries59.p.rapidapi.com/list_countries"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "countries59.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://countries59.p.rapidapi.com/list_countries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"countries59.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Countries",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the Thai lottery results for the draw on March 17, 2022?",
        "model_answer": "requests.get(\"https://thai-lottery-result.p.rapidapi.com/results/20220317\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"thai-lottery-result.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Thai lottery results API, Provided by Thailand-API.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://thai-lottery-result.p.rapidapi.com/results/20220316'\nquerystring = {\"dateid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://thai-lottery-result.p.rapidapi.com/results/20220316\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://thai-lottery-result.p.rapidapi.com/results/20220316\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thai-lottery-result.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Thai Lottery Result",
            "api_arguments_original": [
                {
                    "name": "dateid",
                    "type": "string",
                    "description": "",
                    "default": "20220316"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me a python script to obtain a list of high anonymous proxy servers in the United States?",
        "model_answer": "requests.get(\"https://proxy-list2.p.rapidapi.com/proxy/get\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"proxy-list2.p.rapidapi.com\"}, params={\"type\": \"http\", \"country\": \"US\", \"anonymity\": \"high\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "Returns list of HTTP, HTTPS, SOCKS4, SOCKS5 proxies. Checks proxies each minute. Finds more than 7000 working proxies from multiple sources. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://proxy-list2.p.rapidapi.com/proxy/get'\nquerystring = {\"type\": \"\", \"country\": \"\", \"anonymity\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://proxy-list2.p.rapidapi.com/proxy/get\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://proxy-list2.p.rapidapi.com/proxy/get"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "proxy-list2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://proxy-list2.p.rapidapi.com/proxy/get\"\nquerystring = {\"type\": \"http\", \"country\": \"US\", \"anonymity\": \"high\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"proxy-list2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Proxy List",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Possible values: http, https, socks4, socks5",
                    "default": "http"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Use country code to filter data by country. Please check https://www.nationsonline.org/oneworld/country_code_list.htm for more information about country codes.",
                    "default": "US"
                },
                {
                    "name": "anonymity",
                    "type": "STRING",
                    "description": "Possible values: high, anonymous, transparent",
                    "default": "high"
                }
            ]
        }
    },
    {
        "query": "I want to get information about an employee with ID 67890.",
        "model_answer": "requests.get(\"https://dd7.p.rapidapi.com/employees/name\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dd7.p.rapidapi.com\"}, params={\"id\": \"67890\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "dd",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dd7.p.rapidapi.com/employees/name'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dd7.p.rapidapi.com/employees/name\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dd7.p.rapidapi.com/employees/name"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dd7.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "67890"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dd7.p.rapidapi.com/employees/name\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dd7.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dd",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "nam",
                    "default": "name"
                }
            ]
        }
    },
    {
        "query": "I want to download the Instagram reel from this link: \"https://www.instagram.com/reel/XYZ456\"",
        "model_answer": "requests.get(\"https://instagram-reels-and-post-downloader.p.rapidapi.com/posts/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"instagram-reels-and-post-downloader.p.rapidapi.com\"}, params={\"link\": \"https://www.instagram.com/reel/XYZ456\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Download instagram reels and post uing API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-reels-and-post-downloader.p.rapidapi.com/posts/'\nquerystring = {\"link\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-reels-and-post-downloader.p.rapidapi.com/posts/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instagram-reels-and-post-downloader.p.rapidapi.com/posts/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instagram-reels-and-post-downloader.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-reels-and-post-downloader.p.rapidapi.com/posts/\"\nquerystring = {\"link\": \"https://www.instagram.com/p/CtwqsweyqYB/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-reels-and-post-downloader.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram Reels and post Downloader",
            "api_arguments_original": [
                {
                    "name": "link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.instagram.com/p/CtwqsweyqYB/"
                }
            ]
        }
    },
    {
        "query": "Please provide the latest standings for the Russian Premier League for the current season.",
        "model_answer": "requests.get(\"https://russian-premier-league-standings.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"russian-premier-league-standings.p.rapidapi.com\"}, params={\"season\": \"2022\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Russian Premier League Standings & Table",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://russian-premier-league-standings.p.rapidapi.com/'\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://russian-premier-league-standings.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://russian-premier-league-standings.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "russian-premier-league-standings.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "season": "2022"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://russian-premier-league-standings.p.rapidapi.com/\"\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russian-premier-league-standings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Russian Premier League Standings",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please retrieve the Instagram profile information for the user with the user ID 987654321 and store the response in a variable called \"profile_info\".",
        "model_answer": "profile_info = requests.get(\"https://instagram39.p.rapidapi.com/getProfileByUserId\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram39.p.rapidapi.com\"}, params={\"user_id\": \"987654321\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Please join our telegram channel to get notified about updates.      https://t.me/social_miner_news",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram39.p.rapidapi.com/getProfileByUserId'\nquerystring = {\"user_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram39.p.rapidapi.com/getProfileByUserId\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instagram39.p.rapidapi.com/getProfileByUserId"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instagram39.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram39.p.rapidapi.com/getProfileByUserId\"\nquerystring = {\"user_id\": \"1190758433\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram39.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram_v10",
            "api_arguments_original": [
                {
                    "name": "user_id",
                    "type": "STRING",
                    "description": "",
                    "default": "1190758433"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to recognize labels on liquor bottles using the Liquor Recognition API and print the response?",
        "model_answer": "requests.get(\"https://liquor-recognition.p.rapidapi.com/version\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"liquor-recognition.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Recognize labels on liquor bottles quickly, with over 25,000 different labels to choose from. The results include information on the liquor brand and the kind of spirit.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://liquor-recognition.p.rapidapi.com/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://liquor-recognition.p.rapidapi.com/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://liquor-recognition.p.rapidapi.com/version"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "liquor-recognition.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://liquor-recognition.p.rapidapi.com/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"liquor-recognition.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Liquor Recognition",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me the details for bitikas1?",
        "model_answer": "requests.get(\"https://bitikas1.p.rapidapi.comhttp://www.brunn.ee\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bitikas1.p.rapidapi.com\"}, params={\"bbb\": \"\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "niisama",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bitikas1.p.rapidapi.comhttp://www.brunn.ee'\nquerystring = {\"bbb\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bitikas1.p.rapidapi.comhttp://www.brunn.ee\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bitikas1.p.rapidapi.comhttp://www.brunn.ee"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bitikas1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "bbb": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bitikas1.p.rapidapi.comhttp://www.brunn.ee\"\nquerystring = {\"bbb\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bitikas1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "bitikas1",
            "api_arguments_original": [
                {
                    "name": "bbb",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the recent winning numbers for Powerball from CA Lottery and log the output?",
        "model_answer": "requests.get(\"https://ca-lottery.p.rapidapi.com/recent/powerball\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ca-lottery.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ca-lottery.p.rapidapi.com/recent/powerball'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ca-lottery.p.rapidapi.com/recent/powerball\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ca-lottery.p.rapidapi.com/recent/powerball\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ca-lottery.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CA Lottery",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to scrape the complete products of the Nike Shopify store.",
        "model_answer": "requests.get(\"https://shopify-store-scraper.p.rapidapi.com/product\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shopify-store-scraper.p.rapidapi.com\"}, params={\"url\": \"https://www.nike.com\", \"handle\": \"nike-air-max-90\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Scrape complete products of any shopify store.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shopify-store-scraper.p.rapidapi.com/product'\nquerystring = {\"url\": \"\", \"handle\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shopify-store-scraper.p.rapidapi.com/product\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://shopify-store-scraper.p.rapidapi.com/product"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "shopify-store-scraper.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shopify-store-scraper.p.rapidapi.com/product\"\nquerystring = {\"url\": \"https://row.gymshark.com\", \"handle\": \"gymshark-studio-leggings-black-ss22\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shopify-store-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shopify Store Scraper",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://row.gymshark.com"
                },
                {
                    "name": "handle",
                    "type": "STRING",
                    "description": "",
                    "default": "gymshark-studio-leggings-black-ss22"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to forecast the price of Bitcoin in the next 48 hours using The Apophis API and print the response?",
        "model_answer": "requests.get(\"https://the-apophis.p.rapidapi.com/forecast/ultra\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"the-apophis.p.rapidapi.com\"}, params={\"timeframe\":\"48h\",\"currency\":\"btc\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "AI-powered API for crypto asset price forecasting offers a range of features and benefits that can revolutionize how traders and investors navigate the dynamic and often unpredictable crypto market.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-apophis.p.rapidapi.com/forecast/ultra'\nquerystring = {\"timeframe\": \"\", \"currency\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-apophis.p.rapidapi.com/forecast/ultra\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://the-apophis.p.rapidapi.com/forecast/ultra"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "the-apophis.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "timeframe": "48h",
                            "currency": "btc"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-apophis.p.rapidapi.com/forecast/ultra\"\nquerystring = {\"timeframe\": \"1h\", \"currency\": \"btc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-apophis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Apophis",
            "api_arguments_original": [
                {
                    "name": "timeframe",
                    "type": "STRING",
                    "description": "",
                    "default": "1h"
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "",
                    "default": "btc"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the premium tips from the Betigolo Tips API and log the output?",
        "model_answer": "requests.get(\"https://betigolo-tips.p.rapidapi.com/premium/tips\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"betigolo-tips.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Historical results here: https://www.betigolo.com/tips_premium.php\n\nThe Betigolo Tips API is a powerful tool that provides EV+ tips for football matches, based on machine Learning algorithms predictions to helping users make informed decisions about their bets. The API is easy to use and can be integrated into sports betting applications with the help of detailed documentation and code examples provided by Rapid API. With the Betigolo Tips API, users can access accurate and up-to-date tips fo...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://betigolo-tips.p.rapidapi.com/premium/tips'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://betigolo-tips.p.rapidapi.com/premium/tips\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://betigolo-tips.p.rapidapi.com/premium/tips\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"betigolo-tips.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Betigolo Tips",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the Python function call to get the country codes using the AskTheWorld API?",
        "model_answer": "requests.get(\"https://asktheworld.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"asktheworld.p.rapidapi.com\"}, params={\"getCountryCodes\": \"true\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "This API lets you get all the questions beeing asked on search plattforms like google.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asktheworld.p.rapidapi.com/'\nquerystring = {\"getCountryCodes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asktheworld.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://asktheworld.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "asktheworld.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "getCountryCodes": "true"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asktheworld.p.rapidapi.com/\"\nquerystring = {\"getCountryCodes\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asktheworld.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AskTheWorld",
            "api_arguments_original": [
                {
                    "name": "getCountryCodes",
                    "type": "STRING",
                    "description": "",
                    "default": "true"
                }
            ]
        }
    },
    {
        "query": "Please search for job posts for RN Nurse in Los Angeles, CA.",
        "model_answer": "requests.get(\"https://job-search6.p.rapidapi.com/api/v1/search/jobs\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"job-search6.p.rapidapi.com\"}, params={\"agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110\", \"ip\": \"75.83.85.4\", \"l\": \"Los Angeles, CA\", \"q\": \"RN Nurse\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Search for jobs posts, and post them on your web site",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://job-search6.p.rapidapi.com/api/v1/search/jobs'\nquerystring = {\"agent\": \"\", \"ip\": \"\", \"l\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://job-search6.p.rapidapi.com/api/v1/search/jobs\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://job-search6.p.rapidapi.com/api/v1/search/jobs"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "job-search6.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110",
                            "ip": "75.83.85.4",
                            "l": "Los Angeles, CA",
                            "q": "RN Nurse"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://job-search6.p.rapidapi.com/api/v1/search/jobs\"\nquerystring = {\"agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110\", \"ip\": \"75.83.85.4\", \"l\": \"San Diego, CA\", \"q\": \"RN Nurse\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"job-search6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Job Search",
            "api_arguments_original": [
                {
                    "name": "agent",
                    "type": "STRING",
                    "description": "",
                    "default": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110"
                },
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "75.83.85.4"
                },
                {
                    "name": "l",
                    "type": "STRING",
                    "description": "",
                    "default": "San Diego, CA"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "RN Nurse"
                }
            ]
        }
    },
    {
        "query": "I want to search for flights on KAYAK with a maximum of 2 stops and using my API key \"54321\".",
        "model_answer": "requests.get(\"https://kayak-flights.p.rapidapi.com/results\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"kayak-flights.p.rapidapi.com\"}, params={\"m\": \"2\", \"token\": \"54321\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Pricing and flight itineraries information on KAYAK.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kayak-flights.p.rapidapi.com/results'\nquerystring = {\"m\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kayak-flights.p.rapidapi.com/results\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://kayak-flights.p.rapidapi.com/results"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "kayak-flights.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "m": "2",
                            "token": "54321"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kayak-flights.p.rapidapi.com/results\"\nquerystring = {\"m\": \"5\", \"token\": \"API_KEY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kayak-flights.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "KAYAK Flights",
            "api_arguments_original": [
                {
                    "name": "m",
                    "type": "STRING",
                    "description": "",
                    "default": "5"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": "API_KEY"
                }
            ]
        }
    },
    {
        "query": "I want to perform forward geocoding for the location \"456 Elm St, Chicago\" using the TrueWay Geocoding API.",
        "model_answer": "requests.get(\"https://trueway-geocoding.p.rapidapi.com/ForwardGeocode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"trueway-geocoding.p.rapidapi.com\"}, params={\"location\": \"456 Elm St, Chicago\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Forward and Reverse Geocoding",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://trueway-geocoding.p.rapidapi.com/ReverseGeocode'\nquerystring = {\"location\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://trueway-geocoding.p.rapidapi.com/ReverseGeocode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://trueway-geocoding.p.rapidapi.com/ForwardGeocode"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "trueway-geocoding.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://trueway-geocoding.p.rapidapi.com/ReverseGeocode\"\nquerystring = {\"language\": \"en\", \"location\": \"37.7879493,-122.3961974\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"trueway-geocoding.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TrueWay Geocoding",
            "api_arguments_original": [
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "The location for which you wish to obtain the human-readable address",
                    "default": "37.7879493,-122.3961974"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The language in which to return results",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please retrieve the encryption key for the secure text API.",
        "model_answer": "requests.get(\"https://secure-text-api.p.rapidapi.com/getKey\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"secure-text-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "This project created for serve api endpoints to encrypt and decrypt text via http request",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://secure-text-api.p.rapidapi.com/getKey'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://secure-text-api.p.rapidapi.com/getKey\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://secure-text-api.p.rapidapi.com/getKey\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"secure-text-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "secure-text-api",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the live FREE to Air TV Channel Streaming Links?",
        "model_answer": "requests.get(\"https://tvview.p.rapidapi.com/getAll\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tvview.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Live FREE to Air Tv Channel Streaming Links. For Development Purpose Only.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tvview.p.rapidapi.com/getAll'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tvview.p.rapidapi.com/getAll\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tvview.p.rapidapi.com/getAll"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tvview.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tvview.p.rapidapi.com/getAll\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tvview.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TVView",
            "api_arguments_original": []
        }
    },
    {
        "query": "Get me the upcoming matches from the Kassbet API.",
        "model_answer": "requests.get(\"https://kassbet.p.rapidapi.com/v1/matches\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"kassbet.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Its a betting site",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kassbet.p.rapidapi.com/v1/matches'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kassbet.p.rapidapi.com/v1/matches\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kassbet.p.rapidapi.com/v1/matches\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kassbet.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "kassbet",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I access keyword research and domain analysis data using the Serpstat API, with the following parameters: api_method = 'keyword_research', domain-com = 'example.com', token = 'abcd1234', se = 'google'?",
        "model_answer": "requests.get(\"https://di_ry-serpstat-v1.p.rapidapi.com/v3/keyword_research?query=example.com&token=abcd1234&se=google\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"di_ry-serpstat-v1.p.rapidapi.com\"}, params={\"api_method\": \"keyword_research\", \"domain-com\": \"example.com\", \"token\": \"abcd1234\", \"se\": \"google\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This API can be used by SEO and PPC specialists to access keyword research and domain analysis data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://di_ry-serpstat-v1.p.rapidapi.com/v3/{api_method}?query={domain-com}&token={token}&se={se}'\nquerystring = {\"api_method\": \"\", \"domain-com\": \"\", \"token\": \"\", \"se\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://di_ry-serpstat-v1.p.rapidapi.com/v3/{api_method}?query={domain-com}&token={token}&se={se}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://di_ry-serpstat-v1.p.rapidapi.com/v3/keyword_research?query=example.com&token=abcd1234&se=google"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "di_ry-serpstat-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "api_method": "keyword_research",
                            "domain-com": "example.com",
                            "token": "abcd1234",
                            "se": "google"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://di_ry-serpstat-v1.p.rapidapi.com/v3/{api_method}?query={domain-com}&token={token}&se={se}\"\nquerystring = {\"api_method\": \"\", \"domain-com\": \"\", \"token\": \"\", \"se\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"di_ry-serpstat-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Serpstat",
            "api_arguments_original": [
                {
                    "name": "api_method",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "domain-com",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "se",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please enrich the contact information for the email address carynburns83@gmail.com.",
        "model_answer": "requests.get(\"https://enrich.p.rapidapi.com/contact/email\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"enrich.p.rapidapi.com\"}, params={\"email\": \"carynburns83@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "We are the leading enrichment API for businesses around the world.\n\nEnrich your CRM contacts with up-to-date business information:\nperson name, company, job position, education.\n\nWe charge credits only if necessary results are found.\n\nOur crawlers check in real-time many sources including LinkedIn, Facebook, Twitter, Indeed, Glassdoor, ZipRecruiter, BeBee and other platforms.\n\nWe provide links to the following social networks: Facebook, TikTok, Instagram, Snapchat, Twitter, LinkedIn, Youtube ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://enrich.p.rapidapi.com/contact/email'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://enrich.p.rapidapi.com/contact/email\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://enrich.p.rapidapi.com/contact/email"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "enrich.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "carynburns83@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://enrich.p.rapidapi.com/contact/email\"\nquerystring = {\"email\": \"carynburns83@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"enrich.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "enrich",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "carynburns83@gmail.com"
                }
            ]
        }
    },
    {
        "query": "I want to check if the IP address 192.168.1.1 is valid using the Networking API.",
        "model_answer": "requests.get(\"https://networking.p.rapidapi.com/api\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"networking.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "This API will help you with several networking-related utilities.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://networking.p.rapidapi.com/api'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://networking.p.rapidapi.com/api\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://networking.p.rapidapi.com/api\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"networking.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Networking",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check the keyword density for the URL \"https://en.wikipedia.org/wiki/Example.com\" using the SEO Automations API.",
        "model_answer": "requests.get(\"https://seo-automations.p.rapidapi.com/v1/seo/getKeywordDensity/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"seo-automations.p.rapidapi.com\"}, params={\"url\": \"https://en.wikipedia.org/wiki/Example.com\", \"numPhrases\": \"20\", \"phraseLength\": \"5\", \"n\":\"20\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "Optimize your website effortlessly with SEOOptimizeAPI - the powerful tool that provides valuable insights and automates repetitive tasks. With SEOOptimizeAPI, you can take the guesswork out of website optimization. The API utilizes advanced algorithms and technologies to provide in-depth insights into your website's performance and help you identify areas for improvement. And with its easy-to-use API endpoints, you can automate repetitive tasks and save time and effort.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://seo-automations.p.rapidapi.com/v1/seo/getKeywordDensity/'\nquerystring = {\"url\": \"\", \"numPhrases\": \"\", \"phraseLength\": \"\", \"n\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://seo-automations.p.rapidapi.com/v1/seo/getKeywordDensity/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://seo-automations.p.rapidapi.com/v1/seo/getKeywordDensity/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "seo-automations.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://en.wikipedia.org/wiki/Example.com",
                            "numPhrases": "20",
                            "phraseLength": "5",
                            "n": "20"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://seo-automations.p.rapidapi.com/v1/seo/getKeywordDensity/\"\nquerystring = {\"numPhrases\": \"20\", \"phraseLength\": \"5\", \"n\": \"20\", \"url\": \"https://en.wikipedia.org/wiki/Example.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"seo-automations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SEO Automations",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://en.wikipedia.org/wiki/Example.com"
                },
                {
                    "name": "numPhrases",
                    "type": "NUMBER",
                    "description": "Number of phrases to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                    "default": "20"
                },
                {
                    "name": "phraseLength",
                    "type": "NUMBER",
                    "description": "Number of words in each phrase to return ( results are sorted by density ). \nBetween 1 and 10.\nDefault is 10.",
                    "default": "5"
                },
                {
                    "name": "n",
                    "type": "NUMBER",
                    "description": "Number of Keywords to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "What are the car rental locations available in Munich on Booking.com?",
        "model_answer": "requests.get(\"https://booking-com.p.rapidapi.com/v1/car-rental/locations\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"booking-com.p.rapidapi.com\"}, params={\"locale\": \"en-gb\", \"name\": \"Munich\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Find all hotels, view prices, photos of the hotels, reviews. Find car rental deals. **Site:** booking.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://booking-com.p.rapidapi.com/v1/car-rental/locations'\nquerystring = {\"locale\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://booking-com.p.rapidapi.com/v1/car-rental/locations\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://booking-com.p.rapidapi.com/v1/car-rental/locations\"\nquerystring = {\"locale\": \"en-gb\", \"name\": \"Berlin\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"booking-com.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Booking com",
            "api_arguments_original": [
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": "en-gb"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name",
                    "default": "Berlin"
                }
            ]
        }
    },
    {
        "query": "Can you check if the CNPJ 98765432109876 is valid?",
        "model_answer": "requests.get(\"https://consulta-cnpj-gratis.p.rapidapi.com/companies/00000000000191\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"consulta-cnpj-gratis.p.rapidapi.com\"}, params={\"CNPJ\": \"98765432109876\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API Gratuita de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://consulta-cnpj-gratis.p.rapidapi.com/companies/00000000000191'\nquerystring = {\"CNPJ\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://consulta-cnpj-gratis.p.rapidapi.com/companies/00000000000191\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://consulta-cnpj-gratis.p.rapidapi.com/companies/00000000000191"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "consulta-cnpj-gratis.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "CNPJ": "98765432109876"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://consulta-cnpj-gratis.p.rapidapi.com/companies/00000000000191\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"consulta-cnpj-gratis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Consulta CNPJ Gr\u00e1tis",
            "api_arguments_original": [
                {
                    "name": "CNPJ",
                    "type": "string",
                    "description": "CNPJ da Empresa",
                    "default": "00000000000191"
                }
            ]
        }
    },
    {
        "query": "Please give me the climate events news from 'The Guardian'.",
        "model_answer": "requests.get(\"https://climate-change63.p.rapidapi.com/news/guadian\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"climate-change63.p.rapidapi.com\"})",
        "original": {
            "domain": "Cybersecurity",
            "framework": "RapidAPI",
            "functionality": "API showing climate events around the world",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-change63.p.rapidapi.com/news/guadian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-change63.p.rapidapi.com/news/guadian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://climate-change63.p.rapidapi.com/news/guadian"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "climate-change63.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-change63.p.rapidapi.com/news/guadian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-change63.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate change_v31",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "guadian"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get the latest winning numbers and statistics for Lotto America? Also, please include the necessary headers for the API.",
        "model_answer": "requests.get('https://lotto-america.p.rapidapi.com/stats', headers={'X-RapidAPI-Key': 'SIGN-UP-FOR-KEY','X-RapidAPI-Host':'lotto-america.p.rapidapi.com'})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Do you live for the Lotto America? Well, you\u2019ve just found your match! Get the latest winning numbers and statistics for your game!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lotto-america.p.rapidapi.com/stats'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lotto-america.p.rapidapi.com/stats\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        null
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "lotto-america.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lotto-america.p.rapidapi.com/stats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lotto-america.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lotto America",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please execute a GET request to the stocks archive API and retrieve the ping response.",
        "model_answer": "requests.get(\"https://stocks_archive.p.rapidapi.com/ping\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"stocks_archive.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Archive data of some blue chip's tickers\n\n\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stocks_archive.p.rapidapi.com/ping'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stocks_archive.p.rapidapi.com/ping\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://stocks_archive.p.rapidapi.com/ping"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "stocks_archive.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stocks_archive.p.rapidapi.com/ping\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stocks_archive.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "stocks_archive",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to check if the movie with the ID 12345 is available using the DAILY OVRLL API?",
        "model_answer": "requests.get(\"https://daily-ovrll-0822202130837.p.rapidapi.com/status/200\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"daily-ovrll-0822202130837.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "DAILY OVRLL 2ud21f0720210822120837645",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://daily-ovrll-0822202130837.p.rapidapi.com/status/200'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://daily-ovrll-0822202130837.p.rapidapi.com/status/200\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://daily-ovrll-0822202130837.p.rapidapi.com/status/200"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "daily-ovrll-0822202130837.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://daily-ovrll-0822202130837.p.rapidapi.com/status/200\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"daily-ovrll-0822202130837.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DAILY OVRLL 0822202130837",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with political articles for Biden and Trump from Boston Globe, New York Times, CNN, Washington Post, Los Angeles Times, and Chicago Tribute?",
        "model_answer": "requests.get(\"https://pac-api.p.rapidapi.com/trump/boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pac-api.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API for collecting political articles for Biden and Trump",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pac-api.p.rapidapi.com/trump/boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute'\nquerystring = {\"newspaper\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pac-api.p.rapidapi.com/trump/boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pac-api.p.rapidapi.com/trump/boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pac-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pac-api.p.rapidapi.com/trump/boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pac-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PAC API",
            "api_arguments_original": [
                {
                    "name": "newspaper",
                    "type": "string",
                    "description": "",
                    "default": "boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"
                }
            ]
        }
    },
    {
        "query": "I want to get information about a specific user with user_id=67890 from the nail API.",
        "model_answer": "requests.get(\"https://nail.p.rapidapi.comhttps://wad.ojooo.com/register.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"nail.p.rapidapi.com\"}, params={\"user_id\": \"67890\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "new001",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nail.p.rapidapi.comhttps://wad.ojooo.com/register.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nail.p.rapidapi.comhttps://wad.ojooo.com/register.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://nail.p.rapidapi.comhttps://wad.ojooo.com/register.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "nail.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "user_id": "67890"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nail.p.rapidapi.comhttps://wad.ojooo.com/register.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nail.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "nail",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please create an image with size 800x600 pixels in RGB mode with the color #0000ff.",
        "model_answer": "requests.get(\"https://color-to-picture-api.p.rapidapi.com/color-image\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"color-to-picture-api.p.rapidapi.com\"}, params={\"height\": \"800\", \"color\": \"0000ff\", \"width\": \"600\", \"mode\": \"RGB\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Takes prompt of picture mode (L,RGB,RGBA), color in hex (example: ff03bc), width (example: 200), height (example: 200) and makes new image in single color",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://color-to-picture-api.p.rapidapi.com/color-image'\nquerystring = {\"height\": \"\", \"color\": \"\", \"width\": \"\", \"mode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://color-to-picture-api.p.rapidapi.com/color-image\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://color-to-picture-api.p.rapidapi.com/color-image"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "color-to-picture-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "height": "800",
                            "color": "0000ff",
                            "width": "600",
                            "mode": "RGB"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://color-to-picture-api.p.rapidapi.com/color-image\"\nquerystring = {\"height\": \"200\", \"color\": \"ff0000\", \"width\": \"200\", \"mode\": \"RGB\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"color-to-picture-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Color to picture API",
            "api_arguments_original": [
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "",
                    "default": "200"
                },
                {
                    "name": "color",
                    "type": "STRING",
                    "description": "",
                    "default": "ff0000"
                },
                {
                    "name": "width",
                    "type": "STRING",
                    "description": "",
                    "default": "200"
                },
                {
                    "name": "mode",
                    "type": "STRING",
                    "description": "",
                    "default": "RGB"
                }
            ]
        }
    },
    {
        "query": "I want to calculate the BMI of a person who weighs 62 kg and has a height of 1.68 meters.",
        "model_answer": "requests.get(\"https://body-mass-index-bmi-calculator.p.rapidapi.com/metric\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"body-mass-index-bmi-calculator.p.rapidapi.com\"}, params={\"weight\": 62, \"height\": 1.68})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "Use this API to calculate the Body Mass Index of an individual based on their height and weight.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://body-mass-index-bmi-calculator.p.rapidapi.com/metric'\nquerystring = {\"weight\": \"\", \"height\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://body-mass-index-bmi-calculator.p.rapidapi.com/metric\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://body-mass-index-bmi-calculator.p.rapidapi.com/metric"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "body-mass-index-bmi-calculator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "weight": 62,
                            "height": 1.68
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://body-mass-index-bmi-calculator.p.rapidapi.com/metric\"\nquerystring = {\"weight\": \"150\", \"height\": \"1.83\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"body-mass-index-bmi-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Body Mass Index (BMI) Calculator",
            "api_arguments_original": [
                {
                    "name": "weight",
                    "type": "NUMBER",
                    "description": "The weight of someone in kilograms (kgs)",
                    "default": "150"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "The height of someone in meters (m)",
                    "default": "1.83"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the current weather information.",
        "model_answer": "requests.get(\"https://qwiper-weather.p.rapidapi.com/?json=true\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qwiper-weather.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Ajoutez les donn\u00e9es m\u00e9t\u00e9orologiques d'aujourd'hui \u00e0 votre application.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qwiper-weather.p.rapidapi.com/?json=true'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qwiper-weather.p.rapidapi.com/?json=true\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qwiper-weather.p.rapidapi.com/?json=true\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qwiper-weather.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Qwiper Weather",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the profile information (including the proxy image) of the Twitter account with the username 'example_user'.",
        "model_answer": "requests.get(\"https://instagram-profile1.p.rapidapi.com/getvideo/instagram\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"instagram-profile1.p.rapidapi.com\"}, params={\"username\": \"example_user\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Get profile information with proxy image will show directly to your frontend",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-profile1.p.rapidapi.com/getvideo/instagram'\nquerystring = {\"username\": \"\", \"next\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-profile1.p.rapidapi.com/getvideo/instagram\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instagram-profile1.p.rapidapi.com/getvideo/instagram"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instagram-profile1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "username": "example_user"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-profile1.p.rapidapi.com/getvideo/instagram\"\nquerystring = {\"next\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-profile1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram Profile",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "default": "instagram"
                },
                {
                    "name": "next",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to predict the outcome of the upcoming football match between team C and team D. <br>",
        "model_answer": "requests.get(\"https://metrx-factory.p.rapidapi.com/v1/competitions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"metrx-factory.p.rapidapi.com\"}, params={\"estimateBill\": \"false\", \"nameLike\": \"team C vs team D\", \"year\": \"\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Predictive football analytics API. Get expected scores from quantitative models and statistically fair odds for upcoming and historical matches. Find discrepancies by comparing ratings to final results and market prices. Quantify team performance and trends using the Metrx Index algorithm.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://metrx-factory.p.rapidapi.com/v1/competitions'\nquerystring = {\"estimateBill\": \"\", \"nameLike\": \"\", \"year\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://metrx-factory.p.rapidapi.com/v1/competitions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://metrx-factory.p.rapidapi.com/v1/competitions"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "metrx-factory.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "estimateBill": "false",
                            "nameLike": "team C vs team D",
                            "year": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://metrx-factory.p.rapidapi.com/v1/competitions\"\nquerystring = {\"estimateBill\": \"\", \"nameLike\": \"champ\", \"year\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"metrx-factory.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Metrx Factory",
            "api_arguments_original": [
                {
                    "name": "estimateBill",
                    "type": "BOOLEAN",
                    "description": "Flag whether a cost estimate should be returned for the above parameters instead of the result.\n**Default**: false",
                    "default": ""
                },
                {
                    "name": "nameLike",
                    "type": "STRING",
                    "description": "The full or partial name of a competition (case-insensitive).\n**Min. length**: 4 chars\n\nRefer to [API reference](https://docs.metrxfactory.io/competitions.htm) for a list of available competitions.",
                    "default": "champ"
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "The year a competition is hold. If a competition ends in another year that it was started then any included year matches.\nE.g. 2020 matches competitions from 2019-20, 2020 and 2020-21.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you check the availability of the website http://example.com on the Wayback Machine API service?",
        "model_answer": "requests.get(\"https://community-wayback-machine.p.rapidapi.com/available\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"community-wayback-machine.p.rapidapi.com\"}, params={\"url\": \"http://example.com\", \"timestamp\": \"\", \"callback\": \"\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "The Internet Archive Wayback Machine supports a number of different APIs to make it easier for developers to retrieve information about Wayback capture data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-wayback-machine.p.rapidapi.com/available'\nquerystring = {\"url\": \"\", \"timestamp\": \"\", \"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-wayback-machine.p.rapidapi.com/available\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://community-wayback-machine.p.rapidapi.com/available"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "community-wayback-machine.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-wayback-machine.p.rapidapi.com/available\"\nquerystring = {\"url\": \"http://mashape.com\", \"timestamp\": \"20090101\", \"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-wayback-machine.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wayback Machine",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "http://mashape.com"
                },
                {
                    "name": "timestamp",
                    "type": "STRING",
                    "description": "timestamp is the timestamp to look up in Wayback. If not specified, the most recenty available capture in Wayback is returned. The format of the timestamp is 1-14 digits (YYYYMMDDhhmmss)",
                    "default": "20090101"
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "callback is an optional callback which may be specified to produce a JSONP response.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to obtain routing information from point A (52.5200, 13.4050) to point B (48.8566, 2.3522) in France using MapToolkit API.",
        "model_answer": "requests.get(\"https://maptoolkit.p.rapidapi.com/enhance/routing\", headers={\"X-RapidAPI-Key\": \"YOUR-API-KEY\",\"X-RapidAPI-Host\":\"maptoolkit.p.rapidapi.com\"}, params={\"start\": \"52.5200,13.4050\", \"end\": \"48.8566,2.3522\", \"language\": \"fr\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://maptoolkit.p.rapidapi.com/enhance/routing'\nquerystring = {\"kml\": \"\", \"geometry\": \"\", \"gpx_backward\": \"\", \"kml_backward\": \"\", \"routeType\": \"\", \"callback\": \"\", \"gpx\": \"\", \"end\": \"\", \"start\": \"\", \"geometry_backward\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://maptoolkit.p.rapidapi.com/enhance/routing\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://maptoolkit.p.rapidapi.com/enhance/routing"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "YOUR-API-KEY",
                            "X-RapidAPI-Host": "maptoolkit.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://maptoolkit.p.rapidapi.com/enhance/routing\"\nquerystring = {\"kml\": \"forward geometry K-UrlML\", \"geometry\": \"forward geometry GeoJSON\", \"gpx_backward\": \"backward geometry GPX-Url\", \"kml_backward\": \"backward geometry KML-Url\", \"routeType\": \"bike\", \"callback\": \"JSONP Callback Functionname\", \"gpx\": \"forward geometry GPX-Url\", \"end\": \"lng,lat\", \"start\": \"lng,lat\", \"geometry_backward\": \"backward geometry GeoJSON\", \"language\": \"de\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"maptoolkit.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MapToolkit",
            "api_arguments_original": [
                {
                    "name": "kml",
                    "type": "STRING",
                    "description": "",
                    "default": "forward geometry K-UrlML"
                },
                {
                    "name": "geometry",
                    "type": "STRING",
                    "description": "",
                    "default": "forward geometry GeoJSON"
                },
                {
                    "name": "gpx_backward",
                    "type": "STRING",
                    "description": "",
                    "default": "backward geometry GPX-Url"
                },
                {
                    "name": "kml_backward",
                    "type": "STRING",
                    "description": "",
                    "default": "backward geometry KML-Url"
                },
                {
                    "name": "routeType",
                    "type": "STRING",
                    "description": "",
                    "default": "bike"
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "",
                    "default": "JSONP Callback Functionname"
                },
                {
                    "name": "gpx",
                    "type": "STRING",
                    "description": "",
                    "default": "forward geometry GPX-Url"
                },
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "",
                    "default": "lng,lat"
                },
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "",
                    "default": "lng,lat"
                },
                {
                    "name": "geometry_backward",
                    "type": "STRING",
                    "description": "",
                    "default": "backward geometry GeoJSON"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "de"
                }
            ]
        }
    },
    {
        "query": "Can you search for the details and posts of the creator with ID 98765 on Patreon?",
        "model_answer": "requests.get(\"https://patreon8.p.rapidapi.com/posts/2416483\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"patreon8.p.rapidapi.com\"}, params={\"creator_id\": \"98765\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Search Creators and get their details and posts from Patreon (Unofficial)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://patreon8.p.rapidapi.com/posts/2416483'\nquerystring = {\"creator_id\": \"\", \"cursor\": \"\", \"amount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://patreon8.p.rapidapi.com/posts/2416483\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://patreon8.p.rapidapi.com/posts/2416483"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "patreon8.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "creator_id": "98765"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://patreon8.p.rapidapi.com/posts/2416483\"\nquerystring = {\"cursor\": \"\", \"amount\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"patreon8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Patreon",
            "api_arguments_original": [
                {
                    "name": "creator_id",
                    "type": "NUMBER",
                    "description": "The `creator_id`can be obtained using the `/search` endpoint.",
                    "default": "2416483"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "The cursor to the next page of results.",
                    "default": ""
                },
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "The `amount`of posts to be returned. Default is `10`. Max is `500`. Bigger amount results in higher response time.",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to obtain the transactions for the Ethereum chain using the Felina API and log the output.",
        "model_answer": "requests.get(\"https://felina-api2.p.rapidapi.com/v1/api/transactions/Ethereum\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"felina-api2.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Handles transacions of FEL tokens.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://felina-api2.p.rapidapi.com/v1/api/transactions/{chainId}'\nquerystring = {\"chainId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://felina-api2.p.rapidapi.com/v1/api/transactions/{chainId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://felina-api2.p.rapidapi.com/v1/api/transactions/Ethereum"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "felina-api2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://felina-api2.p.rapidapi.com/v1/api/transactions/{chainId}\"\nquerystring = {\"chainId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"felina-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Felina API",
            "api_arguments_original": [
                {
                    "name": "chainId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "What is the current configuration of the TorrentHunt API?",
        "model_answer": "requests.get(\"https://torrenthunt.p.rapidapi.com/config\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"torrenthunt.p.rapidapi.com\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "API to self host Torrent Hunt Bot",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://torrenthunt.p.rapidapi.com/config'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://torrenthunt.p.rapidapi.com/config\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://torrenthunt.p.rapidapi.com/config"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "torrenthunt.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://torrenthunt.p.rapidapi.com/config\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"torrenthunt.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TorrentHunt",
            "api_arguments_original": []
        }
    },
    {
        "query": "Provide a Python function call to find the antonyms and synonyms of the word \"happy\" using the TCYonlineDictionary API and log the output.",
        "model_answer": "requests.get(\"https://tcyonlinedictionary1.p.rapidapi.com/words/happy\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tcyonlinedictionary1.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "TCYonlineDictionary for antonyms and synonyms",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tcyonlinedictionary1.p.rapidapi.com/words/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tcyonlinedictionary1.p.rapidapi.com/words/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tcyonlinedictionary1.p.rapidapi.com/words/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tcyonlinedictionary1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TCYonlineDictionary",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the details of the brand with ID 888888 using the Consumer Reports API.",
        "model_answer": "requests.get(\"https://consumer-reports.p.rapidapi.com/brands/detail\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"consumer-reports.p.rapidapi.com\"}, params={\"id\": \"888888\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://consumer-reports.p.rapidapi.com/brands/detail'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://consumer-reports.p.rapidapi.com/brands/detail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://consumer-reports.p.rapidapi.com/brands/detail"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "consumer-reports.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "888888"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://consumer-reports.p.rapidapi.com/brands/detail\"\nquerystring = {\"id\": \"158155\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"consumer-reports.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Consumer Reports",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "The value of brands -> id field returned in .../search endpoint OR brandId field returned in .../products/list, .../products/detail endpoint.",
                    "default": "158155"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to detect NSFW content in an image with the URL \"https://example.com/image.jpg\" and log the output?",
        "model_answer": "requests.get(\"https://nsfw-nude-detection.p.rapidapi.com/function/nsfw-wrapper\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"nsfw-nude-detection.p.rapidapi.com\"}, params={\"url\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "An API to detect NSFW or nudity within an image (as URL).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nsfw-nude-detection.p.rapidapi.com/function/nsfw-wrapper'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nsfw-nude-detection.p.rapidapi.com/function/nsfw-wrapper\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://nsfw-nude-detection.p.rapidapi.com/function/nsfw-wrapper"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "nsfw-nude-detection.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nsfw-nude-detection.p.rapidapi.com/function/nsfw-wrapper\"\nquerystring = {\"url\": \"https://images.unsplash.com/photo-1571960614803-734d9b71e96e\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nsfw-nude-detection.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NSFW / Nude Detection",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://images.unsplash.com/photo-1571960614803-734d9b71e96e"
                }
            ]
        }
    },
    {
        "query": "Please provide the balance of the wallet address 0x1234567890abcdef on the Ethereum blockchain.",
        "model_answer": "requests.get(\"https://defi-watch1.p.rapidapi.com/wallets/ethereum/0x1234567890abcdef/balance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"defi-watch1.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "DeFi Watch's API opens access to up-to-date data for thousands of cryptocurrencies. The API code is clear, developer-friendly, and provides daily and historical cryptocurrency information for each API request",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://defi-watch1.p.rapidapi.com/wallets/{chain}/{address}/balance'\nquerystring = {\"address\": \"\", \"chain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://defi-watch1.p.rapidapi.com/wallets/{chain}/{address}/balance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://defi-watch1.p.rapidapi.com/wallets/{chain}/{address}/balance\"\nquerystring = {\"address\": \"\", \"chain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"defi-watch1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DeFi Watch",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "chain",
                    "type": "string",
                    "description": "Select specific blockchain for wallet assets",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve recent news about Manchester United using the Football-API and print the response in JSON format?",
        "model_answer": "requests.get(\"https://football-api7.p.rapidapi.com/v3.football.api-sports.io/news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"football-api7.p.rapidapi.com\"}, params={\"team\": \"Manchester United\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Football-API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://football-api7.p.rapidapi.com/v3.football.api-sports.io/{endpoint}'\nquerystring = {\"endpoint\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://football-api7.p.rapidapi.com/v3.football.api-sports.io/{endpoint}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://football-api7.p.rapidapi.com/v3.football.api-sports.io/news"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "football-api7.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://football-api7.p.rapidapi.com/v3.football.api-sports.io/{endpoint}\"\nquerystring = {\"endpoint\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"football-api7.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Football-API",
            "api_arguments_original": [
                {
                    "name": "endpoint",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with information about a basketball tournament with id 200?",
        "model_answer": "requests.get(\"https://basketball-data.p.rapidapi.com/tournament/info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"}, params={\"tournamentId\": \"200\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more. Our Basketball Coverage includes 100+ tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.  <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://basketball-data.p.rapidapi.com/tournament/info'\nquerystring = {\"tournamentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://basketball-data.p.rapidapi.com/tournament/info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://basketball-data.p.rapidapi.com/tournament/info"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "basketball-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "tournamentId": "200"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/info\"\nquerystring = {\"tournamentId\": \"89\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Basketball Data",
            "api_arguments_original": [
                {
                    "name": "tournamentId",
                    "type": "NUMBER",
                    "description": "The id of the tournament.",
                    "default": "89"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve information about the OutSystems community sorted by rank in descending order, limiting the results to 10 profiles only?",
        "model_answer": "requests.get(\"https://outsystems-community-api.p.rapidapi.com/get_profiles\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"outsystems-community-api.p.rapidapi.com\"}, params={\"sort_by\": \"desc\", \"order_by\": \"rank\", \"page\": \"1\", \"limit\": \"10\", \"keyword\": \"\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get information about the OutSystems community. This is not an official OutSystems API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://outsystems-community-api.p.rapidapi.com/get_profiles'\nquerystring = {\"sort_by\": \"\", \"order_by\": \"\", \"page\": \"\", \"limit\": \"\", \"keyword\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://outsystems-community-api.p.rapidapi.com/get_profiles\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://outsystems-community-api.p.rapidapi.com/get_profiles"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "outsystems-community-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "sort_by": "desc",
                            "order_by": "rank",
                            "page": "1",
                            "limit": "10",
                            "keyword": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://outsystems-community-api.p.rapidapi.com/get_profiles\"\nquerystring = {\"sort_by\": \"\", \"order_by\": \"\", \"page\": \"1\", \"limit\": \"50\", \"keyword\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"outsystems-community-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OutSystems Community API",
            "api_arguments_original": [
                {
                    "name": "sort_by",
                    "type": "ENUM",
                    "description": "String (desc, asc). Orders the results by either Ascending or Descending order.",
                    "default": ""
                },
                {
                    "name": "order_by",
                    "type": "ENUM",
                    "description": "String (name, rank, kudos, components, solutions, profile_score, training_score, forums_score, forge_score, ideas_score, total_score, forums_posts, forums_comments, ideas_submitted, ideas_commented, forge_components, publications_articles, certifications). Sorts the results by chosen value.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Used to see the next page of profiles, eg limit=15 and page=2 will show you profiles 15-30",
                    "default": "1"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The limit of results per page that has been set. Integer between 1 - 50 (inclusive)",
                    "default": "50"
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "Search keyword against profile name, job title, company or location.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide the version of the file \"example.docx\" in the storage \"my_storage\" using the GroupDocs.Signature Cloud API.",
        "model_answer": "requests.get(\"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/example.docx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"groupdocs-signature-cloud.p.rapidapi.com\"}, params={\"storageName\": \"my_storage\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "GroupDocs.Signature Cloud is a REST API that enables you to create, verify, search, and manipulate various types of signatures for the cloud-based documents.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/{path}'\nquerystring = {\"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/{path}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"storageName\" \"my_storage\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GroupDocs.Signature Cloud",
            "api_arguments_original": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/file.ext'",
                    "default": ""
                },
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide the geolocation data for the IP address 123.456.789.0.",
        "model_answer": "requests.get(\"https://https-ipfinder-io.p.rapidapi.comhttps://api.ipfinder.io/v1/as1?token=2249efd59372e7dd12feecf9e20fd54cf327712c\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"https://https-ipfinder-io.p.rapidapi.com\"}, params={\"ip\":\"123.456.789.0\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "ipfinder offers one of the leading IP to geolocation APIs and global IP database services worldwide. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://https-ipfinder-io.p.rapidapi.comhttps://api.ipfinder.io/v1/as1?token=2249efd59372e7dd12feecf9e20fd54cf327712c'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://https-ipfinder-io.p.rapidapi.comhttps://api.ipfinder.io/v1/as1?token=2249efd59372e7dd12feecf9e20fd54cf327712c\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://https-ipfinder-io.p.rapidapi.comhttps://api.ipfinder.io/v1/as1?token=2249efd59372e7dd12feecf9e20fd54cf327712c"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "https://https-ipfinder-io.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ip": "123.456.789.0"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://https-ipfinder-io.p.rapidapi.comhttps://api.ipfinder.io/v1/as1?token=2249efd59372e7dd12feecf9e20fd54cf327712c\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"https-ipfinder-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "https://ipfinder.io/",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function to obtain a random fun fact using the Fun Facts API and print the response?",
        "model_answer": "requests.get(\"https://fun-facts1.p.rapidapi.com/api/fun-facts\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"fun-facts1.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "This simple API returns  radom fun facts",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fun-facts1.p.rapidapi.com/api/fun-facts'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fun-facts1.p.rapidapi.com/api/fun-facts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fun-facts1.p.rapidapi.com/api/fun-facts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fun-facts1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fun Facts",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you suggest some queries related to \"python programming\"?",
        "model_answer": "requests.get(\"https://auto-suggest-queries.p.rapidapi.com/suggestqueries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"auto-suggest-queries.p.rapidapi.com\"}, params={\"query\": \"python programming\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "This is a Free Query Suggest API which provides suggestions for search queries based on a given keyword",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://auto-suggest-queries.p.rapidapi.com/suggestqueries'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://auto-suggest-queries.p.rapidapi.com/suggestqueries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://auto-suggest-queries.p.rapidapi.com/suggestqueries"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "auto-suggest-queries.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "query": "python programming"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://auto-suggest-queries.p.rapidapi.com/suggestqueries\"\nquerystring = {\"query\": \"How to\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auto-suggest-queries.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Auto Suggest Queries",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "How to"
                }
            ]
        }
    },
    {
        "query": "I want to get the seasons for series with ID 1234 using the Unofficial Cricbuzz API.",
        "model_answer": "requests.get(\"https://unofficial-cricbuzz.p.rapidapi.com/series/get-seasons\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"unofficial-cricbuzz.p.rapidapi.com\"}, params={\"seriesId\": \"1234\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://unofficial-cricbuzz.p.rapidapi.com/series/get-seasons'\nquerystring = {\"seriesId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://unofficial-cricbuzz.p.rapidapi.com/series/get-seasons\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://unofficial-cricbuzz.p.rapidapi.com/series/get-seasons"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "unofficial-cricbuzz.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "seriesId": "1234"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://unofficial-cricbuzz.p.rapidapi.com/series/get-seasons\"\nquerystring = {\"seriesId\": \"5945\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"unofficial-cricbuzz.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Unofficial Cricbuzz",
            "api_arguments_original": [
                {
                    "name": "seriesId",
                    "type": "NUMBER",
                    "description": "The value of id field returned in .../series/list or .../series/list-archives endpoints.",
                    "default": "5945"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the details of the Mercedes team in the FIA Formula 1 Championship.",
        "model_answer": "requests.get(\"https://fia-formula-1-championship-statistics.p.rapidapi.com/api/teams/details/mercedes\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"fia-formula-1-championship-statistics.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "FIA Formula 1 Championship Statistics is a REST API. Gain access to statistical data about FIA F1 championships. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fia-formula-1-championship-statistics.p.rapidapi.com/api/teams/details/redbull'\nquerystring = {\"team_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fia-formula-1-championship-statistics.p.rapidapi.com/api/teams/details/redbull\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fia-formula-1-championship-statistics.p.rapidapi.com/api/teams/details/redbull\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fia-formula-1-championship-statistics.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FIA Formula 1 Championship Statistics",
            "api_arguments_original": [
                {
                    "name": "team_name",
                    "type": "string",
                    "description": "",
                    "default": "redbull"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to get symbols from the \"NYSE\" exchange using the Tradingview TA API, and store the response in a variable called \"response\".",
        "model_answer": "requests.get(\"https://tradingview-ta-api-technical-analysis.p.rapidapi.com/get_symbols_from_exchange\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tradingview-ta-api-technical-analysis.p.rapidapi.com\"}, params={\"exchange\": \"NYSE\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Tradingview API for technical analysis. With indicators, ocillicators, summaries etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tradingview-ta-api-technical-analysis.p.rapidapi.com/get_symbols_from_exchange'\nquerystring = {\"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tradingview-ta-api-technical-analysis.p.rapidapi.com/get_symbols_from_exchange\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tradingview-ta-api-technical-analysis.p.rapidapi.com/get_symbols_from_exchange"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tradingview-ta-api-technical-analysis.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tradingview-ta-api-technical-analysis.p.rapidapi.com/get_symbols_from_exchange\"\nquerystring = {\"exchange\": \"NASDAQ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tradingview-ta-api-technical-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tradingview TA API (Technical Analysis)",
            "api_arguments_original": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": "NASDAQ"
                }
            ]
        }
    },
    {
        "query": "I want to scrape Redbubble listings for blue dog products.",
        "model_answer": "requests.get(\"https://redbubble-scraper.p.rapidapi.com/redbubble\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"redbubble-scraper.p.rapidapi.com\"}, params={\"category\": \"all-departments\", \"page\": \"1\", \"search_term\": \"blue dog\", \"sort_order\":\"relevant\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "With this API, you can quickly and easily extract valuable data from Redbubble listings, including the title, price, product link, images, and tags. This data can help you optimize your product listings, track pricing trends, and stay on top of your competitors.\n\nThis API is easy to use, with simple commands that allow you to access the data you need in real-time. Plus, our API is highly customizable, so you can tailor it to your specific needs and preferences.\n\nSome key features of our Redbu...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://redbubble-scraper.p.rapidapi.com/redbubble'\nquerystring = {\"page\": \"\", \"category\": \"\", \"search_term\": \"\", \"sort_order\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://redbubble-scraper.p.rapidapi.com/redbubble\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://redbubble-scraper.p.rapidapi.com/redbubble"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "redbubble-scraper.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://redbubble-scraper.p.rapidapi.com/redbubble\"\nquerystring = {\"category\": \"all-departments\", \"page\": \"1\", \"search_term\": \"orange cat\", \"sort_order\": \"relevant\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"redbubble-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Redbubble scraper",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": "all-departments"
                },
                {
                    "name": "search_term",
                    "type": "STRING",
                    "description": "",
                    "default": "orange cat"
                },
                {
                    "name": "sort_order",
                    "type": "STRING",
                    "description": "",
                    "default": "relevant"
                }
            ]
        }
    },
    {
        "query": "I want to find places nearby the coordinates (37.7749\u00b0 N, 122.4194\u00b0 W).",
        "model_answer": "requests.get(\"https://places-nearby-a-coordinates.p.rapidapi.com/categories\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"places-nearby-a-coordinates.p.rapidapi.com\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Find places nearby a given coordinates.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://places-nearby-a-coordinates.p.rapidapi.com/categories'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://places-nearby-a-coordinates.p.rapidapi.com/categories\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://places-nearby-a-coordinates.p.rapidapi.com/categories"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "places-nearby-a-coordinates.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://places-nearby-a-coordinates.p.rapidapi.com/categories\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"places-nearby-a-coordinates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Places Nearby a Coordinates",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the latest Climate News Feed with a limit of 3 news articles.",
        "model_answer": "requests.get(\"https://climate-news-feed.p.rapidapi.com/page/1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"climate-news-feed.p.rapidapi.com\"}, params={\"limit\":3})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Climate Change news from the most trusted sources. Nasa, UN, and more. Flexible, reliable, and fast with low latency. Includes thumbnails, filtering, and pagination",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-news-feed.p.rapidapi.com/page/1'\nquerystring = {\"id\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-news-feed.p.rapidapi.com/page/1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://climate-news-feed.p.rapidapi.com/page/1"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "climate-news-feed.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "limit": 3
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-news-feed.p.rapidapi.com/page/1\"\nquerystring = {\"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-news-feed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate News Feed",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "Can you provide the historical stock data of GOOG for the last 3 months with a 1 week interval using Yahoo Finance API?",
        "model_answer": "requests.get(\"https://yahoo-finance15.p.rapidapi.com/api/yahoo/hi/history/GOOG/3mo\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yahoo-finance15.p.rapidapi.com/api/yahoo/hi/history/AAPL/15m'\nquerystring = {\"interval\": \"\", \"symbol\": \"\", \"diffandsplits\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/hi/history/AAPL/15m\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/hi/history/AAPL/15m\"\nquerystring = {\"diffandsplits\": \"false\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yahoo Finance_v2",
            "api_arguments_original": [
                {
                    "name": "interval",
                    "type": "string",
                    "description": "Allows one of following : 5m|15m|30m|1h|1d|1wk|1mo|3mo",
                    "default": "15m"
                },
                {
                    "name": "symbol",
                    "type": "string",
                    "description": "A single symbol",
                    "default": "AAPL"
                },
                {
                    "name": "diffandsplits",
                    "type": "STRING",
                    "description": "Allows one of following : true|false",
                    "default": "false"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the geocoding information for the address \"1600 Amphitheatre Parkway, Mountain View, CA\" using the OpenCage Geocoder API, and log the response in English?",
        "model_answer": "requests.get(\"https://opencage-geocoder.p.rapidapi.com/geocode/v1/json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"opencage-geocoder.p.rapidapi.com\"}, params={\"q\": \"1600 Amphitheatre Parkway, Mountain View, CA\", \"key\":\"OPENCAGE-API-Key\", \"language\":\"en\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Worldwide forward and reverse address geocoding. Uses multiple geocoders, based on open data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://opencage-geocoder.p.rapidapi.com/geocode/v1/json'\nquerystring = {\"q\": \"\", \"key\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://opencage-geocoder.p.rapidapi.com/geocode/v1/json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://opencage-geocoder.p.rapidapi.com/geocode/v1/json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "opencage-geocoder.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "1600 Amphitheatre Parkway, Mountain View, CA",
                            "key": "OPENCAGE-API-Key",
                            "language": "en"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://opencage-geocoder.p.rapidapi.com/geocode/v1/json\"\nquerystring = {\"language\": \"en\", \"q\": \"Berlin\", \"key\": \"OPENCAGE-API-Key\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opencage-geocoder.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Opencage geocoder",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "\"latitude,longitude\" or \"address\" (without \")",
                    "default": "Berlin"
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "The API key you got when registering on https://geocoder.opencagedata.com/",
                    "default": "OPENCAGE-API-Key"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "an IETF format language code (such as es for Spanish or pt-BR for Brazilian Portuguese); if this is omitted a code of en (English) will be assumed",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "I want to check if apple.com is a valid website domain.",
        "model_answer": "requests.get(\"https://website-categorization.p.rapidapi.com/api/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"website-categorization.p.rapidapi.com\"}, params={\"domainName\": \"apple.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Website Categorization API lets you define the website category of a given URL. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://website-categorization.p.rapidapi.com/api/v1'\nquerystring = {\"domainName\": \"\", \"hardRefresh\": \"\", \"outputFormat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://website-categorization.p.rapidapi.com/api/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://website-categorization.p.rapidapi.com/api/v1"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "website-categorization.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domainName": "apple.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://website-categorization.p.rapidapi.com/api/v1\"\nquerystring = {\"hardRefresh\": \"\", \"domainName\": \"google.com\", \"outputFormat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"website-categorization.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Website Categorization",
            "api_arguments_original": [
                {
                    "name": "domainName",
                    "type": "STRING",
                    "description": "Website's domain name",
                    "default": "google.com"
                },
                {
                    "name": "hardRefresh",
                    "type": "STRING",
                    "description": "0 is used for getting the cached category if there is one. 1 is used for demanding the website categorization from scratch. Default: 0",
                    "default": ""
                },
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to test the TEST API and make a GET request to the endpoint. Please provide a Python function call to achieve this.",
        "model_answer": "requests.get(\"https://test6065.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test6065.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Futtest",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test6065.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test6065.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test6065.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test6065.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TEST",
            "api_arguments_original": []
        }
    },
    {
        "query": "What is the risk-free rate for a 2-year duration in Germany on 2022-12-31?",
        "model_answer": "requests.get(\"https://risk-free-rate-api.p.rapidapi.com/api/risk_free_rate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"risk-free-rate-api.p.rapidapi.com\"}, params={\"duration\": \"2y\", \"geography\":\"Germany\", \"date\":\"2022-12-31\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Returns the risk-free rate for a given date. Geography and proxy (duration) are customizable. Treasury Bonds and Bills are used as source.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://risk-free-rate-api.p.rapidapi.com/api/risk_free_rate'\nquerystring = {\"duration\": \"\", \"geography\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://risk-free-rate-api.p.rapidapi.com/api/risk_free_rate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://risk-free-rate-api.p.rapidapi.com/api/risk_free_rate"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "risk-free-rate-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://risk-free-rate-api.p.rapidapi.com/api/risk_free_rate\"\nquerystring = {\"duration\": \"3m\", \"geography\": \"US\", \"date\": \"2023-05-10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"risk-free-rate-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Risk Free Rate API",
            "api_arguments_original": [
                {
                    "name": "duration",
                    "type": "STRING",
                    "description": "",
                    "default": "3m"
                },
                {
                    "name": "geography",
                    "type": "STRING",
                    "description": "",
                    "default": "US"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2023-05-10"
                }
            ]
        }
    },
    {
        "query": "I want to use the KUBET API to fetch information.",
        "model_answer": "requests.get(\"https://kubet.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"kubet.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "KUBET-",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kubet.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kubet.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kubet.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kubet.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "KUBET-",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you retrieve the icon with id 54321 from the Flaticon API?",
        "model_answer": "requests.get(\"https://flaticon.p.rapidapi.com/style/54321\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"flaticon.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "5M+ icons and vectors at your fingertips",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flaticon.p.rapidapi.com/style/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flaticon.p.rapidapi.com/style/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flaticon.p.rapidapi.com/style/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flaticon.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flaticon",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the scheduled games for France on October 15, 2021 using ViperScore API.",
        "model_answer": "requests.get(\"https://viperscore.p.rapidapi.com/games/scheduled/country\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"viperscore.p.rapidapi.com\"}, params={\"countryId\": \"30\", \"date\":\"2021-10-15\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "ViperScore is the cheapest sports API for all hobby and business projects with over 25 endpoints, 20+ sports and 5100+ leagues! We serve comprehensive data blazing fast with a clear structure and a well thought out scheme. You get the best live results and fast information for every game and we constantly develop the API further and include more data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://viperscore.p.rapidapi.com/games/scheduled/country'\nquerystring = {\"countryId\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://viperscore.p.rapidapi.com/games/scheduled/country\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://viperscore.p.rapidapi.com/games/scheduled/country"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "viperscore.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "countryId": "30",
                            "date": "2021-10-15"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://viperscore.p.rapidapi.com/games/scheduled/country\"\nquerystring = {\"countryId\": \"30\", \"date\": \"2021-10-15\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"viperscore.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ViperScore",
            "api_arguments_original": [
                {
                    "name": "countryId",
                    "type": "STRING",
                    "description": "",
                    "default": "30"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2021-10-15"
                }
            ]
        }
    },
    {
        "query": "Please provide the data from the test API.",
        "model_answer": "requests.get(\"https://testapi1046.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"testapi1046.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "for testing befor deployment ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testapi1046.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testapi1046.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://testapi1046.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "testapi1046.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testapi1046.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testapi1046.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "testApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the current rankings of the top 200 tennis players in WTA?",
        "model_answer": "response = requests.get(\"https://sports-live-scores.p.rapidapi.com/tennis/rankings/wta/200\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"sports-live-scores.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "We support different Sports. Bettings odds, livescores, rankings and match details included. Sports include Football, Tennis, Basketball, Crikcet, Futsal, Handball, Baseball, Table Tennis, Esports. Try it out and always feel free tor reach out to the team to add more endpoints!  ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sports-live-scores.p.rapidapi.com/tennis/rankings/atp/50'\nquerystring = {\"n_players\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sports-live-scores.p.rapidapi.com/tennis/rankings/atp/50\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sports-live-scores.p.rapidapi.com/tennis/rankings/atp/50\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sports-live-scores.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sports Live Scores",
            "api_arguments_original": [
                {
                    "name": "n_players",
                    "type": "string",
                    "description": "Number of players to be displayed. Max: 1000.",
                    "default": "50"
                },
                {
                    "name": "category",
                    "type": "string",
                    "description": "*atp* or *wta*",
                    "default": "atp"
                }
            ]
        }
    },
    {
        "query": "Can you provide information about the character with ID 67890 from the RiordanVerse API?",
        "model_answer": "requests.get(\"https://riordanverse-api.p.rapidapi.com/api/characters/67890\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"riordanverse-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "An API for RiordanVerse",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://riordanverse-api.p.rapidapi.com/api/characters/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://riordanverse-api.p.rapidapi.com/api/characters/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://riordanverse-api.p.rapidapi.com/api/characters/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"riordanverse-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "riordanverse-api",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the stock chart for GOOGL from 2021-01-01 to 2021-12-31 in weekly intervals.",
        "model_answer": "requests.get(\"https://schwab.p.rapidapi.com/quote/get-chart\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"schwab.p.rapidapi.com\"}, params={\"symbol\":\"GOOGL\", \"startDate\": \"2021-01-01T00:00:00\", \"endDate\": \"2021-12-31T23:59:59\", \"dataPeriod\": \"Week\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Research investments, and follow market news",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://schwab.p.rapidapi.com/quote/get-chart'\nquerystring = {\"endDate\": \"\", \"startDate\": \"\", \"symbol\": \"\", \"dataPeriod\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://schwab.p.rapidapi.com/quote/get-chart\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://schwab.p.rapidapi.com/quote/get-chart"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "schwab.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "symbol": "GOOGL",
                            "startDate": "2021-01-01T00:00:00",
                            "endDate": "2021-12-31T23:59:59",
                            "dataPeriod": "Week"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://schwab.p.rapidapi.com/quote/get-chart\"\nquerystring = {\"dataPeriod\": \"Hour\", \"endDate\": \"2020-04-28T05:49:27\", \"startDate\": \"2020-04-27T05:49:27\", \"symbol\": \"TSLA\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"schwab.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Schwab",
            "api_arguments_original": [
                {
                    "name": "endDate",
                    "type": "STRING",
                    "description": "The format is yyyy-MM-dd'T'HH:mm:ss",
                    "default": "2020-04-28T05:49:27"
                },
                {
                    "name": "startDate",
                    "type": "STRING",
                    "description": "The format is yyyy-MM-dd'T'HH:mm:ss",
                    "default": "2020-04-27T05:49:27"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "The symbol to get information",
                    "default": "TSLA"
                },
                {
                    "name": "dataPeriod",
                    "type": "STRING",
                    "description": "One of the following : Minute|Hour|Day|Week|Month",
                    "default": "Hour"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to search for movie torrents for the movie \"The Matrix\" with a maximum of 5 results?",
        "model_answer": "requests.get(\"https://movie-tv-music-search-and-download.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"movie-tv-music-search-and-download.p.rapidapi.com\"}, params={\"keywords\": \"The Matrix\", \"quantity\": \"5\", \"page\": \"1\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "Get multiple downloadable torrent links by keyword search of movie, TV, and music titles with a rate value of 10 being the best.Download via uTorrent, BitTorrent and other clients",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://movie-tv-music-search-and-download.p.rapidapi.com/search'\nquerystring = {\"keywords\": \"\", \"quantity\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://movie-tv-music-search-and-download.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://movie-tv-music-search-and-download.p.rapidapi.com/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "movie-tv-music-search-and-download.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://movie-tv-music-search-and-download.p.rapidapi.com/search\"\nquerystring = {\"keywords\": \"Fast X 2023\", \"page\": \"1\", \"quantity\": \"40\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"movie-tv-music-search-and-download.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Movie, TV, music search and download",
            "api_arguments_original": [
                {
                    "name": "keywords",
                    "type": "STRING",
                    "description": "",
                    "default": "Fast X 2023"
                },
                {
                    "name": "quantity",
                    "type": "NUMBER",
                    "description": "MAX:40",
                    "default": "40"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please calculate the amortized loan repayment schedule for a loan with an annual interest rate of 4.5%, 120 installments (payments), starting from 2023-01-01, and a principal amount of $200,000.",
        "model_answer": "requests.get(\"https://loan-amortization-schedule-calculator.p.rapidapi.com/v1/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"loan-amortization-schedule-calculator.p.rapidapi.com\"}, params={\"annualInterestRate\": \"0.045\", \"installmentCount\": \"120\", \"startDate\": \"2023-01-01\", \"principalAmount\": \"200000\", \"repaymentInterval\": \"month\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Amortized loan repayment schedule calculator",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://loan-amortization-schedule-calculator.p.rapidapi.com/v1/'\nquerystring = {\"annualInterestRate\": \"\", \"installmentCount\": \"\", \"startDate\": \"\", \"principalAmount\": \"\", \"repaymentInterval\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://loan-amortization-schedule-calculator.p.rapidapi.com/v1/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "annualInterestRate",
                    "enum": [
                        "0.045"
                    ],
                    "description": "Decimal number: (annual interest rate in percent) / 100"
                },
                {
                    "name": "installmentCount",
                    "enum": [
                        "120"
                    ],
                    "description": "Number of installments (payments)"
                },
                {
                    "name": "startDate",
                    "enum": [
                        "2023-01-01"
                    ],
                    "description": "Start date of the schedule"
                },
                {
                    "name": "principalAmount",
                    "enum": [
                        "200000"
                    ],
                    "description": "Principal amount of the loan"
                },
                {
                    "name": "repaymentInterval",
                    "enum": [
                        "mont"
                    ],
                    "description": "Allowed values: year, month, week, biweekly"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://loan-amortization-schedule-calculator.p.rapidapi.com/v1/\"\nquerystring = {\"annualInterestRate\": \"0.06\", \"installmentCount\": \"12\", \"repaymentInterval\": \"month\", \"startDate\": \"2020-01-01\", \"principalAmount\": \"100000\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"loan-amortization-schedule-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Loan Amortization Schedule Calculator",
            "api_arguments_original": [
                {
                    "name": "annualInterestRate",
                    "type": "NUMBER",
                    "description": "Decimal number: (annual interest rate in percent) / 100",
                    "default": "0.06"
                },
                {
                    "name": "installmentCount",
                    "type": "NUMBER",
                    "description": "Number of installments (payments)",
                    "default": "12"
                },
                {
                    "name": "startDate",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "Start date of the schedule",
                    "default": "2020-01-01"
                },
                {
                    "name": "principalAmount",
                    "type": "NUMBER",
                    "description": "Principal amount of the loan",
                    "default": "100000"
                },
                {
                    "name": "repaymentInterval",
                    "type": "STRING",
                    "description": "Allowed values: year, month, week, biweekly",
                    "default": "month"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get the list of Flixbus stations and log the output?",
        "model_answer": "requests.get(\"https://flixbus.p.rapidapi.com/v1/stations\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"flixbus.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "A service that provides flixbus travel search, available cities, stations, timetables and routes. Site: www.flixbus.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flixbus.p.rapidapi.com/v1/stations'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flixbus.p.rapidapi.com/v1/stations\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://flixbus.p.rapidapi.com/v1/stations"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "flixbus.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flixbus.p.rapidapi.com/v1/stations\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flixbus",
            "api_arguments_original": []
        }
    },
    {
        "query": "Retrieve the contact details for contact ID 456 using the Upcall API.",
        "model_answer": "requests.get(\"https://upcall-upcall-v1.p.rapidapi.com/contacts/Some()\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"upcall-upcall-v1.p.rapidapi.com\"}, params={\"id\": \"456\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Upcall provides phone callers through an API and web interface. Simply send us your phone numbers and our professional callers will call them for you within minutes. We are the next generation call center. Contact us for more info!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://upcall-upcall-v1.p.rapidapi.com/contacts/Some()'\nquerystring = {\"id\": \"\", \"custom_fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://upcall-upcall-v1.p.rapidapi.com/contacts/Some()\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://upcall-upcall-v1.p.rapidapi.com/contacts/Some()"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "upcall-upcall-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "456"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://upcall-upcall-v1.p.rapidapi.com/contacts/Some()\"\nquerystring = {\"custom_fields\": \"Some()\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"upcall-upcall-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Upcall",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "ID of contact to fetch",
                    "default": "Some()"
                },
                {
                    "name": "custom_fields",
                    "type": "NUMBER",
                    "description": "If set, custom fields will be displayed in the output",
                    "default": "Some()"
                }
            ]
        }
    },
    {
        "query": "Can you help me with the Zomi Dictionary API? I want to get the definition of the word \"hello\".",
        "model_answer": "requests.get(\"https://zomidictionary.p.rapidapi.comhttps://zomidictionary.com/\")",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "Zomi Dictionary",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://zomidictionary.p.rapidapi.comhttps://zomidictionary.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://zomidictionary.p.rapidapi.comhttps://zomidictionary.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{}"
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://zomidictionary.p.rapidapi.comhttps://zomidictionary.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"zomidictionary.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ZomiDictionary",
            "api_arguments_original": []
        }
    },
    {
        "query": "Extract the data for a player with the playerid 105 from the Valorant Esports API.",
        "model_answer": "requests.get(\"https://valorant-esports1.p.rapidapi.com/v1/players/105\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"valorant-esports1.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "The Valorant Esports is a user-friendly tool that allows you to extract data from the website vlr.gg. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://valorant-esports1.p.rapidapi.com/v1/players/93'\nquerystring = {\"playerid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://valorant-esports1.p.rapidapi.com/v1/players/93\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://valorant-esports1.p.rapidapi.com/v1/players/93\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"valorant-esports1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Valorant Esports_v2",
            "api_arguments_original": [
                {
                    "name": "playerid",
                    "type": "string",
                    "description": "",
                    "default": "93"
                }
            ]
        }
    },
    {
        "query": "Please provide me an API call to use the Fast Reading API to analyze the text \"Lorem ipsum dolor sit amet\" in English language using Model 2 and with a word fixation of 4.",
        "model_answer": "requests.get(\"https://fast-reading.p.rapidapi.com/api/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fast-reading.p.rapidapi.com\"}, params={\"txt\": \"Lorem ipsum dolor sit amet\", \"fix\": 4, \"lng\": \"en\", \"model\": \"m2\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Fast Reading (Bionic Reading) - is a shallow method of reading facilitating the reading process by guiding the eyes through text with artificial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fast-reading.p.rapidapi.com/api/'\nquerystring = {\"txt\": \"\", \"fix\": \"\", \"lng\": \"\", \"model\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fast-reading.p.rapidapi.com/api/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fast-reading.p.rapidapi.com/api/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fast-reading.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "txt": "Lorem ipsum dolor sit amet",
                            "fix": 4,
                            "lng": "en",
                            "model": "m2"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fast-reading.p.rapidapi.com/api/\"\nquerystring = {\"fix\": \"5\", \"lng\": \"en\", \"model\": \"m1\", \"txt\": \"Fast Reading - is a shallow method of reading facilitating the reading process by guiding the eyes through text with artificial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fast-reading.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fast Reading",
            "api_arguments_original": [
                {
                    "name": "txt",
                    "type": "STRING",
                    "description": "Raw text to be converted",
                    "default": "Fast Reading - is a shallow method of reading facilitating the reading process by guiding the eyes through text with artificial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word."
                },
                {
                    "name": "fix",
                    "type": "NUMBER",
                    "description": "Word fixation",
                    "default": "5"
                },
                {
                    "name": "lng",
                    "type": "STRING",
                    "description": "Language: EN, RU, ES",
                    "default": "en"
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "Model For Text Processing: m1,m2,...m11",
                    "default": "m1"
                }
            ]
        }
    },
    {
        "query": "I want to check if the email address example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Email sandbox testing API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/metadata'\nquerystring = {\"attachmentId\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/metadata\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/metadata\"\nquerystring = {\"attachmentId\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MailSlurp Email Testing",
            "api_arguments_original": [
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "ID of attachment",
                    "default": ""
                },
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the population of Asia.",
        "model_answer": "requests.get(\"https://world-population3.p.rapidapi.com/continents/Asia\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"world-population3.p.rapidapi.com\"}, params={\"rank\": \"1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get interesting information about countries' population",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-population3.p.rapidapi.com/continents/Europe'\nquerystring = {\"continent\": \"\", \"rank\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-population3.p.rapidapi.com/continents/Europe\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://world-population3.p.rapidapi.com/continents/Asia"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "world-population3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "rank": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-population3.p.rapidapi.com/continents/Europe\"\nquerystring = {\"rank\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-population3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Population",
            "api_arguments_original": [
                {
                    "name": "continent",
                    "type": "string",
                    "description": "",
                    "default": "Europe"
                },
                {
                    "name": "rank",
                    "type": "NUMBER",
                    "description": "Order the countries according to the rank. Can take two values:\n\n- 1 = ascending order\n\n-  -1 = descending order",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you please check if the IP address 172.16.0.1 has been associated with any malicious activity in the past 15 days?",
        "model_answer": "requests.get(\"https://abuse-ip-check.p.rapidapi.com/api/v2/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"abuse-ip-check.p.rapidapi.com\"}, params={\"ipAddress\": \"172.16.0.1\", \"maxAgeInDays\":\"15\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Abuse IP Check is a project dedicated to helping combat the spread of hackers, spammers, and abusive activity on the internet.\n\nOur mission is to help make Web safer by providing a central blacklist for webmasters, system administrators, and other interested parties to report and find IP addresses that have been associated with malicious activity online.\n\nYou can report an IP address associated with malicious activity, or check to see if an IP address has been reported, by using the search bo...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://abuse-ip-check.p.rapidapi.com/api/v2/check'\nquerystring = {\"ipAddress\": \"\", \"maxAgeInDays\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://abuse-ip-check.p.rapidapi.com/api/v2/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://abuse-ip-check.p.rapidapi.com/api/v2/check"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "abuse-ip-check.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://abuse-ip-check.p.rapidapi.com/api/v2/check\"\nquerystring = {\"ipAddress\": \"118.25.6.39\", \"maxAgeInDays\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"abuse-ip-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Abuse IP Check",
            "api_arguments_original": [
                {
                    "name": "ipAddress",
                    "type": "STRING",
                    "description": "",
                    "default": "118.25.6.39"
                },
                {
                    "name": "maxAgeInDays",
                    "type": "STRING",
                    "description": "default : 30\nmin : 1\nmax : 365",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the top 3 graffiti tags in Jet Set Radio, ordered by stats in descending order?",
        "model_answer": "requests.get(\"https://jet-set-radio-api.p.rapidapi.com/graffiti-tags\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"jet-set-radio-api.p.rapidapi.com\"}, params={\"orderBy\": \"desc\", \"limit\": \"3\", \"sortBy\": \"stats\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "A data provider for all things Jet Set Radio in JSON format!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jet-set-radio-api.p.rapidapi.com/graffiti-tags'\nquerystring = {\"orderBy\": \"\", \"limit\": \"\", \"sortBy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jet-set-radio-api.p.rapidapi.com/graffiti-tags\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jet-set-radio-api.p.rapidapi.com/graffiti-tags\"\nquerystring = {\"orderBy\": \"asc\", \"limit\": \"5\", \"sortBy\": \"name\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jet-set-radio-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Jet Set Radio API",
            "api_arguments_original": [
                {
                    "name": "orderBy",
                    "type": "STRING",
                    "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                    "default": "asc"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Limit the number of items returned in the response.",
                    "default": "5"
                },
                {
                    "name": "sortBy",
                    "type": "STRING",
                    "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                    "default": "name"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to generate a fake identity using the Fake Identity Generator API and print the response?",
        "model_answer": "requests.get(\"https://fake-identity-generator1.p.rapidapi.com/GenerateRandomIdentity.php\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fake-identity-generator1.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The most complete and cheap Fake Identity Generation API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fake-identity-generator1.p.rapidapi.com/GenerateRandomIdentity.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fake-identity-generator1.p.rapidapi.com/GenerateRandomIdentity.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fake-identity-generator1.p.rapidapi.com/GenerateRandomIdentity.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fake-identity-generator1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fake Identity Generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check if the email address johndoe@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"johndoe@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "wffff",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with real-time news from social media platforms like Twitter, Facebook, and Instagram?",
        "model_answer": "requests.get(\"https://onelike1.p.rapidapi.com/servicegr/news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"onelike1.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Getting News in real-time via API from Social Medias like Twitter, Facebook, Instagram, etc",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://onelike1.p.rapidapi.com/servicegr/news'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://onelike1.p.rapidapi.com/servicegr/news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://onelike1.p.rapidapi.com/servicegr/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"onelike1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OneLike",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to list all available countries in Similar Web API.",
        "model_answer": "requests.get(\"https://similar-web.p.rapidapi.com/countries/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"similar-web.p.rapidapi.com\"})",
        "original": {
            "domain": "Monitoring",
            "framework": "RapidAPI",
            "functionality": "This API helps you to query website traffic and key metrics for any website, including engagement rate, traffic ranking, keyword ranking and traffic source... to create a plugin like similarweb.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://similar-web.p.rapidapi.com/countries/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://similar-web.p.rapidapi.com/countries/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://similar-web.p.rapidapi.com/countries/list"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "similar-web.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://similar-web.p.rapidapi.com/countries/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"similar-web.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Similar Web",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to check the reputation and geolocation of the IP address 192.168.1.1 and print the response?",
        "model_answer": "requests.get(\"https://ip-reputation-geoip-and-detect-vpn.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-reputation-geoip-and-detect-vpn.p.rapidapi.com\"}, params={\"ip\": \"192.168.1.1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Block fraud attempts in realtime. This ridiculously effective API provides invaluable information about any IP address.  Detect bots, prevent fraud and abuse by detecting users trying to hide behind a VPN, proxy, or TOR. Geolocate IP addresses to find out which country or city the website visitors are from.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-reputation-geoip-and-detect-vpn.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-reputation-geoip-and-detect-vpn.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ip-reputation-geoip-and-detect-vpn.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ip-reputation-geoip-and-detect-vpn.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-reputation-geoip-and-detect-vpn.p.rapidapi.com/\"\nquerystring = {\"ip\": \"185.65.135.230\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-reputation-geoip-and-detect-vpn.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP reputation, geoip and detect VPN",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "185.65.135.230"
                }
            ]
        }
    },
    {
        "query": "What is the friendly name of the available powers for Lightsail container services?",
        "model_answer": "aws.lightsail.get_container_service_powers().powers[0].name",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Reduce the risk of fraud on your platform by onboarding only those individuals whose PAN is linked with their Aadhaar, in accordance with the laws of India.\n\nReduce manual efforts by calling a single API which tells you if an individual\u2019s PAN Aadhaar link exists or not.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://verify-pan-aadhaar-link.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://verify-pan-aadhaar-link.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://verify-pan-aadhaar-link.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"verify-pan-aadhaar-link.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Verify PAN Aadhaar link_v2",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you calculate the misinformation exposure score for the Twitter account \"@new_user\" and log the output?",
        "model_answer": "requests.get(\"https://mescalc.p.rapidapi.com/account/@new_user\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mescalc.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Calculates Misinformation Exposure Score for Twitter accounts",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mescalc.p.rapidapi.com/account/{}'\nquerystring = {\"twitter_account\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mescalc.p.rapidapi.com/account/{}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mescalc.p.rapidapi.com/account/{}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mescalc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MESCALC",
            "api_arguments_original": [
                {
                    "name": "twitter_account",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{}"
                }
            ]
        }
    },
    {
        "query": "I want to get the live data of the 567 Live app 2022. Please provide a Python function call to make the API request and log the response.",
        "model_answer": "requests.get(\"https://567-live-app-2022.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"567-live-app-2022.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "567 Live c\u00f3 trang ch\u1ee7 567live.io duy nh\u1ea5t ch\u00ednh x\u00e1c. Cung c\u1ea5p \u0111\u1ee7 link t\u1ea3i 567 live app an to\u00e0n cho b\u1ea1n phi\u00ean b\u1ea3n m\u1edbi nh\u1ea5t.\n\u0110\u1ecba ch\u1ec9 : 99 Gi\u1ea3i Ph\u00f3ng, \u0110\u1ed3ng T\u00e2m, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i\nGoogle map https://www.google.com/maps?cid=7118718670140148249 \nHotline 0978720550\nGmail:  567liveapp@gmail.com\nWebsite https://567live.io/ \nhttps://sites.google.com/view/567live-app/\nhttps://567live.io/tai-ve/567live-apk \nhttps://567live.io/tai-ve/567live-ios\nhttps://567live.io/thu-muc/app-live/ \nhttps://folkd.com/u...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://567-live-app-2022.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://567-live-app-2022.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://567-live-app-2022.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"567-live-app-2022.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "567 Live app 2022",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the pre-game odds for Lotto Max.",
        "model_answer": "requests.get(\"https://fdj1.p.rapidapi.com/odds/lotto_max\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fdj1.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Games and pre-game Odds for FDJ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fdj1.p.rapidapi.com/odds/fdj'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fdj1.p.rapidapi.com/odds/fdj\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fdj1.p.rapidapi.com/odds/lotto_max"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fdj1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fdj1.p.rapidapi.com/odds/fdj\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fdj1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FDJ",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the appointments for today at Clinic B.",
        "model_answer": "requests.get(\"https://appointment-system-api.p.rapidapi.com/appointment/getAppointments\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"appointment-system-api.p.rapidapi.com\"}, params={\"date\": \"2022.09.09\", \"clinicName\": \"Clinic B\"})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "Appointment System Api with user operations and admin operations. Api has all appointment operations for a clinic",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://appointment-system-api.p.rapidapi.com/appointment/getAppointments'\nquerystring = {\"date\": \"\", \"clinicName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://appointment-system-api.p.rapidapi.com/appointment/getAppointments\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://appointment-system-api.p.rapidapi.com/appointment/getAppointments"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "appointment-system-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "date": "2022.09.09",
                            "clinicName": "Clinic B"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://appointment-system-api.p.rapidapi.com/appointment/getAppointments\"\nquerystring = {\"date\": \"2022.09.09\", \"clinicName\": \"DemoUser\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"appointment-system-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Appointment System API",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2022.09.09"
                },
                {
                    "name": "clinicName",
                    "type": "STRING",
                    "description": "",
                    "default": "DemoUser"
                }
            ]
        }
    },
    {
        "query": "I want to download a Twitter video using the RapidAPI endpoint \"https://twitter65.p.rapidapi.com/api/twitter/hls\".",
        "model_answer": "requests.get(\"https://twitter65.p.rapidapi.com/api/twitter/hls\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"twitter65.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Download  Twitter videos",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitter65.p.rapidapi.com/api/twitter/hls'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitter65.p.rapidapi.com/api/twitter/hls\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://twitter65.p.rapidapi.com/api/twitter/hls"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "twitter65.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitter65.p.rapidapi.com/api/twitter/hls\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitter65.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "twitter",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the latest posts from the \"hello_v2\" API.",
        "model_answer": "requests.get(\"https://hello1.p.rapidapi.com/posts\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hello1.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "qweqw",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hello1.p.rapidapi.com/posts'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hello1.p.rapidapi.com/posts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hello1.p.rapidapi.com/posts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hello1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "hello_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get real-time details of the product with ASIN B08PPDJWC8 on Amazon in the UK marketplace.",
        "model_answer": "requests.get(\"https://real-time-amazon-data.p.rapidapi.com/product-details\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"real-time-amazon-data.p.rapidapi.com\"}, params={\"asin\":\"B08PPDJWC8\", \"country\":\"GB\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Fast and Simple API to search for products, offers and reviews on Amazon in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://real-time-amazon-data.p.rapidapi.com/product-details'\nquerystring = {\"asin\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://real-time-amazon-data.p.rapidapi.com/product-details\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://real-time-amazon-data.p.rapidapi.com/product-details"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "real-time-amazon-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://real-time-amazon-data.p.rapidapi.com/product-details\"\nquerystring = {\"country\": \"US\", \"asin\": \"B07ZPKBL9V\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"real-time-amazon-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Real-Time Amazon Data",
            "api_arguments_original": [
                {
                    "name": "asin",
                    "type": "STRING",
                    "description": "Product ASIN for which to get details. Supports batching of up to 10 ASINs in a single request, separated by comma (e.g. *B08PPDJWC8,B07ZPKBL9V, B08BHXG144*).\n\nNote that each ASIN in a batch request is counted as a single request against the plan quota.",
                    "default": "B07ZPKBL9V"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Sets the marketplace country, language and currency. \n\n**Default:** `US`\n\n**Allowed values:**  `US, AU, BR, CA, CN, FR, DE, IN, IT, MX, NL, SG, ES, TR, AE, GB, JP`\n",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "Update the info for PTL with info1=\"987\", info2=\"654\", info3=\"321\".",
        "model_answer": "requests.get(\"https://ptl.p.rapidapi.com/update\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ptl.p.rapidapi.com\"}, params={\"info1\": \"987\", \"info2\": \"654\", \"info3\": \"321\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "receive user",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ptl.p.rapidapi.com/update'\nquerystring = {\"info3\": \"\", \"info1\": \"\", \"info2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ptl.p.rapidapi.com/update\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ptl.p.rapidapi.com/update"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ptl.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "info1": "987",
                            "info2": "654",
                            "info3": "321"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ptl.p.rapidapi.com/update\"\nquerystring = {\"info3\": \"333\", \"info1\": \"111\", \"info2\": \"222\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ptl.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PTL",
            "api_arguments_original": [
                {
                    "name": "info3",
                    "type": "STRING",
                    "description": "",
                    "default": "333"
                },
                {
                    "name": "info1",
                    "type": "STRING",
                    "description": "",
                    "default": "111"
                },
                {
                    "name": "info2",
                    "type": "STRING",
                    "description": "",
                    "default": "222"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the live weather data for New York City?",
        "model_answer": "requests.get(\"https://testapi460.p.rapidapi.com/mobilitu/public\")",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "as",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testapi460.p.rapidapi.com/mobilitu/public'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testapi460.p.rapidapi.com/mobilitu/public\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testapi460.p.rapidapi.com/mobilitu/public\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testapi460.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "testapi_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if the ASIN B07NM7HFHF is available on Amazon in the UK marketplace?",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/uk/B07NM7HFHF\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Date calculator",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://azaprime.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://azaprime.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://amazon-live-data.p.rapidapi.com/getasin/uk/B07NM7HFHF"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "amazon-live-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://azaprime.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"azaprime.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Azaprime",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to analyze the social media sentiment for Ethereum using the Crowdsense API.",
        "model_answer": "requests.get(\"https://crowdsense1.p.rapidapi.com/api/socialnews/getpredictivespikesbycoinname\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crowdsense1.p.rapidapi.com\"}, params={\"coinName\": \"Ethereum\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates. Based on 100,000,000s of feeds per day from billions of unique sources across Twitter, Telegram, and Reddit for 1000+ cryptocurrencies. Start now for free...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crowdsense1.p.rapidapi.com/api/socialnews/getpredictivespikesbycoinname'\nquerystring = {\"coinName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crowdsense1.p.rapidapi.com/api/socialnews/getpredictivespikesbycoinname\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://crowdsense1.p.rapidapi.com/api/socialnews/getpredictivespikesbycoinname"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "crowdsense1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "coinName": "Ethereum"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crowdsense1.p.rapidapi.com/api/socialnews/getpredictivespikesbycoinname\"\nquerystring = {\"coinName\": \"Bitcoin\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdsense1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crowdsense",
            "api_arguments_original": [
                {
                    "name": "coinName",
                    "type": "STRING",
                    "description": "",
                    "default": "Bitcoin"
                }
            ]
        }
    },
    {
        "query": "How can I retrieve the latest job stories from the YC Hacker News Official API and log the output?",
        "model_answer": "requests.get(\"https://yc-hacker-news-official.p.rapidapi.com/jobstories.json\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yc-hacker-news-official.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "The official hacker news API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yc-hacker-news-official.p.rapidapi.com/jobstories.json'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yc-hacker-news-official.p.rapidapi.com/jobstories.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yc-hacker-news-official.p.rapidapi.com/jobstories.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yc-hacker-news-official.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YC Hacker news official",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to obtain a map of New York City using Mapilion's vector and raster map tiles API? ",
        "model_answer": "requests.get(\"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/0/0/0\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"}, params={\"x\": \"40.7128\", \"y\": \"-74.0060\", \"z\": \"10\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/0/0/0'\nquerystring = {\"x\": \"\", \"y\": \"\", \"z\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/0/0/0\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "'https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{'X-RapidAPI-Key'"
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{'x'"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/0/0/0\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mapilion - Vector and Raster Map Tiles",
            "api_arguments_original": [
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "z",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Please convert the URL \"https://www.test.com\" to a QR code.",
        "model_answer": "requests.get(\"https://qr-code-generator77.p.rapidapi.com/api/qr-code\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"qr-code-generator77.p.rapidapi.com\"}, params={\"url\": \"https://www.test.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Conver string to qr",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-code-generator77.p.rapidapi.com/api/qr-code'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-code-generator77.p.rapidapi.com/api/qr-code\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://qr-code-generator77.p.rapidapi.com/api/qr-code"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "qr-code-generator77.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://www.test.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-code-generator77.p.rapidapi.com/api/qr-code\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-generator77.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Qr Code Generator_v5",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to obtain information about airports in London, using the Airports by API-Ninjas API.",
        "model_answer": "requests.get(\"https://airports-by-api-ninjas.p.rapidapi.com/v1/airports\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"airports-by-api-ninjas.p.rapidapi.com\"}, params={\"region\": \"London\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Access vital data for 30,000 different airports worldwide. See more info at https://api-ninjas.com/api/airports.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://airports-by-api-ninjas.p.rapidapi.com/v1/airports'\nquerystring = {\"offset\": \"\", \"max_elevation\": \"\", \"region\": \"\", \"min_elevation\": \"\", \"city\": \"\", \"country\": \"\", \"timezone\": \"\", \"name\": \"\", \"icao\": \"\", \"iata\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://airports-by-api-ninjas.p.rapidapi.com/v1/airports\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://airports-by-api-ninjas.p.rapidapi.com/v1/airports"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "airports-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "region": "London"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://airports-by-api-ninjas.p.rapidapi.com/v1/airports\"\nquerystring = {\"offset\": \"\", \"max_elevation\": \"\", \"region\": \"\", \"min_elevation\": \"\", \"city\": \"\", \"country\": \"\", \"timezone\": \"\", \"name\": \"London Heathrow\", \"icao\": \"\", \"iata\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"airports-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Airports by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "number of results to offset for pagination.",
                    "default": ""
                },
                {
                    "name": "max_elevation",
                    "type": "NUMBER",
                    "description": "maximum airport elevation in feet.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "administrative region such as state or province within a country (e.g. California)",
                    "default": ""
                },
                {
                    "name": "min_elevation",
                    "type": "NUMBER",
                    "description": "minimum airport elevation in feet.",
                    "default": ""
                },
                {
                    "name": "city",
                    "type": "STRING",
                    "description": "airport city (e.g. London)",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "airport country. Must be 2-character ISO-2 country code (e.g. GB)",
                    "default": ""
                },
                {
                    "name": "timezone",
                    "type": "STRING",
                    "description": "airport timezone (e.g. Europe/London)\n\n",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "airport name. This parameter supports partial matching (e.g. Heathrow will match London Heathrow Airport)",
                    "default": "London Heathrow"
                },
                {
                    "name": "icao",
                    "type": "STRING",
                    "description": "International Civil Aviation Organization (ICAO) 4-character airport code.",
                    "default": ""
                },
                {
                    "name": "iata",
                    "type": "STRING",
                    "description": "International Air Transport Association (IATA) 3-character airport code.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to check if the email address 'test@example.com' is valid using the Email Verifier API.",
        "model_answer": "requests.get(\"https://email-verifier15.p.rapidapi.com/verify-email\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"email-verifier15.p.rapidapi.com\"}, params={\"email\": \"test@example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "A simple API to verify email addresses in making sure they are valid and real, for ensuring you are sending emails to actual people!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-verifier15.p.rapidapi.com/verify-email'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-verifier15.p.rapidapi.com/verify-email\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://email-verifier15.p.rapidapi.com/verify-email"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "email-verifier15.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-verifier15.p.rapidapi.com/verify-email\"\nquerystring = {\"email\": \"abc1@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-verifier15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Verifier",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "abc1@gmail.com"
                }
            ]
        }
    },
    {
        "query": "Please check the meaning of the word \"cat\" in the English language using the Lexicala API and print the response.",
        "model_answer": "requests.get(\"https://lexicala1.p.rapidapi.com/search-entries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"lexicala1.p.rapidapi.com\"}, params={\"text\":\"cat\",\"language\":\"en\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Lexicala API is a REST interface offering access to dictionary and lexical data from our monolingual, bilingual, multilingual and learner\u2019s dictionaries in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lexicala1.p.rapidapi.com/search-entries'\nquerystring = {\"sample\": \"\", \"source\": \"\", \"language\": \"\", \"analyzed\": \"\", \"subcategorization\": \"\", \"polysemous\": \"\", \"pos\": \"\", \"gender\": \"\", \"monosemous\": \"\", \"morph\": \"\", \"text\": \"\", \"number\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lexicala1.p.rapidapi.com/search-entries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://lexicala1.p.rapidapi.com/search-entries"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "lexicala1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "text": "cat",
                            "language": "en"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lexicala1.p.rapidapi.com/search-entries\"\nquerystring = {\"sample\": \"\", \"source\": \"\", \"language\": \"\", \"analyzed\": \"\", \"subcategorization\": \"\", \"polysemous\": \"\", \"pos\": \"\", \"gender\": \"\", \"monosemous\": \"\", \"morph\": \"\", \"text\": \"\", \"number\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lexicala1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lexicala",
            "api_arguments_original": [
                {
                    "name": "sample",
                    "type": "NUMBER",
                    "description": "Number of randomly-sampled results to return",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "The resource to search within. The default value is 'global', i.e. the Global series",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The language code of the entry\u2019s language. For an extensive list of language codes, see GET /languages",
                    "default": ""
                },
                {
                    "name": "analyzed",
                    "type": "BOOLEAN",
                    "description": "Whether to search using the language analyzer or to get exact matches only. The default value is 'false'",
                    "default": ""
                },
                {
                    "name": "subcategorization",
                    "type": "STRING",
                    "description": "The subcategorization (e.g. countable, transitive, \u2026) to search for",
                    "default": ""
                },
                {
                    "name": "polysemous",
                    "type": "BOOLEAN",
                    "description": "Whether to only return polysemous entries",
                    "default": ""
                },
                {
                    "name": "pos",
                    "type": "STRING",
                    "description": "The part of speech (POS) to search for",
                    "default": ""
                },
                {
                    "name": "gender",
                    "type": "STRING",
                    "description": "The grammatical gender to search for",
                    "default": ""
                },
                {
                    "name": "monosemous",
                    "type": "BOOLEAN",
                    "description": "Whether to only return monosemous entries",
                    "default": ""
                },
                {
                    "name": "morph",
                    "type": "BOOLEAN",
                    "description": "Whether to search in headword inflections if exist. The default value is 'false'",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The headword text to search for",
                    "default": ""
                },
                {
                    "name": "number",
                    "type": "STRING",
                    "description": "The grammatical number to search for",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number of results to return (1-indexed). The default value is 1",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the details of a commercial property for rent with ID 987654 from the UK Real Estate Rightmove API?",
        "model_answer": "requests.get(\"https://uk-real-estate-rightmove.p.rapidapi.com/commercial/property-to-rent/detail\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"uk-real-estate-rightmove.p.rapidapi.com\"}, params={\"id\": \"987654\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Real-time data, unofficial API rightmove co uk\n\nRightmove is a leading UK Real Estate website in the United Kingdom. With the aim of providing detailed and reliable information about various types of properties, Rightmove has become an important destination for individuals looking to buy, sell, or rent property in the UK",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uk-real-estate-rightmove.p.rapidapi.com/commercial/property-to-rent/detail'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uk-real-estate-rightmove.p.rapidapi.com/commercial/property-to-rent/detail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://uk-real-estate-rightmove.p.rapidapi.com/commercial/property-to-rent/detail"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "uk-real-estate-rightmove.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uk-real-estate-rightmove.p.rapidapi.com/commercial/property-to-rent/detail\"\nquerystring = {\"id\": \"127696127\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uk-real-estate-rightmove.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "UK Real Estate Rightmove",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "id from commercial/property-to-rent endpoint ",
                    "default": "127696127"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to retrieve information about a character with the ID of 1 from the Throne of Glass API.",
        "model_answer": "requests.get(\"https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"throne-of-glass-api3.p.rapidapi.com\"}, params={\"id\": \"1\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Throne of Glass API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "throne-of-glass-api3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"throne-of-glass-api3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Throne of Glass API_v2",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the Python function call to find synonyms for the word \"excited\" in English using the Synonyms Words API?",
        "model_answer": "requests.get(\"https://synonyms-words.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"synonyms-words.p.rapidapi.com\"}, params={\"language\":\"EN\", \"word\":\"excited\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "In this api you can display synonyms for hundreds of miles of words in English, Spanish, French and Portuguese languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://synonyms-words.p.rapidapi.com/'\nquerystring = {\"language\": \"\", \"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://synonyms-words.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://synonyms-words.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "synonyms-words.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "language": "EN",
                            "word": "excited"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://synonyms-words.p.rapidapi.com/\"\nquerystring = {\"language\": \"EN\", \"word\": \"car\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"synonyms-words.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Synonyms Words",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "EN"
                },
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "car"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to obtain the mention count of my brand for the past 60 days.",
        "model_answer": "requests.get(\"https://track-the-mentions-and-conversations-about-your-business.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"track-the-mentions-and-conversations-about-your-business.p.rapidapi.com\"}, params={\"query\": \"my brand\", \"page\": 1, \"period\": 60})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Find your brand, competitor, or any other query mentions across the web daily, including websites, Twitter, Reddit, forums, blogs, and other",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://track-the-mentions-and-conversations-about-your-business.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"page\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://track-the-mentions-and-conversations-about-your-business.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://track-the-mentions-and-conversations-about-your-business.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "track-the-mentions-and-conversations-about-your-business.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://track-the-mentions-and-conversations-about-your-business.p.rapidapi.com/\"\nquerystring = {\"page\": \"1\", \"period\": \"14\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"track-the-mentions-and-conversations-about-your-business.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Track the mentions and conversations about your business",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "period",
                    "type": "NUMBER",
                    "description": "",
                    "default": "14"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to download the game from the given URL and include the necessary headers.",
        "model_answer": "requests.get(\"https://game3.p.rapidapi.comhttp://www.mediafire.com/file/9ezvd76dd9dxgab/game.apk/file\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"game3.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "download this g develop game ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://game3.p.rapidapi.comhttp://www.mediafire.com/file/9ezvd76dd9dxgab/game.apk/file'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://game3.p.rapidapi.comhttp://www.mediafire.com/file/9ezvd76dd9dxgab/game.apk/file\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://game3.p.rapidapi.comhttp://www.mediafire.com/file/9ezvd76dd9dxgab/game.apk/file\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"game3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "game",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you give me the Experian credit score and report for my application ID \"54321\"?",
        "model_answer": "requests.get(\"https://experian-credit-report-score.p.rapidapi.com/GetArchiveReport\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"experian-credit-report-score.p.rapidapi.com\"}, params={\"AppId\": \"54321\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Delivers a consumer\u2019s standard Experian credit score and report.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://experian-credit-report-score.p.rapidapi.com/GetArchiveReport'\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://experian-credit-report-score.p.rapidapi.com/GetArchiveReport\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://experian-credit-report-score.p.rapidapi.com/GetArchiveReport"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "experian-credit-report-score.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "AppId": "54321"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://experian-credit-report-score.p.rapidapi.com/GetArchiveReport\"\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"experian-credit-report-score.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Experian Credit Report Score",
            "api_arguments_original": [
                {
                    "name": "AppId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Translate the sentence \"Bonjour, comment \u00e7a va?\" from French to English.",
        "model_answer": "requests.get(\"https://translate-plus.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"translate-plus.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Dynamically Translate between languages with the Translate Plus API. Our API is much cheaper & faster than Google Translate and other translation providers! Get Started Free!\nIf you are using a very high volume and with our new service, you can translate more efficiently and cost-effectively on https://translateplus.io",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translate-plus.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translate-plus.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://translate-plus.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "translate-plus.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translate-plus.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translate-plus.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translate Plus",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to send a PUT request to the API \"Putreq\" with the given URL and headers. The URL is \"https://exampleapi.com/\" and the headers are {'Authorization': 'Bearer my_token', 'Content-Type': 'application/json'}.",
        "model_answer": "requests.put(\"https://exampleapi.com/\", headers={'Authorization': 'Bearer my_token', 'Content-Type': 'application/json'})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "put req",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://putreq.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://putreq.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://putreq.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"putreq.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Putreq",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the latest stock price for Google and Facebook from the NSE index.",
        "model_answer": "requests.get(\"https://latest-stock-price.p.rapidapi.com/price\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"latest-stock-price.p.rapidapi.com\"}, params={\"Indices\": \"NSE\", \"Identifier\": \"GOOGL,FB\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Latest Stock Price from NSE",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://latest-stock-price.p.rapidapi.com/price'\nquerystring = {\"Indices\": \"\", \"Identifier\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://latest-stock-price.p.rapidapi.com/price\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://latest-stock-price.p.rapidapi.com/price"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "latest-stock-price.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "Indices": "NSE",
                            "Identifier": "GOOGL,FB"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://latest-stock-price.p.rapidapi.com/price\"\nquerystring = {\"Identifier\": \"\", \"Indices\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"latest-stock-price.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Latest Stock Price",
            "api_arguments_original": [
                {
                    "name": "Indices",
                    "type": "ENUM",
                    "description": "Define Stock Indices",
                    "default": ""
                },
                {
                    "name": "Identifier",
                    "type": "STRING",
                    "description": "Define Stock Identifier\nSupports multiple comma separated Identifier",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you get the cryptocurrency trades data for BTC on COINBASE exchange from November 1st, 2022 at 00:00:00 UTC to November 30th, 2022 at 23:59:59 UTC sorted in descending order with a limit of 500 records?",
        "model_answer": "requests.get(\"https://cryptocurrency-financial-data.p.rapidapi.com/trades\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"cryptocurrency-financial-data.p.rapidapi.com\"}, params={\"start\": \"2022-11-01T00:00:00\",\"end\": \"2022-11-30T23:59:59\",\"sort\": \"desc\",\"base\": \"USDT\",\"market_venue\": \"COINBASE\",\"limit\": \"500\",\"symbol\": \"BTC\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Cryptocurrency financial data API for major exchanges. Candlesticks (OHLCV, VWAP, and Trade Count), Trades (tick-level). Spot and futures markets. Robust data catalog and documentation.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cryptocurrency-financial-data.p.rapidapi.com/trades'\nquerystring = {\"start\": \"\", \"base\": \"\", \"market_venue\": \"\", \"symbol\": \"\", \"end\": \"\", \"sort\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cryptocurrency-financial-data.p.rapidapi.com/trades\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://cryptocurrency-financial-data.p.rapidapi.com/trades"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "cryptocurrency-financial-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "start": "2022-11-01T00:00:00",
                            "end": "2022-11-30T23:59:59",
                            "sort": "desc",
                            "base": "USDT",
                            "market_venue": "COINBASE",
                            "limit": "500",
                            "symbol": "BTC"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cryptocurrency-financial-data.p.rapidapi.com/trades\"\nquerystring = {\"start\": \"2022-10-11T10:00:00\", \"end\": \"2022-10-15T11:00:00\", \"sort\": \"asc\", \"base\": \"USDT\", \"market_venue\": \"COINBASE\", \"limit\": \"100\", \"symbol\": \"BTC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cryptocurrency-financial-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cryptocurrency Financial Data",
            "api_arguments_original": [
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "Start of the requested time period, *%Y-%m-%dT%H:%M:%S* UTC timezone",
                    "default": "2022-10-11T10:00:00"
                },
                {
                    "name": "base",
                    "type": "STRING",
                    "description": "The second or quote currency in the traded pair",
                    "default": "USDT"
                },
                {
                    "name": "market_venue",
                    "type": "STRING",
                    "description": "The name of an exchange or a venue",
                    "default": "COINBASE"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "The first or base currency in the traded pair",
                    "default": "BTC"
                },
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "End of the requested time period, *%Y-%m-%dT%H:%M:%S* UTC timezone",
                    "default": "2022-10-15T11:00:00"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "The ordering of results: `asc` (from earliest to latest), `desc` (from latest to earliest)",
                    "default": "asc"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Maximum number of records to return, max `10000`",
                    "default": "100"
                }
            ]
        }
    },
    {
        "query": "I want to get the user information for the username \"johndoe\" on TikTok.",
        "model_answer": "requests.get(\"https://tiktok-bulletproof.p.rapidapi.com/user-info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tiktok-bulletproof.p.rapidapi.com\"}, params={\"username\": \"johndoe\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "The stable Tiktok API. I intend to keep it simple in terms of amount of endpoints, and make sure it is operational 99.9% of time instead. If you don't like the stability - you can get a refund, no questions asked. Bigger custom plans and crypto payments are available on request  - contact https://t.me/neot55",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-bulletproof.p.rapidapi.com/user-info'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-bulletproof.p.rapidapi.com/user-info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tiktok-bulletproof.p.rapidapi.com/user-info"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tiktok-bulletproof.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-bulletproof.p.rapidapi.com/user-info\"\nquerystring = {\"username\": \"therock\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-bulletproof.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok Bulletproof",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "therock"
                }
            ]
        }
    },
    {
        "query": "I want to get information about the webtoon with title number 500456 in French language.",
        "model_answer": "requests.get(\"https://webtoon.p.rapidapi.com/canvas/titles/get-info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"webtoon.p.rapidapi.com\"}, params={\"titleNo\":\"500456\", \"language\":\"fr\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "This API provides the largest webcomics data in the world to create a comic site/application such as webtoons.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webtoon.p.rapidapi.com/canvas/titles/get-info'\nquerystring = {\"titleNo\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webtoon.p.rapidapi.com/canvas/titles/get-info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://webtoon.p.rapidapi.com/canvas/titles/get-info"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "webtoon.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webtoon.p.rapidapi.com/canvas/titles/get-info\"\nquerystring = {\"titleNo\": \"300138\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webtoon.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webtoon",
            "api_arguments_original": [
                {
                    "name": "titleNo",
                    "type": "NUMBER",
                    "description": "The value of titleNo field returned in .../canvas/titles/list or .../canvas/search or .../canvas/home endpoint",
                    "default": "300138"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "One of the following : en|zh-hant|de|fr|es|th|id",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Translate the sentence \"Good morning, how are you?\" into Spanish.",
        "model_answer": "requests.get(\"https://translate287.p.rapidapi.com/detect/accurate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"translate287.p.rapidapi.com\"}, params={\"text\": \"Good morning, how are you?\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Easy and reliable Machine Translation  and Language Detection",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translate287.p.rapidapi.com/detect/accurate'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translate287.p.rapidapi.com/detect/accurate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"text\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translate287.p.rapidapi.com/detect/accurate\"\nquerystring = {\"text\": \"this is accurate and it can improve if it's longer\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translate287.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translate_v3",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "this is accurate and it can improve if it's longer"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to check if the IP address 10.0.0.1 is valid using the Itcooking.eu - IP Geolocation API.",
        "model_answer": "requests.get(\"https://itcooking-eu-ip-geolocation1.p.rapidapi.com/geoip/v1/lite/GetIpInfoLite\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"itcooking-eu-ip-geolocation1.p.rapidapi.com\"}, params={\"ip\": \"10.0.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "IP Geolocation REST API by Itcooking.eu. Fast and easy way to get (lookup) geolocation data to IPv4 and IPv6 address.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://itcooking-eu-ip-geolocation1.p.rapidapi.com/geoip/v1/lite/GetIpInfoLite'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://itcooking-eu-ip-geolocation1.p.rapidapi.com/geoip/v1/lite/GetIpInfoLite\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://itcooking-eu-ip-geolocation1.p.rapidapi.com/geoip/v1/lite/GetIpInfoLite"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "itcooking-eu-ip-geolocation1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://itcooking-eu-ip-geolocation1.p.rapidapi.com/geoip/v1/lite/GetIpInfoLite\"\nquerystring = {\"ip\": \"52.30.208.221\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"itcooking-eu-ip-geolocation1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Itcooking.eu - IP Geolocation",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "52.30.208.221"
                }
            ]
        }
    },
    {
        "query": "I want to check if example2@example.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example2@example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An easy tool to test proxy whether it's online, anonymous, is it HTTP, HTTPS or both, to get proxy performance timings.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://proxy-checker.p.rapidapi.com/api/user-request-management/v1/user-request/6416ab3d3c01efbe45e97675'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://proxy-checker.p.rapidapi.com/api/user-request-management/v1/user-request/6416ab3d3c01efbe45e97675\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example2@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://proxy-checker.p.rapidapi.com/api/user-request-management/v1/user-request/6416ab3d3c01efbe45e97675\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"proxy-checker.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Proxy Checker",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "**User Request ID** - received from the response of sending a proxy for checking.",
                    "default": "6416ab3d3c01efbe45e97675"
                }
            ]
        }
    },
    {
        "query": "I want to get information about the song \"Royals\" by Lorde using the Miza API.",
        "model_answer": "requests.get(\"https://miza.p.rapidapi.com/d/Royals\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"miza.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "A multipurpose API that includes many image, video, and audio operations. Please see https://ko-fi.com/mizabot if you'd like premium features on the Discord bot itself!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://miza.p.rapidapi.com/d/ABCDEF'\nquerystring = {\"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://miza.p.rapidapi.com/d/ABCDEF\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://miza.p.rapidapi.com/d/ABCDEF\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"miza.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Miza",
            "api_arguments_original": [
                {
                    "name": "path",
                    "type": "string",
                    "description": "",
                    "default": "ABCDEF"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get the current weather for Los Angeles? Also, please provide a generic way to obtain the response from the API without printing it, so that we can process the weather data further.",
        "model_answer": "requests.get(\"https://weatherapi.com/v1/current.json\", params={\"key\": \"API_KEY\", \"q\": \"Los Angeles\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Personal Use Key",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://midknightt.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://midknightt.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{}"
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://midknightt.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midknightt.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Midknightt",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if john.doe@example.com is a valid email using the Check Disposable Email API?",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"john.doe@example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Provides access to amazon product details, customer reviews, product images, videos, and more, with support for all Amazon websites across the globe. Whether you're a developer building an e-commerce app or a business looking to enhance your customer experience, our API has got you covered. Try it today and start integrating Amazon product data into your application or website.\n\nCheckout our channel of telegram: https://t.me/+EkKIVZiiDQthMmYx",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazon-web-scraping-api.p.rapidapi.com/websites'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazon-web-scraping-api.p.rapidapi.com/websites\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "john.doe@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazon-web-scraping-api.p.rapidapi.com/websites\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazon-web-scraping-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Amazon Web Scraping API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to test the opta API and retrieve the response from the endpoint \"https://test-opta.p.rapidapi.com/\".",
        "model_answer": "requests.get(\"https://test-opta.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"test-opta.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "opta",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test-opta.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test-opta.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://test-opta.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "test-opta.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test-opta.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test-opta.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test opta",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please check the gender and nationality for the name \"Jane Smith\"?",
        "model_answer": "requests.get(\"https://genderize-nationalize.p.rapidapi.com/genderize/Jane%20Smith\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"genderize-nationalize.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get name gender and nationality.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://genderize-nationalize.p.rapidapi.com/genderize/{name}'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://genderize-nationalize.p.rapidapi.com/genderize/{name}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://genderize-nationalize.p.rapidapi.com/genderize/Jane%20Smith"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "genderize-nationalize.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://genderize-nationalize.p.rapidapi.com/genderize/{name}\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"genderize-nationalize.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Genderize  - Nationalize",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the media links for a specific watch with watchId 67890.",
        "model_answer": "requests.get(\"https://watch-database1.p.rapidapi.com/watch-media-links-by-id/67890\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"watch-database1.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Our Watch Models API is a comprehensive and accurate data source of more than 20,000 watch models. This API allows users to retrieve detailed information about each model, including brand, model name, release date, features, and more. This data can be easily integrated into a wide range of use cases, such as e-commerce, watch retailers, watch collectors, research and development and watch repair.  Our API is constantly updated and maintained to ensure that the data provided is accurate and co...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://watch-database1.p.rapidapi.com/watch-media-links-by-id/{watchId}'\nquerystring = {\"watchId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://watch-database1.p.rapidapi.com/watch-media-links-by-id/{watchId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://watch-database1.p.rapidapi.com/watch-media-links-by-id/{watchId}\"\nquerystring = {\"watchId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"watch-database1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Watch Database",
            "api_arguments_original": [
                {
                    "name": "watchId",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with all the data for the anime with mal_id 12345.",
        "model_answer": "requests.get(\"https://animes5.p.rapidapi.com/anime/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"animes5.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Get all data from your favorite anime, and the chapter or tomo of the manga or  the light novel that the anime adapted",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://animes5.p.rapidapi.com/anime/5114'\nquerystring = {\"id\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://animes5.p.rapidapi.com/anime/5114\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://animes5.p.rapidapi.com/anime/12345"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "animes5.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://animes5.p.rapidapi.com/anime/5114\"\nquerystring = {\"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"animes5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "animes",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Insert the anime `mal_id`",
                    "default": "5114"
                },
                {
                    "name": "fields",
                    "type": "STRING",
                    "description": "Get the fields that you want.\nDisponible fields:  \n\n- * (to all data)\n- id,\n- title, \n- main_picture,\n- start_date,\n- end_data,\n- synopsis,\n- mean,\n- rank,\n- popularity,\n- `num_list_users,`\n- `num_scoring_users`,\n- status,\n- genres,\n- num_episodes,\n- source,\n- studios,\n- volume,\n- chapter,\n- light_novel,\n- media_type,\n- mal_id,\n- broadcast,\n- statistics,\n- related_manga,\n- related_anime,\n- season,\n- year,\n- title_english,\n- title_japanese,\n- synonyms",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please convert 3 cups of bread flour to grams using the Food Ingredient Measurement Conversion API.",
        "model_answer": "requests.get(\"https://food-ingredient-measurement-conversion.p.rapidapi.com/convert\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"food-ingredient-measurement-conversion.p.rapidapi.com\"}, params={\"value\": \"3\", \"from\": \"cup (US)\", \"ingredient\": \"bread flour\", \"to\": \"gram\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Effortlessly convert between volume and weight units for recipe ingredients. Our API is designed with a special focus on the precision and accuracy of weight measurements, making it the perfect solution for bakers. What sets us apart is that we meticulously divide flour into different types, such as bread flour, cake flour, all-purpose flour, almond flour, etc., and even list the flour of major brands like Bob's Red Mill, Gold Medal, King Arthur, and more. This attention to detail ensures tha...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://food-ingredient-measurement-conversion.p.rapidapi.com/convert'\nquerystring = {\"value\": \"\", \"from\": \"\", \"ingredient\": \"\", \"to\": \"\", \"numDigit\": \"\", \"brand\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://food-ingredient-measurement-conversion.p.rapidapi.com/convert\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://food-ingredient-measurement-conversion.p.rapidapi.com/convert"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "food-ingredient-measurement-conversion.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "value": "3",
                            "from": "cup (US)",
                            "ingredient": "bread flour",
                            "to": "gram"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://food-ingredient-measurement-conversion.p.rapidapi.com/convert\"\nquerystring = {\"value\": \"1\", \"numDigit\": \"3\", \"from\": \"cup (US)\", \"brand\": \"bob's red mill\", \"ingredient\": \"flour (all purpose)\", \"to\": \"gram\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"food-ingredient-measurement-conversion.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Food Ingredient Measurement Conversion",
            "api_arguments_original": [
                {
                    "name": "value",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "",
                    "default": "cup (US)"
                },
                {
                    "name": "ingredient",
                    "type": "STRING",
                    "description": "",
                    "default": "flour (all purpose)"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "",
                    "default": "gram"
                },
                {
                    "name": "numDigit",
                    "type": "NUMBER",
                    "description": "The number of digits of result. If not provided, default 2.",
                    "default": "3"
                },
                {
                    "name": "brand",
                    "type": "STRING",
                    "description": "if not provided, default \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"generic\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",
                    "default": "bob's red mill"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to enrich the data for the domain google.com?",
        "model_answer": "requests.get(\"https://company-enrichment.p.rapidapi.com/v1\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"company-enrichment.p.rapidapi.com\"}, params={\"domain\":\"google.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Enrich any domain or email with accurate company data, including headcount, location and industry.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://company-enrichment.p.rapidapi.com/v1'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://company-enrichment.p.rapidapi.com/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://company-enrichment.p.rapidapi.com/v1"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "company-enrichment.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domain": "google.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://company-enrichment.p.rapidapi.com/v1\"\nquerystring = {\"domain\": \"airbnb.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"company-enrichment.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Company Enrichment",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "The domain of the company you want to get data from.",
                    "default": "airbnb.com"
                }
            ]
        }
    },
    {
        "query": "Please check the liquidity of the token in the Ethereum chain.",
        "model_answer": "requests.get(\"https://token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com/get_chain_id\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com\"}, params={\"chain\": \"ethereum\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Token scanner and honeypot checker multichain. Buy/sell tax, suspicious functions, liquidity, ownership etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com/get_chain_id'\nquerystring = {\"chain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com/get_chain_id\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com/get_chain_id"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "chain": "ethereum"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com/get_chain_id\"\nquerystring = {\"chain\": \"bsc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Token Scanner Multichain | Honeypot Checker Multichain",
            "api_arguments_original": [
                {
                    "name": "chain",
                    "type": "STRING",
                    "description": "Available chains:\n**ethereum, bsc, okc, heco, polygon, arbitrum, optimism, avalanche, fantom, kcc, gnosis, tron, linea, harmony, zkysnc, ethw, fon, cronos**",
                    "default": "bsc"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest news on cryptocurrency using the H Crypto News API from RapidAPI.",
        "model_answer": "requests.get(\"https://h-crypto-news.p.rapidapi.com/cryptonews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"h-crypto-news.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Crypto News API gives you the latest news on cryptocurrency from several newspapers",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://h-crypto-news.p.rapidapi.com/cryptonews'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://h-crypto-news.p.rapidapi.com/cryptonews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://h-crypto-news.p.rapidapi.com/cryptonews\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"h-crypto-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "H Crypto News",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the Python code to query the details of a property with the external ID 4937770 using the Bayut API and print the response?",
        "model_answer": "requests.get(\"https://bayut.p.rapidapi.com/properties/detail\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"bayut.p.rapidapi.com\"}, params={\"externalID\": \"4937770\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "This API helps to query real estate in UAE to create a real estate site/application",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bayut.p.rapidapi.com/properties/detail'\nquerystring = {\"externalID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bayut.p.rapidapi.com/properties/detail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bayut.p.rapidapi.com/properties/detail"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bayut.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "externalID": "4937770"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bayut.p.rapidapi.com/properties/detail\"\nquerystring = {\"externalID\": \"4937770\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bayut.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bayut",
            "api_arguments_original": [
                {
                    "name": "externalID",
                    "type": "STRING",
                    "description": "The value of externalID returned in ..../properties/list endpoint",
                    "default": "4937770"
                }
            ]
        }
    },
    {
        "query": "Could you please fetch the subtitles for the YouTube video with the video ID \"lRpBLAwVgNw\"?",
        "model_answer": "requests.get(\"https://subtitles-for-youtube1.p.rapidapi.com/GetTextsubtitles\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"subtitles-for-youtube1.p.rapidapi.com\"}, params={\"video_id\":\"lRpBLAwVgNw\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Api for fetching YouTube subtitles",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://subtitles-for-youtube1.p.rapidapi.com/GetTextsubtitles'\nquerystring = {\"video_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://subtitles-for-youtube1.p.rapidapi.com/GetTextsubtitles\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://subtitles-for-youtube1.p.rapidapi.com/GetTextsubtitles"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "subtitles-for-youtube1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://subtitles-for-youtube1.p.rapidapi.com/GetTextsubtitles\"\nquerystring = {\"video_id\": \"Wrald_EZgDQ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"subtitles-for-youtube1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Subtitles for YouTube_v3",
            "api_arguments_original": [
                {
                    "name": "video_id",
                    "type": "STRING",
                    "description": "",
                    "default": "Wrald_EZgDQ"
                }
            ]
        }
    },
    {
        "query": "Can you help me find job opportunities for Data Scientists in San Francisco?",
        "model_answer": "requests.get(\"https://jobsearch4.p.rapidapi.com/api/v1/Jobs/Search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"jobsearch4.p.rapidapi.com\"}, params={\"SearchQuery\": \"Data Scientist\", \"PageSize\": 20, \"PageNumber\": 1, \"Location\": \"San Francisco\"})",
        "original": {
            "domain": "Jobs",
            "framework": "RapidAPI",
            "functionality": "An Easy To Use Job Search API with jobs from all around the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jobsearch4.p.rapidapi.com/api/v1/Jobs/Search'\nquerystring = {\"SearchQuery\": \"\", \"PageSize\": \"\", \"PageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jobsearch4.p.rapidapi.com/api/v1/Jobs/Search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://jobsearch4.p.rapidapi.com/api/v1/Jobs/Search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "jobsearch4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "SearchQuery": "Data Scientist",
                            "PageSize": 20,
                            "PageNumber": 1,
                            "Location": "San Francisco"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jobsearch4.p.rapidapi.com/api/v1/Jobs/Search\"\nquerystring = {\"SearchQuery\": \"java\", \"PageSize\": \"\", \"PageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jobsearch4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "JobSearch",
            "api_arguments_original": [
                {
                    "name": "SearchQuery",
                    "type": "STRING",
                    "description": "",
                    "default": "java"
                },
                {
                    "name": "PageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "PageNumber",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide a Python function call that can be used to search for information on fern plants using the House Plants API and log the response?",
        "model_answer": "requests.get(\"https://house-plants2.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\":\"TO BE FILLED\",\"X-RapidAPI-Host\":\"house-plants2.p.rapidapi.com\"}, params={\"query\": \"fern\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "HOUSE PLANT DATABASE & RESTful API for house plant data (Over 300+ plant details/images) along with their description and information on how to best take care of them (ideal temperature, light, etc.)\n\nNEW ROUTES COMING SOON (GetAllLite, GetByLatinName, GetByCommonName, GetCategories, GetAllByCategory)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://house-plants2.p.rapidapi.com/search'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://house-plants2.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://house-plants2.p.rapidapi.com/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "house-plants2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "query": "fern"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://house-plants2.p.rapidapi.com/search\"\nquerystring = {\"query\": \"Fern\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"house-plants2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "House Plants",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "Fern"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check if the OTP ID \"654321\" is valid using the D7SMS API?",
        "model_answer": "requests.get(\"https://d7sms.p.rapidapi.com/verify/v1/report/654321\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"d7sms.p.rapidapi.com\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Unlock boundless connectivity with D7API Gateway, seamlessly connecting you to the world's vast messaging network through D7's exclusive network access",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://d7sms.p.rapidapi.com/verify/v1/report/{otp_id}'\nquerystring = {\"otp_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://d7sms.p.rapidapi.com/verify/v1/report/{otp_id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://d7sms.p.rapidapi.com/verify/v1/report/654321"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "d7sms.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://d7sms.p.rapidapi.com/verify/v1/report/{otp_id}\"\nquerystring = {\"otp_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"d7sms.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "D7SMS",
            "api_arguments_original": [
                {
                    "name": "otp_id",
                    "type": "string",
                    "description": "The otp_ id which was returned from **Send OTP** endpoint",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve data from the AndroidAPI with the ID \"56789\".",
        "model_answer": "requests.get(\"https://androidapi1.p.rapidapi.com/store/apidata/56789\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"androidapi1.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "for testing database storage",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://androidapi1.p.rapidapi.com/store/apidata/{getId}'\nquerystring = {\"getId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://androidapi1.p.rapidapi.com/store/apidata/{getId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://androidapi1.p.rapidapi.com/store/apidata/56789"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "androidapi1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://androidapi1.p.rapidapi.com/store/apidata/{getId}\"\nquerystring = {\"getId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"androidapi1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AndroidAPI",
            "api_arguments_original": [
                {
                    "name": "getId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me information about product with ID 987654?",
        "model_answer": "requests.get(\"https://demo-project3916.p.rapidapi.com/catalog/product/987654\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"demo-project3916.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "This Project is created by the onboarding process",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://demo-project3916.p.rapidapi.com/catalog/product/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://demo-project3916.p.rapidapi.com/catalog/product/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://demo-project3916.p.rapidapi.com/catalog/product/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"demo-project3916.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\ud83d\udc4b Demo Project",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if the email address jane@example.com is disposable.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"jane@example.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test1105.p.rapidapi.comtest'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test1105.p.rapidapi.comtest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "jane@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test1105.p.rapidapi.comtest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test1105.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test1",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check if the endpoint \"https://www.example.com/api/data\" is reachable and returns a 200 status code.",
        "model_answer": "requests.get(\"https://www.example.com/api/data\")",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An API for testing endpoints at custom intervals with email notifications and previous result comparison",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://endpoint-monitor-tool1.p.rapidapi.com/GetUser'\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://endpoint-monitor-tool1.p.rapidapi.com/GetUser\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://endpoint-monitor-tool1.p.rapidapi.com/GetUser\"\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"endpoint-monitor-tool1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Endpoint Monitor Tool",
            "api_arguments_original": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The Id of the user",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get all data from the Test1 API using the provided endpoint URL and headers.",
        "model_answer": "requests.get(\"https://test14848.p.rapidapi.com/v2/all\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test14848.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Test1AA",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test14848.p.rapidapi.com/v2/all'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test14848.p.rapidapi.com/v2/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test14848.p.rapidapi.com/v2/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test14848.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Test1",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please give me a Python function call to retrieve the list of TV shows airing in the next 7 days using the Show Air Dates API.",
        "model_answer": "requests.get(\"https://show-air-dates.p.rapidapi.com/next7days\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"show-air-dates.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Find which shows are airing today, tomorrow, in the next 7 days, or in the next 31 days",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://show-air-dates.p.rapidapi.com/next31days'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://show-air-dates.p.rapidapi.com/next31days\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://show-air-dates.p.rapidapi.com/next31days\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"show-air-dates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Show Air Dates",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please fetch data from the Ocoya API and log the response using the RapidAPI library.",
        "model_answer": "requests.get(\"https://ocoya.p.rapidapi.com/workspace\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ocoya.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "End-to-end social media marketing.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ocoya.p.rapidapi.com/workspace'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ocoya.p.rapidapi.com/workspace\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ocoya.p.rapidapi.com/workspace"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ocoya.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ocoya.p.rapidapi.com/workspace\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocoya.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ocoya",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the vessel photo for ship ID 67890?",
        "model_answer": "requests.get(\"https://vessel-data.p.rapidapi.com/get_vessel_photo/67890\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"vessel-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Global live on board vessels information.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vessel-data.p.rapidapi.com/get_vessel_photo/{shipid}'\nquerystring = {\"shipid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vessel-data.p.rapidapi.com/get_vessel_photo/{shipid}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vessel-data.p.rapidapi.com/get_vessel_photo/{shipid}\"\nquerystring = {\"shipid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vessel-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vessel Data",
            "api_arguments_original": [
                {
                    "name": "shipid",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a list of sailors in Lost Ark using the Lost Ark Simple API?",
        "model_answer": "requests.get(\"https://lost-ark-simple.p.rapidapi.com/npcs/sailors\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"lost-ark-simple.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Lost Ark API Documentation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lost-ark-simple.p.rapidapi.com/npcs/sailors'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lost-ark-simple.p.rapidapi.com/npcs/sailors\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://lost-ark-simple.p.rapidapi.com/npcs/sailors"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "lost-ark-simple.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lost-ark-simple.p.rapidapi.com/npcs/sailors\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lost-ark-simple.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lost Ark Simple",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if this sentence \"Howdy, what's up?\" contains any profanity?",
        "model_answer": "response = requests.get(\"https://cleantalk1.p.rapidapi.com/service/plain\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"cleantalk1.p.rapidapi.com\"}, params={\"text\": \"Howdy, what's up?\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "CleanTalk API is a content validation service that helps you filter out profanity and obscenity in your user-generated content. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cleantalk1.p.rapidapi.com/service/plain'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cleantalk1.p.rapidapi.com/service/plain\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://cleantalk1.p.rapidapi.com/service/plain"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "cleantalk1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cleantalk1.p.rapidapi.com/service/plain\"\nquerystring = {\"text\": \"What the fuck are you doing?\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cleantalk1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CleanTalk",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "What the fuck are you doing?"
                }
            ]
        }
    },
    {
        "query": "Can you please provide the location details for the IP address 10.0.0.1?",
        "model_answer": "requests.get(\"https://ip-location-lookup-service.p.rapidapi.com/v1/iplookup\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ip-location-lookup-service.p.rapidapi.com\"}, params={\"ip\": \"10.0.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Feed this API an IP Address and have it perform a quick and easy lookup for you.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-location-lookup-service.p.rapidapi.com/v1/iplookup'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-location-lookup-service.p.rapidapi.com/v1/iplookup\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ip-location-lookup-service.p.rapidapi.com/v1/iplookup"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ip-location-lookup-service.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ip": "10.0.0.1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-location-lookup-service.p.rapidapi.com/v1/iplookup\"\nquerystring = {\"ip\": \"136.35.174.41\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-location-lookup-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Location Lookup Service",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "136.35.174.41"
                }
            ]
        }
    },
    {
        "query": "Can you check if the IP address 172.16.0.1 is a blacklisted IP?",
        "model_answer": "requests.get(\"https://blackbox.p.rapidapi.com/v1/172.16.0.1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"blackbox.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Blackbox is a Proxy, Tor, Hosting, Cloud, Bogon detection service for IP addresses. Utilize Blackbox to protect your game-servers, user front-ends, and much more. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://blackbox.p.rapidapi.com/v1/1.1.1.1'\nquerystring = {\"ips\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://blackbox.p.rapidapi.com/v1/1.1.1.1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://blackbox.p.rapidapi.com/v1/1.1.1.1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"blackbox.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Blackbox",
            "api_arguments_original": [
                {
                    "name": "ips",
                    "type": "string",
                    "description": "",
                    "default": "1.1.1.1"
                }
            ]
        }
    },
    {
        "query": "I want to use the On hold audio messages API to get messages for voicemails and switchboards.",
        "model_answer": "requests.get(\"https://on-hold-audio-messages.p.rapidapi.comhttps://www.telephonevox.com/api/api.telephonevox.php\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"on-hold-audio-messages.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Messages for voicemails and switchboards using professional voice talents",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://on-hold-audio-messages.p.rapidapi.comhttps://www.telephonevox.com/api/api.telephonevox.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://on-hold-audio-messages.p.rapidapi.comhttps://www.telephonevox.com/api/api.telephonevox.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://on-hold-audio-messages.p.rapidapi.comhttps://www.telephonevox.com/api/api.telephonevox.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"on-hold-audio-messages.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "On hold audio messages",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me generate a direct download link for a Google Drive file using the GDrive Link Generator API?",
        "model_answer": "requests.get(\"https://gdrive-link-generator1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gdrive-link-generator1.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "GDrive Link Generator Api used to get the direct download link of google drive file\nUsing this api you can generate one click download url for Google Drive file.\n\nAPI supports multiple endpoints where you can generate single download url and bulk urls.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gdrive-link-generator1.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gdrive-link-generator1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://gdrive-link-generator1.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "gdrive-link-generator1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gdrive-link-generator1.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gdrive-link-generator1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GDrive Link Generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the ratings of the restaurant \"La Piazza\" using the Wyre Data API.",
        "model_answer": "requests.get(\"https://wyre-data.p.rapidapi.com/restaurants/ratings/La Piazza\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"wyre-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wyre-data.p.rapidapi.com/restaurants/ratings/Shovels Inn'\nquerystring = {\"restaurant\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wyre-data.p.rapidapi.com/restaurants/ratings/Shovels Inn\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wyre-data.p.rapidapi.com/restaurants/ratings/Shovels Inn\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wyre-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wyre Data",
            "api_arguments_original": [
                {
                    "name": "restaurant",
                    "type": "string",
                    "description": "",
                    "default": "Shovels Inn"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest NBA news.",
        "model_answer": "requests.get(\"https://nba-api-news.p.rapidapi.com/news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nba-api-news.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "This NFT API will keep you up to date on the NFT space. Built for effeciency.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nft-api-news.p.rapidapi.com/nft'\nquerystring = {\"nftnews\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nft-api-news.p.rapidapi.com/nft\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nft-api-news.p.rapidapi.com/nft\"\nquerystring = {\"nftnews\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nft-api-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NFT API News",
            "api_arguments_original": [
                {
                    "name": "nftnews",
                    "type": "STRING",
                    "description": "This is where you get all the up to date NFT News. This is updated daily.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to verify if John Doe (employee ID 12345) is listed in the PF (Provident Fund) database using the EPFO Employee Verification API.",
        "model_answer": "requests.get(\"https://epfo-employee-verification.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"epfo-employee-verification.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\", \"employee_id\": \"12345\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "This API that takes company and employee information as input and returns if the employee name is found in the PF list of the employer",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://epfo-employee-verification.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://epfo-employee-verification.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://epfo-employee-verification.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "epfo-employee-verification.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://epfo-employee-verification.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"epfo-employee-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "EPFO Employee Verification",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you provide me a Python function call to obtain the list of sunnah fasting schedules for the year 2022 and store the response into a variable called \"fasting_schedules\"?",
        "model_answer": "requests.get('https://sunnah-fasting1.p.rapidapi.com/api/v1/types', headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sunnah-fasting1.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "List of sunnah fasting schedule. Start from year 2022.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sunnah-fasting1.p.rapidapi.com/api/v1/types'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sunnah-fasting1.p.rapidapi.com/api/v1/types\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sunnah-fasting1.p.rapidapi.com/api/v1/types\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sunnah-fasting1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sunnah Fasting",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please generate a QR code for \"https://example2.com\" using the QR Code Generator API.",
        "model_answer": "requests.get(\"https://getqrcode.p.rapidapi.com/api/getQR\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"getqrcode.p.rapidapi.com\"}, params={\"forQR\": \"https://example2.com\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Free QR Code Generator - Online QR Code Maker",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://getqrcode.p.rapidapi.com/api/getQR'\nquerystring = {\"forQR\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://getqrcode.p.rapidapi.com/api/getQR\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://getqrcode.p.rapidapi.com/api/getQR"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "getqrcode.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "forQR": "https://example2.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://getqrcode.p.rapidapi.com/api/getQR\"\nquerystring = {\"forQR\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"getqrcode.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "getQRcode",
            "api_arguments_original": [
                {
                    "name": "forQR",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to send an SMS with the following details:",
        "model_answer": "requests.get(\"https://sendsms.p.rapidapi.com/json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"sendsms.p.rapidapi.com\"}, params={\"password\": \"ABC123\", \"to\": \"+1234567890\", \"text\": \"Hello, this is a test message\", \"action\": \"message_send\", \"username\": \"johnsmith\", \"from\": \"MyCompany\", \"report_mask\": \"19\", \"report_url\": \"http://sendsms.ro/r_r.php?mySmsId=9876&status=%d\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "SMS Service Provider",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sendsms.p.rapidapi.com/json'\nquerystring = {\"password\": \"\", \"to\": \"\", \"text\": \"\", \"action\": \"\", \"username\": \"\", \"from\": \"\", \"report_mask\": \"\", \"report_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sendsms.p.rapidapi.com/json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://sendsms.p.rapidapi.com/json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "sendsms.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "password": "ABC123",
                            "to": "+1234567890",
                            "text": "Hello, this is a test message",
                            "action": "message_send",
                            "username": "johnsmith",
                            "from": "MyCompany",
                            "report_mask": "19",
                            "report_url": "http://sendsms.ro/r_r.php?mySmsId=9876&status=%d"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sendsms.p.rapidapi.com/json\"\nquerystring = {\"password\": \"\", \"to\": \"\", \"text\": \"\", \"from\": \"\", \"report_mask\": \"19\", \"report_url\": \"\", \"action\": \"message_send\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sendsms.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SendSMS",
            "api_arguments_original": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "Your SensSMS Api Key",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "NUMBER",
                    "description": "Destination Phone Number",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "SMS Content",
                    "default": ""
                },
                {
                    "name": "action",
                    "type": "STRING",
                    "description": "",
                    "default": "message_send"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Your SensSMS User Name",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Message Sender",
                    "default": ""
                },
                {
                    "name": "report_mask",
                    "type": "NUMBER",
                    "description": "Report Mask",
                    "default": "19"
                },
                {
                    "name": "report_url",
                    "type": "STRING",
                    "description": "http://sendsms.ro/r_r.php?mySmsId=9876&status=%d",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please search for \"banana\" with safesearch enabled in the category \"food\" using the SearchHook API.",
        "model_answer": "requests.get(\"https://searchhook.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"searchhook.p.rapidapi.com\"}, params={\"q\": \"banana\", \"safesearch\": \"1\", \"categories\": \"food\"})",
        "original": {
            "domain": "Storage",
            "framework": "RapidAPI",
            "functionality": "Websearch (SearX) with Webhooks on new results. Allows to automate brand, product, topic monitoring using tools like n8n or node-red.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://searchhook.p.rapidapi.com/search'\nquerystring = {\"q\": \"\", \"safesearch\": \"\", \"categories\": \"\", \"time_range\": \"\", \"language\": \"\", \"queryId\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://searchhook.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://searchhook.p.rapidapi.com/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "searchhook.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "banana",
                            "safesearch": "1",
                            "categories": "food"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://searchhook.p.rapidapi.com/search\"\nquerystring = {\"safesearch\": \"0\", \"categories\": \"general\", \"time_range\": \"None\", \"language\": \"de-DE\", \"queryId\": \"0x02cAce04c8469580A2ADc20F57E143a3693c22bF\", \"url\": \"https://engine.corrently.cloud/webhook-test/44a17c5c-5087-483f-8398-dedbc8d713d4\", \"q\": \"SearchHook API\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"searchhook.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "searchhook",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "SearchHook API"
                },
                {
                    "name": "safesearch",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "categories",
                    "type": "STRING",
                    "description": "",
                    "default": "general"
                },
                {
                    "name": "time_range",
                    "type": "STRING",
                    "description": "",
                    "default": "None"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "de-DE"
                },
                {
                    "name": "queryId",
                    "type": "STRING",
                    "description": "",
                    "default": "0x02cAce04c8469580A2ADc20F57E143a3693c22bF"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://engine.corrently.cloud/webhook-test/44a17c5c-5087-483f-8398-dedbc8d713d4"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the top 20 YouTube subscriptions for the channel with channel ID \"UCP4bf6IHJJQehibu6ai__cg\" and include the content details in the response, using the YouTube Data v3 API.\"",
        "model_answer": "requests.get(\"https://youtube-v311.p.rapidapi.com/subscriptions/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"youtube-v311.p.rapidapi.com\"}, params={\"maxResults\": \"20\", \"pageToken\": \"\", \"forChannelId\": \"\", \"order\": \"relevance\", \"id\": \"\", \"channelId\": \"UCP4bf6IHJJQehibu6ai__cg\", \"part\": \"snippet,contentDetails\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "YouTube Data v3 API is a tool for developers to access and manipulate YouTube data, including videos, channels, and playlists, so they can create custom experiences for users.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-v311.p.rapidapi.com/subscriptions/'\nquerystring = {\"part\": \"\", \"maxResults\": \"\", \"pageToken\": \"\", \"forChannelId\": \"\", \"order\": \"\", \"id\": \"\", \"channelId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-v311.p.rapidapi.com/subscriptions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://youtube-v311.p.rapidapi.com/subscriptions/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "youtube-v311.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "maxResults": "20",
                            "pageToken": "",
                            "forChannelId": "",
                            "order": "relevance",
                            "id": "",
                            "channelId": "UCP4bf6IHJJQehibu6ai__cg",
                            "part": "snippet,contentDetails"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/subscriptions/\"\nquerystring = {\"maxResults\": \"5\", \"pageToken\": \"\", \"forChannelId\": \"\", \"order\": \"relevance\", \"id\": \"\", \"channelId\": \"UCP4bf6IHJJQehibu6ai__cg\", \"part\": \"snippet,contentDetails\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube v3_v3",
            "api_arguments_original": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **subscription** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **subscription** resource, the **snippet** property contains other properties, such as a display title for the subscription. If you set **part=snippet**, the API response will also contain all of those nested properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet\n- subscriberSnippet",
                    "default": "snippet,contentDetails"
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                    "default": "5"
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                    "default": ""
                },
                {
                    "name": "forChannelId",
                    "type": "STRING",
                    "description": "The **forChannelId** parameter specifies a comma-separated list of channel IDs. The API response will then only contain subscriptions matching those channels.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "The **order** parameter specifies the method that will be used to sort resources in the API response. The default value is **SUBSCRIPTION_ORDER_RELEVANCE**.\n\nAcceptable values are:\n\n- **alphabetical** \u2013 Sort alphabetically.\n- **relevance** \u2013 Sort by relevance.\n- **unread** \u2013 Sort by order of activity.",
                    "default": "relevance"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of the YouTube subscription ID(s) for the resource(s) that are being retrieved. In a **subscription** resource, the **id** property specifies the YouTube subscription ID.",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "The **channelId** parameter specifies a YouTube channel ID. The API will only return that channel's subscriptions.",
                    "default": "UCP4bf6IHJJQehibu6ai__cg"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to get real-time finance data for Bitcoin to USD in Spanish language.",
        "model_answer": "requests.get(\"https://real-time-finance-data.p.rapidapi.com/currency-news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"real-time-finance-data.p.rapidapi.com\"}, params={\"from_symbol\": \"BTC\", \"to_symbol\": \"USD\", \"language\": \"es\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://real-time-finance-data.p.rapidapi.com/currency-news'\nquerystring = {\"from_symbol\": \"\", \"to_symbol\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://real-time-finance-data.p.rapidapi.com/currency-news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://real-time-finance-data.p.rapidapi.com/currency-news"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "real-time-finance-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "from_symbol": "BTC",
                            "to_symbol": "USD",
                            "language": "es"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://real-time-finance-data.p.rapidapi.com/currency-news\"\nquerystring = {\"language\": \"en\", \"from_symbol\": \"USD\", \"to_symbol\": \"EUR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"real-time-finance-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Real-Time Finance Data",
            "api_arguments_original": [
                {
                    "name": "from_symbol",
                    "type": "STRING",
                    "description": "A 3-Letter currency code / symbol (ISO 4217). For example: *USD*.",
                    "default": "USD"
                },
                {
                    "name": "to_symbol",
                    "type": "STRING",
                    "description": "A 3-Letter currency code / symbol (ISO 4217). For example: *EUR*.",
                    "default": "EUR"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*.",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Convert the image located at \"/path/to/image.jpg\" to ASCII using the Img to ASCII API.",
        "model_answer": "requests.get(\"https://img-to-ascii.p.rapidapi.com/get-ascii/2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"img-to-ascii.p.rapidapi.com\"}, params={\"id\": \"/path/to/image.jpg\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Convert picture to ASCII image by URL or upload your own image.\nSet the specific size for the ASCII result.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://img-to-ascii.p.rapidapi.com/get-ascii/2'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://img-to-ascii.p.rapidapi.com/get-ascii/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://img-to-ascii.p.rapidapi.com/get-ascii/2"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "img-to-ascii.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "/path/to/image.jpg"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://img-to-ascii.p.rapidapi.com/get-ascii/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"img-to-ascii.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Img to ASCII",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest cricket series data?",
        "model_answer": "requests.get(\"https://cricket-live-data.p.rapidapi.com/series\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cricket-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Fixtures, Results, and scorecards for the worlds most popular cricket tournaments",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cricket-live-data.p.rapidapi.com/series'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cricket-live-data.p.rapidapi.com/series\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cricket-live-data.p.rapidapi.com/series\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cricket-live-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cricket Live Data",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to calculate the distance between the start coordinates (-118.2437, 34.0522) and end coordinates (-122.4194, 37.7749) using the GeoWide API, and print the response?",
        "model_answer": "requests.get(\"https://geowide.p.rapidapi.com/distance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"geowide.p.rapidapi.com\"}, params={\"start_longitude\":-118.2437, \"start_latitude\":34.0522, \"end_latitude\":37.7749, \"end_longitude\":-122.4194})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "GeoWide API efficiently calculates distances between geographic points, enabling accurate measurements for various applications. With minimal latency, it returns the distance in kilometers, miles, or other units, empowering developers to incorporate precise geographic calculations into their projects effortlessly.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geowide.p.rapidapi.com/distance'\nquerystring = {\"start_longitude\": \"\", \"start_latitude\": \"\", \"end_latitude\": \"\", \"end_longitude\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geowide.p.rapidapi.com/distance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "start_longitude",
                    "enum": [
                        "-118.2437"
                    ],
                    "description": ""
                },
                {
                    "name": "start_latitude",
                    "enum": [
                        "34.0522"
                    ],
                    "description": ""
                },
                {
                    "name": "end_latitude",
                    "enum": [
                        "37.7749"
                    ],
                    "description": ""
                },
                {
                    "name": "end_longitude",
                    "enum": [
                        "-122.419"
                    ],
                    "description": ""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geowide.p.rapidapi.com/distance\"\nquerystring = {\"start_longitude\": \"12.482778\", \"start_latitude\": \"41.893333\", \"end_latitude\": \"40.416944\", \"end_longitude\": \"-3.703333\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geowide.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GeoWide",
            "api_arguments_original": [
                {
                    "name": "start_longitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "12.482778"
                },
                {
                    "name": "start_latitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "41.893333"
                },
                {
                    "name": "end_latitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "40.416944"
                },
                {
                    "name": "end_longitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "-3.703333"
                }
            ]
        }
    },
    {
        "query": "Please provide the token price and other information for the token with address 0x123456789.",
        "model_answer": "requests.get(\"https://pancakeswap-api.p.rapidapi.com/get_balance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pancakeswap-api.p.rapidapi.com\"}, params={\"address\": \"0x123456789\", \"token\": \"0x123456789\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "A pancakeswap API to get token price and other information with token address. Token price, token name, token decimals,  balance of an address, token supply, token symbol.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pancakeswap-api.p.rapidapi.com/get_balance'\nquerystring = {\"address\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pancakeswap-api.p.rapidapi.com/get_balance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pancakeswap-api.p.rapidapi.com/get_balance\"\nquerystring = {\"address\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\", \"token\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pancakeswap-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pancakeswap API",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"
                }
            ]
        }
    },
    {
        "query": "Can you please check if the person with the person_id 987654 is in the facial authentication database?",
        "model_answer": "requests.get(\"https://auther-check.p.rapidapi.com/person/face/987654\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"auther-check.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Plug and play the facial authentication into: point of sale, mobile app, self-checkouts, kiosk, ATM.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://auther-check.p.rapidapi.com/person/face/{person_id}'\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://auther-check.p.rapidapi.com/person/face/{person_id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/face/{person_id}\"\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Auther Check",
            "api_arguments_original": [
                {
                    "name": "person_id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the comments for context \"programming\" using The South Asian Express API.",
        "model_answer": "requests.get(\"https://the-south-asian-express.p.rapidapi.com/comments\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"the-south-asian-express.p.rapidapi.com\"}, params={\"context\": \"programming\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Wordpress v2 API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-south-asian-express.p.rapidapi.com/comments'\nquerystring = {\"context\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-south-asian-express.p.rapidapi.com/comments\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://the-south-asian-express.p.rapidapi.com/comments"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "the-south-asian-express.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "context": "programming"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-south-asian-express.p.rapidapi.com/comments\"\nquerystring = {\"context\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-south-asian-express.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The South Asian Express",
            "api_arguments_original": [
                {
                    "name": "context",
                    "type": "STRING",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "default": "string"
                }
            ]
        }
    },
    {
        "query": "Please provide me with a list of radio stations from the GMC Radio API.",
        "model_answer": "requests.get(\"https://gmc-radio.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"gmc-radio.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "GMC Radio",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gmc-radio.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gmc-radio.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://gmc-radio.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "gmc-radio.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gmc-radio.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gmc-radio.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GMC Radio",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please retrieve the political towns associated with the ZIP code 5000.",
        "model_answer": "requests.get(\"https://schweizer-postleitzahlen.p.rapidapi.com/zip/5000\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"schweizer-postleitzahlen.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "API to get political towns from a ZIP-code (Postleitzahl)\nA ZIP-code can belong to multiple towns.\nThe data is updated daily.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://schweizer-postleitzahlen.p.rapidapi.com/zip/3052'\nquerystring = {\"zip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://schweizer-postleitzahlen.p.rapidapi.com/zip/3052\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://schweizer-postleitzahlen.p.rapidapi.com/zip/3052\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"schweizer-postleitzahlen.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Schweizer Postleitzahlen",
            "api_arguments_original": [
                {
                    "name": "zip",
                    "type": "NUMBER",
                    "description": "",
                    "default": "3052"
                }
            ]
        }
    },
    {
        "query": "How can I get the tick data for the cryptocurrency contract ETHUSDT on Bybit?",
        "model_answer": "requests.get(\"https://bybit4.p.rapidapi.com/perpetual/usdc/openapi/public/v1/tick\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"bybit4.p.rapidapi.com\"}, params={\"symbol\": \"ETHUSDT\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Public Data Bybit. Cryptocurrency prices and charts. Derivatives, Futures, Spot, USDC Contract",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bybit4.p.rapidapi.com/perpetual/usdc/openapi/public/v1/tick'\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bybit4.p.rapidapi.com/perpetual/usdc/openapi/public/v1/tick\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bybit4.p.rapidapi.com/perpetual/usdc/openapi/public/v1/tick"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bybit4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "symbol": "ETHUSDT"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bybit4.p.rapidapi.com/perpetual/usdc/openapi/public/v1/tick\"\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bybit4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bybit",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Contract name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "What is the Python function call to get the trending topics in the Left 4 Dead steam community using the RapidAPI interface, and print the response?",
        "model_answer": "requests.get(\"https://steam-community.p.rapidapi.com/group/trendingtopics/l4d\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"steam-community.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Interface with elements on the SteamCommunity.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://steam-community.p.rapidapi.com/group/trendingtopics/l4d'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://steam-community.p.rapidapi.com/group/trendingtopics/l4d\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://steam-community.p.rapidapi.com/group/trendingtopics/l4d\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"steam-community.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Steam Community",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "l4d"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the aircraft information for registration number N54321?",
        "model_answer": "requests.get(\"https://flightera-flight-data.p.rapidapi.com/aircraft/info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"}, params={\"reg\": \"N54321\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Flight status, on-time performance and statistics by Flightera",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flightera-flight-data.p.rapidapi.com/aircraft/info'\nquerystring = {\"reg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flightera-flight-data.p.rapidapi.com/aircraft/info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://flightera-flight-data.p.rapidapi.com/aircraft/info"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "flightera-flight-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "reg": "N54321"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/aircraft/info\"\nquerystring = {\"reg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flightera Flight Data",
            "api_arguments_original": [
                {
                    "name": "reg",
                    "type": "STRING",
                    "description": "The registration of the aircraft, as returned by /airline/aircraft or /aircraft/search",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to generate a QR code for the website google.com using the Image QR code generator API.",
        "model_answer": "requests.get(\"https://image-qr-code-generator.p.rapidapi.com/qr\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"image-qr-code-generator.p.rapidapi.com\"}, params={\"url\": \"google.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "This API generates Image QR codes",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://image-qr-code-generator.p.rapidapi.com/qr'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://image-qr-code-generator.p.rapidapi.com/qr\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://image-qr-code-generator.p.rapidapi.com/qr"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "image-qr-code-generator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "google.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://image-qr-code-generator.p.rapidapi.com/qr\"\nquerystring = {\"url\": \"grayhat.in\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-qr-code-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Image QR code generator",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "grayhat.in"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the ranking list for the top J2A coins and log the output using the J2ACoin API?",
        "model_answer": "requests.get(\"https://j2acoin.p.rapidapi.com/getRankingList\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"j2acoin.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://j2acoin.p.rapidapi.com/getRankingList'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://j2acoin.p.rapidapi.com/getRankingList\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://j2acoin.p.rapidapi.com/getRankingList\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"j2acoin.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "J2ACoin",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you generate a random color for me?",
        "model_answer": "requests.get(\"https://random-chunk-api.p.rapidapi.com/api/color\")",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-chunk-api.p.rapidapi.com/api/color'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-chunk-api.p.rapidapi.com/api/color\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{}"
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-chunk-api.p.rapidapi.com/api/color\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-chunk-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Chunk API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the geocoding data for the postcode \"SW1A1AA\" using the UK PostCode API.",
        "model_answer": "requests.get(\"https://uk-postcode-api.p.rapidapi.com/postcodes/SW1A1AA\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"uk-postcode-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "Auto populate your app & service with accurate and comprehensive PAF & Geocoding data from the Royal Mail",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uk-postcode-api.p.rapidapi.com/postcodes/PL11DN'\nquerystring = {\"postcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uk-postcode-api.p.rapidapi.com/postcodes/PL11DN\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uk-postcode-api.p.rapidapi.com/postcodes/PL11DN\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uk-postcode-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "UK PostCode API",
            "api_arguments_original": [
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "Pass a PostCode value for looking up addresses",
                    "default": "PL11DN"
                }
            ]
        }
    },
    {
        "query": "I want to convert a speech file named \"audio.wav\" to text using the Speech Recognition API.",
        "model_answer": "requests.get(\"https://speech-recognition14.p.rapidapi.com/languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"speech-recognition14.p.rapidapi.com\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Convert speech to text quickly and easily. Supports 100+ languages",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://speech-recognition14.p.rapidapi.com/languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://speech-recognition14.p.rapidapi.com/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://speech-recognition14.p.rapidapi.com/languages"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "speech-recognition14.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://speech-recognition14.p.rapidapi.com/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"speech-recognition14.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Speech Recognition",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide real-time LinkedIn company data for the domain \"google.com\"?",
        "model_answer": "requests.get(\"https://fresh-linkedin-company-data.p.rapidapi.com/get-company-by-domain\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fresh-linkedin-company-data.p.rapidapi.com\"}, params={\"domain\": \"google.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "**Real-time** LinkedIn Company data based on Numeric ID, Domain or URL. **Really working now 2023**. Scalable API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fresh-linkedin-company-data.p.rapidapi.com/get-company-by-domain'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fresh-linkedin-company-data.p.rapidapi.com/get-company-by-domain\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fresh-linkedin-company-data.p.rapidapi.com/get-company-by-domain"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fresh-linkedin-company-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domain": "google.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fresh-linkedin-company-data.p.rapidapi.com/get-company-by-domain\"\nquerystring = {\"domain\": \"apple.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fresh-linkedin-company-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fresh LinkedIn Company Data",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "apple.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest weather data for London, United Kingdom?",
        "model_answer": "requests.get(\"https://weather-by-api-ninjas.p.rapidapi.com/v1/weather\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"weather-by-api-ninjas.p.rapidapi.com\"}, params={\"city\": \"London\", \"state\": \"United Kingdom\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Get the latest weather data for any region in the world. See more info at https://api-ninjas.com/api/weather.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weather-by-api-ninjas.p.rapidapi.com/v1/weather'\nquerystring = {\"country\": \"\", \"lon\": \"\", \"zip\": \"\", \"state\": \"\", \"city\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weather-by-api-ninjas.p.rapidapi.com/v1/weather\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"city\" \"London\", \"state\" \"United Kingdom\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weather-by-api-ninjas.p.rapidapi.com/v1/weather\"\nquerystring = {\"country\": \"\", \"lon\": \"\", \"zip\": \"\", \"state\": \"\", \"city\": \"Seattle\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weather-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Weather by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country name.",
                    "default": ""
                },
                {
                    "name": "lon",
                    "type": "STRING",
                    "description": "Longitude of desired location. If used, **lat** parameter must also be supplied.",
                    "default": ""
                },
                {
                    "name": "zip",
                    "type": "NUMBER",
                    "description": "5-digit Zip code (United States only).",
                    "default": ""
                },
                {
                    "name": "state",
                    "type": "STRING",
                    "description": "US state (United States only).",
                    "default": ""
                },
                {
                    "name": "city",
                    "type": "STRING",
                    "description": "City name.",
                    "default": "Seattle"
                },
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "Latitude of desired location. If used, **lon** parameter must also be supplied.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the details of the job with the Job ID J987654 in the USA Jobs for IT API.",
        "model_answer": "requests.get(\"https://usa-jobs-for-it.p.rapidapi.com/FullStack\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"usa-jobs-for-it.p.rapidapi.com\"}, params={\"job_id\": \"J987654\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An USA Jobs for IT API from different sources",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://usa-jobs-for-it.p.rapidapi.com/FullStack'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://usa-jobs-for-it.p.rapidapi.com/FullStack\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://usa-jobs-for-it.p.rapidapi.com/FullStack"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "usa-jobs-for-it.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "job_id": "J987654"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://usa-jobs-for-it.p.rapidapi.com/FullStack\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"usa-jobs-for-it.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "USA Jobs for IT",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to check if an image file contains any explicit content, using the NSFW3 API?",
        "model_answer": "requests.get(\"https://nsfw3.p.rapidapi.com/v1/version\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"nsfw3.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "This API processes images and detects sexual content in them, marking the images as Safe For Work (SFW) or Not Safe For Work (NSFW).  [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/nsfw) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/nsfw?utm_source=nsfw_rapidapi&utm_medium=endpoints&utm_campaign=rapidapi) [![Telegram](https://img.shields.io/ba...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nsfw3.p.rapidapi.com/v1/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nsfw3.p.rapidapi.com/v1/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://nsfw3.p.rapidapi.com/v1/version"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "nsfw3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nsfw3.p.rapidapi.com/v1/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nsfw3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NSFW",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if the firmware with SHA2 hash \"bc12de34fg56\" is valid using IoTVAS API?",
        "model_answer": "requests.get(\"https://iotvas.p.rapidapi.com/firmware/af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175/accounts\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"}, params={\"firmware_hash\": \"bc12de34fg56\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "IOTVAS API enables you to detect IoT devices in the network and provides detailed firmware risk analysis without requiring the user to upload the firmware file.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://iotvas.p.rapidapi.com/firmware/af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175/accounts'\nquerystring = {\"firmware_hash\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://iotvas.p.rapidapi.com/firmware/af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175/accounts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://iotvas.p.rapidapi.com/firmware/af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175/accounts"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "iotvas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/firmware/af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175/accounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IoTVAS",
            "api_arguments_original": [
                {
                    "name": "firmware_hash",
                    "type": "STRING",
                    "description": "SHA2 hash of device firmware",
                    "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the Python function call to track energy prices on Sky News using the Energy Price News API?",
        "model_answer": "requests.get(\"https://energy-price-news.p.rapidapi.com/news/sources/skynews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"energy-price-news.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Tracking multiple news sources for articles about energy prices",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://energy-price-news.p.rapidapi.com/news/sources/skynews'\nquerystring = {\"sourceId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://energy-price-news.p.rapidapi.com/news/sources/skynews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "X-RapidAPI-Key"
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://energy-price-news.p.rapidapi.com/news/sources/skynews\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"energy-price-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Energy Price News",
            "api_arguments_original": [
                {
                    "name": "sourceId",
                    "type": "string",
                    "description": "",
                    "default": "skynews"
                }
            ]
        }
    },
    {
        "query": "How can I get the list of tools available for API deployment from APIEvangelist?",
        "model_answer": "requests.get(\"https://ismaelc-apievangelist.p.rapidapi.com/data/tools.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ismaelc-apievangelist.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Kin Lane's list of tools for API deployment.  What can I say?  He's da man!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ismaelc-apievangelist.p.rapidapi.com/data/tools.json'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ismaelc-apievangelist.p.rapidapi.com/data/tools.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ismaelc-apievangelist.p.rapidapi.com/data/tools.json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ismaelc-apievangelist.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ismaelc-apievangelist.p.rapidapi.com/data/tools.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ismaelc-apievangelist.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "APIEvangelist",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the departure flights for \"JFK\" airport using the Flight Fare Search API.",
        "model_answer": "requests.get(\"https://flight-fare-search.p.rapidapi.com/v2/airport/departures\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"flight-fare-search.p.rapidapi.com\"}, params={\"airportCode\": \"JFK\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Elevate your travel game with Flight Fare Search API! Get real-time flight data, fares, and airport info for seamless travel planning. Transform your app into a powerful travel companion with Flight Fare Search.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flight-fare-search.p.rapidapi.com/v2/airport/arrivals'\nquerystring = {\"airportCode\": \"\", \"carrierCode\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flight-fare-search.p.rapidapi.com/v2/airport/arrivals\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://flight-fare-search.p.rapidapi.com/v2/airport/departures"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "flight-fare-search.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "airportCode": "JFK"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flight-fare-search.p.rapidapi.com/v2/airport/arrivals\"\nquerystring = {\"carrierCode\": \"\", \"date\": \"\", \"airportCode\": \"LHR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flight-fare-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flight Fare Search",
            "api_arguments_original": [
                {
                    "name": "airportCode",
                    "type": "STRING",
                    "description": "",
                    "default": "LHR"
                },
                {
                    "name": "carrierCode",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the latest foreign exchange reference rates from the European Central Bank API and store the response in a variable called 'exchange_rates'.",
        "model_answer": "requests.get(\"https://european-central-bank-reference-rates.p.rapidapi.com/GetReferenceRates\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"european-central-bank-reference-rates.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Get the 30 Euro foreign exchange reference rates in JSON-format. Updated every day at around 16:00 CET by the ECB (European Central Bank).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://european-central-bank-reference-rates.p.rapidapi.com/GetReferenceRates'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://european-central-bank-reference-rates.p.rapidapi.com/GetReferenceRates\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://european-central-bank-reference-rates.p.rapidapi.com/GetReferenceRates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"european-central-bank-reference-rates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "European Central Bank - Reference Rates",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if the social security number 987-65-4321 is valid in the Philippines?",
        "model_answer": "requests.get(\"https://philippines-social-security-ocr.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"philippines-social-security-ocr.p.rapidapi.com\"}, params={\"request_id\":\"987-65-4321\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Philippines Social Security OCR API allows you to onboard your customers with speed and precision.\n\nEnable them to pre-fill their onboarding forms instantly, by just uploading or scanning their Social Security card \u2013 IDfy will digitize the document for you!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://philippines-social-security-ocr.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://philippines-social-security-ocr.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://philippines-social-security-ocr.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "philippines-social-security-ocr.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "request_id": "987-65-4321"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://philippines-social-security-ocr.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"philippines-social-security-ocr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Philippines Social Security OCR",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check the busy and popular times for Walmart located at 8400 Coral Way, Miami, FL 33155 using the Busy and Popular Times API?",
        "model_answer": "requests.get('https://busy-and-popular-times.p.rapidapi.com/search/Walmart+8400+Coral+Way+Miami+FL+33155', headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"busy-and-popular-times.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The goal of this API  is to provide an option to use Google popular times data, until it is available via Google's API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://busy-and-popular-times.p.rapidapi.com/search/Walmart+8400+Coral+Way+Miami+FL+33155'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://busy-and-popular-times.p.rapidapi.com/search/Walmart+8400+Coral+Way+Miami+FL+33155\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "'https"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://busy-and-popular-times.p.rapidapi.com/search/Walmart+8400+Coral+Way+Miami+FL+33155\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"busy-and-popular-times.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Busy and Popular Times",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "",
                    "default": "Walmart+8400+Coral+Way+Miami+FL+33155"
                }
            ]
        }
    },
    {
        "query": "Can you provide me the tourist attractions in Paris?",
        "model_answer": "requests.get(\"https://opentripmap-places-v1.p.rapidapi.com/en/places/geoname\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"opentripmap-places-v1.p.rapidapi.com\"}, params={\"name\": \"Paris\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Over 10 million tourist attractions and facilities around the world",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://opentripmap-places-v1.p.rapidapi.com/{lang}/places/geoname'\nquerystring = {\"name\": \"\", \"lang\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://opentripmap-places-v1.p.rapidapi.com/{lang}/places/geoname\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://opentripmap-places-v1.p.rapidapi.com/en/places/geoname"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "opentripmap-places-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://opentripmap-places-v1.p.rapidapi.com/{lang}/places/geoname\"\nquerystring = {\"name\": \"London\", \"lang\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opentripmap-places-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Places",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Placename",
                    "default": "London"
                },
                {
                    "name": "lang",
                    "type": "ENUM",
                    "description": "Two-letter language code (ISO639-1). The following values are available: en (english), ru (russian)",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Two-letter country code, ISO-3166 (optional). Default is all countries.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to use the Hitmen2 API to retrieve gaming data.",
        "model_answer": "requests.get(\"https://hitmen2.p.rapidapi.comhttp://hitman11.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"hitmen2.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "crea",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hitmen2.p.rapidapi.comhttp://hitman11.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hitmen2.p.rapidapi.comhttp://hitman11.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://hitmen2.p.rapidapi.comhttp://hitman11.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "hitmen2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hitmen2.p.rapidapi.comhttp://hitman11.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hitmen2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "hitmen2",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to generate a barcode image for the data \"9876543210\" in the UPCA symbology using the RapidAPI Barcode API.",
        "model_answer": "requests.get(\"https://barcode18.p.rapidapi.com/upca/data/9876543210\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"barcode18.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "RESTful API for barcode image generation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://barcode18.p.rapidapi.com/upca/data/123456789012'\nquerystring = {\"symbology\": \"\", \"data\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://barcode18.p.rapidapi.com/upca/data/123456789012\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://barcode18.p.rapidapi.com/upca/data/9876543210"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "barcode18.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://barcode18.p.rapidapi.com/upca/data/123456789012\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"barcode18.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Barcode",
            "api_arguments_original": [
                {
                    "name": "symbology",
                    "type": "string",
                    "description": "",
                    "default": "upca"
                },
                {
                    "name": "data",
                    "type": "string",
                    "description": "",
                    "default": "123456789012"
                }
            ]
        }
    },
    {
        "query": "I have an image of a Passport and I want to extract the data from it using the OCR API.",
        "model_answer": "requests.get(\"https://voter-card-ocr.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"voter-card-ocr.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Extract data from Voter ID Card instantly and accurately!\n\n \n\nWhen paired with IDfy\u2019s Voter Card Verification API, extracts data from an image of a Voter ID Card. It accurately auto-fills this data in the right fields for a quicker &amp; errorless form-filling experience.\n\nGet your API access",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://voter-card-ocr.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://voter-card-ocr.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "enum": [
                        "68bbb910-da9b-4d8a-9a1d-4bd878b1984"
                    ],
                    "description": ""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://voter-card-ocr.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"voter-card-ocr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Voter Card OCR",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check if the email jane@example.com is a valid email address?",
        "model_answer": "requests.get(\"https://email-address-validator4.p.rapidapi.com/v1/checkemail\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"email-address-validator4.p.rapidapi.com\"}, params={\"email\": \"jane@example.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Stop guessing if an email is valid or full. With this API, you can determine first hand if the email is deliverable and working. Not only can this API detect if an email is formatted correctly, it also uses various methods to verify if the email is actually valid",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-address-validator4.p.rapidapi.com/v1/checkemail'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-address-validator4.p.rapidapi.com/v1/checkemail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://email-address-validator4.p.rapidapi.com/v1/checkemail"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "email-address-validator4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-address-validator4.p.rapidapi.com/v1/checkemail\"\nquerystring = {\"email\": \"test@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-address-validator4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Address Validator",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "test@gmail.com"
                }
            ]
        }
    },
    {
        "query": "Can you please provide the price and information about the Pokemon Trading Card with the set number XY12-163?",
        "model_answer": "requests.get(\"https://pokemon-tcg-card-prices.p.rapidapi.com/card\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pokemon-tcg-card-prices.p.rapidapi.com\"}, params={\"setNumber\": \"XY12-163\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Provides a model of the Pokemon Trading Card Game cards.\nEach individual card has a price that is based on recent sales of the card or currently open listings.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pokemon-tcg-card-prices.p.rapidapi.com/card'\nquerystring = {\"set\": \"\", \"setId\": \"\", \"setNumber\": \"\", \"cardNumber\": \"\", \"name\": \"\", \"limit\": \"\", \"series\": \"\", \"fromId\": \"\", \"variant\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pokemon-tcg-card-prices.p.rapidapi.com/card\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pokemon-tcg-card-prices.p.rapidapi.com/card"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pokemon-tcg-card-prices.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "setNumber": "XY12-163"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pokemon-tcg-card-prices.p.rapidapi.com/card\"\nquerystring = {\"set\": \"vivid-voltage\", \"setId\": \"33ee55f4-30d0-4900-850f-36a351fb9719\", \"setNumber\": \"\", \"cardNumber\": \"\", \"name\": \"\", \"limit\": \"\", \"series\": \"sword-and-shield\", \"fromId\": \"\", \"variant\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pokemon-tcg-card-prices.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pokemon TCG Card Prices",
            "api_arguments_original": [
                {
                    "name": "set",
                    "type": "STRING",
                    "description": "",
                    "default": "vivid-voltage"
                },
                {
                    "name": "setId",
                    "type": "STRING",
                    "description": "",
                    "default": "33ee55f4-30d0-4900-850f-36a351fb9719"
                },
                {
                    "name": "setNumber",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "cardNumber",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Max 200, defaults to 50",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "STRING",
                    "description": "",
                    "default": "sword-and-shield"
                },
                {
                    "name": "fromId",
                    "type": "STRING",
                    "description": "A paging parameter. The ID from which the query will continue.\nCalls for many results include a fromId field that can be used as a query param in the next call to get the next page of results",
                    "default": ""
                },
                {
                    "name": "variant",
                    "type": "STRING",
                    "description": "DEFAULT / REVERSE_HOLO",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with crime data for the zip code 94110.",
        "model_answer": "requests.get(\"https://crime-data-by-zipcode-api.p.rapidapi.com/crime_data\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"crime-data-by-zipcode-api.p.rapidapi.com\"}, params={\"zip\": \"94110\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Crime Data By ZipCode API allows users to retrieve crime scores for a specific Zip Code in the US. It also provides additional information about crime rates and crime rates for nearby locations. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crime-data-by-zipcode-api.p.rapidapi.com/crime_data'\nquerystring = {\"zip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crime-data-by-zipcode-api.p.rapidapi.com/crime_data\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://crime-data-by-zipcode-api.p.rapidapi.com/crime_data"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "crime-data-by-zipcode-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "zip": "94110"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crime-data-by-zipcode-api.p.rapidapi.com/crime_data\"\nquerystring = {\"zip\": \"94109\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crime-data-by-zipcode-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crime Data By ZipCode API",
            "api_arguments_original": [
                {
                    "name": "zip",
                    "type": "NUMBER",
                    "description": "ZIP Code to retrieve crime data from.",
                    "default": "94109"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the physical quantities, constants, and equations from the API.",
        "model_answer": "requests.get(\"https://physical-quantities-constants-and-equations.p.rapidapi.com/equations/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"physical-quantities-constants-and-equations.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "This API retrieves physical quantities,constants and equations formatted as JSON ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://physical-quantities-constants-and-equations.p.rapidapi.com/equations/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://physical-quantities-constants-and-equations.p.rapidapi.com/equations/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://physical-quantities-constants-and-equations.p.rapidapi.com/equations/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"physical-quantities-constants-and-equations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Physical quantities, constants and equations ",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I extract the JSON product data from AliExpress using the AliExpress Product API for a product with the ID '123456'?",
        "model_answer": "requests.get(\"https://aliexpress-product1.p.rapidapi.com/scraper\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"aliexpress-product1.p.rapidapi.com\"}, params={\"productId\": \"123456\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "AliExpress Product API is an unofficial API to extract JSON product data from aliexpress.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aliexpress-product1.p.rapidapi.com/scraper'\nquerystring = {\"productId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aliexpress-product1.p.rapidapi.com/scraper\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://aliexpress-product1.p.rapidapi.com/scraper"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "aliexpress-product1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "productId": "123456"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aliexpress-product1.p.rapidapi.com/scraper\"\nquerystring = {\"productId\": \"32984931216\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aliexpress-product1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AliExpress Product",
            "api_arguments_original": [
                {
                    "name": "productId",
                    "type": "STRING",
                    "description": "",
                    "default": "32984931216"
                }
            ]
        }
    },
    {
        "query": "What is the current weather forecast for the Jackson Hole ski resort? Please provide the forecast in metric units and for the entire mountain (from top to bottom).",
        "model_answer": "requests.get(\"https://ski-resort-forecast.p.rapidapi.com/Jackson Hole/forecast\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ski-resort-forecast.p.rapidapi.com\"}, params={\"units\": \"m\", \"el\": \"all\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Forecast and current snow conditions for nearly every ski resort.  Perfect spelling of resort names is NOT required in most cases.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ski-resort-forecast.p.rapidapi.com/Jackson Hole/forecast'\nquerystring = {\"resort\": \"\", \"units\": \"\", \"el\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ski-resort-forecast.p.rapidapi.com/Jackson Hole/forecast\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ski-resort-forecast.p.rapidapi.com/Jackson Hole/forecast"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ski-resort-forecast.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "units": "m",
                            "el": "all"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ski-resort-forecast.p.rapidapi.com/Jackson Hole/forecast\"\nquerystring = {\"units\": \"i\", \"el\": \"top\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ski-resort-forecast.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ski Resort Forecast",
            "api_arguments_original": [
                {
                    "name": "resort",
                    "type": "string",
                    "description": "",
                    "default": "Jackson Hole"
                },
                {
                    "name": "units",
                    "type": "STRING",
                    "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
                    "default": "i"
                },
                {
                    "name": "el",
                    "type": "STRING",
                    "description": "Specify a part of the mountain. Accepted values are 'top', 'mid and 'bot'. Using this parameter improves response time.",
                    "default": "top"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to extract body shapes from a full-body photo and log the output?",
        "model_answer": "requests.get(\"https://body-shape-analyzer.p.rapidapi.com/image/chkaip\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"body-shape-analyzer.p.rapidapi.com\"})",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "Extract body shapes from full-body photos on the front and side and provide the body shape analysis results.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://body-shape-analyzer.p.rapidapi.com/image/chkaip'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://body-shape-analyzer.p.rapidapi.com/image/chkaip\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://body-shape-analyzer.p.rapidapi.com/image/chkaip\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"body-shape-analyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Body Shape Analyzer",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to create a GIF from the video with the URL \"https://www.example.com/video.mp4\" starting from 2 seconds and ending at 7 seconds, with a duration of 5 seconds and a size of 500x300 pixels.",
        "model_answer": "requests.get(\"https://apilayer-giflayer-v1.p.rapidapi.com/capture\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"apilayer-giflayer-v1.p.rapidapi.com\"}, params={\"url\": \"https://www.example.com/video.mp4\", \"start\": 2, \"end\": 7, \"duration\": 5, \"size\":\"500x300\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Free, powerful Video to GIF API for developers and businesses",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://apilayer-giflayer-v1.p.rapidapi.com/capture'\nquerystring = {\"url\": \"\", \"start\": \"\", \"end\": \"\", \"duration\": \"\", \"size\": \"\", \"crop\": \"\", \"fps\": \"\", \"trailer\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://apilayer-giflayer-v1.p.rapidapi.com/capture\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://apilayer-giflayer-v1.p.rapidapi.com/capture"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "apilayer-giflayer-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://www.example.com/video.mp4",
                            "start": 2,
                            "end": 7,
                            "duration": 5,
                            "size": "500x300"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://apilayer-giflayer-v1.p.rapidapi.com/capture\"\nquerystring = {\"url\": \"\", \"start\": \"\", \"end\": \"\", \"duration\": \"\", \"size\": \"\", \"crop\": \"\", \"fps\": \"15\", \"trailer\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"apilayer-giflayer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "giflayer",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The video URL you would like to generate a GIF from",
                    "default": ""
                },
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "The starting time (in seconds) of your GIF",
                    "default": ""
                },
                {
                    "name": "end",
                    "type": "NUMBER",
                    "description": "The ending time (in seconds) of your GIF",
                    "default": ""
                },
                {
                    "name": "duration",
                    "type": "NUMBER",
                    "description": "The duration (in seconds) of your GIF",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "resize the GIF to the dimensions of your choice (accepts width and height in pixels) (Default: 300x200)",
                    "default": ""
                },
                {
                    "name": "crop",
                    "type": "STRING",
                    "description": "Crop the GIF to the size of your choice (accepts width and height in pixels)",
                    "default": ""
                },
                {
                    "name": "fps",
                    "type": "NUMBER",
                    "description": "specify a GIF quality (Frames per Second) of your choice (Default: 15)",
                    "default": "15"
                },
                {
                    "name": "trailer",
                    "type": "NUMBER",
                    "description": "Set to \"1\" to create default trailer, or specify custom trailer parameters",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Please provide me with a quality riddle.",
        "model_answer": "requests.get(\"https://riddles-by-api-ninjas.p.rapidapi.com/v1/riddles\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"riddles-by-api-ninjas.p.rapidapi.com\"}, params={\"limit\": 1})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Quality riddles perfect for entertainment apps. See more info at https://api-ninjas.com/api/riddles",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://riddles-by-api-ninjas.p.rapidapi.com/v1/riddles'\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://riddles-by-api-ninjas.p.rapidapi.com/v1/riddles\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://riddles-by-api-ninjas.p.rapidapi.com/v1/riddles"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "riddles-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "limit": 1
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://riddles-by-api-ninjas.p.rapidapi.com/v1/riddles\"\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"riddles-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Riddles by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of results to return. Must be between 1 and 20. Default is 1.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide the available locales for generating testimonials in the review-generator-ai API?",
        "model_answer": "requests.get(\"https://review-generator-ai.p.rapidapi.com/api/data/locales\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"review-generator-ai.p.rapidapi.com\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Generate testimonial & review using AI. Quickly write candid testimonials and reviews for people and services in 30+ languages",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://review-generator-ai.p.rapidapi.com/api/data/locales'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://review-generator-ai.p.rapidapi.com/api/data/locales\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://review-generator-ai.p.rapidapi.com/api/data/locales\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"review-generator-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Review Generator (AI)",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to find a burger with beef on the Burgers Hub API.",
        "model_answer": "requests.get(\"https://burgers-hub.p.rapidapi.com/find-burger/?search=beef\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"burgers-hub.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "This api returns kinds of burgers with there name, image, price, ingeridients etc",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://burgers-hub.p.rapidapi.com/find-burger/?search=chicken'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://burgers-hub.p.rapidapi.com/find-burger/?search=chicken\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://burgers-hub.p.rapidapi.com/find-burger/?search=beef"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "burgers-hub.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://burgers-hub.p.rapidapi.com/find-burger/?search=chicken\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"burgers-hub.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Burgers Hub",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to get data from the PSS API and include the necessary headers to authenticate the request.",
        "model_answer": "requests.get(\"https://pss.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"pss.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "pss",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pss.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pss.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pss.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pss.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pss.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pss.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "pss",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to search all the websites hosted on the same IP as example.com.",
        "model_answer": "requests.get(\"https://websites-on-same-ip.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"websites-on-same-ip.p.rapidapi.com\"}, params={\"q\": \"example.com\", \"type\": \"WEBIP\", \"pagenum\": \"1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Search all domains on a shared IP address",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://websites-on-same-ip.p.rapidapi.com/'\nquerystring = {\"q\": \"\", \"type\": \"\", \"pagenum\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://websites-on-same-ip.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://websites-on-same-ip.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "websites-on-same-ip.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "example.com",
                            "type": "WEBIP",
                            "pagenum": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://websites-on-same-ip.p.rapidapi.com/\"\nquerystring = {\"pagenum\": \"1\", \"q\": \"ebay.com\", \"type\": \"WEBIP\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"websites-on-same-ip.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Websites on same IP",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "ebay.com"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "WEBIP"
                },
                {
                    "name": "pagenum",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to get the latest crypto news from the ALL Crypto News Feed API.",
        "model_answer": "requests.get(\"https://all-crypto-news-feed.p.rapidapi.com/get_blogs_feed\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"all-crypto-news-feed.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "All news about crypto. Tweets, listing news, .gov announcements, blogs etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-crypto-news-feed.p.rapidapi.com/get_blogs_feed'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-crypto-news-feed.p.rapidapi.com/get_blogs_feed\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-crypto-news-feed.p.rapidapi.com/get_blogs_feed\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-crypto-news-feed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ALL Crypto News Feed",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the predictions for the upcoming football match between Real Madrid and Barcelona, set the market to classic, the date to 2022-10-23, and the federation to UEFA, and log the output?",
        "model_answer": "requests.get(\"https://football-prediction-api.p.rapidapi.com/api/v2/predictions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"football-prediction-api.p.rapidapi.com\"}, params={\"market\": \"classic\", \"iso_date\": \"2022-10-23\", \"federation\":\"UEFA\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "The Football Prediction API provides predictions for upcoming football matches, average bookie odds, results for past matches and prediction performance statistics for past results.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://football-prediction-api.p.rapidapi.com/api/v2/predictions'\nquerystring = {\"market\": \"\", \"iso_date\": \"\", \"federation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://football-prediction-api.p.rapidapi.com/api/v2/predictions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://football-prediction-api.p.rapidapi.com/api/v2/predictions"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "football-prediction-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "market": "classic",
                            "iso_date": "2022-10-23",
                            "federation": "UEFA"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://football-prediction-api.p.rapidapi.com/api/v2/predictions\"\nquerystring = {\"market\": \"classic\", \"iso_date\": \"2018-12-01\", \"federation\": \"UEFA\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"football-prediction-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Football Prediction",
            "api_arguments_original": [
                {
                    "name": "market",
                    "type": "STRING",
                    "description": "Shows the predictions for a certain market. Defaults to \"classic\" if not provided",
                    "default": "classic"
                },
                {
                    "name": "iso_date",
                    "type": "STRING",
                    "description": "Will filter the results by date. Can be used to show past results.",
                    "default": "2018-12-01"
                },
                {
                    "name": "federation",
                    "type": "STRING",
                    "description": "Filter the predictions by federation",
                    "default": "UEFA"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to download the map tile with y=2, z=15, and x=8 using the Offline MapTiles API.",
        "model_answer": "requests.get(\"https://offline-maptiles.p.rapidapi.com/local/osm/v1/15/8/2.png\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"offline-maptiles.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Download map tiles for offline use (intranet, offline devices).  You can store those downloaded tiles as long as you want.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://offline-maptiles.p.rapidapi.com/local/osm/v1/3/6/3.png'\nquerystring = {\"y\": \"\", \"z\": \"\", \"x\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://offline-maptiles.p.rapidapi.com/local/osm/v1/3/6/3.png\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://offline-maptiles.p.rapidapi.com/local/osm/v1/3/6/3.png\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"offline-maptiles.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Offline MapTiles",
            "api_arguments_original": [
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "y tile number",
                    "default": "3"
                },
                {
                    "name": "z",
                    "type": "NUMBER",
                    "description": "Zoom factor between 0 and 19",
                    "default": "3"
                },
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "x tile number",
                    "default": "6"
                }
            ]
        }
    },
    {
        "query": "I want to get the WHOIS history for the domain \"example.com\" since the date \"2020-01-01\".",
        "model_answer": "requests.get(\"https://whois-history1.p.rapidapi.com/api/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"whois-history1.p.rapidapi.com\"}, params={\"domainName\": \"example.com\", \"sinceDate\": \"2020-01-01\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "WHOIS History API lets you find out about current and past domain owners and all other relevant registration details that can be gathered from WHOIS records. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://whois-history1.p.rapidapi.com/api/v1'\nquerystring = {\"domainName\": \"\", \"createdDateTo\": \"\", \"createdDateFrom\": \"\", \"outputFormat\": \"\", \"expiredDateTo\": \"\", \"updatedDateTo\": \"\", \"mode\": \"\", \"updatedDateFrom\": \"\", \"expiredDateFrom\": \"\", \"sinceDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://whois-history1.p.rapidapi.com/api/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"domainName\" \"example.com\", \"sinceDate\" \"2020-01-01\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://whois-history1.p.rapidapi.com/api/v1\"\nquerystring = {\"createdDateTo\": \"\", \"domainName\": \"google.com\", \"createdDateFrom\": \"\", \"outputFormat\": \"\", \"expiredDateTo\": \"\", \"updatedDateTo\": \"\", \"mode\": \"\", \"updatedDateFrom\": \"\", \"expiredDateFrom\": \"\", \"sinceDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whois-history1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Whois History",
            "api_arguments_original": [
                {
                    "name": "domainName",
                    "type": "STRING",
                    "description": "The domain for which historic WHOIS data is requested.",
                    "default": "google.com"
                },
                {
                    "name": "createdDateTo",
                    "type": "STRING",
                    "description": "If present, search through domains created before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "createdDateFrom",
                    "type": "STRING",
                    "description": "If present, search through domains created after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "default": ""
                },
                {
                    "name": "expiredDateTo",
                    "type": "STRING",
                    "description": "If present, search through domains expired before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "updatedDateTo",
                    "type": "STRING",
                    "description": "If present, search through domains updated before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "mode",
                    "type": "STRING",
                    "description": "preview \u2013 return only the number of domains. No credits deducted. purchase \u2013 return the actual list of domains (limited to 10,000). 1 request costs 50 DRS credits. Default: preview",
                    "default": ""
                },
                {
                    "name": "updatedDateFrom",
                    "type": "STRING",
                    "description": "If present, search through domains updated after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "expiredDateFrom",
                    "type": "STRING",
                    "description": "If present, search through domains expired after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "sinceDate",
                    "type": "STRING",
                    "description": "If present, search through activities discovered since the given date. Sometimes there is a latency between the actual added/renewal/expired date and the date when our system detected this change. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the owner details of the Web Push Notifications Server.",
        "model_answer": "requests.get(\"https://web-push-notifications-server.p.rapidapi.com/owner/-your-owner-id-here-\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"web-push-notifications-server.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Simple server which provides Web Push Notifications service to frontend applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://web-push-notifications-server.p.rapidapi.com/owner/-your-owner-id-here-'\nquerystring = {\"owner-id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://web-push-notifications-server.p.rapidapi.com/owner/-your-owner-id-here-\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://web-push-notifications-server.p.rapidapi.com/owner/-your-owner-id-here-"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "web-push-notifications-server.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://web-push-notifications-server.p.rapidapi.com/owner/-your-owner-id-here-\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"web-push-notifications-server.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Web Push Notifications Server",
            "api_arguments_original": [
                {
                    "name": "owner-id",
                    "type": "string",
                    "description": "",
                    "default": "-your-owner-id-here-"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with more information about the ROAC of company 987654321?",
        "model_answer": "requests.get(\"https://roac.p.rapidapi.com/api/Auditores/roac/987654321\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"roac.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "API ROAC",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://roac.p.rapidapi.com/api/Auditores/roac/{roac}'\nquerystring = {\"roac\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://roac.p.rapidapi.com/api/Auditores/roac/{roac}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://roac.p.rapidapi.com/api/Auditores/roac/{roac}\"\nquerystring = {\"roac\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"roac.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ROAC",
            "api_arguments_original": [
                {
                    "name": "roac",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to download an image from Pinterest using this URL: \"https://www.pinterest.com/pin/1149051292401881795/\"",
        "model_answer": "requests.get(\"https://pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com/ideapin/https://www.pinterest.com/pin/1149051292401881795/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "This APi comes with pinterest image downloader, pinterest video downloader and pinterest idea pin downloader | Fast. Download without Watermark.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com/ideapin/https://www.pinterest.com/pin/1149051292401881795/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com/ideapin/https://www.pinterest.com/pin/1149051292401881795/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com/ideapin/https://www.pinterest.com/pin/1149051292401881795/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pinterest Downloader -  Download image video and pinterest ideapin",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "",
                    "default": "https://www.pinterest.com/pin/1149051292401881795/"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the privacy details for app id 835599320 on the Apple App Store?",
        "model_answer": "requests.get('https://app-store2.p.rapidapi.com/privacy/835599320', headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"app-store2.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Unofficial Apple App Store Api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://app-store2.p.rapidapi.com/privacy/835599320'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://app-store2.p.rapidapi.com/privacy/835599320\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "'https"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://app-store2.p.rapidapi.com/privacy/835599320\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"app-store2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "App Store",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "835599320"
                }
            ]
        }
    },
    {
        "query": "Please provide information about the Dota 2 tournament with tournamentId 123456789.",
        "model_answer": "requests.get(\"https://league-of-legends-esports.p.rapidapi.com/tournaments\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"league-of-legends-esports.p.rapidapi.com\"}, params={\"tournamentId\": \"123456789\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "This api gives you all of the lol esports leagues , vods, tournaments, match , game , event details with videos , scheadule , standings, teams and their players. And live game score.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://league-of-legends-esports.p.rapidapi.com/tournaments'\nquerystring = {\"leagueId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://league-of-legends-esports.p.rapidapi.com/tournaments\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://league-of-legends-esports.p.rapidapi.com/tournaments"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "league-of-legends-esports.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "tournamentId": "123456789"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://league-of-legends-esports.p.rapidapi.com/tournaments\"\nquerystring = {\"leagueId\": \"101097443346691685\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"league-of-legends-esports.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "League Of Legends Esports",
            "api_arguments_original": [
                {
                    "name": "leagueId",
                    "type": "STRING",
                    "description": "",
                    "default": "101097443346691685"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with 5 motivational quotes?",
        "model_answer": "requests.get(\"https://quotes88.p.rapidapi.com/quotes/5\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"quotes88.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "We  provide developers with a vast collection of inspirational, thought-provoking, and entertaining quotes. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quotes88.p.rapidapi.com/quotes/10'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quotes88.p.rapidapi.com/quotes/10\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quotes88.p.rapidapi.com/quotes/10\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quotes88.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quotes_v2",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "Can you help me get the IP address of my current location?",
        "model_answer": "requests.get(\"https://ip-address3.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ip-address3.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Low latency API to retrieve User IP Address. Use to integrate on web based client apps to determine IP address of user.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-address3.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-address3.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ip-address3.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "ip-address3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-address3.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-address3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Address",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me search for the torrent file with the topic \"Black Widow\"?",
        "model_answer": "requests.get(\"https://torrent-search3.p.rapidapi.com/torrent/piratebay/Black%20Widow\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"torrent-search3.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This script is a JavaScript code that uses the @dil5han/torrent-api module to create a server that can search multiple torrent websites and return the results to the client in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://torrent-search3.p.rapidapi.com/torrent/piratebay/{searchtopic}'\nquerystring = {\"searchtopic\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://torrent-search3.p.rapidapi.com/torrent/piratebay/{searchtopic}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://torrent-search3.p.rapidapi.com/torrent/piratebay/{searchtopic}\"\nquerystring = {\"searchtopic\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"torrent-search3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Torrent-Search",
            "api_arguments_original": [
                {
                    "name": "searchtopic",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me the information of the file at the URL 'https://terabox.com/s/1gw8aGb75AWIp0fkfd3VaAgs'?",
        "model_answer": "requests.get(\"https://terabox-downloader.p.rapidapi.com/info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"terabox-downloader.p.rapidapi.com\"}, params={\"url\": \"https://terabox.com/s/1gw8aGb75AWIp0fkfd3VaAgs\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Terabox Downloader",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://terabox-downloader.p.rapidapi.com/info'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://terabox-downloader.p.rapidapi.com/info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://terabox-downloader.p.rapidapi.com/info"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "terabox-downloader.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://terabox.com/s/1gw8aGb75AWIp0fkfd3VaAgs"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://terabox-downloader.p.rapidapi.com/info\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"terabox-downloader.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Terabox Downloader",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "Example: https://terabox.com/s/1gw8aGb75AWIp0fkfd3VaAgs",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if the email address \"example@gmail.com\" is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get essential (24 data points) domain information realtime with one simple call.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://livescan-a-domain.p.rapidapi.com/'\nquerystring = {\"type\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://livescan-a-domain.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://livescan-a-domain.p.rapidapi.com/\"\nquerystring = {\"type\": \"LIVESCAN\", \"q\": \"domain.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"livescan-a-domain.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Livescan a Domain",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "LIVESCAN"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "domain.com"
                }
            ]
        }
    },
    {
        "query": "I want to get the current market trends for cryptocurrencies in Europe, Middle East, and Africa from the G-Finance API.",
        "model_answer": "requests.get(\"https://g-finance.p.rapidapi.com/market-trends/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"g-finance.p.rapidapi.com\"}, params={\"t\": \"cryptocurrencies\", \"gl\": \"US\", \"s\": \"europe-middle-east-africa\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This API helps to query financial summary, stocks, quotes, movers, news, etc\u2026",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://g-finance.p.rapidapi.com/market-trends/'\nquerystring = {\"t\": \"\", \"gl\": \"\", \"s\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://g-finance.p.rapidapi.com/market-trends/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://g-finance.p.rapidapi.com/market-trends/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "g-finance.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://g-finance.p.rapidapi.com/market-trends/\"\nquerystring = {\"gl\": \"US\", \"t\": \"losers\", \"s\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"g-finance.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "G - Finance",
            "api_arguments_original": [
                {
                    "name": "t",
                    "type": "STRING",
                    "description": "Tab name. One of these:\n\nindexes\nmost-active\ngainers\nlosers\nclimate-leaders\ncryptocurrencies\ncurrencies",
                    "default": "losers"
                },
                {
                    "name": "gl",
                    "type": "STRING",
                    "description": "",
                    "default": "US"
                },
                {
                    "name": "s",
                    "type": "STRING",
                    "description": "Subtab name. If you selected the indexes tab, you can choose one of the following, leave empty to get all.\n\namericas\neurope-middle-east-africa\nasia-pacific",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to retrieve the current time in UTC using the World Clock API.",
        "model_answer": "requests.get(\"https://world-clock.p.rapidapi.com/json/utc/now\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"world-clock.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An API to get the current time. REST Services that will return current date/time in JSON for any registered time zone.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-clock.p.rapidapi.com/json/utc/now'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-clock.p.rapidapi.com/json/utc/now\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-clock.p.rapidapi.com/json/utc/now\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-clock.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Clock",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to access the ST666 website on my mobile device.",
        "model_answer": "requests.get(\"https://demo-project27383.p.rapidapi.com/order/my\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"demo-project27383.p.rapidapi.com\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "ST666 ENT - Truy c\u1eadp nh\u00e0 c\u00e1i ST666 tr\u00ean di \u0111\u1ed9ng - Link mobile v\u00e0o ST666 nhanh nh\u1ea5t! Ch\u00fac c\u00e1c b\u1ea1n ch\u01a1i c\u00e1 c\u01b0\u1ee3c t\u1ea1i ST666 nhi\u1ec1u may m\u1eafn!\nWebsite: https://st666ent.com/\n\u0110\u1ecba ch\u1ec9: 6 T\u00f4n Th\u1ea5t Thuy\u1ebft, Ph\u01b0\u1eddng 1, Qu\u1eadn 4, TP.HCM\nS\u0110T: 0989918987\nHastag: #st666 #st666ent #nhacaist666 #CasinoOnline #dangnhapst666",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://demo-project27383.p.rapidapi.com/order/my'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://demo-project27383.p.rapidapi.com/order/my\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://demo-project27383.p.rapidapi.com/order/my"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "demo-project27383.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://demo-project27383.p.rapidapi.com/order/my\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"demo-project27383.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\ud83d\udc4b Demo Project",
            "api_arguments_original": []
        }
    },
    {
        "query": "Get the trending hashtags in the United Kingdom using the Hashtag API.",
        "model_answer": "requests.get(\"https://hashtag5.p.rapidapi.com/api/v2.1/trending/United%20Kingdom/tags\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hashtag5.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Generate hashtags based on image, text and get the post count detail of that hashtag.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hashtag5.p.rapidapi.com/api/v2.1/trending/United States/tags'\nquerystring = {\"country_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hashtag5.p.rapidapi.com/api/v2.1/trending/United States/tags\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hashtag5.p.rapidapi.com/api/v2.1/trending/United States/tags\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hashtag5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hashtag",
            "api_arguments_original": [
                {
                    "name": "country_name",
                    "type": "string",
                    "description": "",
                    "default": "United States"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to forward geocode the address \"123 Main St, New York, NY\" using the Geocode - Forward and Reverse API, and store the response in a variable called \"geocode_result\"?",
        "model_answer": "requests.get(\"https://geocode-forward-and-reverse.p.rapidapi.com/forward\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"geocode-forward-and-reverse.p.rapidapi.com\"}, params={\"address\": \"123 Main St, New York, NY\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Forward and reverse geocoding using Google Geocoding API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geocode-forward-and-reverse.p.rapidapi.com/forward'\nquerystring = {\"address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geocode-forward-and-reverse.p.rapidapi.com/forward\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://geocode-forward-and-reverse.p.rapidapi.com/forward"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "geocode-forward-and-reverse.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geocode-forward-and-reverse.p.rapidapi.com/forward\"\nquerystring = {\"address\": \"2795 Hastings St, Vancouver, BC V5K 1Z8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geocode-forward-and-reverse.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Geocode - Forward and Reverse",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "2795 Hastings St, Vancouver, BC V5K 1Z8"
                }
            ]
        }
    },
    {
        "query": "Please fetch Indian names from the API and print the response.",
        "model_answer": "requests.get(\"https://indian-names.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"indian-names.p.rapidapi.com\"}).json()",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API for fetching Indian Names",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indian-names.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indian-names.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://indian-names.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "indian-names.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indian-names.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indian-names.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indian Names",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to lookup the leagues for the username \"myusername\" in the Satellite API and print the response.",
        "model_answer": "requests.get(\"https://satellite-api.p.rapidapi.com/lookup/2ksports\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"satellite-api.p.rapidapi.com\"}, params={\"username\": \"myusername\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "This Read-Only API Allows Users To Access Their Sleeper Fantasy Football Leagues. Lookup Leagues, Check Standings, View Keeper Options And More.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://satellite-api.p.rapidapi.com/lookup/2ksports'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://satellite-api.p.rapidapi.com/lookup/2ksports\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "enum": [
                        "myusernam"
                    ],
                    "description": ""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://satellite-api.p.rapidapi.com/lookup/2ksports\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"satellite-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Satellite API",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "default": "2ksports"
                }
            ]
        }
    },
    {
        "query": "I want to get information about an exercise with ID 15 from MuscleWiki API.",
        "model_answer": "requests.get(\"https://musclewiki.p.rapidapi.com/exercises/15\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"musclewiki.p.rapidapi.com\"})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "The API provides information about exercises from MuscleWiki, including the name, category, target muscles,instructions for performing the exercise and a short video demonstration.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://musclewiki.p.rapidapi.com/exercises/20'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://musclewiki.p.rapidapi.com/exercises/20\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://musclewiki.p.rapidapi.com/exercises/20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"musclewiki.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MuscleWiki",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Exercise's ID",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to extract the content from the URL \"https://example.com\" using the URL Content Extractor API?",
        "model_answer": "requests.get(\"https://url-content-extractor.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"url-content-extractor.p.rapidapi.com\"}, params={\"query\": \"https://example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Provide a URL and get the content in return",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://url-content-extractor.p.rapidapi.com/search'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://url-content-extractor.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://url-content-extractor.p.rapidapi.com/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "url-content-extractor.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "query": "https://example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://url-content-extractor.p.rapidapi.com/search\"\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"url-content-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "URL Content Extractor",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check if the email address 'example@gmail.com' is valid using the 'check-disposable-email' API?",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "We have bring an api that will help to fetch udemy course scrapper for your next project Get Udemy course scraper for your next project. Use this api to fetch all the data you need in a fraction of a second.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://udemy-course-scrapper-api.p.rapidapi.com/course-names/course-instructor/course-url'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://udemy-course-scrapper-api.p.rapidapi.com/course-names/course-instructor/course-url\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://udemy-course-scrapper-api.p.rapidapi.com/course-names/course-instructor/course-url\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"udemy-course-scrapper-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Udemy course scrapper api",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check the reputation of the domain \"example2.com\" and print the response in JSON format.",
        "model_answer": "requests.get(\"https://domain-reputation1.p.rapidapi.com/api/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"domain-reputation1.p.rapidapi.com\"}, params={\"domainName\": \"example2.com\", \"outputFormat\": \"JSON\", \"mode\": \"\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Domain Reputation API lets you build a risk profile for a given domain or IP address with a single score based on multiple data sources.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://domain-reputation1.p.rapidapi.com/api/v1'\nquerystring = {\"domainName\": \"\", \"outputFormat\": \"\", \"mode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://domain-reputation1.p.rapidapi.com/api/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://domain-reputation1.p.rapidapi.com/api/v1"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "domain-reputation1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://domain-reputation1.p.rapidapi.com/api/v1\"\nquerystring = {\"outputFormat\": \"\", \"mode\": \"\", \"domainName\": \"whoisxmlapi.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"domain-reputation1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Domain Reputation",
            "api_arguments_original": [
                {
                    "name": "domainName",
                    "type": "STRING",
                    "description": "",
                    "default": "whoisxmlapi.com"
                },
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "default": ""
                },
                {
                    "name": "mode",
                    "type": "STRING",
                    "description": "API can check your domain in 2 modes: 'fast' - some heavy tests and data collectors will be disabled. 'full' - all the data and the tests will be processed. Default: fast",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to generate a fake credit card number using the Visa network?",
        "model_answer": "requests.get(\"https://fake-credit-card-number-generator-api.p.rapidapi.com/creditcard-cardgenerate/visa\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fake-credit-card-number-generator-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This is an API that generates fake credit card numbers that will pass Luhn's algorithm.\n\nDifferent than most services that generate credit card numbers  -  our service allows you to specify what card network (Visa, Mastercard, American Express, etc) you want to use.\n\nOur API will generate trillions of random credit card numbers!\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fake-credit-card-number-generator-api.p.rapidapi.com/creditcard-cardgenerate/visa'\nquerystring = {\"cardnetwork\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fake-credit-card-number-generator-api.p.rapidapi.com/creditcard-cardgenerate/visa\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fake-credit-card-number-generator-api.p.rapidapi.com/creditcard-cardgenerate/visa\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fake-credit-card-number-generator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fake Credit Card Number Generator API",
            "api_arguments_original": [
                {
                    "name": "cardnetwork",
                    "type": "string",
                    "description": "",
                    "default": "visa"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve a list of active listings on Etsy and print the response using RapidAPI.",
        "model_answer": "requests.get(\"https://community-etsy.p.rapidapi.com/listings/active\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"community-etsy.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Buy and sell handmade or vintage items, art and supplies on Etsy, the world's most vibrant handmade marketplace.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-etsy.p.rapidapi.com/listings/active'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-etsy.p.rapidapi.com/listings/active\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://community-etsy.p.rapidapi.com/listings/active"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "community-etsy.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-etsy.p.rapidapi.com/listings/active\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-etsy.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Etsy",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the data for episode 4 of Attack on Titan Season 4?",
        "model_answer": "requests.get(\"https://gogoanime-data-api.p.rapidapi.com/attack-on-titan-final-season-episode-4\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"gogoanime-data-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "data from gogoanime website for anime website building and stuff.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gogoanime-data-api.p.rapidapi.com/majutsushi-orphen-hagure-tabi-seiiki-hen-episode-8'\nquerystring = {\"link\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gogoanime-data-api.p.rapidapi.com/majutsushi-orphen-hagure-tabi-seiiki-hen-episode-8\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://gogoanime-data-api.p.rapidapi.com/attack-on-titan-final-season-episode-4"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "gogoanime-data-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gogoanime-data-api.p.rapidapi.com/majutsushi-orphen-hagure-tabi-seiiki-hen-episode-8\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gogoanime-data-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "gogoanime-data-api",
            "api_arguments_original": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "",
                    "default": "majutsushi-orphen-hagure-tabi-seiiki-hen-episode-8"
                }
            ]
        }
    },
    {
        "query": "What is the current weather for New York City?",
        "model_answer": "requests.get(\"https://weather1003.p.rapidapi.com/current\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"weather1003.p.rapidapi.com\"}, params={\"lon\": \"-74.0060\", \"lat\":\"40.7128\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Current weather data API, and Weather forecast API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weather1003.p.rapidapi.com/current'\nquerystring = {\"lon\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weather1003.p.rapidapi.com/current\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://weather1003.p.rapidapi.com/current"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "weather1003.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weather1003.p.rapidapi.com/current\"\nquerystring = {\"lon\": \"38.5\", \"lat\": \"-78.5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weather1003.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Weather_v6",
            "api_arguments_original": [
                {
                    "name": "lon",
                    "type": "STRING",
                    "description": "",
                    "default": "38.5"
                },
                {
                    "name": "lat",
                    "type": "STRING",
                    "description": "",
                    "default": "-78.5"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get the latest election news and print the response using the Election2020 Smartable API?",
        "model_answer": "requests.get(\"https://election2020-smartable.p.rapidapi.com/news/page/1/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"election2020-smartable.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "The Election API offers the 2020 U.S. election news, events, important people, FAQs, and other information. The data is tagged with democratic voice and republican voice, so it's up to the user to decide which opinion to follow.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://election2020-smartable.p.rapidapi.com/news/page/1/'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://election2020-smartable.p.rapidapi.com/news/page/1/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://election2020-smartable.p.rapidapi.com/news/page/1/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "election2020-smartable.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://election2020-smartable.p.rapidapi.com/news/page/1/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"election2020-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Election2020 Smartable",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please provide a random quote about mindfulness.",
        "model_answer": "requests.get(\"https://metaapi-mindfulness-quotes.p.rapidapi.com/v1/mindfulness\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"metaapi-mindfulness-quotes.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get a random quote about mindfulness from a list of 100 quotes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://metaapi-mindfulness-quotes.p.rapidapi.com/v1/mindfulness'\nquerystring = {\"author\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://metaapi-mindfulness-quotes.p.rapidapi.com/v1/mindfulness\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://metaapi-mindfulness-quotes.p.rapidapi.com/v1/mindfulness"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "metaapi-mindfulness-quotes.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://metaapi-mindfulness-quotes.p.rapidapi.com/v1/mindfulness\"\nquerystring = {\"author\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"metaapi-mindfulness-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MetaAPI Mindfulness Quotes",
            "api_arguments_original": [
                {
                    "name": "author",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if \"jane@example.com\" is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"jane@example.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flight-airline-consolidator-flight-aggregator.p.rapidapi.comhttps://flightslogic.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flight-airline-consolidator-flight-aggregator.p.rapidapi.comhttps://flightslogic.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "jane@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flight-airline-consolidator-flight-aggregator.p.rapidapi.comhttps://flightslogic.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flight-airline-consolidator-flight-aggregator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flight , Airline Consolidator, Flight Aggregator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you retrieve 3 step strings from the WikiHow API and store them in a variable called 'steps'?",
        "model_answer": "requests.get(\"https://hargrimm-wikihow-v1.p.rapidapi.com/steps\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"hargrimm-wikihow-v1.p.rapidapi.com\"}, params={\"count\": \"3\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Retrieve random out-of-context text and images from WikiHow articles",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hargrimm-wikihow-v1.p.rapidapi.com/steps'\nquerystring = {\"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hargrimm-wikihow-v1.p.rapidapi.com/steps\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://hargrimm-wikihow-v1.p.rapidapi.com/steps"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "hargrimm-wikihow-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hargrimm-wikihow-v1.p.rapidapi.com/steps\"\nquerystring = {\"count\": \"3\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hargrimm-wikihow-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WikiHow",
            "api_arguments_original": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "The number of step strings to retrieve (maximum 100)",
                    "default": "3"
                }
            ]
        }
    },
    {
        "query": "Please provide me with news articles about technology published within the last 24 hours in Indonesia.",
        "model_answer": "requests.get(\"https://berita1.p.rapidapi.com/competitor\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"berita1.p.rapidapi.com\"}, params={\"categories\": \"100271:3\", \"publishedWithin\": \"86400000\", \"offset\": \"0\", \"country\": \"id\", \"length\": \"0\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "belajar",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://berita1.p.rapidapi.com/competitor'\nquerystring = {\"id\": \"\", \"categories\": \"\", \"publishedWithin\": \"\", \"offset\": \"\", \"country\": \"\", \"length\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://berita1.p.rapidapi.com/competitor\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://berita1.p.rapidapi.com/competitor"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "berita1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "categories": "100271:3",
                            "publishedWithin": "86400000",
                            "offset": "0",
                            "country": "id",
                            "length": "0"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://berita1.p.rapidapi.com/competitor\"\nquerystring = {\"categories\": \"100271:3\", \"publishedWithin\": \"86400000\", \"offset\": \"0\", \"country\": \"id\", \"length\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"berita1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "berita",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "competitor"
                },
                {
                    "name": "categories",
                    "type": "STRING",
                    "description": "",
                    "default": "100271:3"
                },
                {
                    "name": "publishedWithin",
                    "type": "NUMBER",
                    "description": "",
                    "default": "86400000"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "length",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to take a screenshot of \\\"https://www.example.com\\\", save it as a png file, and use a custom User-Agent header.",
        "model_answer": "requests.get(\"https://website-screenshot3.p.rapidapi.com/api/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"website-screenshot3.p.rapidapi.com\"}, params={\"url\": \"https://www.example.com\", \"type\": \"png\", \"ua\": \"Custom User-Agent Header\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Website Screenshot API lets you get the screenshots of any site pages of your choice as a file in jpg, png, or PDF file (with embedded links) in just one API call.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://website-screenshot3.p.rapidapi.com/api/v1'\nquerystring = {\"url\": \"\", \"type\": \"\", \"ua\": \"\", \"mobile\": \"\", \"noJs\": \"\", \"imageOutputFormat\": \"\", \"quality\": \"\", \"delay\": \"\", \"thumbWidth\": \"\", \"mode\": \"\", \"timeout\": \"\", \"height\": \"\", \"scale\": \"\", \"scroll\": \"\", \"landscape\": \"\", \"width\": \"\", \"errorsOutputFormat\": \"\", \"fullPage\": \"\", \"touchScreen\": \"\", \"retina\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://website-screenshot3.p.rapidapi.com/api/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://website-screenshot3.p.rapidapi.com/api/v1"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "website-screenshot3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://www.example.com",
                            "type": "png",
                            "ua": "Custom User-Agent Header"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://website-screenshot3.p.rapidapi.com/api/v1\"\nquerystring = {\"type\": \"\", \"url\": \"google.com\", \"ua\": \"\", \"mobile\": \"\", \"noJs\": \"\", \"imageOutputFormat\": \"\", \"quality\": \"\", \"delay\": \"\", \"thumbWidth\": \"\", \"mode\": \"\", \"timeout\": \"\", \"height\": \"\", \"scale\": \"\", \"scroll\": \"\", \"landscape\": \"\", \"width\": \"\", \"errorsOutputFormat\": \"\", \"fullPage\": \"\", \"touchScreen\": \"\", \"retina\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"website-screenshot3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Website Screenshot",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The target website's url.",
                    "default": "google.com"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Image output type. Acceptable values: jpg | png pdf. Default: jpg",
                    "default": ""
                },
                {
                    "name": "ua",
                    "type": "STRING",
                    "description": "The 'User-Agent' header string.",
                    "default": ""
                },
                {
                    "name": "mobile",
                    "type": "STRING",
                    "description": "If specified, emulates mobile device.",
                    "default": ""
                },
                {
                    "name": "noJs",
                    "type": "STRING",
                    "description": "If specified, disables JS.",
                    "default": ""
                },
                {
                    "name": "imageOutputFormat",
                    "type": "STRING",
                    "description": "Response output format. Acceptable values: image | base64. Default: image",
                    "default": ""
                },
                {
                    "name": "quality",
                    "type": "STRING",
                    "description": "Image quality. (only for jpg type). Acceptable values: 40 < quality < 99. Default: jpg",
                    "default": ""
                },
                {
                    "name": "delay",
                    "type": "STRING",
                    "description": "Custom delay (ms) before screen capture. Acceptable values: 0 < delay < 10000 ms. Default: 250",
                    "default": ""
                },
                {
                    "name": "thumbWidth",
                    "type": "STRING",
                    "description": "Image thumb width (px). Acceptable values: 50 < thumbWidth < width param value. Default: 0",
                    "default": ""
                },
                {
                    "name": "mode",
                    "type": "STRING",
                    "description": "fast - waiting for the document.load event. slow - waiting for network idle event. Default: fast",
                    "default": ""
                },
                {
                    "name": "timeout",
                    "type": "STRING",
                    "description": "Custom timeout (ms) for page loading. Acceptable values: 1000 < timeout < 30000 ms. Default: 15000",
                    "default": ""
                },
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "Image height (px). Acceptable values: 100 < width < 3000. Default: 600",
                    "default": ""
                },
                {
                    "name": "scale",
                    "type": "STRING",
                    "description": "deviceScaleFactor value for the emulator. Acceptable values: 0.5 < scale < 4.0. Default: 1.0",
                    "default": ""
                },
                {
                    "name": "scroll",
                    "type": "STRING",
                    "description": "If specified, scrolls down and up (useful for fullpage screenshots).",
                    "default": ""
                },
                {
                    "name": "landscape",
                    "type": "STRING",
                    "description": "If specified, renders page in landscape mode (useful for smartphone emulation).",
                    "default": ""
                },
                {
                    "name": "width",
                    "type": "STRING",
                    "description": "Image width (px). Acceptable values: 100 < width < 3000. Default: 800",
                    "default": ""
                },
                {
                    "name": "errorsOutputFormat",
                    "type": "STRING",
                    "description": "Errors output format. Acceptable values: JSON | XML. Default: JSON",
                    "default": ""
                },
                {
                    "name": "fullPage",
                    "type": "STRING",
                    "description": "If specified, makes full-page screenshot.",
                    "default": ""
                },
                {
                    "name": "touchScreen",
                    "type": "STRING",
                    "description": "If specified, emulates device with a touch screens.",
                    "default": ""
                },
                {
                    "name": "retina",
                    "type": "STRING",
                    "description": "If specified, emulates retina display.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the Instagram ID for the user \"new_user123\".",
        "model_answer": "requests.get(\"https://instagram174.p.rapidapi.com/api/v1/user/instagram/id\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"instagram174.p.rapidapi.com\"}, params={\"username\": \"new_user123\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Get information from Instagram reliably",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram174.p.rapidapi.com/api/v1/user/instagram/id'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram174.p.rapidapi.com/api/v1/user/instagram/id\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instagram174.p.rapidapi.com/api/v1/user/instagram/id"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instagram174.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram174.p.rapidapi.com/api/v1/user/instagram/id\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram174.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram_v7",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "default": "instagram"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve live data for the ASIN B09DKV849B from the Amazon Live Data API in the US marketplace and return the response?",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "123goal.info",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://123caca.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://123caca.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://123caca.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"123caca.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "123CACA",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to check the liquidation data from Binance using the Liquidation Report API and log the output?",
        "model_answer": "requests.get(\"https://liquidation-report.p.rapidapi.com/lickhunterpro\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"liquidation-report.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Crypto liquidation tracking and reporting system. Aggregate data from exchange like Binance, Bybit & OKX",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://liquidation-report.p.rapidapi.com/lickhunterpro'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://liquidation-report.p.rapidapi.com/lickhunterpro\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://liquidation-report.p.rapidapi.com/lickhunterpro\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"liquidation-report.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Liquidation Report",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the latest Covid-19 statistics for Argentina.",
        "model_answer": "requests.get(\"https://trinidad-covid-19-statistics.p.rapidapi.com/latestday\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"trinidad-covid-19-statistics.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "This API provides Covid-19 statistics by year, month, day and most recent day in Trinidad and Tobago",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://trinidad-covid-19-statistics.p.rapidapi.com/latestday'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://trinidad-covid-19-statistics.p.rapidapi.com/latestday\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://trinidad-covid-19-statistics.p.rapidapi.com/latestday\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"trinidad-covid-19-statistics.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Trinidad Covid 19 Statistics",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with a Python function call to get the list of Steam games on special offers in the US region, starting from the first game, and retrieving 5 games per page?",
        "model_answer": "requests.get(\"https://steamgames-special-offers.p.rapidapi.com/games_list/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"steamgames-special-offers.p.rapidapi.com\"}, params={\"region\": \"US\", \"start\": \"0\", \"count\": \"5\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Get Steam Games List and Data that are on Special Discounted Offers. \nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://steamgames-special-offers.p.rapidapi.com/games_list/'\nquerystring = {\"region\": \"\", \"start\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://steamgames-special-offers.p.rapidapi.com/games_list/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://steamgames-special-offers.p.rapidapi.com/games_list/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "steamgames-special-offers.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "region": "US",
                            "start": "0",
                            "count": "5"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://steamgames-special-offers.p.rapidapi.com/games_list/\"\nquerystring = {\"region\": \"US\", \"start\": \"0\", \"count\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"steamgames-special-offers.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SteamGames Special offers",
            "api_arguments_original": [
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "",
                    "default": "US"
                },
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to search for videos on YouTube with the keyword \"machine learning\" and sort them by relevance.",
        "model_answer": "requests.get(\"https://youtube-v3-lite.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"youtube-v3-lite.p.rapidapi.com\"}, params={\"channelId\": \"UCAuUUnT6oDeKwE6v1NGQxug\", \"part\": \"id,snippet\", \"type\": \"video\", \"order\": \"date\", \"q\": \"machine learning\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Lite version of Youtube Data API v3. Get Youtube data without any Youtube api key",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-v3-lite.p.rapidapi.com/search'\nquerystring = {\"channelId\": \"\", \"part\": \"\", \"type\": \"\", \"order\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-v3-lite.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://youtube-v3-lite.p.rapidapi.com/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "youtube-v3-lite.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "channelId": "UCAuUUnT6oDeKwE6v1NGQxug",
                            "part": "id,snippet",
                            "type": "video",
                            "order": "date",
                            "q": "machine learning"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-v3-lite.p.rapidapi.com/search\"\nquerystring = {\"type\": \"\", \"order\": \"\", \"channelId\": \"UCAuUUnT6oDeKwE6v1NGQxug\", \"part\": \"id,snippet\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v3-lite.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Youtube v3 Lite",
            "api_arguments_original": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Channel id.",
                    "default": "UCAuUUnT6oDeKwE6v1NGQxug"
                },
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "",
                    "default": "id,snippet"
                },
                {
                    "name": "type",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "ENUM",
                    "description": "Sort parameter:\n\n- `date` [default]\n- `viewCount`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please send a connection request to the following LinkedIn profiles: profile1URL, profile2URL, profile3URL? I would like to use the message \"Hello [target_name], I would love to connect with you.\", provide a cookie value of \"ABCDEF\", an email address of \"example@gmail.com\", and use the key \"9gZJadaH4r\" for authentication.",
        "model_answer": "requests.get(\"https://linkedin-outreach.p.rapidapi.com/send-requests/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"linkedin-outreach.p.rapidapi.com\"}, params={\"urls\": \"profile1URL,profile2URL,profile3URL\", \"message\": \"Hello [target_name], I would love to connect with you.\", \"cookie\": \"ABCDEF\", \"email\": \"example@gmail.com\", \"key\": \"9gZJadaH4r\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Automate Outreach on Linkedin with ease! Extract search results, Find LinkedIn profile URLs, Scrape LinkedIn profiles etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://linkedin-outreach.p.rapidapi.com/send-requests/'\nquerystring = {\"urls\": \"\", \"message\": \"\", \"cookie\": \"\", \"email\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://linkedin-outreach.p.rapidapi.com/send-requests/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://linkedin-outreach.p.rapidapi.com/send-requests/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "linkedin-outreach.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "urls": "profile1URL,profile2URL,profile3URL",
                            "message": "Hello [target_name], I would love to connect with you.",
                            "cookie": "ABCDEF",
                            "email": "example@gmail.com",
                            "key": "9gZJadaH4r"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://linkedin-outreach.p.rapidapi.com/send-requests/\"\nquerystring = {\"urls\": \"\", \"message\": \"Hello !\", \"cookie\": \"AQEDAT8o77sA5oINAAABhWMFjJcAAAGFhxIQl00AyXE9APCZSG8AMGX7XtruKSB69ICj9e1iau7FwJPZY3PrB7xaAtDscX21Oe79Vo6GwuU8iLhotFq7cRfrB9JdslzXQyxSyr1_lyZHDGHZ5\", \"email\": \"\", \"key\": \"9gZJadaH4r\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linkedin-outreach.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LinkedIn Outreach",
            "api_arguments_original": [
                {
                    "name": "urls",
                    "type": "STRING",
                    "description": "URLs of the people you wish to send requests, Please insert a insert a string of 10 URLs separated by comma. Example :    URL1, URL2, URL3, ....... , URL10  ",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The message you will leave while sending request.  You can customize the message by using variables. For example, \\\"Hello [target_name],  would love to connect with you.\\\" is the message you want to send, here target_name is a variable, written in squared brackets '[]'. Assuming the target's name is John Wick then the resulting string will be, \\\"Hello John Wick, would love to connect with you.\\\"\nNote: Please take care of the spelling while adding the variable(s).",
                    "default": "Hello !"
                },
                {
                    "name": "cookie",
                    "type": "STRING",
                    "description": "The value of cookie named \\\"li_at\\\".\nNote: The above value is just a sample. To get the value actual value of the cookie , please follow the document link given.",
                    "default": "AQEDAT8o77sA5oINAAABhWMFjJcAAAGFhxIQl00AyXE9APCZSG8AMGX7XtruKSB69ICj9e1iau7FwJPZY3PrB7xaAtDscX21Oe79Vo6GwuU8iLhotFq7cRfrB9JdslzXQyxSyr1_lyZHDGHZ5"
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "The email where you will receive the results of connection requests' status.",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "",
                    "default": "9gZJadaH4r"
                }
            ]
        }
    },
    {
        "query": "I want to search for historical events related to the French Revolution.",
        "model_answer": "requests.get(\"https://historical-events-by-api-ninjas.p.rapidapi.com/v1/historicalevents\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"historical-events-by-api-ninjas.p.rapidapi.com\"}, params={\"text\": \"French Revolution\"})",
        "original": {
            "domain": "Events",
            "framework": "RapidAPI",
            "functionality": "Search through the most famous events in history. See more info at https://api-ninjas.com/api/historicalevents.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://historical-events-by-api-ninjas.p.rapidapi.com/v1/historicalevents'\nquerystring = {\"text\": \"\", \"month\": \"\", \"day\": \"\", \"year\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://historical-events-by-api-ninjas.p.rapidapi.com/v1/historicalevents\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://historical-events-by-api-ninjas.p.rapidapi.com/v1/historicalevents"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "historical-events-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "text": "French Revolution"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://historical-events-by-api-ninjas.p.rapidapi.com/v1/historicalevents\"\nquerystring = {\"text\": \"roman empire\", \"month\": \"\", \"day\": \"\", \"year\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"historical-events-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Historical Events by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "query text to search events by. Use keywords or short phrases for best match results.",
                    "default": "roman empire"
                },
                {
                    "name": "month",
                    "type": "NUMBER",
                    "description": "integer month (e.g. 3 for March).",
                    "default": ""
                },
                {
                    "name": "day",
                    "type": "NUMBER",
                    "description": "calendar day of the month.",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "4-digit year (e.g. 1776). For BC/BCE years, use a negative integer (e.g. -351 for 351 BC).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "number of results to offset (for pagination).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Perform sentiment analysis on the text \"I hate this book!\" in English using Google's BERT Sentiment Analysis API.",
        "model_answer": "requests.get(\"https://googles-bert-sentiment-analysis.p.rapidapi.com/sentiment\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"googles-bert-sentiment-analysis.p.rapidapi.com\"}, params={\"text\": \"I hate this book!\", \"lang\":\"en\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "The BERT-Based Sentiment Analysis API is a cutting-edge tool that leverages Google's BERT (Bidirectional Encoder Representations from Transformers) model to perform accurate sentiment analysis on text data. BERT is a state-of-the-art language representation model that excels in understanding context and nuances, making it highly effective for sentiment classification tasks. This API provides developers with the ability to harness the power of BERT for robust and precise sentiment analysis.\n\nS...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://googles-bert-sentiment-analysis.p.rapidapi.com/sentiment'\nquerystring = {\"text\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://googles-bert-sentiment-analysis.p.rapidapi.com/sentiment\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://googles-bert-sentiment-analysis.p.rapidapi.com/sentiment"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "googles-bert-sentiment-analysis.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "text": "I hate this book!",
                            "lang": "en"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://googles-bert-sentiment-analysis.p.rapidapi.com/sentiment\"\nquerystring = {\"lang\": \"id\", \"text\": \"wah rumahnya bagus ya, tapi kok halamannya kotor sih?\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"googles-bert-sentiment-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google's BERT Sentiment Analysis",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "wah rumahnya bagus ya, tapi kok halamannya kotor sih?"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                }
            ]
        }
    },
    {
        "query": "Please provide the names of Allah with Arabic as well as English words and their explanations and benefits.",
        "model_answer": "requests.get(\"https://allah-name.p.rapidapi.com/name\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"allah-name.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "99 name of Allah with Arabic as well as English word and with explanation and benefit",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://allah-name.p.rapidapi.com/name'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://allah-name.p.rapidapi.com/name\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://allah-name.p.rapidapi.com/name"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "allah-name.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://allah-name.p.rapidapi.com/name\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"allah-name.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Allah Name",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me find train trips from Berlin to Munich on February 16, 2022?",
        "model_answer": "requests.get(\"https://deutsche-bahn1.p.rapidapi.com/trips\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"deutsche-bahn1.p.rapidapi.com\"}, params={\"from_id\": \"008011201\", \"to_id\": \"008011155\", \"date\": \"16.02.2022\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Search stations and trips within Deutsche Bahn network. Find a train or public transport stop, search trains, trams, subway, and buses between two stations in the german railway network.. Get journey and fare data, departure and arrival times for any stop in Germany",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://deutsche-bahn1.p.rapidapi.com/trips'\nquerystring = {\"date\": \"\", \"from_id\": \"\", \"passenger0_age\": \"\", \"time\": \"\", \"to_id\": \"\", \"passenger3_age\": \"\", \"passenger2_discount\": \"\", \"passenger4_discount\": \"\", \"passenger1_discount\": \"\", \"passenger3_discount\": \"\", \"passenger2_age\": \"\", \"passenger0_discount\": \"\", \"passenger4_age\": \"\", \"passenger1_age\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://deutsche-bahn1.p.rapidapi.com/trips\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://deutsche-bahn1.p.rapidapi.com/trips"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "deutsche-bahn1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "from_id": "008011201",
                            "to_id": "008011155",
                            "date": "16.02.2022"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://deutsche-bahn1.p.rapidapi.com/trips\"\nquerystring = {\"passenger3_age\": \"\", \"passenger2_discount\": \"\", \"passenger4_discount\": \"\", \"date\": \"16.02.2022\", \"passenger1_discount\": \"\", \"passenger3_discount\": \"\", \"from_id\": \"008011201\", \"passenger2_age\": \"\", \"passenger0_discount\": \"\", \"passenger4_age\": \"\", \"passenger0_age\": \"45\", \"time\": \"09:00\", \"passenger1_age\": \"\", \"to_id\": \"008011155\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"deutsche-bahn1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Deutsche Bahn",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "Travel date in format DD.MM.YYYY",
                    "default": "16.02.2022"
                },
                {
                    "name": "from_id",
                    "type": "STRING",
                    "description": "Departure id",
                    "default": "008011201"
                },
                {
                    "name": "passenger0_age",
                    "type": "NUMBER",
                    "description": "Age of the first passenger",
                    "default": "45"
                },
                {
                    "name": "time",
                    "type": "TIME (24-hour HH:MM)",
                    "description": "Travel time",
                    "default": "09:00"
                },
                {
                    "name": "to_id",
                    "type": "STRING",
                    "description": "Arrival id",
                    "default": "008011155"
                },
                {
                    "name": "passenger3_age",
                    "type": "NUMBER",
                    "description": "Age of the fourth passenger",
                    "default": ""
                },
                {
                    "name": "passenger2_discount",
                    "type": "ENUM",
                    "description": "Discount of the third passenger",
                    "default": ""
                },
                {
                    "name": "passenger4_discount",
                    "type": "ENUM",
                    "description": "Discount of the fifth passenger",
                    "default": ""
                },
                {
                    "name": "passenger1_discount",
                    "type": "ENUM",
                    "description": "Discount of the second passenger",
                    "default": ""
                },
                {
                    "name": "passenger3_discount",
                    "type": "ENUM",
                    "description": "Discount of the fourth passenger",
                    "default": ""
                },
                {
                    "name": "passenger2_age",
                    "type": "NUMBER",
                    "description": "Age of the third passenger",
                    "default": ""
                },
                {
                    "name": "passenger0_discount",
                    "type": "ENUM",
                    "description": "Discount of the first passenger",
                    "default": ""
                },
                {
                    "name": "passenger4_age",
                    "type": "NUMBER",
                    "description": "Age of the fifth passenger",
                    "default": ""
                },
                {
                    "name": "passenger1_age",
                    "type": "NUMBER",
                    "description": "Age of the second passenger",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please check the status of the API \"MOVIE DETAILS 0822202124848\" and return the response?",
        "model_answer": "requests.get(\"https://daily-ovrll-0822202124848.p.rapidapi.com/status/200\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"daily-ovrll-0822202124848.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "DAILY OVRLL 9hlhjjvr20210822114848856",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://daily-ovrll-0822202124848.p.rapidapi.com/status/200'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://daily-ovrll-0822202124848.p.rapidapi.com/status/200\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://daily-ovrll-0822202124848.p.rapidapi.com/status/200"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "daily-ovrll-0822202124848.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://daily-ovrll-0822202124848.p.rapidapi.com/status/200\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"daily-ovrll-0822202124848.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DAILY OVRLL 0822202124848",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please fetch the profile information for the Instagram user \"example_user\" using the provided API.",
        "model_answer": "requests.get(\"https://instagram120.p.rapidapi.com/api/instagram/hls\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"instagram120.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Fetch any data from Instagram: photo and video links, profile info, stories, highlights. Uptime 97%. Best price for 500k requests!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram120.p.rapidapi.com/api/instagram/hls'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram120.p.rapidapi.com/api/instagram/hls\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instagram120.p.rapidapi.com/api/instagram/hls"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instagram120.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram120.p.rapidapi.com/api/instagram/hls\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram120.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "instagram_v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with a Python function call to pronounce the word \"python\" using the API.",
        "model_answer": "requests.get(\"https://thefluentme.p.rapidapi.com/post/P36288\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"thefluentme.p.rapidapi.com\", \"params\":{\"post_id\": \"python\"}})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "The AI-powered language pronunciation API with ChatGPT",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://thefluentme.p.rapidapi.com/post/P36288'\nquerystring = {\"post_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://thefluentme.p.rapidapi.com/post/P36288\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"post_id\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://thefluentme.p.rapidapi.com/post/P36288\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thefluentme.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "thefluentme",
            "api_arguments_original": [
                {
                    "name": "post_id",
                    "type": "string",
                    "description": "",
                    "default": "P36288"
                }
            ]
        }
    },
    {
        "query": "I want to make a sample map for my app using the New Client API from RapidAPI.",
        "model_answer": "requests.get(\"https://new-client.p.rapidapi.com/njajal\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"new-client.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Make sample map for app",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://new-client.p.rapidapi.com/njajal'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://new-client.p.rapidapi.com/njajal\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://new-client.p.rapidapi.com/njajal"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "new-client.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://new-client.p.rapidapi.com/njajal\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"new-client.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "New Client",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the walk, transit, and bike scores for a specific Zillow property with the ZPID \"98765432\"?",
        "model_answer": "requests.get(\"https://zillow69.p.rapidapi.com/walkTransitBikeScores\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"zillow69.p.rapidapi.com\"}, params={\"zpid\": \"98765432\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Fast and highly available API. For-sale, rental listings and agens real-time data from Zillow.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://zillow69.p.rapidapi.com/walkTransitBikeScores'\nquerystring = {\"zpid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://zillow69.p.rapidapi.com/walkTransitBikeScores\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://zillow69.p.rapidapi.com/walkTransitBikeScores"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "zillow69.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://zillow69.p.rapidapi.com/walkTransitBikeScores\"\nquerystring = {\"zpid\": \"20485700\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"zillow69.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Zillow",
            "api_arguments_original": [
                {
                    "name": "zpid",
                    "type": "STRING",
                    "description": "",
                    "default": "20485700"
                }
            ]
        }
    },
    {
        "query": "I want to check if the email address test@example.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"test@example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Misc useful API for software engineers and others.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://utile-space.p.rapidapi.com/health'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://utile-space.p.rapidapi.com/health\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://utile-space.p.rapidapi.com/health\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"utile-space.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "utile-space",
            "api_arguments_original": []
        }
    },
    {
        "query": "Retrieve the followings of user with userId 24579833 on Twitter and set the count parameter to 50.",
        "model_answer": "requests.get(\"https://twitter-aio.p.rapidapi.com/user/24579833/followings\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"twitter-aio.p.rapidapi.com\"}, params={\"cursor\": \"\", \"count\": \"50\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Access real-time data as soon as it's posted! With the Twitter AIO API, you can retrieve tweets, spaces, media and profiles instantly. Say goodbye to expensive fees charged by Twitter while still getting access to all the available data.\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitter-aio.p.rapidapi.com/user/44196397/followings'\nquerystring = {\"userId\": \"\", \"cursor\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitter-aio.p.rapidapi.com/user/44196397/followings\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://twitter-aio.p.rapidapi.com/user/24579833/followings"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "twitter-aio.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "cursor": "",
                            "count": "50"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitter-aio.p.rapidapi.com/user/44196397/followings\"\nquerystring = {\"cursor\": \"\", \"count\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitter-aio.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Twitter AIO",
            "api_arguments_original": [
                {
                    "name": "userId",
                    "type": "string",
                    "description": "The userId of the user. You can get it by converting a username to the userId or by searching a user and extracting the restId.",
                    "default": "44196397"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "At the end of the entries array you'll find two objects with the type TimelineTimelineCursor. There is one cursor to go up (Top) and one for going down (bottom) the list. You just need to provide the value as the cursor parameter to get the next page of the pagination.",
                    "default": ""
                },
                {
                    "name": "count",
                    "type": "STRING",
                    "description": "The default count is 20. You can specify a custom one here.",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to get pricing and flight itineraries information on Skyscanner using the RapidAPI? Please include the necessary API key in the headers and set the 'm' parameter to 10 and the 'token' parameter to 'API_KEY'.",
        "model_answer": "requests.get(\"https://skyscanner-flights.p.rapidapi.com/results\", headers={\"X-RapidAPI-Key\": \"API_KEY\",\"X-RapidAPI-Host\":\"skyscanner-flights.p.rapidapi.com\"}, params={\"m\":\"10\", \"token\":\"API_KEY\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Pricing and flight itineraries information on Skyscanner.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://skyscanner-flights.p.rapidapi.com/results'\nquerystring = {\"m\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://skyscanner-flights.p.rapidapi.com/results\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://skyscanner-flights.p.rapidapi.com/results"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "API_KEY",
                            "X-RapidAPI-Host": "skyscanner-flights.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "m": "10",
                            "token": "API_KEY"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://skyscanner-flights.p.rapidapi.com/results\"\nquerystring = {\"m\": \"5\", \"token\": \"API_KEY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"skyscanner-flights.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Skyscanner Flights",
            "api_arguments_original": [
                {
                    "name": "m",
                    "type": "STRING",
                    "description": "",
                    "default": "5"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": "API_KEY"
                }
            ]
        }
    },
    {
        "query": "I want to get the image of the manga with the ID \"bd5d2f3d7ae7cb74845df888\".",
        "model_answer": "requests.get(\"https://mangaverse-api.p.rapidapi.com/manga/image\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"mangaverse-api.p.rapidapi.com\"}, params={\"id\":\"bd5d2f3d7ae7cb74845df888\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Unleash the World of Manga with MangaVerse API!  Discover a captivating universe of manga from Japan, Korea, and China, all conveniently translated into English. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mangaverse-api.p.rapidapi.com/manga/image'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mangaverse-api.p.rapidapi.com/manga/image\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://mangaverse-api.p.rapidapi.com/manga/image"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "mangaverse-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mangaverse-api.p.rapidapi.com/manga/image\"\nquerystring = {\"id\": \"6486b7937ae7cb74845df888\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mangaverse-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MangaVerse API",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "6486b7937ae7cb74845df888"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me the current weather alerts in English for the location with ID 6a3b4ed8-ef42-4e29-b91c-d0a4db08423e?",
        "model_answer": "requests.get(\"https://kayuloweather.p.rapidapi.com/weatherAlert/en/6a3b4ed8-ef42-4e29-b91c-d0a4db08423e\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"kayuloweather.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "[DISCOUNT] Weather forecasts to the minute, weather alerts, historical data and astronomy data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kayuloweather.p.rapidapi.com/weatherAlert/en/5c7a120c-473f-57be-af23-5c847c847a00'\nquerystring = {\"language\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kayuloweather.p.rapidapi.com/weatherAlert/en/5c7a120c-473f-57be-af23-5c847c847a00\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://kayuloweather.p.rapidapi.com/weatherAlert/en/6a3b4ed8-ef42-4e29-b91c-d0a4db08423e"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "kayuloweather.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kayuloweather.p.rapidapi.com/weatherAlert/en/5c7a120c-473f-57be-af23-5c847c847a00\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kayuloweather.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "KayuloWeather",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The IETF BCP 47 language tag to use for localizing responses.",
                    "default": "en"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The unique identifier for the weather alert.",
                    "default": "5c7a120c-473f-57be-af23-5c847c847a00"
                }
            ]
        }
    },
    {
        "query": "What is the equivalent word for the number 98765432.10 in USD, considering USA's locale?",
        "model_answer": "requests.get(\"https://number2words4.p.rapidapi.com/v1/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"number2words4.p.rapidapi.com\"}, params={\"language\": \"EN\", \"number\": \"98765432.10\", \"locale\": \"USA\", \"units\": \"cent\", \"currency\": \"dollar\", \"output\": \"text\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Convert any digit's number into the equivalent words",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://number2words4.p.rapidapi.com/v1/'\nquerystring = {\"language\": \"\", \"number\": \"\", \"locale\": \"\", \"units\": \"\", \"currency\": \"\", \"output\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://number2words4.p.rapidapi.com/v1/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://number2words4.p.rapidapi.com/v1/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "number2words4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://number2words4.p.rapidapi.com/v1/\"\nquerystring = {\"language\": \"EN\", \"number\": \"98765432.10\", \"locale\": \"USA\", \"units\": \"cent\", \"currency\": \"dollar\", \"output\": \"text\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"number2words4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Number2Words",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "EN"
                },
                {
                    "name": "number",
                    "type": "NUMBER",
                    "description": "",
                    "default": "98765432.10"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": "USA"
                },
                {
                    "name": "units",
                    "type": "STRING",
                    "description": "",
                    "default": "cent"
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "",
                    "default": "dollar"
                },
                {
                    "name": "output",
                    "type": "STRING",
                    "description": "",
                    "default": "text"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to download an Instagram media using the following URL: \"https://www.instagram.com/p/CQNuGCnBIk0/\"?",
        "model_answer": "requests.get(\"https://instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com\"}, params={\"url\": \"https://www.instagram.com/p/CQNuGCnBIk0/\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Downlaod All Instagram Media Including Stories , Reels, Videos and many more, Using Single URL.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com/\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram Downloader - Download Videos, Reels, Stories 2023",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to stream the live football match with matchid 456.",
        "model_answer": "requests.get(\"https://football-live-stream-api.p.rapidapi.com/stream.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"football-live-stream-api.p.rapidapi.com\"}, params={\"matchid\": \"456\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Live Football Streaming HD",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://football-live-stream-api.p.rapidapi.com/stream.php'\nquerystring = {\"matchid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://football-live-stream-api.p.rapidapi.com/stream.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://football-live-stream-api.p.rapidapi.com/stream.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "football-live-stream-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://football-live-stream-api.p.rapidapi.com/stream.php\"\nquerystring = {\"matchid\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"football-live-stream-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Football Live Stream Api",
            "api_arguments_original": [
                {
                    "name": "matchid",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you generate a QR code for the text \"Welcome to our website\" with a foreground color of \"#FF0000\" and a background color of \"#FFFFFF\"?",
        "model_answer": "requests.get(\"https://qr-code-generator20.p.rapidapi.com/generateadvanceimage\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qr-code-generator20.p.rapidapi.com\"}, params={\"data\": \"Welcome to our website\", \"foreground_color\": \"#FF0000\", \"background_color\": \"#FFFFFF\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "QR code generator API. Dynamically generate QR codes and get an image in multiple formats.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-code-generator20.p.rapidapi.com/generateadvanceimage'\nquerystring = {\"data\": \"\", \"foreground_color\": \"\", \"background_color\": \"\", \"size\": \"\", \"margin\": \"\", \"label\": \"\", \"label_size\": \"\", \"label_alignment\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-code-generator20.p.rapidapi.com/generateadvanceimage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://qr-code-generator20.p.rapidapi.com/generateadvanceimage"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "qr-code-generator20.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "data": "Welcome to our website",
                            "foreground_color": "#FF0000",
                            "background_color": "#FFFFFF"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-code-generator20.p.rapidapi.com/generateadvanceimage\"\nquerystring = {\"foreground_color\": \"FF2400\", \"background_color\": \"00DBFF\", \"size\": \"500\", \"margin\": \"10\", \"data\": \"1234\", \"label\": \"My label\", \"label_size\": \"20\", \"label_alignment\": \"center\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-generator20.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR Code Generator",
            "api_arguments_original": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "1234"
                },
                {
                    "name": "foreground_color",
                    "type": "STRING",
                    "description": "",
                    "default": "FF2400"
                },
                {
                    "name": "background_color",
                    "type": "STRING",
                    "description": "",
                    "default": "00DBFF"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "",
                    "default": "500"
                },
                {
                    "name": "margin",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                },
                {
                    "name": "label",
                    "type": "STRING",
                    "description": "",
                    "default": "My label"
                },
                {
                    "name": "label_size",
                    "type": "NUMBER",
                    "description": "",
                    "default": "20"
                },
                {
                    "name": "label_alignment",
                    "type": "STRING",
                    "description": "",
                    "default": "center"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the 7-day weather forecast for latitude 30.2672 and longitude -97.7431 in Spanish?",
        "model_answer": "requests.get(\"https://weather-forecast-14-days.p.rapidapi.com/api/getforecastdata\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"weather-forecast-14-days.p.rapidapi.com\"}, params={\"LAT\": \"30.2672\", \"LON\": \"-97.7431\", \"LANG\": \"es\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "weather forecast world wide  14 days 6hourly",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weather-forecast-14-days.p.rapidapi.com/api/getforecastdata'\nquerystring = {\"LAT\": \"\", \"LON\": \"\", \"LANG\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weather-forecast-14-days.p.rapidapi.com/api/getforecastdata\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://weather-forecast-14-days.p.rapidapi.com/api/getforecastdata"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "weather-forecast-14-days.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "LAT": "30.2672",
                            "LON": "-97.7431",
                            "LANG": "es"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weather-forecast-14-days.p.rapidapi.com/api/getforecastdata\"\nquerystring = {\"LANG\": \"en\", \"LAT\": \"51.5\", \"LON\": \"-0.6\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weather-forecast-14-days.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "weather forecast 14 days",
            "api_arguments_original": [
                {
                    "name": "LAT",
                    "type": "NUMBER",
                    "description": "Latitude",
                    "default": "51.5"
                },
                {
                    "name": "LON",
                    "type": "NUMBER",
                    "description": "Longitude",
                    "default": "-0.6"
                },
                {
                    "name": "LANG",
                    "type": "STRING",
                    "description": "Language [en,de,nl,fr,pl,gr,it,cn,ru,cz,pt,es]",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please check if the email address example@example.com is valid.",
        "model_answer": "requests.get(\"https://apilayer-mailboxlayer-v1.p.rapidapi.com/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"apilayer-mailboxlayer-v1.p.rapidapi.com\"}, params={\"email\": \"example@example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Simple and powerful email verification JSON API using SMTP, typo checks, syntax validation, and free and disposable provider filtering.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://apilayer-mailboxlayer-v1.p.rapidapi.com/check'\nquerystring = {\"email\": \"\", \"catch_all\": \"\", \"smtp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://apilayer-mailboxlayer-v1.p.rapidapi.com/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://apilayer-mailboxlayer-v1.p.rapidapi.com/check"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "apilayer-mailboxlayer-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://apilayer-mailboxlayer-v1.p.rapidapi.com/check\"\nquerystring = {\"email\": \"\", \"catch_all\": \"0\", \"smtp\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"apilayer-mailboxlayer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "mailboxlayer",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "the email address to be validated",
                    "default": ""
                },
                {
                    "name": "catch_all",
                    "type": "NUMBER",
                    "description": "Set to \"0\" (default) to turn off Catch-all detection, set to \"1\" to turn on Catch-all detection",
                    "default": "0"
                },
                {
                    "name": "smtp",
                    "type": "NUMBER",
                    "description": "Set to \"0\" to turn off SMTP check, set to \"1\" (default) to turn on SMTP check",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to generate a QR code for the URL \"https://example.com\" using the URL Shortener API.",
        "model_answer": "requests.get(\"https://url-shortener25.p.rapidapi.com/short-urls\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"url-shortener25.p.rapidapi.com\"}, params={\"url\": \"https://example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "URL Shortener with free QR Code generation, tracking features and more. Backed by ultra fast CDN and Hosting.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://url-shortener25.p.rapidapi.com/short-urls/j95Aj/visits'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://url-shortener25.p.rapidapi.com/short-urls/j95Aj/visits\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://url-shortener25.p.rapidapi.com/short-urls"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "url-shortener25.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://url-shortener25.p.rapidapi.com/short-urls/j95Aj/visits\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"url-shortener25.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "URL Shortener",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "",
                    "default": "j95Aj"
                }
            ]
        }
    },
    {
        "query": "I want to check if the email address example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://swagger-petstore8.p.rapidapi.com/user/string'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://swagger-petstore8.p.rapidapi.com/user/string\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://swagger-petstore8.p.rapidapi.com/user/string\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"swagger-petstore8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Swagger PetStore",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The name that needs to be fetched. Use user1 for testing. ",
                    "default": "string"
                }
            ]
        }
    },
    {
        "query": "Can you get me the betting status for Pinnacle Odds API? Please provide the Python function call and also mention the key-value pairs for the headers.",
        "model_answer": "requests.get(\"https://pinnacle-odds.p.rapidapi.com/kit/v1/betting-status\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pinnacle-odds.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Pinnacle Sport API is a RESTful service for getting pre-match and live odds. Historical odds, score and results. Updates without delay. Sports: Soccer, tennis, basketball, hockey, american football, MMA, baseball. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pinnacle-odds.p.rapidapi.com/kit/v1/betting-status'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pinnacle-odds.p.rapidapi.com/kit/v1/betting-status\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pinnacle-odds.p.rapidapi.com/kit/v1/betting-status"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pinnacle-odds.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pinnacle-odds.p.rapidapi.com/kit/v1/betting-status\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pinnacle-odds.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pinnacle Odds",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the list of regions for the AI News - Global API and print the output?",
        "model_answer": "requests.get(\"https://ai-news-global.p.rapidapi.com/get_regions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ai-news-global.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Global News produced by AI",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ai-news-global.p.rapidapi.com/get_regions'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ai-news-global.p.rapidapi.com/get_regions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ai-news-global.p.rapidapi.com/get_regions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-news-global.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AI News - Global",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if an email address johndoe@gmail.com is valid.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"johndoe@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "0MMO ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://0mmo.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://0mmo.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "johndoe@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://0mmo.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"0mmo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "0MMO",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if this photo is live and genuine using the Face Liveness Check API. The photo has a request ID of \"1234-5678-abcd-efgh\".",
        "model_answer": "requests.get(\"https://face-liveness-check.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"face-liveness-check.p.rapidapi.com\"}, params={\"request_id\": \"1234-5678-abcd-efgh\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Check if the selfie your users take is indeed live, optimally clicked to save in your records, if there are multiple faces detected in the image, and what percentage of the image does the face actually cover.  Face liveness detection helps you uncover frauds by ensuring that the image you have been provided isn\u2019t a picture of a picture, a passport sized image, or an image of another individual on a cell phone / laptop screen.  Pair it to the Face Compare API to have complete confidence that t...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://face-liveness-check.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://face-liveness-check.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://face-liveness-check.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "face-liveness-check.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://face-liveness-check.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-liveness-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Face liveness check",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Please validate the given CNPJ number '12.345.678/0001-90' using the CNPJ Validator API.",
        "model_answer": "requests.get(\"https://cnpj-validator.p.rapidapi.com/generate/cnpj\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cnpj-validator.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Validates Brazilian CNPJ numbers. It can also generate random, valid numbers.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cnpj-validator.p.rapidapi.com/generate/cnpj'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cnpj-validator.p.rapidapi.com/generate/cnpj\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://cnpj-validator.p.rapidapi.com/generate/cnpj"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "cnpj-validator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cnpj-validator.p.rapidapi.com/generate/cnpj\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cnpj-validator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CNPJ Validator",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve the list of available time slots for a specific bookable item ID from the Sagenda v3 API.",
        "model_answer": "requests.get(\"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems/{bookable_item_id}/timeSlots\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Events",
            "framework": "RapidAPI",
            "functionality": "We are now hosted on PostMan : https://documenter.getpostman.com/view/3283093/SW7aXT2M?version=latest",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems/{bookable_item_id}/timeSlots"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "sagenda-sagenda-v3-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sagenda v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to search for pornstars with the query \"sasha grey\" and get their profile images in base64 format.",
        "model_answer": "requests.get(\"https://quality-porn.p.rapidapi.com/pornstar/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"quality-porn.p.rapidapi.com\"}, params={\"query\": \"sasha grey\", \"responseProfileImageBase64\": \"1\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "JSON search API for best free porn videos and pornstars gathered from the most popular porn sites. Filter by terms, quality and specific types and preferences.\nAdult, NSFW, Porn, Nudes, Pornstars as JSON",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quality-porn.p.rapidapi.com/pornstar/search'\nquerystring = {\"query\": \"\", \"responseImagesBase64\": \"\", \"responseImages\": \"\", \"responseProfileImageBase64\": \"\", \"responseProfileImage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quality-porn.p.rapidapi.com/pornstar/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://quality-porn.p.rapidapi.com/pornstar/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "quality-porn.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "query": "sasha grey",
                            "responseProfileImageBase64": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quality-porn.p.rapidapi.com/pornstar/search\"\nquerystring = {\"responseImagesBase64\": \"1\", \"responseImages\": \"1\", \"responseProfileImageBase64\": \"1\", \"query\": \"abella\", \"responseProfileImage\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quality-porn.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quality Porn",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "abella"
                },
                {
                    "name": "responseImagesBase64",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "responseImages",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "responseProfileImageBase64",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "responseProfileImage",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide the music links for the artist with Spotify URL \"https://open.spotify.com/artist/5Q81rlcTFh3k6DQJXPdsot\"?",
        "model_answer": "requests.get(\"https://musiclinkssapi.p.rapidapi.com/search/url\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"musiclinkssapi.p.rapidapi.com\"}, params={\"spotify_url\": \"https://open.spotify.com/artist/5Q81rlcTFh3k6DQJXPdsot\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Get music links of song or artist.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://musiclinkssapi.p.rapidapi.com/search/url'\nquerystring = {\"spotify_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://musiclinkssapi.p.rapidapi.com/search/url\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://musiclinkssapi.p.rapidapi.com/search/url"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "musiclinkssapi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "spotify_url": "https://open.spotify.com/artist/5Q81rlcTFh3k6DQJXPdsot"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://musiclinkssapi.p.rapidapi.com/search/url\"\nquerystring = {\"spotify_url\": \"https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"musiclinkssapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MusiclinkssApi",
            "api_arguments_original": [
                {
                    "name": "spotify_url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C"
                }
            ]
        }
    },
    {
        "query": "Please fetch the weather forecast for New York City tomorrow and print the response.",
        "model_answer": "requests.get(\"https://weather-forecast-api.p.rapidapi.com/forecast\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"weather-forecast-api.p.rapidapi.com\"}, params={\"q\": \"New York, US\", \"date\": \"tomorrow\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "testing api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://myapi32.p.rapidapi.comtest'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://myapi32.p.rapidapi.comtest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://myapi32.p.rapidapi.comtest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"myapi32.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MyAPI",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide a Python function call to list all available languages for translation using the Translef Translator API?",
        "model_answer": "requests.get(\"https://translef-translator.p.rapidapi.com/language/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"translef-translator.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Translate text to 85+ languages. 0.3$ for million symbols \nFree translation of 50.000 characters.\nSimple and intuitive API.\nFor all questions, please contact telegram - https://t.me/translef",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translef-translator.p.rapidapi.com/language/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translef-translator.p.rapidapi.com/language/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://translef-translator.p.rapidapi.com/language/list"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "translef-translator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translef-translator.p.rapidapi.com/language/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translef-translator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translef - translator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to fetch a list of countries in Arabic using the ArabicCountryList API and print the response. ",
        "model_answer": "requests.get(\"https://arabiccountrylist.p.rapidapi.com/mi2tech/public/api/v1/country/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"arabiccountrylist.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Country list in Arabic",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://arabiccountrylist.p.rapidapi.com/mi2tech/public/api/v1/country/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://arabiccountrylist.p.rapidapi.com/mi2tech/public/api/v1/country/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://arabiccountrylist.p.rapidapi.com/mi2tech/public/api/v1/country/list"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "arabiccountrylist.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://arabiccountrylist.p.rapidapi.com/mi2tech/public/api/v1/country/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabiccountrylist.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ArabicCountryList",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the Python function call to check if there are any Python developer jobs available in California using the Indeed Jobs API.",
        "model_answer": "requests.get(\"https://indeed-jobs-api.p.rapidapi.com/indeed-us/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"indeed-jobs-api.p.rapidapi.com\"}, params={\"location\":\"California\", \"keyword\":\"Python\", \"offset\":0})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Indeed Jobs Search API - USA\nGet the Jobs List as JSON by giving Keyword, Location (USA Only) and offset value.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indeed-jobs-api.p.rapidapi.com/indeed-us/'\nquerystring = {\"location\": \"\", \"keyword\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indeed-jobs-api.p.rapidapi.com/indeed-us/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://indeed-jobs-api.p.rapidapi.com/indeed-us/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "indeed-jobs-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indeed-jobs-api.p.rapidapi.com/indeed-us/\"\nquerystring = {\"location\": \"california\", \"keyword\": \"python\", \"offset\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indeed-jobs-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indeed Jobs API",
            "api_arguments_original": [
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "",
                    "default": "california"
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": "python"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve the details of the invite code \"XYZ789\" in the Discord Lookup API?",
        "model_answer": "requests.get(\"https://discord-lookup.p.rapidapi.com/invites/minecraft\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"discord-lookup.p.rapidapi.com\"}, params={\"invite\": \"XYZ789\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Easily lookup Discord users by ID, invite data & joins by invite code and hidden vanity data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://discord-lookup.p.rapidapi.com/invites/minecraft'\nquerystring = {\"invite\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://discord-lookup.p.rapidapi.com/invites/minecraft\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://discord-lookup.p.rapidapi.com/invites/minecraft"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "discord-lookup.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "invite": "XYZ789"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://discord-lookup.p.rapidapi.com/invites/minecraft\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"discord-lookup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Discord Lookup",
            "api_arguments_original": [
                {
                    "name": "invite",
                    "type": "string",
                    "description": "",
                    "default": "minecraft"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest space news using the News Space API.",
        "model_answer": "requests.get(\"https://news-space.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"news-space.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "Space news scraper API for project",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://news-space.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://news-space.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://news-space.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "news-space.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://news-space.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-space.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "News space",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the dataset with the database code \"GOOG\", return format \"xml\", and dataset code \"AAPL\" using the Quandl API.",
        "model_answer": "requests.get(\"https://quandl1.p.rapidapi.com/datasets/GOOG/AAPL.xml\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quandl1.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "The premier source for financial, economic, and alternative datasets, serving investment professionals. Quandl\u2019s platform is used by over 400,000 people, including analysts from the world\u2019s top hedge funds, asset managers and investment banks, see https://docs.quandl.com/docs/in-depth-usage",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quandl1.p.rapidapi.com/datasets/WIKI/FB.json'\nquerystring = {\"database_code\": \"\", \"return_format\": \"\", \"dataset_code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quandl1.p.rapidapi.com/datasets/WIKI/FB.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quandl1.p.rapidapi.com/datasets/WIKI/FB.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quandl1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quandl",
            "api_arguments_original": [
                {
                    "name": "database_code",
                    "type": "STRING",
                    "description": "The code for the database this time-series belongs to",
                    "default": "WIKI"
                },
                {
                    "name": "return_format",
                    "type": "STRING",
                    "description": "json, xml or csv",
                    "default": "json"
                },
                {
                    "name": "dataset_code",
                    "type": "STRING",
                    "description": "The code for this time-series",
                    "default": "FB"
                }
            ]
        }
    },
    {
        "query": "I want to search for NFT collections with the name \"CryptoKitties\" in the Ethereum network.",
        "model_answer": "requests.get(\"https://nft-explorer.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"nft-explorer.p.rapidapi.com\"}, params={\"filter\": \"name\", \"chain\": \"eth\", \"q\": \"CryptoKitties\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Gets all NFT collections that match a given metadata search in +20 networks and including testnets.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nft-explorer.p.rapidapi.com/search'\nquerystring = {\"filter\": \"\", \"offset\": \"\", \"chain\": \"\", \"q\": \"\", \"from_block\": \"\", \"to_block\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nft-explorer.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://nft-explorer.p.rapidapi.com/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "nft-explorer.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "filter": "name",
                            "chain": "eth",
                            "q": "CryptoKitties"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nft-explorer.p.rapidapi.com/search\"\nquerystring = {\"filter\": \"name\", \"from_block\": \"\", \"to_block\": \"\", \"offset\": \"0\", \"chain\": \"eth\", \"q\": \"ape\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nft-explorer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NFT Explorer",
            "api_arguments_original": [
                {
                    "name": "filter",
                    "type": "STRING",
                    "description": "- To look into the entire metadata set the value to '*global*'. \n- To have a better response time you can look into a specific field like '*name*'\n",
                    "default": "name"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Pagination index. Default is set to 0",
                    "default": "0"
                },
                {
                    "name": "chain",
                    "type": "STRING",
                    "description": "The chain to query:\n- eth\n- bsc\n- avalanche\n- polygon\n- 0x1\n- kovan\n- avalanche testnet\n- bsc testnet\n- mumbai\n- ropsten\n- 0x3\n- 0x4\n- goerli",
                    "default": "eth"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Term to look for.",
                    "default": "ape"
                },
                {
                    "name": "from_block",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "to_block",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to validate the phone number \"(123) 456-7890\" using the Phone verification API and log the response?",
        "model_answer": "requests.get(\"https://phone-verification3.p.rapidapi.com/api/v1/file/downloadFile/filename_output.xlsx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"phone-verification3.p.rapidapi.com\"}, params={\"fileName\": \"filename_output.xlsx\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Validate any phone number across the USA, in bulk or single. Use free and forever.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://phone-verification3.p.rapidapi.com/api/v1/file/downloadFile/filename_output.xlsx'\nquerystring = {\"fileName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://phone-verification3.p.rapidapi.com/api/v1/file/downloadFile/filename_output.xlsx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://phone-verification3.p.rapidapi.com/api/v1/file/downloadFile/filename_output.xlsx"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "phone-verification3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "fileName": "filename_output.xlsx"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://phone-verification3.p.rapidapi.com/api/v1/file/downloadFile/filename_output.xlsx\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"phone-verification3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Phone verification",
            "api_arguments_original": [
                {
                    "name": "fileName",
                    "type": "STRING",
                    "description": "Name of file to be downloaded. Result file name is always in format {filename}_output.xlsx Replace {filename} with the name returned from upload file call.",
                    "default": "filename_output.xlsx"
                }
            ]
        }
    },
    {
        "query": "I want to generate a fake credit card for Mastercard brand.",
        "model_answer": "requests.get(\"https://fake-credit-card-generator.p.rapidapi.com/v1/generatecard\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fake-credit-card-generator.p.rapidapi.com\"}, params={\"brand\": \"Mastercard\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Select the kind of card you want to generate and let the API generate a new Test Card for you. Using industry standard algorithms, the cards generated will be unique and tied to real instututions, providing a close to real testing number",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fake-credit-card-generator.p.rapidapi.com/v1/generatecard'\nquerystring = {\"brand\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fake-credit-card-generator.p.rapidapi.com/v1/generatecard\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "brand",
                    "enum": [
                        "Mastercar"
                    ],
                    "description": "Enter your desired card brand"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fake-credit-card-generator.p.rapidapi.com/v1/generatecard\"\nquerystring = {\"brand\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fake-credit-card-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fake Credit Card Generator ",
            "api_arguments_original": [
                {
                    "name": "brand",
                    "type": "ENUM",
                    "description": "Enter your desired card brand",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to find the price of the item \"Ring of Healing\" in the Tibia game, specifying the world as Adra.",
        "model_answer": "requests.get(\"https://tibia-items.p.rapidapi.com/tibia-item/imbuements/epiphany\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"tibia-items.p.rapidapi.com\"}, params={\"World\": \"Adra\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tibia-items.p.rapidapi.com/tibia-item/imbuements/epiphany'\nquerystring = {\"World\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tibia-items.p.rapidapi.com/tibia-item/imbuements/epiphany\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tibia-items.p.rapidapi.com/tibia-item/imbuements/epiphany"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tibia-items.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "World": "Adra"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tibia-items.p.rapidapi.com/tibia-item/imbuements/epiphany\"\nquerystring = {\"World\": \"Adra\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tibia-items.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tibia Items",
            "api_arguments_original": [
                {
                    "name": "World",
                    "type": "STRING",
                    "description": "",
                    "default": "Adra"
                }
            ]
        }
    },
    {
        "query": "What are the upcoming events in Vienna, Austria?",
        "model_answer": "requests.get(\"https://events-linz.p.rapidapi.com/events\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"events-linz.p.rapidapi.com\"}, params={\"pageSize\": \"150\", \"location\": \"Vienna, Austria\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "API that provides events in Linz, Austria",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://events-linz.p.rapidapi.com/events'\nquerystring = {\"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://events-linz.p.rapidapi.com/events\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://events-linz.p.rapidapi.com/events"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "events-linz.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://events-linz.p.rapidapi.com/events\"\nquerystring = {\"pageSize\": \"150\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"events-linz.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Events Linz",
            "api_arguments_original": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": "150"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to fetch the latest news from The Guardian related to the global recession using the Global Recession Live API.",
        "model_answer": "requests.get(\"https://global-recession-live.p.rapidapi.com/news/theguardian\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"global-recession-live.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API showing all the latest recession news around the world, collected from The New York Times, The Guardian, World Economic Forum, The Economist, AP News, Reuters, and Politico.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://global-recession-live.p.rapidapi.com/news/theguardian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://global-recession-live.p.rapidapi.com/news/theguardian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://global-recession-live.p.rapidapi.com/news/theguardian"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "global-recession-live.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://global-recession-live.p.rapidapi.com/news/theguardian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"global-recession-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Global Recession Live",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "theguardian"
                }
            ]
        }
    },
    {
        "query": "I need help compiling my C99 code using the C99 Code Compiler API. I want to compile the file \"code.c\".",
        "model_answer": "requests.post(\"https://c99-code-compiler.p.rapidapi.com/compile\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"c99-code-compiler.p.rapidapi.com\"}, files={\"file\": open(\"code.c\", \"rb\")})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "C99 Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://c99-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://c99-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        null
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "c99-code-compiler.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://c99-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"c99-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "C99 Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the Python code to retrieve the details of the top 50 fast food restaurants in the USA using the Fast Food Restaurants USA - TOP 50 Chains API.",
        "model_answer": "requests.get(\"https://fast-food-restaurants-usa-top-50-chains.p.rapidapi.com/restaurants-top/all-city\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fast-food-restaurants-usa-top-50-chains.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "\nOur Fast Food Restaurants API provides you with a comprehensive database of the most popular fast food chains, allowing you to access vital information about their locations, hours and web presence.\n\nSign up now to get access!\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fast-food-restaurants-usa-top-50-chains.p.rapidapi.com/restaurants-top/all-city'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fast-food-restaurants-usa-top-50-chains.p.rapidapi.com/restaurants-top/all-city\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fast-food-restaurants-usa-top-50-chains.p.rapidapi.com/restaurants-top/all-city"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fast-food-restaurants-usa-top-50-chains.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fast-food-restaurants-usa-top-50-chains.p.rapidapi.com/restaurants-top/all-city\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fast-food-restaurants-usa-top-50-chains.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fast Food Restaurants USA - TOP 50 Chains",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to search for \"banana\" using Bing Search APIs.",
        "model_answer": "requests.get(\"https://bing-search-apis.p.rapidapi.com/api/rapid/web_search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"bing-search-apis.p.rapidapi.com\"}, params={\"size\": \"30\", \"keyword\": \"banana\", \"page\": \"0\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "An AI service from Microsoft Azure that enables secure, ad-free location search for your users, displaying relevant information from web results, images, local businesses, news and images Photo.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bing-search-apis.p.rapidapi.com/api/rapid/web_search'\nquerystring = {\"size\": \"\", \"keyword\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bing-search-apis.p.rapidapi.com/api/rapid/web_search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bing-search-apis.p.rapidapi.com/api/rapid/web_search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bing-search-apis.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "size": "30",
                            "keyword": "banana",
                            "page": "0"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bing-search-apis.p.rapidapi.com/api/rapid/web_search\"\nquerystring = {\"size\": \"30\", \"keyword\": \"how-to-use-excel-for-free\", \"page\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bing-search-apis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bing Search APIs",
            "api_arguments_original": [
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "",
                    "default": "30"
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": "how-to-use-excel-for-free"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to check if the email address 'example123@gmail.com' is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example123@gmail.com\"})",
        "original": {
            "domain": "Devices",
            "framework": "RapidAPI",
            "functionality": "fsafsafsa",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asdasd23.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asdasd23.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example123@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asdasd23.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asdasd23.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "asdasd",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a Python function call to translate the latitude 32.7767 and longitude -96.7970 to a timezone string.",
        "model_answer": "requests.get(\"https://location-to-timezone.p.rapidapi.com/v1/point-to-timezone\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"location-to-timezone.p.rapidapi.com\"}, params={\"lng\": \"-96.7970\", \"lat\":\"32.7767\"})",
        "original": {
            "domain": "Cryptography",
            "framework": "RapidAPI",
            "functionality": "Translate latitude & longitude coordinates to a timezone string. \nLow Latency results within 1ms from the back-end server. High accuracy; results close to country borders will be correct.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://location-to-timezone.p.rapidapi.com/v1/point-to-timezone'\nquerystring = {\"lng\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://location-to-timezone.p.rapidapi.com/v1/point-to-timezone\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://location-to-timezone.p.rapidapi.com/v1/point-to-timezone"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "location-to-timezone.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://location-to-timezone.p.rapidapi.com/v1/point-to-timezone\"\nquerystring = {\"lng\": \"4.869119\", \"lat\": \"52.362244\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"location-to-timezone.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Location to Timezone",
            "api_arguments_original": [
                {
                    "name": "lng",
                    "type": "STRING",
                    "description": "Longitude",
                    "default": "4.869119"
                },
                {
                    "name": "lat",
                    "type": "STRING",
                    "description": "Latitude",
                    "default": "52.362244"
                }
            ]
        }
    },
    {
        "query": "Please provide the Python function call to check the status of a payment with the reference ID 9876543210 and log the output.",
        "model_answer": "requests.get(\"https://ppob.p.rapidapi.com/prabayar/check-status/9876543210\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ppob.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Payment Point Online Banking\nIndonesia, China, Philippines, Malaysia, Singapore, Vietnam and Thailand. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ppob.p.rapidapi.com/prabayar/check-status/{ref_id}'\nquerystring = {\"ref_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ppob.p.rapidapi.com/prabayar/check-status/{ref_id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ppob.p.rapidapi.com/prabayar/check-status/{ref_id}\"\nquerystring = {\"ref_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ppob.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PPOB",
            "api_arguments_original": [
                {
                    "name": "ref_id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to retrieve the available sports news sources in the United States using the NewsData API.",
        "model_answer": "requests.get(\"https://newsdata2.p.rapidapi.com/sources\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"newsdata2.p.rapidapi.com\"}, params={\"country\": \"us\", \"category\": \"sports\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Best News API To Search And Collect Worldwide News",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://newsdata2.p.rapidapi.com/sources'\nquerystring = {\"country\": \"\", \"language\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://newsdata2.p.rapidapi.com/sources\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://newsdata2.p.rapidapi.com/sources"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "newsdata2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "country": "us",
                            "category": "sports"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://newsdata2.p.rapidapi.com/sources\"\nquerystring = {\"country\": \"\", \"language\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"newsdata2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NewsData",
            "api_arguments_original": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Find sources that display news in a specific country. Possible Options: us gb in jp ae sa au ca sg",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Find sources that display news in a specific language. Possible Options: en ar jp in es fr",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "Find sources that display news of this category. Possible Options: top business science technology sports health entertainment",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "What is the population of India?",
        "model_answer": "requests.get(\"https://get-population.p.rapidapi.com/population/country\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"get-population.p.rapidapi.com\"}, params={\"country\": \"India\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get world population in realtime.  \ud83c\udf0d",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://get-population.p.rapidapi.com/population/country'\nquerystring = {\"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://get-population.p.rapidapi.com/population/country\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://get-population.p.rapidapi.com/population/country"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "get-population.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "country": "India"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://get-population.p.rapidapi.com/population/country\"\nquerystring = {\"country\": \"Egypt\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"get-population.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Get Population",
            "api_arguments_original": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": "Egypt"
                }
            ]
        }
    },
    {
        "query": "What are the available genres in the Media Group API?",
        "model_answer": "requests.get(\"https://media-group.p.rapidapi.com/genres\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"media-group.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://media-group.p.rapidapi.com/genres'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://media-group.p.rapidapi.com/genres\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://media-group.p.rapidapi.com/genres"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "media-group.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://media-group.p.rapidapi.com/genres\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"media-group.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Media-Group",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to check if there are any available appointments for Dr. Johnson?",
        "model_answer": "requests.get(\"https://supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com/api/users/Dr_Johnson.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "The SuperSaaS API provides calendar services that can be used to add online booking and scheduling functionality to an existing website or CRM software.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com/api/users/{id}.json'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com/api/users/{id}.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com/api/users/{id}.json\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SuperSaaS - Online Bookings and Appointment Scheduling",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you reverse geocode the coordinates (37.7749, -122.4194) to get the corresponding address?",
        "model_answer": "requests.get(\"https://reverse-geocoding3.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"reverse-geocoding3.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "This API gets address from a lat-long and latlong from a respective address.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reverse-geocoding3.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reverse-geocoding3.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://reverse-geocoding3.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "reverse-geocoding3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reverse-geocoding3.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reverse-geocoding3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Reverse Geocoding_v2",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the latest 50 clips from the channel \"scary241\" on Twitch, using the Twitch Channel Clips API?",
        "model_answer": "requests.get(\"https://twitch-channel-clips.p.rapidapi.com/public/clips/scary241\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"twitch-channel-clips.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "An API to get info about the latest 50 clips from a channel, including direct download links",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitch-channel-clips.p.rapidapi.com/public/clips/jakubloveshorror'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitch-channel-clips.p.rapidapi.com/public/clips/jakubloveshorror\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitch-channel-clips.p.rapidapi.com/public/clips/jakubloveshorror\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitch-channel-clips.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Twitch Channel Clips",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "",
                    "default": "jakubloveshorror"
                }
            ]
        }
    },
    {
        "query": "Can you provide the Python function call to retrieve information on the corporate retirement plan for EIN number 543219876? Also, please log the output.",
        "model_answer": "requests.get(\"https://form-5500-data.p.rapidapi.com/api/721937f76ee4118d05d4268531b648ae/543219876\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"form-5500-data.p.rapidapi.com\"}, params={\"EIN\": \"543219876\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Get information from all US Corporate Retirement plans from the Form 5500.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://form-5500-data.p.rapidapi.com/api/721937f76ee4118d05d4268531b648ae/311334685'\nquerystring = {\"EIN\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://form-5500-data.p.rapidapi.com/api/721937f76ee4118d05d4268531b648ae/311334685\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://form-5500-data.p.rapidapi.com/api/721937f76ee4118d05d4268531b648ae/543219876"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "form-5500-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "EIN": "543219876"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://form-5500-data.p.rapidapi.com/api/721937f76ee4118d05d4268531b648ae/311334685\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"form-5500-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Form 5500 Data",
            "api_arguments_original": [
                {
                    "name": "EIN",
                    "type": "NUMBER",
                    "description": "",
                    "default": "311334685"
                }
            ]
        }
    },
    {
        "query": "I want to check if this boleto with id \"987654321\" has been paid.",
        "model_answer": "requests.get(\"https://consulta-de-boleto.p.rapidapi.com/consulta\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"consulta-de-boleto.p.rapidapi.com\"}, params={\"id\": \"987654321\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Consulte se um boleto j\u00e1 foi pago ou n\u00e3o, e caso n\u00e3o tenha sido pago, tenha as informa\u00e7\u00f5es do boleto, tais como: Vencimento, banco emissor, nome e documento do benefici\u00e1rio, valor, etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://consulta-de-boleto.p.rapidapi.com/consulta'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://consulta-de-boleto.p.rapidapi.com/consulta\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://consulta-de-boleto.p.rapidapi.com/consulta"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "consulta-de-boleto.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://consulta-de-boleto.p.rapidapi.com/consulta\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"consulta-de-boleto.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Consulta de boleto",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get news articles from The Guardian using the Green Gold API. I also want to provide my own API key and host.",
        "model_answer": "requests.get(\"https://green-gold.p.rapidapi.com/news/guardian\", headers={\"X-RapidAPI-Key\": \"YOUR_API_KEY\", \"X-RapidAPI-Host\":\"YOUR_HOST\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API aggregating news articles related to green technology, stocks, start-ups, and trends.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://green-gold.p.rapidapi.com/news/guardian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://green-gold.p.rapidapi.com/news/guardian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://green-gold.p.rapidapi.com/news/guardian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"green-gold.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Green Gold",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "guardian"
                }
            ]
        }
    },
    {
        "query": "I want to compile a bash code file located at '/home/user/code/script.sh' using the Bash Code Compiler API.",
        "model_answer": "requests.post(\"https://bash-code-compiler.p.rapidapi.com/compile\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"bash-code-compiler.p.rapidapi.com\"}, files={\"file\": open(\"/home/user/code/script.sh\", \"rb\")})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Bash Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bash-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bash-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        null
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bash-code-compiler.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bash-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bash-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bash Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the details for the ChattyData API?",
        "model_answer": "requests.get(\"https://chattydata.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"chattydata.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "This API is for chatty app",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://chattydata.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://chattydata.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://chattydata.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "chattydata.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://chattydata.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chattydata.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Chattydata",
            "api_arguments_original": []
        }
    },
    {
        "query": "Get the Chinese zodiac for the sign \"Dragon\" in Chinese Traditional language for the period \"2022\".",
        "model_answer": "requests.get(\"https://chinese-zodiacs-ai.p.rapidapi.com/get_zodiac/Dragon/2022/traditional\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"chinese-zodiacs-ai.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Chinese Zodiacs in Simplified &amp; Traditional languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://chinese-zodiacs-ai.p.rapidapi.com/get_zodiac/{sign}/{period}/{lang}'\nquerystring = {\"sign\": \"\", \"lang\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://chinese-zodiacs-ai.p.rapidapi.com/get_zodiac/{sign}/{period}/{lang}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://chinese-zodiacs-ai.p.rapidapi.com/get_zodiac/{sign}/{period}/{lang}\"\nquerystring = {\"sign\": \"\", \"lang\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chinese-zodiacs-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Chinese Zodiacs - AI",
            "api_arguments_original": [
                {
                    "name": "sign",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "ENUM",
                    "description": "Chinese Simplified or Traditional",
                    "default": ""
                },
                {
                    "name": "period",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get all transactions for the virtual account with ID \"abcd-1234\".",
        "model_answer": "requests.get(\"https://virtual-accounts-api.p.rapidapi.com/api/v1/accountsrvc/virtualaccounts/transactions/account/abcd-1234/all\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"virtual-accounts-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Use this API to create virtual accounts, manage them, create financial transations, create transaction channels (payment provider).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://virtual-accounts-api.p.rapidapi.com/api/v1/accountsrvc/virtualaccounts/transactions/account/0dd3a3be-7783-4f87-b347-d9aed69a4334/all'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://virtual-accounts-api.p.rapidapi.com/api/v1/accountsrvc/virtualaccounts/transactions/account/0dd3a3be-7783-4f87-b347-d9aed69a4334/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://virtual-accounts-api.p.rapidapi.com/api/v1/accountsrvc/virtualaccounts/transactions/account/abcd-1234/all"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "virtual-accounts-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://virtual-accounts-api.p.rapidapi.com/api/v1/accountsrvc/virtualaccounts/transactions/account/0dd3a3be-7783-4f87-b347-d9aed69a4334/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"virtual-accounts-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Virtual Accounts API",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "(Required) ",
                    "default": "0dd3a3be-7783-4f87-b347-d9aed69a4334"
                }
            ]
        }
    },
    {
        "query": "Can you provide the Python function call to obtain the health status from the Open API and log the output?",
        "model_answer": "requests.get(\"https://open7.p.rapidapi.com/api/v1/health\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"open7.p.rapidapi.com\"}, params={\"text\": \"\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Open API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://open7.p.rapidapi.com/api/v1/health'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://open7.p.rapidapi.com/api/v1/health\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://open7.p.rapidapi.com/api/v1/health"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "open7.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://open7.p.rapidapi.com/api/v1/health\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"open7.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Open",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide information about a specific item on Amazon with ASIN B09DKV849B?",
        "model_answer": "response = requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "yurna discord bot",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yurna.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yurna.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yurna.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yurna.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "yurna",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the Fear & Greed Index for the last 3 records.",
        "model_answer": "requests.get(\"https://crypto-fear-greed-index2.p.rapidapi.com/index\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crypto-fear-greed-index2.p.rapidapi.com\"}, params={\"limit\": \"3\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Index calculated by https://alternative.me/crypto/",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crypto-fear-greed-index2.p.rapidapi.com/index'\nquerystring = {\"limit\": \"\", \"timestamp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crypto-fear-greed-index2.p.rapidapi.com/index\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://crypto-fear-greed-index2.p.rapidapi.com/index"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "crypto-fear-greed-index2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crypto-fear-greed-index2.p.rapidapi.com/index\"\nquerystring = {\"limit\": \"10\", \"timestamp\": \"1518048000\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-fear-greed-index2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crypto Fear & Greed Index",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit number of last N records",
                    "default": "10"
                },
                {
                    "name": "timestamp",
                    "type": "STRING",
                    "description": "Get fear & greed index value by specified utc timestamp",
                    "default": "1518048000"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to send a new message \"Hello World\" using the Grup Terbuka API, and include the necessary headers and parameters for authentication and message content?",
        "model_answer": "requests.get(\"https://grup-terbuka.p.rapidapi.com/sendapi.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"grup-terbuka.p.rapidapi.com\"}, params={\"pesan\": \"Hello World\", \"key\": \"\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "open api group chat",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://grup-terbuka.p.rapidapi.com/sendapi.php'\nquerystring = {\"pesan\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://grup-terbuka.p.rapidapi.com/sendapi.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://grup-terbuka.p.rapidapi.com/sendapi.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "grup-terbuka.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "pesan": "Hello World",
                            "key": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://grup-terbuka.p.rapidapi.com/sendapi.php\"\nquerystring = {\"pesan\": \"pesan baru\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"grup-terbuka.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Grup Terbuka",
            "api_arguments_original": [
                {
                    "name": "pesan",
                    "type": "STRING",
                    "description": "",
                    "default": "pesan baru"
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to calculate the number of business days for the next 10 days in the US using DaysAPI.",
        "model_answer": "requests.get(\"https://daysapi.p.rapidapi.com/calendar/arithmetic\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"daysapi.p.rapidapi.com\"}, params={\"days\": 10})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "An API that will count business days including holidays for the US.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://daysapi.p.rapidapi.com/calendar/arithmetic'\nquerystring = {\"seconds\": \"\", \"months\": \"\", \"hours\": \"\", \"days\": \"\", \"date\": \"\", \"minutes\": \"\", \"years\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://daysapi.p.rapidapi.com/calendar/arithmetic\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://daysapi.p.rapidapi.com/calendar/arithmetic"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "daysapi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "days": 10
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://daysapi.p.rapidapi.com/calendar/arithmetic\"\nquerystring = {\"seconds\": 0, \"months\": 0, \"hours\": 0, \"days\": 8, \"date\": \"2021-09-08 21:07:09\", \"minutes\": 0, \"years\": 0, \"tz\": \"UTC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"daysapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DaysAPI",
            "api_arguments_original": [
                {
                    "name": "seconds",
                    "type": "NUMBER",
                    "description": "number of seconds.",
                    "default": 0
                },
                {
                    "name": "months",
                    "type": "NUMBER",
                    "description": "Number of months",
                    "default": 0
                },
                {
                    "name": "hours",
                    "type": "NUMBER",
                    "description": "Number of hours.",
                    "default": 0
                },
                {
                    "name": "days",
                    "type": "NUMBER",
                    "description": "Number of days.",
                    "default": 8
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "Date for arithmetic calculation.",
                    "default": "2021-09-08 21:07:09"
                },
                {
                    "name": "minutes",
                    "type": "NUMBER",
                    "description": "Number of minutes.",
                    "default": 0
                },
                {
                    "name": "years",
                    "type": "NUMBER",
                    "description": "Number of years.",
                    "default": 0
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Time Zone. Timezone must be in [IANA](https://bit.ly/3h8wd73) format.",
                    "default": "UTC"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest news articles from the Global Stock Market API.",
        "model_answer": "requests.get(\"https://global-stock-market-api-data.p.rapidapi.com/news/most_popular_news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"global-stock-market-api-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This API is your gateway for information on world financial markets with respect to country wise. Included are World Stock Markets, Indices Futures, Commodities and much more in future.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://global-stock-market-api-data.p.rapidapi.com/news/most_popular_news'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://global-stock-market-api-data.p.rapidapi.com/news/most_popular_news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://global-stock-market-api-data.p.rapidapi.com/news/most_popular_news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"global-stock-market-api-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Global Stock Market API Data",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to check if the email address \"example@gmail.com\" is a valid email address using the RapidAPI \"check-disposable-email\" API?",
        "model_answer": "response = requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "its for matin",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://matinapi.p.rapidapi.comhttps://privatix-temp-mail-v1.p.mashape.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://matinapi.p.rapidapi.comhttps://privatix-temp-mail-v1.p.mashape.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://matinapi.p.rapidapi.comhttps://privatix-temp-mail-v1.p.mashape.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"matinapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MatinApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the Python function call to access the Slovenian Government company register using the Slovenia Company Data API. The query should search for a company with the name \"Adria\" and retrieve its information.",
        "model_answer": "requests.get(\"https://slovenia-company-data.p.rapidapi.com/prs/ajax.asp\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"slovenia-company-data.p.rapidapi.com\"}, params={\"s\": 1, \"method\": \"getNaziv\", \"term\":\"Adria\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Access the official Slovenian Government company register, basic search only. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://slovenia-company-data.p.rapidapi.com/prs/ajax.asp'\nquerystring = {\"s\": \"\", \"method\": \"\", \"term\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://slovenia-company-data.p.rapidapi.com/prs/ajax.asp\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://slovenia-company-data.p.rapidapi.com/prs/ajax.asp"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "slovenia-company-data.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "s": 1,
                            "method": "getNaziv",
                            "term": "Adria"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://slovenia-company-data.p.rapidapi.com/prs/ajax.asp\"\nquerystring = {\"s\": 1, \"method\": \"getNaziv\", \"term\": \"adria\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"slovenia-company-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Slovenia Company Data",
            "api_arguments_original": [
                {
                    "name": "s",
                    "type": "NUMBER",
                    "description": "",
                    "default": 1
                },
                {
                    "name": "method",
                    "type": "STRING",
                    "description": "",
                    "default": "getNaziv"
                },
                {
                    "name": "term",
                    "type": "STRING",
                    "description": "",
                    "default": "adria"
                }
            ]
        }
    },
    {
        "query": "Please take a screenshot of www.example.com with a width of 800 and height of 600.",
        "model_answer": "requests.get(\"https://web-capture2.p.rapidapi.com/pdf\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"web-capture2.p.rapidapi.com\"}, params={\"width\": 800, \"height\": 600, \"url\": \"www.example.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Take screenshots of any website or generate a pdf either from the website or an HTML file.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://web-capture2.p.rapidapi.com/pdf'\nquerystring = {\"width\": \"\", \"height\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://web-capture2.p.rapidapi.com/pdf\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://web-capture2.p.rapidapi.com/pdf"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "web-capture2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://web-capture2.p.rapidapi.com/pdf\"\nquerystring = {\"width\": \"1024\", \"height\": \"780\", \"url\": \"https://google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"web-capture2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Web Capture",
            "api_arguments_original": [
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1024"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "",
                    "default": "780"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://google.com"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to search for iOS apps using the Ignition API and include the necessary headers for authorization.",
        "model_answer": "requests.get(\"https://ignition.p.rapidapi.comapi/searchApp.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ignition.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "iOS Apps",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ignition.p.rapidapi.comapi/searchApp.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ignition.p.rapidapi.comapi/searchApp.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ignition.p.rapidapi.comapi/searchApp.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ignition.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ignition",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the data on all crypto coins related to sports teams using the RapidAPI \"Fan Crypto Coins\" API?",
        "model_answer": "requests.get(\"https://fan-crypto-coins.p.rapidapi.com/datablinkx_crypto/coins\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fan-crypto-coins.p.rapidapi.com\"}, params={\"cursor\":\"\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Get data on all crypto coins related to sports teams through this API!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fan-crypto-coins.p.rapidapi.com/datablinkx_crypto/coins'\nquerystring = {\"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fan-crypto-coins.p.rapidapi.com/datablinkx_crypto/coins\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fan-crypto-coins.p.rapidapi.com/datablinkx_crypto/coins"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fan-crypto-coins.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fan-crypto-coins.p.rapidapi.com/datablinkx_crypto/coins\"\nquerystring = {\"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fan-crypto-coins.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fan Crypto Coins",
            "api_arguments_original": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to obtain a list of nearby pharmacies in Istanbul, Turkey, using the Eczanem API, and print the response.",
        "model_answer": "requests.get(\"https://eczanem.p.rapidapi.com/eczane\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"eczanem.p.rapidapi.com\"}, params={\"ilce\": \"\",\"il\": \"Istanbul\"})",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "il ve il\u00e7e bilgisine g\u00f6re n\u00f6bet\u00e7i eczaneleri g\u00f6r\u00fcnt\u00fcleyin!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://eczanem.p.rapidapi.com/eczane'\nquerystring = {\"ilce\": \"\", \"il\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://eczanem.p.rapidapi.com/eczane\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://eczanem.p.rapidapi.com/eczane"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "eczanem.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "ilce": "",
                            "il": "Istanbul"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://eczanem.p.rapidapi.com/eczane\"\nquerystring = {\"ilce\": \"Merkez\", \"il\": \"\u00c7anakkale\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"eczanem.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Eczanem",
            "api_arguments_original": [
                {
                    "name": "ilce",
                    "type": "STRING",
                    "description": "",
                    "default": "Merkez"
                },
                {
                    "name": "il",
                    "type": "STRING",
                    "description": "",
                    "default": "\u00c7anakkale"
                }
            ]
        }
    },
    {
        "query": "Can you please provide a Python function call to check if an image with the link \"https://example.com/image.jpg\" contains any adult content?",
        "model_answer": "requests.get(\"https://nsfw-image-classification3.p.rapidapi.com/nsfwjs/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"nsfw-image-classification3.p.rapidapi.com\"}, params={\"link\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Use our Content Moderation API to flag possible inappropriate/ nude / adult content in your images.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nsfw-image-classification3.p.rapidapi.com/nsfwjs/check'\nquerystring = {\"link\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nsfw-image-classification3.p.rapidapi.com/nsfwjs/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://nsfw-image-classification3.p.rapidapi.com/nsfwjs/check"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "nsfw-image-classification3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "link": "https://example.com/image.jpg"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nsfw-image-classification3.p.rapidapi.com/nsfwjs/check\"\nquerystring = {\"link\": \"https://cdn77-pic.xvideos-cdn.com/videos/thumbs169poster/c5/d0/e4/c5d0e4cd6124e1d2f5b3add1f582ca13/c5d0e4cd6124e1d2f5b3add1f582ca13.30.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nsfw-image-classification3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NSFW Image Classification_v2",
            "api_arguments_original": [
                {
                    "name": "link",
                    "type": "STRING",
                    "description": "Image link",
                    "default": "https://cdn77-pic.xvideos-cdn.com/videos/thumbs169poster/c5/d0/e4/c5d0e4cd6124e1d2f5b3add1f582ca13/c5d0e4cd6124e1d2f5b3add1f582ca13.30.jpg"
                }
            ]
        }
    },
    {
        "query": "I want to get information about a pet with ID 456.",
        "model_answer": "requests.get(\"https://thisshouldbefree.p.rapidapi.com/pet/456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"thisshouldbefree.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "ThisshouldbeFREE",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://thisshouldbefree.p.rapidapi.com/pet/{petId}'\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}\"\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ThisshouldbeFREE",
            "api_arguments_original": [
                {
                    "name": "petId",
                    "type": "NUMBER",
                    "description": "ID of pet to return",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you validate the formatting of this driver's license number 9876543210 in the state of California?",
        "model_answer": "requests.get(\"https://dl-format-validation.p.rapidapi.com/GetArchiveReport\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dl-format-validation.p.rapidapi.com\"}, params={\"AppId\": \"9876543210\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Confirms that the submitted driver\u2019s license formatting is the correct format as stipulated for the submitted state.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dl-format-validation.p.rapidapi.com/GetArchiveReport'\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dl-format-validation.p.rapidapi.com/GetArchiveReport\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        null
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dl-format-validation.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dl-format-validation.p.rapidapi.com/GetArchiveReport\"\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dl-format-validation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DL Format Validation",
            "api_arguments_original": [
                {
                    "name": "AppId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with a list of categories for Fiverr Pro services?",
        "model_answer": "requests.get(\"https://fiverr-pro-services.p.rapidapi.com/categories\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fiverr-pro-services.p.rapidapi.com\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "API to provide a list of vetted professional sellers for any category.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fiverr-pro-services.p.rapidapi.com/categories'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fiverr-pro-services.p.rapidapi.com/categories\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://fiverr-pro-services.p.rapidapi.com/categories"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "fiverr-pro-services.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fiverr-pro-services.p.rapidapi.com/categories\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fiverr-pro-services.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fiverr Pro services",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the synonyms for the word \"excited\" in English using the Webit Language API.",
        "model_answer": "requests.get(\"https://webit-language.p.rapidapi.com/dictionary-synonyms\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"webit-language.p.rapidapi.com\"}, params={\"language\":\"en\", \"q\":\"excited\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "A.I. Text Paraphrase (Rewrite), Dictionary (Lookup, Examples, Bilingual, Synonyms, Antonyms), Key Phrases, Sentences Breaker.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webit-language.p.rapidapi.com/dictionary-synonyms'\nquerystring = {\"language\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webit-language.p.rapidapi.com/dictionary-synonyms\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://webit-language.p.rapidapi.com/dictionary-synonyms"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "webit-language.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/dictionary-synonyms\"\nquerystring = {\"language\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webit Language",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check if the link \"https://www.youtube.com/watch?v=ybJ_R08SogU\" has any open graph protocol data?",
        "model_answer": "requests.get(\"https://link-preview4.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"link-preview4.p.rapidapi.com\"}, params={\"url\": \"https://www.youtube.com/watch?v=ybJ_R08SogU\", \"oembed\": \"false\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Open graph protocol data parser. Can fetch various meta data from an url link.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://link-preview4.p.rapidapi.com/'\nquerystring = {\"url\": \"\", \"oembed\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://link-preview4.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://link-preview4.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "link-preview4.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://link-preview4.p.rapidapi.com/\"\nquerystring = {\"url\": \"https://www.youtube.com/watch?v=ybJ_R08SogU\", \"oembed\": \"false\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"link-preview4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Link Preview",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.youtube.com/watch?v=ybJ_R08SogU"
                },
                {
                    "name": "oembed",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "false"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the horoscope for the sign Aries in English.",
        "model_answer": "requests.get(\"https://horoscope-api.p.rapidapi.com/en/aries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"horoscope-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Horoscope API - Professional Horoscopes as a simple JSON API - Access 12 horoscopes every day, written by professional astrologers. Important: Only Portuguese (PT) language is currently available.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://horoscope-api.p.rapidapi.com/pt/aquario'\nquerystring = {\"signId\": \"\", \"langId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://horoscope-api.p.rapidapi.com/pt/aquario\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://horoscope-api.p.rapidapi.com/pt/aquario\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"horoscope-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Horoscope API",
            "api_arguments_original": [
                {
                    "name": "signId",
                    "type": "string",
                    "description": "",
                    "default": "aquario"
                },
                {
                    "name": "langId",
                    "type": "string",
                    "description": "",
                    "default": "pt"
                }
            ]
        }
    },
    {
        "query": "What is a Python function call to retrieve bank sector reports using a free API provided by Argaam Data APIs Free, and print the response in JSON format?",
        "model_answer": "requests.get(\"https://argaam-data-apis-free.p.rapidapi.com/api/v1/json/facts-statistics/get-bank-sector-reports\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"argaam-data-apis-free.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Free APIs By Argaam",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://argaam-data-apis-free.p.rapidapi.com/api/v1/json/facts-statistics/get-bank-sector-reports'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://argaam-data-apis-free.p.rapidapi.com/api/v1/json/facts-statistics/get-bank-sector-reports\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://argaam-data-apis-free.p.rapidapi.com/api/v1/json/facts-statistics/get-bank-sector-reports\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"argaam-data-apis-free.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Argaam Data APIs Free",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get product information for a laptop from the Ecommerce Product API.",
        "model_answer": "requests.get(\"https://ecommerce-product-api1.p.rapidapi.com/data\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"ecommerce-product-api1.p.rapidapi.com\"}, params={\"product\":\"laptop\", \"page\":\"1\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "The Ecommerce Product API is a comprehensive solution for retrieving and managing product information in ecommerce stores. This API provides access to a wide range of product data, including titles, descriptions, images, and more. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ecommerce-product-api1.p.rapidapi.com/data'\nquerystring = {\"product\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ecommerce-product-api1.p.rapidapi.com/data\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "product",
                    "enum": [
                        "laptop"
                    ],
                    "description": ""
                },
                {
                    "name": "page",
                    "enum": [
                        ""
                    ],
                    "description": ""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ecommerce-product-api1.p.rapidapi.com/data\"\nquerystring = {\"product\": \"phone\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ecommerce-product-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ecommerce Product API",
            "api_arguments_original": [
                {
                    "name": "product",
                    "type": "STRING",
                    "description": "",
                    "default": "phone"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "What is the version of the Face Detection API?",
        "model_answer": "requests.get(\"https://face-detection14.p.rapidapi.com/v1/version\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"face-detection14.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "This ready-to-use API provides a pack of options in human face detection: face and landmarks detection, face re-identification of an already detected face. [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/face-analyzer) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/face-analysis?utm_source=face_analyzer_rapidapi&utm_medium=endpoints&utm_campaign...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://face-detection14.p.rapidapi.com/v1/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://face-detection14.p.rapidapi.com/v1/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://face-detection14.p.rapidapi.com/v1/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-detection14.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Face Detection_v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check the current web technologies used by the domain google.com.",
        "model_answer": "requests.get(\"https://builtwith-domain.p.rapidapi.com/v19/api.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"builtwith-domain.p.rapidapi.com\"}, params={\"LOOKUP\": \"google.com\", \"KEY\":\"your-api-key\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get web technology current and usage history for a domain going back to 2000.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://builtwith-domain.p.rapidapi.com/v19/api.json'\nquerystring = {\"LOOKUP\": \"\", \"KEY\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://builtwith-domain.p.rapidapi.com/v19/api.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://builtwith-domain.p.rapidapi.com/v19/api.json"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "builtwith-domain.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://builtwith-domain.p.rapidapi.com/v19/api.json\"\nquerystring = {\"LOOKUP\": \"overstock.com\", \"KEY\": \"your-api-key\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"builtwith-domain.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BuiltWith Domain",
            "api_arguments_original": [
                {
                    "name": "LOOKUP",
                    "type": "STRING",
                    "description": "The domain you want to lookup.\n\n**Multi-Lookup Option**\nWhen doing RAW domain lookups, you can parse up to 16 domains at once as a CSV. For example cnn.com,about.com,builtwith.com - this dramatically improves throughput.",
                    "default": "overstock.com"
                },
                {
                    "name": "KEY",
                    "type": "STRING",
                    "description": "This is your key, use this for lookups. Get this key from https://api.builtwith.com",
                    "default": "your-api-key"
                }
            ]
        }
    },
    {
        "query": "I would like to use the QuickMocker API to retrieve user data with the ID 54321.",
        "model_answer": "requests.get(\"https://quickmocker.p.rapidapi.com/user/54321\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quickmocker.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Online API mocking tool to create a fake web services, intercept and debug requests in live mode, forward requests to any URL including localhost.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quickmocker.p.rapidapi.com/user/12345'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quickmocker.p.rapidapi.com/user/12345\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://quickmocker.p.rapidapi.com/user/54321"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "quickmocker.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quickmocker.p.rapidapi.com/user/12345\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quickmocker.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QuickMocker",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you fetch the live session data for session ID 4567 from the F1 Live Motorsport Data API and store the response in a variable called \"session_data\"?",
        "model_answer": "requests.get(\"https://f1-live-motorsport-data.p.rapidapi.com/session/4567\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"f1-live-motorsport-data.p.rapidapi.com\"}, params={\"session_id\": \"4567\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Formula 1 data for the ultimate motorsport fanatic!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://f1-live-motorsport-data.p.rapidapi.com/session/2757'\nquerystring = {\"session_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://f1-live-motorsport-data.p.rapidapi.com/session/2757\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://f1-live-motorsport-data.p.rapidapi.com/session/2757\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"f1-live-motorsport-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "F1 Live Motorsport Data",
            "api_arguments_original": [
                {
                    "name": "session_id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "2757"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the tide forecast for a location with longitude -122.431297 and latitude 37.773972 for the dates September 1, 2022, to September 7, 2022.",
        "model_answer": "requests.get(\"https://stormglass-complete.p.rapidapi.com/tideex/{apiKey}/{lat}/{lng}/{startDate}/{endDate}/{datum}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"stormglass-complete.p.rapidapi.com\"}, params={\"lng\": \"-122.431297\", \"apiKey\": \"API_KEY_HERE\", \"lat\": \"37.773972\", \"startDate\": \"2022-09-01\", \"endDate\": \"2022-09-07\", \"datum\": \"LAT\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": " API to Complete Stormglass Weather, Bio, Tides, Astronomy, Solar, and Elevation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stormglass-complete.p.rapidapi.com/tideex/{apiKey}/{lat}/{lng}/{startDate}/{endDate}/{datum}'\nquerystring = {\"lng\": \"\", \"apiKey\": \"\", \"lat\": \"\", \"endDate\": \"\", \"startDate\": \"\", \"datum\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stormglass-complete.p.rapidapi.com/tideex/{apiKey}/{lat}/{lng}/{startDate}/{endDate}/{datum}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://stormglass-complete.p.rapidapi.com/tideex/{apiKey}/{lat}/{lng}/{startDate}/{endDate}/{datum}"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "stormglass-complete.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "lng": "-122.431297",
                            "apiKey": "API_KEY_HERE",
                            "lat": "37.773972",
                            "startDate": "2022-09-01",
                            "endDate": "2022-09-07",
                            "datum": "LAT"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stormglass-complete.p.rapidapi.com/tideex/{apiKey}/{lat}/{lng}/{startDate}/{endDate}/{datum}\"\nquerystring = {\"endDate\": \"\", \"lng\": \"\", \"apiKey\": \"\", \"startDate\": \"\", \"datum\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stormglass-complete.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stormglass Complete",
            "api_arguments_original": [
                {
                    "name": "lng",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lat",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "endDate",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "startDate",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "datum",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please generate a personalized trip plan for 7 days in Paris, France using the AI Trip Planner API.",
        "model_answer": "requests.get(\"https://ai-trip-planner.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\":\"YOUR-API-KEY\",\"X-RapidAPI-Host\":\"ai-trip-planner.p.rapidapi.com\"}, params={\"days\":\"7\", \"destination\":\"Paris, France\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "The API generates personalized trip plans based on the user's specified number of days and location. Using AI, the system recommends popular tourist attractions, local experiences, and accommodations based on user preferences and past travel behavior. The generated trip plans can be customized and adjusted to suit the user's needs, making it a valuable tool for anyone planning a trip.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ai-trip-planner.p.rapidapi.com/'\nquerystring = {\"days\": \"\", \"destination\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ai-trip-planner.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://ai-trip-planner.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "YOUR-API-KEY",
                            "X-RapidAPI-Host": "ai-trip-planner.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "days": "7",
                            "destination": "Paris, France"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ai-trip-planner.p.rapidapi.com/\"\nquerystring = {\"days\": \"3\", \"destination\": \"London,UK\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-trip-planner.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AI Trip Planner",
            "api_arguments_original": [
                {
                    "name": "days",
                    "type": "NUMBER",
                    "description": "",
                    "default": "3"
                },
                {
                    "name": "destination",
                    "type": "STRING",
                    "description": "",
                    "default": "London,UK"
                }
            ]
        }
    },
    {
        "query": "Please check the location for the address with postal code 98765.",
        "model_answer": "requests.get(\"https://viacep.p.rapidapi.com/98765/json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"viacep.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Webservice gratuito para pesquisa de endere\u00e7o via CEP. https://viacep.com.br",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://viacep.p.rapidapi.com/{CEP}/json'\nquerystring = {\"CEP\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://viacep.p.rapidapi.com/{CEP}/json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://viacep.p.rapidapi.com/{CEP}/json\"\nquerystring = {\"CEP\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"viacep.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ViaCEP",
            "api_arguments_original": [
                {
                    "name": "CEP",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "What is the meaning of the word \"banana\" using the English Words API?",
        "model_answer": "requests.get(\"https://english-words2.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"english-words2.p.rapidapi.com\"}, params={\"word\": \"banana\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "4, 5 and 6 letter english words with meanings to create your own word based games",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://english-words2.p.rapidapi.com/'\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://english-words2.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "word",
                    "enum": [
                        "banan"
                    ],
                    "description": ""
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://english-words2.p.rapidapi.com/\"\nquerystring = {\"word\": \"apple\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"english-words2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "English Words",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "apple"
                }
            ]
        }
    },
    {
        "query": "How can I use the Check Disposable Email API to check if the email address \"example@gmail.com\" is valid?",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Amazon Data Scraper is the easiest way to get access to products, price, sales and reviews data from amazon in JSON format",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazon-data-scraper126.p.rapidapi.com/search/mac'\nquerystring = {\"searchQuery\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazon-data-scraper126.p.rapidapi.com/search/mac\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazon-data-scraper126.p.rapidapi.com/search/mac\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazon-data-scraper126.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Amazon Data Scraper _v2",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "mac"
                }
            ]
        }
    },
    {
        "query": "I want to get information about job vacancies at Ubisoft using the Indeed API and display the results as JSON.",
        "model_answer": "requests.get(\"https://indeed12.p.rapidapi.com/company/Ubisoft/jobs\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indeed12.p.rapidapi.com\"}, params={\"locality\": \"\", \"start\": \"1\"}).json()",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get company and job information from indeed",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indeed12.p.rapidapi.com/company/Ubisoft/jobs'\nquerystring = {\"company_id\": \"\", \"locality\": \"\", \"start\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indeed12.p.rapidapi.com/company/Ubisoft/jobs\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://indeed12.p.rapidapi.com/company/Ubisoft/jobs"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "indeed12.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "locality": "",
                            "start": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indeed12.p.rapidapi.com/company/Ubisoft/jobs\"\nquerystring = {\"locality\": \"\", \"start\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indeed12.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "indeed",
            "api_arguments_original": [
                {
                    "name": "company_id",
                    "type": "string",
                    "description": "",
                    "default": "Ubisoft"
                },
                {
                    "name": "locality",
                    "type": "ENUM",
                    "description": "Select the Indeed's country. Each value correspond to a specific indeed subdomain. Default value if missing is 'us'",
                    "default": ""
                },
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "Use to control the pagination of results. If omitted return the first page",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide me the current status of my Indian bank statement with the request id \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"?",
        "model_answer": "requests.get(\"https://indian-bank-statement.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indian-bank-statement.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "The bank statement API helps banks and lenders make decisions b providing outputs about Salary frequency and estimation, current financial health of the individual, any risky behaviour associated with the transactions.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indian-bank-statement.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indian-bank-statement.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://indian-bank-statement.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "indian-bank-statement.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indian-bank-statement.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indian-bank-statement.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indian Bank Statement",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the Myanmar 3D live lottery results?",
        "model_answer": "requests.get(\"https://shwe-2d-live-api.p.rapidapi.com/3d.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shwe-2d-live-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Myanmar 2D ,Thai Stock ,Set",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shwe-2d-live-api.p.rapidapi.com/3d.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shwe-2d-live-api.p.rapidapi.com/3d.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://shwe-2d-live-api.p.rapidapi.com/3d.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "shwe-2d-live-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shwe-2d-live-api.p.rapidapi.com/3d.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shwe-2d-live-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shwe 2D Live Api",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the list of users who liked the media with mediaId 0987654321 on Instagram?",
        "model_answer": "requests.get(\"https://100-success-instagram-api-scalable-robust.p.rapidapi.com/instagram/v1/media/0987654321/likers\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"100-success-instagram-api-scalable-robust.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "750 requests a minute, 100% success rate Instagram API, any scale is supported. Need help/ custom plan? contact us on Telegram: https://t.me/apimaster10 Join the channel for updates: https://t.me/socialdataapis",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://100-success-instagram-api-scalable-robust.p.rapidapi.com/instagram/v1/media/2869228867263131000/likers'\nquerystring = {\"mediaId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://100-success-instagram-api-scalable-robust.p.rapidapi.com/instagram/v1/media/2869228867263131000/likers\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://100-success-instagram-api-scalable-robust.p.rapidapi.com/instagram/v1/media/0987654321/likers"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "100-success-instagram-api-scalable-robust.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://100-success-instagram-api-scalable-robust.p.rapidapi.com/instagram/v1/media/2869228867263131000/likers\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"100-success-instagram-api-scalable-robust.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "100% Success Instagram API - Scalable & Robust",
            "api_arguments_original": [
                {
                    "name": "mediaId",
                    "type": "NUMBER",
                    "description": "",
                    "default": 2869228867263131000
                }
            ]
        }
    },
    {
        "query": "Please provide the real estate transaction records for zipcode 90210, starting from page 3.",
        "model_answer": "requests.get(\"https://real-estate-records.p.rapidapi.com/search/zipcode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"real-estate-records.p.rapidapi.com\"}, params={\"zipcode\": \"90210\", \"page\": \"3\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Real estate transaction records for New York City and whole New Jersey. Public records have been collected from various sites, standardized using Here.com API, with geolocation information for your consumption. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://real-estate-records.p.rapidapi.com/search/zipcode'\nquerystring = {\"zipcode\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://real-estate-records.p.rapidapi.com/search/zipcode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://real-estate-records.p.rapidapi.com/search/zipcode"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "real-estate-records.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "zipcode": "90210",
                            "page": "3"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://real-estate-records.p.rapidapi.com/search/zipcode\"\nquerystring = {\"page\": \"1\", \"zipcode\": \"10019\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"real-estate-records.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Real Estate Records",
            "api_arguments_original": [
                {
                    "name": "zipcode",
                    "type": "STRING",
                    "description": "",
                    "default": "10019"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to log out the user from the API.",
        "model_answer": "requests.get(\"https://tes78.p.rapidapi.com/user/logout\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tes78.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tes78.p.rapidapi.com/user/logout'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tes78.p.rapidapi.com/user/logout\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tes78.p.rapidapi.com/user/logout"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tes78.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tes78.p.rapidapi.com/user/logout\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tes78.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "tes",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check the nutritional facts of an orange in French using DietaGram API.",
        "model_answer": "requests.get(\"https://dietagram.p.rapidapi.com/apiFood.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dietagram.p.rapidapi.com\"}, params={\"name\": \"orange\", \"lang\": \"fr\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Find nutrition facts by food name or by UPC (barcode). API supports English, Russian, Polish, Spanish, Bulgarian, Ukrainian",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dietagram.p.rapidapi.com/apiFood.php'\nquerystring = {\"name\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dietagram.p.rapidapi.com/apiFood.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://dietagram.p.rapidapi.com/apiFood.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "dietagram.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "name": "orange",
                            "lang": "fr"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dietagram.p.rapidapi.com/apiFood.php\"\nquerystring = {\"lang\": \"pl\", \"name\": \"Jab\u0142ko\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dietagram.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DietaGram",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Jab\u0142ko"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "Lang is necessary for search in the certain lang food base.  It will be detected automatically or you could set manually from this set of values (\\\\\\\"en\\\\\\\", \\\\\\\"ru\\\\\\\", \\\\\\\"pl\\\\\\\", \\\\\\\"bg\\\\\\\", \\\\\\\"de\\\\\\\", \\\\\\\"es\\\\\\\", \\\\\\\"ua\\\\\\\", \\\\\\\"by\\\\\\\")",
                    "default": "pl"
                }
            ]
        }
    },
    {
        "query": "I want to check the country statistics for China with the minimum population of 200 million using the Country by API-Ninjas API.",
        "model_answer": "requests.get(\"https://country-by-api-ninjas.p.rapidapi.com/v1/country\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"country-by-api-ninjas.p.rapidapi.com\"}, params={\"name\": \"China\", \"min_population\": 200000000})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Get useful statistics on every country in the world. See more info at https://api-ninjas.com/api/country.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://country-by-api-ninjas.p.rapidapi.com/v1/country'\nquerystring = {\"min_area\": \"\", \"name\": \"\", \"min_fertility\": \"\", \"min_gdp_growth\": \"\", \"limit\": \"\", \"min_population\": \"\", \"max_unemployment\": \"\", \"max_urban_pop_rate\": \"\", \"max_population\": \"\", \"max_gdp\": \"\", \"min_urban_pop_rate\": \"\", \"min_unemployment\": \"\", \"max_area\": \"\", \"min_gdp\": \"\", \"min_infant_mortality\": \"\", \"max_gdp_growth\": \"\", \"max_infant_mortality\": \"\", \"currency\": \"\", \"max_fertility\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://country-by-api-ninjas.p.rapidapi.com/v1/country\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://country-by-api-ninjas.p.rapidapi.com/v1/country"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "country-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "name": "China",
                            "min_population": 200000000
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://country-by-api-ninjas.p.rapidapi.com/v1/country\"\nquerystring = {\"min_area\": \"\", \"name\": \"United States\", \"min_fertility\": \"\", \"min_gdp_growth\": \"\", \"limit\": \"\", \"min_population\": \"\", \"max_unemployment\": \"\", \"max_urban_pop_rate\": \"\", \"max_population\": \"\", \"max_gdp\": \"\", \"min_urban_pop_rate\": \"\", \"min_unemployment\": \"\", \"max_area\": \"\", \"min_gdp\": \"\", \"min_infant_mortality\": \"\", \"max_gdp_growth\": \"\", \"max_infant_mortality\": \"\", \"currency\": \"\", \"max_fertility\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"country-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Country by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "min_area",
                    "type": "NUMBER",
                    "description": "Minimum surface area of country in km2.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Plain English name, 2-letter ISO-3166 alpha-2, or 3-letter ISO-3166 alpha-3 code of country.",
                    "default": "United States"
                },
                {
                    "name": "min_fertility",
                    "type": "NUMBER",
                    "description": "Minimum fertility rate in %.",
                    "default": ""
                },
                {
                    "name": "min_gdp_growth",
                    "type": "NUMBER",
                    "description": "Minimum GDP growth rate in %.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "How many results to return. Must be between **1** and **30**. Default is **5**.",
                    "default": ""
                },
                {
                    "name": "min_population",
                    "type": "NUMBER",
                    "description": "Minimum population of country.",
                    "default": ""
                },
                {
                    "name": "max_unemployment",
                    "type": "NUMBER",
                    "description": "Maximum unemployment rate in %.",
                    "default": ""
                },
                {
                    "name": "max_urban_pop_rate",
                    "type": "NUMBER",
                    "description": "Maximum urban population rate in %.",
                    "default": ""
                },
                {
                    "name": "max_population",
                    "type": "NUMBER",
                    "description": "Maximum population of country.",
                    "default": ""
                },
                {
                    "name": "max_gdp",
                    "type": "NUMBER",
                    "description": "Maximum gross domestic product (GDP) of country, in US Dollars.",
                    "default": ""
                },
                {
                    "name": "min_urban_pop_rate",
                    "type": "NUMBER",
                    "description": "Minimum urban population rate in %.",
                    "default": ""
                },
                {
                    "name": "min_unemployment",
                    "type": "NUMBER",
                    "description": "Minimum unemployment rate in %.",
                    "default": ""
                },
                {
                    "name": "max_area",
                    "type": "NUMBER",
                    "description": "Maximum surface area of country in km2.",
                    "default": ""
                },
                {
                    "name": "min_gdp",
                    "type": "NUMBER",
                    "description": "Minimum gross domestic product (GDP) of country, in US Dollars.",
                    "default": ""
                },
                {
                    "name": "min_infant_mortality",
                    "type": "NUMBER",
                    "description": "Minimum infant mortality rate in %.",
                    "default": ""
                },
                {
                    "name": "max_gdp_growth",
                    "type": "NUMBER",
                    "description": "Maximum GDP growth rate in %.",
                    "default": ""
                },
                {
                    "name": "max_infant_mortality",
                    "type": "NUMBER",
                    "description": "Maximum infant mortality rate in %.",
                    "default": ""
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "3-letter currency code of country (e.g. **USD**).",
                    "default": ""
                },
                {
                    "name": "max_fertility",
                    "type": "NUMBER",
                    "description": "Maximum fertility rate in %.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the top chart songs for 2023 from the Spotify Top Charts 2023 API.",
        "model_answer": "requests.get(\"https://spotify-top-charts-2023.p.rapidapi.com/spotify_top_charts_23\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"spotify-top-charts-2023.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Dataset with global top chart songs during 2022. With danceability, loudness, and energy metrics.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://spotify-top-charts-2022.p.rapidapi.com/spotify_top_charts_22'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://spotify-top-charts-2022.p.rapidapi.com/spotify_top_charts_22\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://spotify-top-charts-2022.p.rapidapi.com/spotify_top_charts_22\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spotify-top-charts-2022.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Spotify Top Charts 2022",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide a Python function call to retrieve a random love quote from the Olato Quotes API and print the response?",
        "model_answer": "requests.get(\"https://olato-quotes.p.rapidapi.com/love\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"olato-quotes.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Olato Quote APIs gives you random quotes about motivation, sucess and love quotes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://olato-quotes.p.rapidapi.com/love'\nquerystring = {\"quotes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://olato-quotes.p.rapidapi.com/love\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://olato-quotes.p.rapidapi.com/love\"\nquerystring = {\"quotes\": \"random quotes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"olato-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Olato Quotes",
            "api_arguments_original": [
                {
                    "name": "quotes",
                    "type": "STRING",
                    "description": "",
                    "default": "random quotes"
                }
            ]
        }
    },
    {
        "query": "Please generate an image with width 1200 and height 900 using the Bruzu API.",
        "model_answer": "requests.get(\"https://bruzu.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"bruzu.p.rapidapi.com\"}, params={\"width\": \"1200\", \"height\": \"900\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Image Generation API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bruzu.p.rapidapi.com/'\nquerystring = {\"width\": \"\", \"backgroundImage\": \"\", \"height\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bruzu.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bruzu.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bruzu.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "width": "1200",
                            "height": "900"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bruzu.p.rapidapi.com/\"\nquerystring = {\"width\": \"500\", \"backgroundImage\": \"https://source.unsplash.com/500x500/\", \"height\": \"500\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bruzu.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bruzu",
            "api_arguments_original": [
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "",
                    "default": "500"
                },
                {
                    "name": "backgroundImage",
                    "type": "STRING",
                    "description": "",
                    "default": "https://source.unsplash.com/500x500/"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "",
                    "default": "500"
                }
            ]
        }
    },
    {
        "query": "Can you help me retrieve product details using the ShopeeApi? I want to search for \"Keripik Pisang\" in the Malaysian region.",
        "model_answer": "requests.get(\"https://shopeeapi2.p.rapidapi.com/id/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"shopeeapi2.p.rapidapi.com\"}, params={\"region\": \"my\", \"q\":\"Keripik Pisang\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Shopee product search api & product details api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shopeeapi2.p.rapidapi.com/id/search'\nquerystring = {\"region\": \"\", \"q\": \"\", \"p\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shopeeapi2.p.rapidapi.com/id/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://shopeeapi2.p.rapidapi.com/id/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "shopeeapi2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "region": "my",
                            "q": "Keripik Pisang"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shopeeapi2.p.rapidapi.com/id/search\"\nquerystring = {\"p\": \"1\", \"q\": \"Keripik Kentang\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shopeeapi2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ShopeeApi",
            "api_arguments_original": [
                {
                    "name": "region",
                    "type": "string",
                    "description": "The region must one of [\\\\\\\"en\\\\\\\", \\\\\\\"sg\\\\\\\", \\\\\\\"my\\\\\\\", \\\\\\\"id\\\\\\\", \\\\\\\"th\\\\\\\", \\\\\\\"vn\\\\\\\", \\\\\\\"ph\\\\\\\", \\\\\\\"tw\\\\\\\", \\\\\\\"br\\\\\\\", \\\\\\\"cl\\\\\\\", \\\\\\\"mx\\\\\\\", \\\\\\\"co\\\\\\\"]",
                    "default": "id"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "A product search query",
                    "default": "Keripik Kentang"
                },
                {
                    "name": "p",
                    "type": "NUMBER",
                    "description": "Page number",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to translate the sentence \"Bonjour, comment \u00e7a va?\" from French to English, using the Google Translate API?",
        "model_answer": "requests.get(\"https://google-translate1.p.rapidapi.com/language/translate/v2/languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"google-translate1.p.rapidapi.com\"}, params={\"target\": \"en\", \"model\": \"\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Dynamically translate between languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://google-translate1.p.rapidapi.com/language/translate/v2/languages'\nquerystring = {\"target\": \"\", \"model\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://google-translate1.p.rapidapi.com/language/translate/v2/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://google-translate1.p.rapidapi.com/language/translate/v2/languages\"\nquerystring = {\"target\": \"\", \"model\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-translate1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google Translate",
            "api_arguments_original": [
                {
                    "name": "target",
                    "type": "STRING",
                    "description": "The target language code for the results. If specified, then the language names are returned in the name field of the response, localized in the target language. If you do not supply a target language, then the name field is omitted from the response and only the language codes are returned.",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "The translation model of the supported languages. Can be either base to return languages supported by the Phrase-Based Machine Translation (PBMT) model, or nmt to return languages supported by the Neural Machine Translation (NMT) model. If omitted, then all supported languages are returned.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you classify the text \"I love to read books and dance to music.\" using the IAB Taxonomy Text Classification API?",
        "model_answer": "requests.get(\"https://iab-taxonomy-text-classification.p.rapidapi.com/classify.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"iab-taxonomy-text-classification.p.rapidapi.com\"}, params={\"text\": \"I love to read books and dance to music.\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Most accurate IAB v2 Taxonomy Text Classification, Economical Pricing, Best in class Infrastructure",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://iab-taxonomy-text-classification.p.rapidapi.com/classify.php'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://iab-taxonomy-text-classification.p.rapidapi.com/classify.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://iab-taxonomy-text-classification.p.rapidapi.com/classify.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "iab-taxonomy-text-classification.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://iab-taxonomy-text-classification.p.rapidapi.com/classify.php\"\nquerystring = {\"text\": \"Bank of Americate all your financial and banking requirements satisfied here.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iab-taxonomy-text-classification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IAB Taxonomy Text Classification",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Bank of Americate all your financial and banking requirements satisfied here."
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the number of Covid-19 cases in India on January 1, 2022?",
        "model_answer": "requests.get(\"https://covid-19-by-api-ninjas.p.rapidapi.com/v1/covid19\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"covid-19-by-api-ninjas.p.rapidapi.com\"}, params={\"type\": \"cases\", \"country\": \"India\", \"date\": \"2022-01-01\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Covid-19 case count and death data for every country in the world. See more info at https://api-ninjas.com/api/covid19.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://covid-19-by-api-ninjas.p.rapidapi.com/v1/covid19'\nquerystring = {\"type\": \"\", \"country\": \"\", \"date\": \"\", \"county\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://covid-19-by-api-ninjas.p.rapidapi.com/v1/covid19\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://covid-19-by-api-ninjas.p.rapidapi.com/v1/covid19"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "covid-19-by-api-ninjas.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "type": "cases",
                            "country": "India",
                            "date": "2022-01-01"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://covid-19-by-api-ninjas.p.rapidapi.com/v1/covid19\"\nquerystring = {\"type\": \"\", \"country\": \"\", \"date\": \"2022-01-01\", \"county\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"covid-19-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Covid-19 by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "type of data to retrieve. Must be either cases or deaths. If not set, cases will be used by default.",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "country name (case insensitive).",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "date to retrieve single-day snapshot. Must be in the form of YYYY-MM-DD (e.g. 2022-01-01)",
                    "default": "2022-01-01"
                },
                {
                    "name": "county",
                    "type": "STRING",
                    "description": "county name for US states (case insensitive). For United States data only. Must be used in conjunction with country (United States) and region (e.g. California).",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "administrative region (also known as state or province in many countries) name (case insensitive). Must be used in conjunction with country. If not set, countries with data broken down by administrative regions will return separate data for each region.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the upcoming match details for league with id 3456 using the Pinaculo API?",
        "model_answer": "requests.get(\"https://pinaculo.p.rapidapi.com/api/pinaculo/leagues/3456/matchups\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pinaculo.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Pinaculo API provides over 15 different sports odds. \nBelow is a list of top sports you\u2019d find there. The list on the API varies with respect to the active seasons, so you can check from the sports endpoint.\nFootball; eSports; Volleyball; Aussie rules; Formula 1; Boxing; Baseball; Basketball; MMA; Rugby; Golf; Soccer; Tennis; Crossfit;\n\nFor custom plans please contact us.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pinaculo.p.rapidapi.com/api/pinaculo/leagues/1980/matchups'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pinaculo.p.rapidapi.com/api/pinaculo/leagues/1980/matchups\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pinaculo.p.rapidapi.com/api/pinaculo/leagues/3456/matchups"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pinaculo.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pinaculo.p.rapidapi.com/api/pinaculo/leagues/1980/matchups\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pinaculo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pinaculo",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "The league id.",
                    "default": 1980
                }
            ]
        }
    },
    {
        "query": "Can you please give me a random yes or no answer?",
        "model_answer": "requests.get(\"https://random-yes-no.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"random-yes-no.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Get some random Yes or No",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-yes-no.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-yes-no.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-yes-no.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-yes-no.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Yes/No",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check if the email 'example@gmail.com' is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "A school's score or placement on the API is designed to be an indicator of a school's performance level and is calculated annually by the California Department of Education",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aqeel-mashkraft-touchbase-v1.p.rapidapi.com/words/hello/synonyms?accessToken=j4d04qyNZGmshUdUIjqOJWoG3AuZp1tt0zxjsn2KQE1Wg0esvG'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aqeel-mashkraft-touchbase-v1.p.rapidapi.com/words/hello/synonyms?accessToken=j4d04qyNZGmshUdUIjqOJWoG3AuZp1tt0zxjsn2KQE1Wg0esvG\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aqeel-mashkraft-touchbase-v1.p.rapidapi.com/words/hello/synonyms?accessToken=j4d04qyNZGmshUdUIjqOJWoG3AuZp1tt0zxjsn2KQE1Wg0esvG\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aqeel-mashkraft-touchbase-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Touchbase",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve the cards for the user with MUID \"user987\" in organization \"orgABC\" and display them in English language.",
        "model_answer": "requests.get(\"https://test2113.p.rapidapi.com/string/cards\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"test2113.p.rapidapi.com\"}, params={\"muid\": \"user987\", \"msid\": \"\", \"orgCode\": \"orgABC\", \"locale\": \"en_US\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "test2",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test2113.p.rapidapi.com/string/cards'\nquerystring = {\"muid\": \"\", \"msid\": \"\", \"orgCode\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test2113.p.rapidapi.com/string/cards\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://test2113.p.rapidapi.com/string/cards"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "test2113.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "muid": "user987",
                            "msid": "",
                            "orgCode": "orgABC",
                            "locale": "en_US"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test2113.p.rapidapi.com/string/cards\"\nquerystring = {\"muid\": \"string\", \"msid\": \"string\", \"locale\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test2113.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test2",
            "api_arguments_original": [
                {
                    "name": "muid",
                    "type": "STRING",
                    "description": "User ID.",
                    "default": "string"
                },
                {
                    "name": "msid",
                    "type": "STRING",
                    "description": "Session ID.",
                    "default": "string"
                },
                {
                    "name": "orgCode",
                    "type": "STRING",
                    "description": "The organization associated with the request.",
                    "default": "string"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "Language used.",
                    "default": "string"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest NAV information for the mutual fund with ISIN IN9876543210.",
        "model_answer": "requests.get(\"https://latest-mutual-fund-nav.p.rapidapi.com/fetchDividends\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"latest-mutual-fund-nav.p.rapidapi.com\"}, params={\"isin\": \"IN9876543210\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "API provides latest NAV information of all mutual funds in India from Association of Mutual Funds of India (AMFI). The database will update as soon as data is updated on AMFI.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://latest-mutual-fund-nav.p.rapidapi.com/fetchDividends'\nquerystring = {\"isin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://latest-mutual-fund-nav.p.rapidapi.com/fetchDividends\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://latest-mutual-fund-nav.p.rapidapi.com/fetchDividends"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "latest-mutual-fund-nav.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "isin": "IN9876543210"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://latest-mutual-fund-nav.p.rapidapi.com/fetchDividends\"\nquerystring = {\"isin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"latest-mutual-fund-nav.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Latest Mutual Fund NAV",
            "api_arguments_original": [
                {
                    "name": "isin",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the information about a passbook with passTypeIdentifier \"pass.example.id2\" and serialNumber \"63c32e8f-48fe-4f9c-8e77-6d0a49b3b714\".",
        "model_answer": "requests.get(\"https://passbook.p.rapidapi.com/passes/pass.example.id2/63c32e8f-48fe-4f9c-8e77-6d0a49b3b714\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"passbook.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "PassSlot is a free service for developers that aims to make Passbook integration easy \u2013 Really easy.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://passbook.p.rapidapi.com/passes/{passTypeIdentifier}/{serialNumber}'\nquerystring = {\"passtypeidentifier\": \"\", \"serialnumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://passbook.p.rapidapi.com/passes/{passTypeIdentifier}/{serialNumber}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://passbook.p.rapidapi.com/passes/pass.example.id2/63c32e8f-48fe-4f9c-8e77-6d0a49b3b714"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "passbook.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://passbook.p.rapidapi.com/passes/{passTypeIdentifier}/{serialNumber}\"\nquerystring = {\"passtypeidentifier\": \"pass.example.id1\", \"serialnumber\": \"27f145d2-5713-4a8d-af64-b269f95ade3b\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"passbook.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Passbook",
            "api_arguments_original": [
                {
                    "name": "passtypeidentifier",
                    "type": "STRING",
                    "description": "",
                    "default": "pass.example.id1"
                },
                {
                    "name": "serialnumber",
                    "type": "STRING",
                    "description": "",
                    "default": "27f145d2-5713-4a8d-af64-b269f95ade3b"
                }
            ]
        }
    },
    {
        "query": "Can you please generate an affiliate link for a product on Lazada?",
        "model_answer": "requests.get(\"https://lazadaapi1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"lazadaapi1.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Wrapper for shopee api\ngenerate a affiliate link for shopee",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shopeeapi1.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shopeeapi1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shopeeapi1.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shopeeapi1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ShopeeApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with a Python function call to obtain the list of categories for products on Amazon and log the response using the RapidAPI?",
        "model_answer": "requests.get(\"https://amazon-data6.p.rapidapi.com/categories-list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"amazon-data6.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Amazon Data provides you with comprehensive information about products on Amazon, including pricing, customer reviews, product descriptions, and more. With this valuable data, you can make informed decisions about your online retail strategy and stay ahead of the competition",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazon-data6.p.rapidapi.com/categories-list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazon-data6.p.rapidapi.com/categories-list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazon-data6.p.rapidapi.com/categories-list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazon-data6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Amazon Data_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please fetch the latest climate change news?",
        "model_answer": "requests.get(\"https://climate-news-api3.p.rapidapi.com/scrap/news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"climate-news-api3.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API showing all the Climate change related news around the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-news-api3.p.rapidapi.com/scrap/news'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-news-api3.p.rapidapi.com/scrap/news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-news-api3.p.rapidapi.com/scrap/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-news-api3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate News API_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the last tournaments details for team with id 275924 in tennis.",
        "model_answer": "requests.get(\"https://allsportsapi2.p.rapidapi.com/api/tennis/team/275924/tournaments/last\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"allsportsapi2.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "AllSportsApi offers real-time football, esports, motorsport, ice hockey, basketball, tennis, baseball, cricket and american football scores. It covers hundreds of sports leagues, cups and tournaments with live updated results, statistics, league tables, video highlights and fixtures.Check our specific sport API's: https://rapidapi.com/user/fluis.lacasse",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://allsportsapi2.p.rapidapi.com/api/tennis/team/275923/tournaments/last'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://allsportsapi2.p.rapidapi.com/api/tennis/team/275923/tournaments/last\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://allsportsapi2.p.rapidapi.com/api/tennis/team/275924/tournaments/last"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "allsportsapi2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://allsportsapi2.p.rapidapi.com/api/tennis/team/275923/tournaments/last\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"allsportsapi2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AllSportsApi",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "The player or team id you want to retrieve the players seasons.",
                    "default": "275923"
                }
            ]
        }
    },
    {
        "query": "Please check if the email address \"example@gmail.com\" is valid.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "24hkhoedep.com l\u00e0 trang b\u00e1n l\u1ebb tr\u1ef1c tuy\u1ebfn tr\u1ef1c thu\u1ed9c C\u00f4ng Ty TNHH Ch\u0103m S\u00f3c Kho\u1ebb V\u00e0 \u0110\u1eb9p Vi\u1ec7t Nam \u2013 m\u1ed9t c\u00f4ng ty chuy\u00ean nh\u1eadp kh\u1ea9u v\u00e0 ph\u00e2n ph\u1ed1i \u0111\u1ed9c quy\u1ec1n cho c\u00e1c h\u00e3ng d\u01b0\u1ee3c m\u1ef9 ph\u1ea9m v\u00e0 trang thi\u1ebft b\u1ecb y t\u1ebf t\u1eeb Ch\u00e2u  u.\n#khoedep #khoedepvietnam #mypham #myphamchauau #duocphamchauau #duocmypham\n#m\u1ee5n th\u1ecbt #r\u1ed1i lo\u1ea1n ti\u00eau h\u00f3a #ng\u1ef1c ch\u1ea3y x\u1ec7\n\u0110\u1ecba ch\u1ec9 : 40/19 B\u00e0u C\u00e1t 2, Ph\u01b0\u1eddng 14, Qu\u1eadn T\u00e2n B\u00ecnh, TP. HCM, Vi\u1ec7t Nam\nHotline 028 - 6296 2262 | 0931320062\nEmail: hbcvn@healthbeautycare.com.vn\nGoogle map https://www....",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://24hkhoedep.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://24hkhoedep.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://24hkhoedep.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"24hkhoedep.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "24hkhoedep",
            "api_arguments_original": []
        }
    },
    {
        "query": "Translate the text \"Bonjour, comment \u00e7a va?\" into Spanish.",
        "model_answer": "requests.get(\"https://translate-language.p.rapidapi.com/translate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"translate-language.p.rapidapi.com\"}, params={\"text\": \"Bonjour, comment \u00e7a va?\", \"target_language\": \"es\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Translate Language - Quickly translate your text into all the different languages .\n\nThe Translate Language API is a service that enables the translation of a text passage into various languages. This API allows users to input a text that needs to be translated and select the desired target language.\n\nThe API provides a convenient way to automatically translate text between different languages without the need for manual translation work. By utilizing the API, users can translate sentences, p...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translate-language.p.rapidapi.com/supported-languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translate-language.p.rapidapi.com/supported-languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"text\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translate-language.p.rapidapi.com/supported-languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translate-language.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translate Language",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the data for school information using the \"sekolah\" API.",
        "model_answer": "requests.get(\"https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\",\"X-RapidAPI-Host\":\"https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "penilaian sekolah",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sekolah.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "sekolah",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the historical prices chart for the company GOOGL for the last 3 months.",
        "model_answer": "requests.get(\"https://finshorts.p.rapidapi.com/history_chart_monthly.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"finshorts.p.rapidapi.com\"}, params={\"q\": \"googl\", \"month\": \"3\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Finshorts is a platform where you can access companies Stock Quote, Company Info, Historical Prices Chart, Historical  Dividends, Cash flow statement in realtime",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://finshorts.p.rapidapi.com/history_chart_monthly.php'\nquerystring = {\"q\": \"\", \"month\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://finshorts.p.rapidapi.com/history_chart_monthly.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://finshorts.p.rapidapi.com/history_chart_monthly.php"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "finshorts.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "googl",
                            "month": "3"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://finshorts.p.rapidapi.com/history_chart_monthly.php\"\nquerystring = {\"q\": \"aapl\", \"month\": \"6\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"finshorts.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Finshorts",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "aapl"
                },
                {
                    "name": "month",
                    "type": "STRING",
                    "description": "",
                    "default": "6"
                }
            ]
        }
    },
    {
        "query": "Find me relevant businesses near Los Angeles.",
        "model_answer": "requests.get(\"https://data-axle-business-address-search.p.rapidapi.com/v1/places/search/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"data-axle-business-address-search.p.rapidapi.com\"}, params={\"limit\": \"20\", \"packages\": \"standard_v1\", \"query\":\"Los Angeles\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Find relevant businesses in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://data-axle-business-address-search.p.rapidapi.com/v1/places/search/'\nquerystring = {\"limit\": \"\", \"packages\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://data-axle-business-address-search.p.rapidapi.com/v1/places/search/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://data-axle-business-address-search.p.rapidapi.com/v1/places/search/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "data-axle-business-address-search.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://data-axle-business-address-search.p.rapidapi.com/v1/places/search/\"\nquerystring = {\"limit\": \"20\", \"query\": \"301 W Main Street\", \"packages\": \"standard_v1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"data-axle-business-address-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Data Axle Business Address Search",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                },
                {
                    "name": "packages",
                    "type": "STRING",
                    "description": "",
                    "default": "standard_v1"
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "301 W Main Street"
                }
            ]
        }
    },
    {
        "query": "Please retrieve the first page of Amazon product reviews for ASIN B01H6GUCCQ on the domain amazon.co.uk.",
        "model_answer": "requests.get(\"https://amazon-product-reviews1.p.rapidapi.com/amazonreviews/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"amazon-product-reviews1.p.rapidapi.com\"}, params={\"pageNum\":1, \"domain\":\"amazon.co.uk\", \"asin\":\"B01H6GUCCQ\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Amazon Product Reviews\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazon-product-reviews1.p.rapidapi.com/amazonreviews/'\nquerystring = {\"pageNum\": \"\", \"domain\": \"\", \"asin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazon-product-reviews1.p.rapidapi.com/amazonreviews/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://amazon-product-reviews1.p.rapidapi.com/amazonreviews/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "amazon-product-reviews1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "pageNum": 1,
                            "domain": "amazon.co.uk",
                            "asin": "B01H6GUCCQ"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazon-product-reviews1.p.rapidapi.com/amazonreviews/\"\nquerystring = {\"pageNum\": \"1\", \"domain\": \"amazon.com\", \"asin\": \"B01H6GUCCQ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazon-product-reviews1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Amazon Product Reviews",
            "api_arguments_original": [
                {
                    "name": "pageNum",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "amazon.com"
                },
                {
                    "name": "asin",
                    "type": "STRING",
                    "description": "",
                    "default": "B01H6GUCCQ"
                }
            ]
        }
    },
    {
        "query": "Please provide the details of the menu item with ID 5a76c927bb5d660001e09731 in Chinese for Viva City venue.",
        "model_answer": "requests.get(\"https://viva-city-documentation.p.rapidapi.com/venue-i18n/menus/5a76c927bb5d660001e09731/details\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"viva-city-documentation.p.rapidapi.com\"}, params={\"lang\": \"zh-hans\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Viva City APIs for Venue &amp; Menu",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://viva-city-documentation.p.rapidapi.com/venue-i18n/menus/5a76c927bb5d660001e09731/details'\nquerystring = {\"id\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://viva-city-documentation.p.rapidapi.com/venue-i18n/menus/5a76c927bb5d660001e09731/details\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://viva-city-documentation.p.rapidapi.com/venue-i18n/menus/5a76c927bb5d660001e09731/details"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "viva-city-documentation.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "lang": "zh-hans"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://viva-city-documentation.p.rapidapi.com/venue-i18n/menus/5a76c927bb5d660001e09731/details\"\nquerystring = {\"lang\": \"zh-hans\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"viva-city-documentation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Viva City Documentation",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "You can get the list of the menu ids from ```/vebue-i8n/menus/{id}/details```  with the key of  **\"menu_item\"**",
                    "default": "5a76c927bb5d660001e09731"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "zh-hans"
                }
            ]
        }
    },
    {
        "query": "Can you give me the BUY/SELL signals and trends for Litecoin on the Binance exchange in the spot market?",
        "model_answer": "requests.get(\"https://greenlight3.p.rapidapi.com/signals\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"greenlight3.p.rapidapi.com\"}, params={\"coin\": \"LTC\", \"exchange\": \"Binance\", \"market_type\":\"SPOT\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "BUY/SELL signals and trends from a range of popular technical indicators (24 total)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://greenlight3.p.rapidapi.com/signals'\nquerystring = {\"coin\": \"\", \"exchange\": \"\", \"market_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://greenlight3.p.rapidapi.com/signals\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://greenlight3.p.rapidapi.com/signals"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "greenlight3.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "coin": "LTC",
                            "exchange": "Binance",
                            "market_type": "SPOT"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://greenlight3.p.rapidapi.com/signals\"\nquerystring = {\"coin\": \"BTC\", \"exchange\": \"Bybit\", \"market_type\": \"SPOT\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"greenlight3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Greenlight",
            "api_arguments_original": [
                {
                    "name": "coin",
                    "type": "STRING",
                    "description": "BTC, ETH or TRX",
                    "default": "BTC"
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Binance, Bybit, Huobi, Kucoin, Coinex, MXC, Gate",
                    "default": "Bybit"
                },
                {
                    "name": "market_type",
                    "type": "STRING",
                    "description": "SPOT or FUTURES",
                    "default": "SPOT"
                }
            ]
        }
    },
    {
        "query": "Please check if the domains 'example.com', 'test.org', and 'foo.xyz' are available for registration.",
        "model_answer": "requests.get(\"https://pointsdb-bulk-domain-check-v1.p.rapidapi.com/domain_check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pointsdb-bulk-domain-check-v1.p.rapidapi.com\"}, params={\"domains\": \"example.com,test.org,foo.xyz\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Bulk Domain Availability Check. All tlds supported. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pointsdb-bulk-domain-check-v1.p.rapidapi.com/domain_check'\nquerystring = {\"domains\": \"\", \"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pointsdb-bulk-domain-check-v1.p.rapidapi.com/domain_check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://pointsdb-bulk-domain-check-v1.p.rapidapi.com/domain_check"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "pointsdb-bulk-domain-check-v1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domains": "example.com,test.org,foo.xyz"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pointsdb-bulk-domain-check-v1.p.rapidapi.com/domain_check\"\nquerystring = {\"domain\": \"\", \"domains\": \"foo.com,example.org,somefoobardomain.io\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pointsdb-bulk-domain-check-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bulk Domain Check",
            "api_arguments_original": [
                {
                    "name": "domains",
                    "type": "STRING",
                    "description": "Coma separated list of domains.",
                    "default": "foo.com,example.org,somefoobardomain.io"
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "domain name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the live games and pre-game odds for Betway? I want to log the response using the Python requests library.",
        "model_answer": "requests.get(\"https://betway.p.rapidapi.com/matches/betway\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"betway.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Games and pre-game Odds for Betway",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://betway.p.rapidapi.com/matches/betway'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://betway.p.rapidapi.com/matches/betway\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://betway.p.rapidapi.com/matches/betway\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"betway.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Betway",
            "api_arguments_original": []
        }
    },
    {
        "query": "What is the latitude and longitude of the location with start latitude 37.7749 and start longitude -122.4194 and end latitude 34.0522 and end longitude -118.2437 in Tunisia?",
        "model_answer": "requests.get(\"https://tunisia-api.p.rapidapi.com/directions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tunisia-api.p.rapidapi.com\"}, params={\"start_lat\": \"37.7749\", \"start_lon\": \"-122.4194\", \"end_lat\": \"34.0522\", \"end_lon\": \"-118.2437\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "The Tunisia Lookup API allows you to look up the latitude, longitude, and address of a location in Tunisia.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tunisia-api.p.rapidapi.com/directions'\nquerystring = {\"start_lon\": \"\", \"end_lon\": \"\", \"start_lat\": \"\", \"end_lat\": \"\", \"distance_unit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tunisia-api.p.rapidapi.com/directions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tunisia-api.p.rapidapi.com/directions"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tunisia-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "start_lat": "37.7749",
                            "start_lon": "-122.4194",
                            "end_lat": "34.0522",
                            "end_lon": "-118.2437"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tunisia-api.p.rapidapi.com/directions\"\nquerystring = {\"start_lon\": \"10.7603483\", \"distance_unit\": \"km\", \"end_lon\": \"10.103167361330975\", \"start_lat\": \"34.797783\", \"end_lat\": \"36.81395975\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tunisia-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tunisia API",
            "api_arguments_original": [
                {
                    "name": "start_lon",
                    "type": "NUMBER",
                    "description": "Longitude of the starting point (required)",
                    "default": "10.7603483"
                },
                {
                    "name": "end_lon",
                    "type": "NUMBER",
                    "description": "Longitude of the ending point (required)",
                    "default": "10.103167361330975"
                },
                {
                    "name": "start_lat",
                    "type": "NUMBER",
                    "description": "Latitude of the starting point (required)",
                    "default": "34.797783"
                },
                {
                    "name": "end_lat",
                    "type": "NUMBER",
                    "description": "Latitude of the ending point (required)",
                    "default": "36.81395975"
                },
                {
                    "name": "distance_unit",
                    "type": "STRING",
                    "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
                    "default": "km"
                }
            ]
        }
    },
    {
        "query": "Can you please provide a Python function call to retrieve the prematch data for a specific sports event using the Sports Betting API and display the response as JSON?",
        "model_answer": "requests.get(\"https://sports-betting-api.p.rapidapi.com/api/v2/prematch\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sports-betting-api.p.rapidapi.com\"}, params={\"sp\": \"\", \"lang\": \"en\", \"lid\": \"\"}).json()",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Get up and running in less than 5 minutes with our comprehensive developer documentation. Get Start - https://bet365soft.com/docs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sports-betting-api.p.rapidapi.com/api/v2/prematch'\nquerystring = {\"sp\": \"\", \"lang\": \"\", \"lid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sports-betting-api.p.rapidapi.com/api/v2/prematch\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://sports-betting-api.p.rapidapi.com/api/v2/prematch"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "sports-betting-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "sp": "",
                            "lang": "en",
                            "lid": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sports-betting-api.p.rapidapi.com/api/v2/prematch\"\nquerystring = {\"sp\": \"\", \"lang\": \"en\", \"lid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sports-betting-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sports Betting API",
            "api_arguments_original": [
                {
                    "name": "sp",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "lid",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide the details for a user with ID=10 from the Reqres API?",
        "model_answer": "requests.get(\"https://reqres-dont-change.p.rapidapi.com/api/users/10\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"reqres-dont-change.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reqres-dont-change.p.rapidapi.com/api/users'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reqres-dont-change.p.rapidapi.com/api/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reqres-dont-change.p.rapidapi.com/api/users\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reqres-dont-change.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Reqres - dont change!",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I generate an article from the article ID 2f14bf7a-b915-47ce-996e-b599abc04faf using the Articles Generator API?",
        "model_answer": "requests.get(\"https://articles-generator.p.rapidapi.com/articles/get/2f14bf7a-b915-47ce-996e-b599abc04faf\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"articles-generator.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Generate articles about specific subjects or niches, with specific word length, keyword density and multiple other parameters.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://articles-generator.p.rapidapi.com/articles/get/2f14bf7a-b915-47ce-996e-b599abc04faf'\nquerystring = {\"article-id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://articles-generator.p.rapidapi.com/articles/get/2f14bf7a-b915-47ce-996e-b599abc04faf\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://articles-generator.p.rapidapi.com/articles/get/2f14bf7a-b915-47ce-996e-b599abc04faf"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "articles-generator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://articles-generator.p.rapidapi.com/articles/get/2f14bf7a-b915-47ce-996e-b599abc04faf\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"articles-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Articles Generator",
            "api_arguments_original": [
                {
                    "name": "article-id",
                    "type": "string",
                    "description": "Article ID that was outputted by the generate new article endpoint",
                    "default": "2f14bf7a-b915-47ce-996e-b599abc04faf"
                }
            ]
        }
    },
    {
        "query": "I want to get the details of the user with id '456' from the Node Express API Tutorial.",
        "model_answer": "requests.get(\"https://node-express-api-tutorial.p.rapidapi.com/users/456\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"node-express-api-tutorial.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "An API that allows users to be stored, retrieved, and deleted from a database.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://node-express-api-tutorial.p.rapidapi.com/users/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://node-express-api-tutorial.p.rapidapi.com/users/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://node-express-api-tutorial.p.rapidapi.com/users/456"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "node-express-api-tutorial.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://node-express-api-tutorial.p.rapidapi.com/users/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"node-express-api-tutorial.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Node Express API Tutorial",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you predict the credit score for an individual with the following information: age 35, income $50,000, and education level of \"Master's degree\"?",
        "model_answer": "requests.get(\"https://credit-card-prediction.p.rapidapi.com/1/2/3/4\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\",\"X-RapidAPI-Host\":\"https://credit-card-prediction.p.rapidapi.com/1/2/3/4\"}, params={\"age\": 35, \"income\": 50000, \"education\": \"Master's degree\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "At Credit Card, we know that your time is valuable. That\u2019s why we offer a fast and easy way to get the information you need. With our new API, you can get the data you need in seconds",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://credit-card-prediction.p.rapidapi.com/1/2/3/4'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://credit-card-prediction.p.rapidapi.com/1/2/3/4\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"age\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://credit-card-prediction.p.rapidapi.com/1/2/3/4\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"credit-card-prediction.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Credit card prediction",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to get the current weather using the WeatherTest API and print the response?",
        "model_answer": "requests.get(\"https://weathertest19.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weathertest19.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Get random weather",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weathertest19.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weathertest19.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weathertest19.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weathertest19.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WeatherTest",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to verify the driving license with the request id \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\" using the Driving License Verification API.",
        "model_answer": "requests.get(\"https://driving-license-verification.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"driving-license-verification.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "IDfy\u2019s Driving License Verification API instantly verifies details of a driving license by confirming them from the Government database.  \n\nThis makes your onboarding process safer, faster, and smarter. With IDfy\u2019s DL verification API, you can be confident that the individuals you onboard hold a valid DL and have provided you with the right identity proof. \n\nCouple it with IDfy\u2019s Driving License OCR API to make your identity verification and onboarding process seamless and instant.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://driving-license-verification.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://driving-license-verification.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://driving-license-verification.p.rapidapi.com/v3/tasks"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "driving-license-verification.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "request_id": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://driving-license-verification.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"driving-license-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Driving License Verification",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "I have a PDF file called \"example.pdf\". Extract the text from it using the PDF Text Extractor API.",
        "model_answer": "requests.get(\"https://pdf-text-extractor.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pdf-text-extractor.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An api that helps you to extract all text in a PDF format file with ease",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pdf-text-extractor.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pdf-text-extractor.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pdf-text-extractor.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pdf-text-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PDF Text Extractor",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a Python function call to check the pricing details for a gaming laptop using the H30 E-commerce Data scraper API?",
        "model_answer": "requests.get(\"https://h30-e-commerce-data-scraper.p.rapidapi.com/search/gaming laptop\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"h30-e-commerce-data-scraper.p.rapidapi.com\"}, params={\"api_key\": \"\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "H30 E-commerce Data scraper is the simplest way to get  access to product's details from Amazon in JSON format",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://h30-e-commerce-data-scraper.p.rapidapi.com/search/gaming laptop '\nquerystring = {\"searchQuery\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://h30-e-commerce-data-scraper.p.rapidapi.com/search/gaming laptop \"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://h30-e-commerce-data-scraper.p.rapidapi.com/search/gaming laptop"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "h30-e-commerce-data-scraper.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "api_key": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://h30-e-commerce-data-scraper.p.rapidapi.com/search/gaming laptop \"\nquerystring = {\"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"h30-e-commerce-data-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "H30 E-commerce Data scraper",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "gaming laptop "
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you create a Python function call to check if the email address contact@example.com is disposable?",
        "model_answer": "requests.get(\"https://disposable-email-checker1.p.rapidapi.com/validate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"disposable-email-checker1.p.rapidapi.com\"}, params={\"domain\": \"contact@example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This is an easy way to check if a email address is disposable or valid so you can avoid fake users on your database.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://disposable-email-checker1.p.rapidapi.com/validate'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://disposable-email-checker1.p.rapidapi.com/validate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://disposable-email-checker1.p.rapidapi.com/validate"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "disposable-email-checker1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "domain": "contact@example.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://disposable-email-checker1.p.rapidapi.com/validate\"\nquerystring = {\"domain\": \"gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"disposable-email-checker1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Disposable Email Checker",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "gmail.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the current weather in Los Angeles?",
        "model_answer": "requests.get(\"https://weatherjs1.p.rapidapi.comhttp://127.0.0.1:5500\",params={'city':'Los Angeles'})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "testing api project",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weatherjs1.p.rapidapi.comhttp://127.0.0.1:5500'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weatherjs1.p.rapidapi.comhttp://127.0.0.1:5500\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{'city'"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weatherjs1.p.rapidapi.comhttp://127.0.0.1:5500\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weatherjs1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "weatherJS",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please get me a list of remote jobs from GitHub.",
        "model_answer": "requests.get(\"https://remote-jobs-api.p.rapidapi.com/jobs\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"remote-jobs-api.p.rapidapi.com\"}, params={\"company\": \"GitHub\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Get a list of remote jobs from different resources: weworkremotely, remoteok, GitHub, StackOverflow, Twitch, Mailchimp, Figma...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://remote-jobs-api.p.rapidapi.com/jobs'\nquerystring = {\"company\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://remote-jobs-api.p.rapidapi.com/jobs\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://remote-jobs-api.p.rapidapi.com/jobs"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "remote-jobs-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "company": "GitHub"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://remote-jobs-api.p.rapidapi.com/jobs\"\nquerystring = {\"company\": \"shopify\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"remote-jobs-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Remote Jobs API",
            "api_arguments_original": [
                {
                    "name": "company",
                    "type": "STRING",
                    "description": "",
                    "default": "shopify"
                },
                {
                    "name": "category",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain the full information of a TikTok video without watermark using the specified URL, and log the output?",
        "model_answer": "requests.get(\"https://tiktok-full-video-info-without-watermark.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tiktok-full-video-info-without-watermark.p.rapidapi.com\"}, params={\"url\": \"https://www.tiktok.com/@user/video/1234567890\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "A fast and stable API that uses a request directly to the TikTok server.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-full-video-info-without-watermark.p.rapidapi.com/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-full-video-info-without-watermark.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://tiktok-full-video-info-without-watermark.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "tiktok-full-video-info-without-watermark.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "url": "https://www.tiktok.com/@user/video/1234567890"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-full-video-info-without-watermark.p.rapidapi.com/\"\nquerystring = {\"url\": \"https://www.tiktok.com/@pepsi/video/7132906413705350446\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-full-video-info-without-watermark.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok Full Video Info (without watermark)",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.tiktok.com/@pepsi/video/7132906413705350446"
                }
            ]
        }
    },
    {
        "query": "Please provide me the percent change of the Inflation Rate for Food Prices for the last 3 years.",
        "model_answer": "requests.get(\"https://food-price-inflation.p.rapidapi.com/yUNJ9j/food_data\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"food-price-inflation.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "This API provides the percent change of the Inflations Rate for the Food Prices in the last 2 Years independent of the Price Index (CPI) for food is a component of the all-items CPI.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://food-price-inflation.p.rapidapi.com/yUNJ9j/food_data'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://food-price-inflation.p.rapidapi.com/yUNJ9j/food_data\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://food-price-inflation.p.rapidapi.com/yUNJ9j/food_data"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "food-price-inflation.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://food-price-inflation.p.rapidapi.com/yUNJ9j/food_data\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"food-price-inflation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Food Price Inflation",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check if the email address jane@example.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"jane@example.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "fewfwe",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dxjewof.p.rapidapi.combgnhyt'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dxjewof.p.rapidapi.combgnhyt\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dxjewof.p.rapidapi.combgnhyt\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dxjewof.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dxjewof",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the live games and pre-game odds for Admiralbet?",
        "model_answer": "requests.get(\"https://admiralbet.p.rapidapi.com/matches/admiralbet\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"admiralbet.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Games and pre-game Odds for Admiralbet",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://admiralbet.p.rapidapi.com/matches/admiralbet'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://admiralbet.p.rapidapi.com/matches/admiralbet\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://admiralbet.p.rapidapi.com/matches/admiralbet"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "admiralbet.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://admiralbet.p.rapidapi.com/matches/admiralbet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"admiralbet.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Admiralbet",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the English synonyms for the word \"gorgeous\".",
        "model_answer": "requests.get(\"https://english-synonyms.p.rapidapi.com/bourgeois\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"english-synonyms.p.rapidapi.com\"}, params={\"word\":\"gorgeous\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Get all english synonyms from a given word",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://english-synonyms.p.rapidapi.com/bourgeois'\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://english-synonyms.p.rapidapi.com/bourgeois\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://english-synonyms.p.rapidapi.com/bourgeois"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "english-synonyms.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "word": "gorgeous"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://english-synonyms.p.rapidapi.com/bourgeois\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"english-synonyms.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "English synonyms",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "string",
                    "description": "An english word",
                    "default": "bourgeois"
                }
            ]
        }
    },
    {
        "query": "I want to check if the company with the CNPJ number 987654321 has a street address.",
        "model_answer": "requests.get(\"https://consulta-cnpj-tempo-real.p.rapidapi.com/office/987654321/street\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"consulta-cnpj-tempo-real.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://consulta-cnpj-tempo-real.p.rapidapi.com/office/37335118000180/street'\nquerystring = {\"CNPJ\": \"\", \"fov\": \"\", \"height\": \"\", \"width\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://consulta-cnpj-tempo-real.p.rapidapi.com/office/37335118000180/street\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://consulta-cnpj-tempo-real.p.rapidapi.com/office/37335118000180/street\"\nquerystring = {\"fov\": \"\", \"height\": \"\", \"width\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"consulta-cnpj-tempo-real.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Consulta CNPJ Tempo Real",
            "api_arguments_original": [
                {
                    "name": "CNPJ",
                    "type": "string",
                    "description": "",
                    "default": "37335118000180"
                },
                {
                    "name": "fov",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the current standings and table for the German Bundesliga for the 2023 season?",
        "model_answer": "requests.get(\"https://bundesliga-standings.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"bundesliga-standings.p.rapidapi.com\"}, params={\"season\": \"2023\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "German Bundesliga Standings & Table",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bundesliga-standings.p.rapidapi.com/'\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bundesliga-standings.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://bundesliga-standings.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "bundesliga-standings.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "season": "2023"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bundesliga-standings.p.rapidapi.com/\"\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bundesliga-standings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bundesliga Standings",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check if the product with ID 987654 is available on Otto.de, and retrieve the results sorted by popularity?",
        "model_answer": "requests.get(\"https://axesso-otto-data-service.p.rapidapi.com/ott/otto-lookup-reviews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"axesso-otto-data-service.p.rapidapi.com\"}, params={\"page\": \"1\", \"productId\": \"987654\", \"sortBy\": \"popularity\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Our Otto Data Service API provides real-time data about product details, keyword search result and reviews from the german online shop Otto.de.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://axesso-otto-data-service.p.rapidapi.com/ott/otto-lookup-reviews'\nquerystring = {\"page\": \"\", \"productId\": \"\", \"sortBy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://axesso-otto-data-service.p.rapidapi.com/ott/otto-lookup-reviews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://axesso-otto-data-service.p.rapidapi.com/ott/otto-lookup-reviews"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "axesso-otto-data-service.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "page": "1",
                            "productId": "987654",
                            "sortBy": "popularity"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://axesso-otto-data-service.p.rapidapi.com/ott/otto-lookup-reviews\"\nquerystring = {\"sortBy\": \"newest\", \"page\": \"1\", \"productId\": \"417479273\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"axesso-otto-data-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Axesso - Otto Data Service",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "productId",
                    "type": "STRING",
                    "description": "",
                    "default": "417479273"
                },
                {
                    "name": "sortBy",
                    "type": "STRING",
                    "description": "",
                    "default": "newest"
                }
            ]
        }
    },
    {
        "query": "I want to get information about crops with the common name \"Maize\" and the specie name \"Zea mays\".",
        "model_answer": "requests.get(\"https://crops.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"crops.p.rapidapi.com\"}, params={\"commonName\": \"Maize\", \"specieName\": \"Zea mays\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Plants for agricultural purposes in Spain: info about taxonomy, growing period, fruit type, categorization, and other. Total of 293 species. Being possible to filter by any of the characteristics mentioned above.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crops.p.rapidapi.com/'\nquerystring = {\"subcategory\": \"\", \"family\": \"\", \"commonName\": \"\", \"specieName\": \"\", \"consistency\": \"\", \"cropCycle\": \"\", \"fruitType\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crops.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://crops.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "crops.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "commonName": "Maize",
                            "specieName": "Zea mays"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crops.p.rapidapi.com/\"\nquerystring = {\"subcategory\": \"De invierno\", \"family\": \"Poaceae\", \"commonName\": \"Trigo\", \"specieName\": \"Triticum\", \"consistency\": \"herb\u00e1cea\", \"cropCycle\": \"anual\", \"fruitType\": \"cariopsis\", \"category\": \"Cereales de grano\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crops.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crops",
            "api_arguments_original": [
                {
                    "name": "subcategory",
                    "type": "STRING",
                    "description": "",
                    "default": "De invierno"
                },
                {
                    "name": "family",
                    "type": "STRING",
                    "description": "",
                    "default": "Poaceae"
                },
                {
                    "name": "commonName",
                    "type": "STRING",
                    "description": "",
                    "default": "Trigo"
                },
                {
                    "name": "specieName",
                    "type": "STRING",
                    "description": "",
                    "default": "Triticum"
                },
                {
                    "name": "consistency",
                    "type": "STRING",
                    "description": "",
                    "default": "herb\u00e1cea"
                },
                {
                    "name": "cropCycle",
                    "type": "STRING",
                    "description": "",
                    "default": "anual"
                },
                {
                    "name": "fruitType",
                    "type": "STRING",
                    "description": "",
                    "default": "cariopsis"
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": "Cereales de grano"
                }
            ]
        }
    },
    {
        "query": "I want to search for images of dogs.",
        "model_answer": "requests.get(\"https://image-search19.p.rapidapi.com/v2/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"image-search19.p.rapidapi.com\"}, params={\"q\": \"dogs\", \"suggestion_query\": \"\", \"hl\": \"en\", \"cursor\": \"\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "The Image Search API is a tool that allows developers to integrate image search functionality into their applications or websites.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://image-search19.p.rapidapi.com/v2/'\nquerystring = {\"q\": \"\", \"suggestion_query\": \"\", \"hl\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://image-search19.p.rapidapi.com/v2/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://image-search19.p.rapidapi.com/v2/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "image-search19.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "q": "dogs",
                            "suggestion_query": "",
                            "hl": "en",
                            "cursor": ""
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://image-search19.p.rapidapi.com/v2/\"\nquerystring = {\"suggestion_query\": \"\", \"hl\": \"en\", \"cursor\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-search19.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Image Search",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Search Query",
                    "default": ""
                },
                {
                    "name": "suggestion_query",
                    "type": "STRING",
                    "description": "Suggestion Query Token",
                    "default": ""
                },
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "Language",
                    "default": "en"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Cursor Token",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the details of order ID 987654 using the firstAPI_v2.",
        "model_answer": "requests.get(\"https://firstapi116.p.rapidapi.com/store/order/10\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"firstapi116.p.rapidapi.com\"}, params={\"orderid\": \"987654\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "TESTING PURPOSE",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://firstapi116.p.rapidapi.com/store/order/10'\nquerystring = {\"orderid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://firstapi116.p.rapidapi.com/store/order/10\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://firstapi116.p.rapidapi.com/store/order/10"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "firstapi116.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "orderid": "987654"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://firstapi116.p.rapidapi.com/store/order/10\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"firstapi116.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "firstAPI_v2",
            "api_arguments_original": [
                {
                    "name": "orderid",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to track the actions of the user with user id \"54321\" on the site with site id \"example.com\" using the JSMon API.",
        "model_answer": "requests.get(\"https://jsmon.p.rapidapi.com/track/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"jsmon.p.rapidapi.com\"}, params={\"site_id\": \"example.com\", \"session_id\": \"1380352501-B90e7Cppo2\", \"user_id\": \"54321\", \"callback_id\": \"_1380352523030\", \"action_type\": \"1\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "JSMon is an interactive tracking & conversion tool.\r\nGet started to understand who is on your site at a particular moment: occasional visitor or potential customer. And interact with him.\r\nOur system will analyze visitor's behavioral factors and offer optimal variants for interaction with him.\r\n1) We help to understand who are your visitors on line.\r\n2) We make it possible to set up behavioral models you like.\r\n3) We offer the visitor what he is interested in.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jsmon.p.rapidapi.com/track/'\nquerystring = {\"site_id\": \"\", \"session_id\": \"\", \"user_id\": \"\", \"callback_id\": \"\", \"action_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jsmon.p.rapidapi.com/track/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://jsmon.p.rapidapi.com/track/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "jsmon.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "site_id": "example.com",
                            "session_id": "1380352501-B90e7Cppo2",
                            "user_id": "54321",
                            "callback_id": "_1380352523030",
                            "action_type": "1"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jsmon.p.rapidapi.com/track/\"\nquerystring = {\"site_id\": \"demo\", \"session_id\": \"1380352501-B90e7Cppo2\", \"user_id\": \"A1F57492-628D-93B4-8313-3D3143713A1E\", \"callback_id\": \"_1380352523030\", \"action_type\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jsmon.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "JSMon",
            "api_arguments_original": [
                {
                    "name": "site_id",
                    "type": "STRING",
                    "description": "Site ID",
                    "default": "demo"
                },
                {
                    "name": "session_id",
                    "type": "STRING",
                    "description": "Session ID",
                    "default": "1380352501-B90e7Cppo2"
                },
                {
                    "name": "user_id",
                    "type": "STRING",
                    "description": "User ID",
                    "default": "A1F57492-628D-93B4-8313-3D3143713A1E"
                },
                {
                    "name": "callback_id",
                    "type": "STRING",
                    "description": "Callback function",
                    "default": "_1380352523030"
                },
                {
                    "name": "action_type",
                    "type": "STRING",
                    "description": "Action ID",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the timezone, DST offset, and UTC offset of the coordinates -90.000000 and 30.000000 ?",
        "model_answer": "requests.get(\"https://timezone-by-coordinates.p.rapidapi.com/timezone\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"timezone-by-coordinates.p.rapidapi.com\"}, params={\"lng\": -90.000000, \"timestamp\": 1646179205, \"lat\": 30.000000})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Get the Timezone, DST offset, and UTC offset of a location.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://timezone-by-coordinates.p.rapidapi.com/timezone'\nquerystring = {\"lng\": \"\", \"timestamp\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://timezone-by-coordinates.p.rapidapi.com/timezone\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://timezone-by-coordinates.p.rapidapi.com/timezone"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "timezone-by-coordinates.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://timezone-by-coordinates.p.rapidapi.com/timezone\"\nquerystring = {\"lng\": \"-123.045868\", \"timestamp\": \"1646179205\", \"lat\": \"49.282409\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"timezone-by-coordinates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Timezone by Coordinates",
            "api_arguments_original": [
                {
                    "name": "lng",
                    "type": "NUMBER",
                    "description": "Longitude",
                    "default": "-123.045868"
                },
                {
                    "name": "timestamp",
                    "type": "NUMBER",
                    "description": "The desired time as **seconds **since midnight, January 1, 1970 UTC.",
                    "default": "1646179205"
                },
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "Latitude",
                    "default": "49.282409"
                }
            ]
        }
    },
    {
        "query": "Please provide the list of champions in League of Legends.",
        "model_answer": "requests.get(\"https://league-of-legends-champion-informaion.p.rapidapi.com/LolInfo/GetChampions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"league-of-legends-champion-informaion.p.rapidapi.com\"}, params={\"champions\": \"\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "API that will return a Champion object containing a list of Abilities including the champions passive ability. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://league-of-legends-champion-informaion.p.rapidapi.com/LolInfo/GetChampions'\nquerystring = {\"champions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://league-of-legends-champion-informaion.p.rapidapi.com/LolInfo/GetChampions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://league-of-legends-champion-informaion.p.rapidapi.com/LolInfo/GetChampions"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "league-of-legends-champion-informaion.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://league-of-legends-champion-informaion.p.rapidapi.com/LolInfo/GetChampions\"\nquerystring = {\"champions\": \"cait\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"league-of-legends-champion-informaion.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "League Of Legends Champion Informaion",
            "api_arguments_original": [
                {
                    "name": "champions",
                    "type": "STRING",
                    "description": "",
                    "default": "cait"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to search for movies with the genre \"action\" using the Advanced Movie Search API?",
        "model_answer": "requests.get(\"https://advanced-movie-search.p.rapidapi.com/genre/movie/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"advanced-movie-search.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "Search for movies via advanced queries like genre, name, etc. And get all their details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://advanced-movie-search.p.rapidapi.com/genre/movie/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://advanced-movie-search.p.rapidapi.com/genre/movie/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://advanced-movie-search.p.rapidapi.com/genre/movie/list"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "advanced-movie-search.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://advanced-movie-search.p.rapidapi.com/genre/movie/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"advanced-movie-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Advanced Movie Search",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I obtain the version of the Brand Recognition API and log the output using the RapidAPI package?",
        "model_answer": "requests.get(\"https://brand-recognition.p.rapidapi.com/v1/version\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"https://brand-recognition.p.rapidapi.com/v1/version\"}, params={})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "This ready-to-use API provides high-accuracy brand detection and logo recognition. [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/brand-det) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/brand-recognition?utm_source=brand_det_rapidapi&utm_medium=endpoints&utm_campaign=rapidapi) [![Telegram](https://img.shields.io/badge/-Telegram%20demo-white?l...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://brand-recognition.p.rapidapi.com/v1/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://brand-recognition.p.rapidapi.com/v1/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{ \"X-RapidAPI-Key\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://brand-recognition.p.rapidapi.com/v1/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"brand-recognition.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Brand Recognition",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me generate an automatic response for a hotel called Grandiose based on the review \"The service was outstanding\"?",
        "model_answer": "requests.get(\"https://automatic-custom-response-creator.p.rapidapi.com/get_response\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"automatic-custom-response-creator.p.rapidapi.com\"}, params={\"business_type\": \"Hotel\", \"business_brand\": \"Grandiose\", \"avis\":\"The service was outstanding\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "send a customer review, you will receive a personalized response proposal automatically",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://automatic-custom-response-creator.p.rapidapi.com/get_response'\nquerystring = {\"business_type\": \"\", \"business_brand\": \"\", \"avis\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://automatic-custom-response-creator.p.rapidapi.com/get_response\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://automatic-custom-response-creator.p.rapidapi.com/get_response"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "automatic-custom-response-creator.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "business_type": "Hotel",
                            "business_brand": "Grandiose",
                            "avis": "The service was outstanding"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://automatic-custom-response-creator.p.rapidapi.com/get_response\"\nquerystring = {\"business_type\": \"Restaurant\", \"business_brand\": \"Fuzi\", \"avis\": \"C'\u00e9tait excellent\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"automatic-custom-response-creator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Automatic-custom-response-creator",
            "api_arguments_original": [
                {
                    "name": "business_type",
                    "type": "STRING",
                    "description": "",
                    "default": "Restaurant"
                },
                {
                    "name": "business_brand",
                    "type": "STRING",
                    "description": "",
                    "default": "Fuzi"
                },
                {
                    "name": "avis",
                    "type": "STRING",
                    "description": "",
                    "default": "C'\u00e9tait excellent"
                }
            ]
        }
    },
    {
        "query": "I want to get detailed information about a product with ID \"67890\" on Asos, using the default parameters for size schema, currency, language, and store.",
        "model_answer": "requests.get(\"https://asos2.p.rapidapi.com/products/v3/list-similarities\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"asos2.p.rapidapi.com\"}, params={\"id\": \"67890\", \"sizeSchema\":\"US\", \"currency\":\"USD\", \"lang\":\"en-US\", \"store\":\"US\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Asos API helps to query for all information about categories, products, etc... as on the official website",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asos2.p.rapidapi.com/products/v3/list-similarities'\nquerystring = {\"id\": \"\", \"sizeSchema\": \"\", \"currency\": \"\", \"lang\": \"\", \"store\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asos2.p.rapidapi.com/products/v3/list-similarities\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://asos2.p.rapidapi.com/products/v3/list-similarities"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "asos2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "67890",
                            "sizeSchema": "US",
                            "currency": "USD",
                            "lang": "en-US",
                            "store": "US"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asos2.p.rapidapi.com/products/v3/list-similarities\"\nquerystring = {\"sizeSchema\": \"US\", \"currency\": \"USD\", \"lang\": \"en-US\", \"id\": \"\", \"store\": \"US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asos2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Asos",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "The value of id field that returned in .../products/v2/list",
                    "default": ""
                },
                {
                    "name": "sizeSchema",
                    "type": "STRING",
                    "description": "Get suitable value from .../countries/list endpoint",
                    "default": "US"
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "Get suitable value from .../countries/list endpoint",
                    "default": "USD"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "The language code",
                    "default": "en-US"
                },
                {
                    "name": "store",
                    "type": "STRING",
                    "description": "The store code gotten from .../countries/list",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check if the weather temperature in London is above 70 degrees Fahrenheit?",
        "model_answer": "requests.get(\"https://weather-api.p.rapidapi.com/temperature\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"weather-api.p.rapidapi.com\"}, params={\"city\": \"London\"}).json()",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "s",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test6226.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test6226.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://weather-api.p.rapidapi.com/temperature"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "weather-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "city": "London"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test6226.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test6226.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test_v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with a Python function call to obtain a list of the top memes using the Memes API and print the response?",
        "model_answer": "requests.get(\"https://memes9.p.rapidapi.com/api/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"memes9.p.rapidapi.com\"}, params={\"genre\": \"memes\", \"type\": \"top\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Memes api with several genre",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://memes9.p.rapidapi.com/api/list'\nquerystring = {\"genre\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://memes9.p.rapidapi.com/api/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://memes9.p.rapidapi.com/api/list"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "memes9.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "genre": "memes",
                            "type": "top"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://memes9.p.rapidapi.com/api/list\"\nquerystring = {\"genre\": \"memes\", \"type\": \"top\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"memes9.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Memes",
            "api_arguments_original": [
                {
                    "name": "genre",
                    "type": "STRING",
                    "description": "",
                    "default": "memes"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "top"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to check the response time from 12 global locations for the domain \"example.com\"?",
        "model_answer": "requests.get(\"https://global-webserver-or-ip-response-time-and-location.p.rapidapi.com/geoping.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"global-webserver-or-ip-response-time-and-location.p.rapidapi.com\"}, params={\"domain\": \"example.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Check any domain or IP address for response time from 12 Global locations in all continents. IPv4 and IPv6 addresses detected, location, ping time, http time ,https time\n\nLocations\n1. California USA\n2. New York USA\n3. Toronto Canada\n4.  London UK\n5. Bahrain UAE\n6. Mumbai India\n7. Singapore\n8. Tokyo Japan\n9. Sydney Australia\n10. Sao Paulo Brazil\n11. Cape Town South Africa\n12. Hong Kong China",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://global-webserver-or-ip-response-time-and-location.p.rapidapi.com/geoping.php'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://global-webserver-or-ip-response-time-and-location.p.rapidapi.com/geoping.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{\"domain\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://global-webserver-or-ip-response-time-and-location.p.rapidapi.com/geoping.php\"\nquerystring = {\"domain\": \"www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"global-webserver-or-ip-response-time-and-location.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Global WebServer  or IP Response Time and Location",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "www.google.com"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the results from the ProbablyThese API.",
        "model_answer": "requests.get(\"https://probablythese.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"probablythese.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "API for app ProbablyThese",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://probablythese.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://probablythese.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "\"https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                },
                {
                    "name": "params",
                    "enum": [
                        "{"
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://probablythese.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"probablythese.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ProbablyThese",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the GaiaLens ESG scores for Microsoft Corporation.",
        "model_answer": "requests.get(\"https://gaialens-esg-scores.p.rapidapi.com/scores\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"gaialens-esg-scores.p.rapidapi.com\"}, params={\"companyname\": \"Microsoft Corporation\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Real-time, data-driven and transparent ESG scores for over 17,500 companies",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gaialens-esg-scores.p.rapidapi.com/scores'\nquerystring = {\"isin\": \"\", \"sedol\": \"\", \"companyname\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gaialens-esg-scores.p.rapidapi.com/scores\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://gaialens-esg-scores.p.rapidapi.com/scores"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "gaialens-esg-scores.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "companyname": "Microsoft Corporation"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gaialens-esg-scores.p.rapidapi.com/scores\"\nquerystring = {\"isin\": \"\", \"sedol\": \"\", \"companyname\": \"Apple Inc.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gaialens-esg-scores.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GaiaLens ESG Scores",
            "api_arguments_original": [
                {
                    "name": "isin",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sedol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "companyname",
                    "type": "STRING",
                    "description": "",
                    "default": "Apple Inc."
                }
            ]
        }
    },
    {
        "query": "I want to download historical stock prices for GOOG from Yahoo Finance.",
        "model_answer": "requests.get(\"https://yahoo-finance-historical-stock-prices1.p.rapidapi.com/GetHistoricalPrices\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yahoo-finance-historical-stock-prices1.p.rapidapi.com\"}, params={\"symbol\": \"GOOG\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "Download historical stock prices found as found on Yahoo Finance quickly and efficiently.\n\nA list of avaliable stock prices can be found here: https://filedn.com/lLxy9lfpvrpRqRrS9ftjPcF/lookupOverview.csv",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yahoo-finance-historical-stock-prices1.p.rapidapi.com/GetHistoricalPrices'\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yahoo-finance-historical-stock-prices1.p.rapidapi.com/GetHistoricalPrices\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://yahoo-finance-historical-stock-prices1.p.rapidapi.com/GetHistoricalPrices"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "yahoo-finance-historical-stock-prices1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "symbol": "GOOG"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yahoo-finance-historical-stock-prices1.p.rapidapi.com/GetHistoricalPrices\"\nquerystring = {\"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance-historical-stock-prices1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yahoo Finance Historical Stock Prices",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "The *symbol* parameter, e.g. **AAPL**.",
                    "default": "AAPL"
                }
            ]
        }
    },
    {
        "query": "Please check if the barcode 9781524739312 exists in the database.",
        "model_answer": "requests.get(\"https://barcodes-lookup.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"barcodes-lookup.p.rapidapi.com\"}, params={\"query\": \"9781524739312\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Search over 500 million products with UPC, EAN, JAN, ISBN barcodes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://barcodes-lookup.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://barcodes-lookup.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://barcodes-lookup.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "barcodes-lookup.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "query": "9781524739312"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://barcodes-lookup.p.rapidapi.com/\"\nquerystring = {\"page\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"barcodes-lookup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Barcodes Lookup",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "**Barcode** or **search term**",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "If you want search results - **page number**\nIf you are querying for a barcode, leave it blank.\n\nIf you leave it blank (if you are querying for a search term), the first page will be returned.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to retrieve the healthcare mailing list and log the output?",
        "model_answer": "requests.get(\"https://healthcaremailing.p.rapidapi.comhttps://rapidapi.com/user/Healthcaremailing\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"healthcaremailing.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Healthcare mailing, a direct marketing business founded on a rock solid base of many successful years of experience building and managing lists used in direct marketing campaigns. Our primary principle of providing true quality leads with great customer service is never taken lightly - as a full service mailing list broker, and as a friend to our customers, our direct marketing experts are always happy to go the extra mile for you.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://healthcaremailing.p.rapidapi.comhttps://rapidapi.com/user/Healthcaremailing'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://healthcaremailing.p.rapidapi.comhttps://rapidapi.com/user/Healthcaremailing\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://healthcaremailing.p.rapidapi.comhttps://rapidapi.com/user/Healthcaremailing\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"healthcaremailing.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Healthcaremailing",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you fetch the news articles in English language with the keyword \"COVID-19\" using the Google News API?",
        "model_answer": "requests.get(\"https://google-news-api1.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"google-news-api1.p.rapidapi.com\"}, params={\"language\": \"EN\", \"q\": \"COVID-19\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "By using the Google News API, which is a straightforward REST API, you may look through over 1,000,000 news sources, both current and archived. You may also aggregate and arrange today's most talked-about news stories in accordance with Google News's rating with the help of this news API. You can also use filters and a keyword search to sift through all the articles.\n\nWe have compiled tens of millions of articles from over 250,000 sources in ten different languages for inclusion in our databa...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://google-news-api1.p.rapidapi.com/search'\nquerystring = {\"language\": \"\", \"sort\": \"\", \"required_props\": \"\", \"cursor\": \"\", \"to\": \"\", \"limit\": \"\", \"from\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://google-news-api1.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://google-news-api1.p.rapidapi.com/search"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "google-news-api1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "language": "EN",
                            "q": "COVID-19"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://google-news-api1.p.rapidapi.com/search\"\nquerystring = {\"sort\": \"\", \"required_props\": \"\", \"cursor\": \"\", \"to\": \"\", \"limit\": \"\", \"from\": \"\", \"language\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-news-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google News API",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Supported by 10 languages. \n\nLanguage request codes:\n\n    TR, EN, FR, DE,  IT, ZH, ES, RU, KO, PT",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "You can arrange the articles systematically in groups; separate according to type, class, etc.\n\nSorting refers to ordering articles in an increasing or decreasing manner according to some linear relationship among the article items. You can order the articles and arrange them in a sequence ordered by category with similar properties.\n\nExpected values:\n\ndate:asc\ndate:desc\n\n_score:asc\n_score:desc",
                    "default": ""
                },
                {
                    "name": "required_props",
                    "type": "STRING",
                    "description": "Required props are delimited by commas. Each property must have a name. If one of the property names is missing from the article, that property is excluded.\n\nExample:\n\ntitle, image\n\n",
                    "default": ""
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "This defines the returned value of the \\\\\\\"next_cursor\\\\\\\". It allows you to navigate to next article list.",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "\\\\\\\"to\\\\\\\" when used defines the date of items published before the specified date.\n\nFormat:\nISO date standart format is used. \nYYYY-MM-DDTHH:mm:ss\n\nExample:\n2022-10-17T18:41:34.306Z",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "With \\\\\\\"limit,\\\\\\\" you can specify the number of articles required per request. Maximum limit is set to 100 articles per request.",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "\\\\\\\"from\\\\\\\" when used defines the date of items published after the specified date.\n\nFormat:\nISO date standart format is used. \nYYYY-MM-DDTHH:mm:ss\n\nExample:\n2022-10-17T18:41:34.306Z\n\n",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The search term or terms used to locate the article.\n\n\\\\\\\"AND\\\\\\\" or \\\\\\\"OR\\\\\\\" may be placed between the keywords.\n\nIf you wish to group the keywords, you may include them in parenthesis.\n\nFor instance: (cats and dogs) OR (fish)\n\nIf you wish to omit articles by term, you can do so by prefixing the keyword with a (-) sign.\n\nExample: cats -dogs\n(This will return articles featuring cats but exclude those with the term \\\\\\\"dog.\\\\\\\"\n\n",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you check if the address with postcode 3001AB, house number 10, and house number suffix A is valid in the Netherlands?",
        "model_answer": "requests.get(\"https://address-validation-nl1.p.rapidapi.com/api/v1/addresses\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"address-validation-nl1.p.rapidapi.com\"}, params={\"Postcode\": \"3001AB\", \"HouseNumber\": \"10\", \"HouseNumberSuffix\": \"A\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Address Validation NL API returns a valid Dutch address (street name and city/town) for a given postcode and house number",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://address-validation-nl1.p.rapidapi.com/api/v1/addresses'\nquerystring = {\"Postcode\": \"\", \"HouseNumber\": \"\", \"HouseNumberSuffix\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://address-validation-nl1.p.rapidapi.com/api/v1/addresses\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://address-validation-nl1.p.rapidapi.com/api/v1/addresses"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "address-validation-nl1.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "Postcode": "3001AB",
                            "HouseNumber": "10",
                            "HouseNumberSuffix": "A"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://address-validation-nl1.p.rapidapi.com/api/v1/addresses\"\nquerystring = {\"Postcode\": \"3021GS\", \"HouseNumberSuffix\": \"B\", \"HouseNumber\": \"288\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"address-validation-nl1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Address Validation NL",
            "api_arguments_original": [
                {
                    "name": "Postcode",
                    "type": "STRING",
                    "description": "",
                    "default": "3021GS"
                },
                {
                    "name": "HouseNumber",
                    "type": "NUMBER",
                    "description": "",
                    "default": "288"
                },
                {
                    "name": "HouseNumberSuffix",
                    "type": "STRING",
                    "description": "",
                    "default": "B"
                }
            ]
        }
    },
    {
        "query": "Is 'example@gmail.com' a disposable email address?",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Search makeup products",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://makeup.p.rapidapi.com/products.json'\nquerystring = {\"price_less_than\": \"\", \"product_type\": \"\", \"product_tags\": \"\", \"brand\": \"\", \"rating_less_than\": \"\", \"product_category\": \"\", \"price_greater_than\": \"\", \"rating_greater_than\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://makeup.p.rapidapi.com/products.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "example@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://makeup.p.rapidapi.com/products.json\"\nquerystring = {\"price_less_than\": \"\", \"product_type\": \"\", \"product_tags\": \"\", \"brand\": \"colourpop\", \"rating_less_than\": \"\", \"product_category\": \"lipstick\", \"price_greater_than\": \"\", \"rating_greater_than\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"makeup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Makeup",
            "api_arguments_original": [
                {
                    "name": "price_less_than",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                },
                {
                    "name": "product_type",
                    "type": "STRING",
                    "description": "product type",
                    "default": ""
                },
                {
                    "name": "product_tags",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                },
                {
                    "name": "brand",
                    "type": "STRING",
                    "description": "Examples: maybelline, covergirl",
                    "default": "colourpop"
                },
                {
                    "name": "rating_less_than",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                },
                {
                    "name": "product_category",
                    "type": "STRING",
                    "description": "Sub-category for each makeup-type. (ie. lip gloss is a category of lipstick). See product types below. If a category exists it will be under 'By Category'. Will return a list of all products of this category",
                    "default": "lipstick"
                },
                {
                    "name": "price_greater_than",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                },
                {
                    "name": "rating_greater_than",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get user information for user ID 5.",
        "model_answer": "requests.get(\"https://asd20.p.rapidapi.com/users\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"asd20.p.rapidapi.com\"}, params={\"id\": \"5\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "user url endpoint",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asd20.p.rapidapi.com/users'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asd20.p.rapidapi.com/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://asd20.p.rapidapi.com/users"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "asd20.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "id": "5"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asd20.p.rapidapi.com/users\"\nquerystring = {\"id\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asd20.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "asd",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to obtain a daily inspirational quote from the My Daily Inspiration API?",
        "model_answer": "requests.get(\"https://mydailyinspiration.p.rapidapi.com/helloworld\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mydailyinspiration.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Sync API for the My Daily Inspiration App",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mydailyinspiration.p.rapidapi.com/helloworld'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mydailyinspiration.p.rapidapi.com/helloworld\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "enum": [
                        "https"
                    ]
                },
                {
                    "name": "headers",
                    "enum": [
                        "{\\\"X-RapidAPI-Key\\\" \\\"SIGN-UP-FOR-KEY\\\",\\\"X-RapidAPI-Host\\\""
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mydailyinspiration.p.rapidapi.com/helloworld\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mydailyinspiration.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "mydailyinspiration",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to rewrite the article \"Dedicated servers or bare metal servers are a server in itself with no server resources sharing with other hosting account users. These servers offer a higher power and flexibility, but usually comes at a premium cost. In such cases, you must have to research well about the dedicated hosting service providers.\" in German.",
        "model_answer": "requests.get(\"https://article-rewriter-pro-api.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"article-rewriter-pro-api.p.rapidapi.com\"}, params={\"lang\":\"ge\", \"article\":\"Dedicated servers or bare metal servers are a server in itself with no server resources sharing with other hosting account users. These servers offer a higher power and flexibility, but usually comes at a premium cost. In such cases, you must have to research well about the dedicated hosting service providers.\"})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "Article Rewriter Pro helps you to rewrite articles within seconds. \nMulti-language supported : en,fr,ge,du,sp,tr.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://article-rewriter-pro-api.p.rapidapi.com/'\nquerystring = {\"lang\": \"\", \"article\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://article-rewriter-pro-api.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://article-rewriter-pro-api.p.rapidapi.com/"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "article-rewriter-pro-api.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "lang": "ge",
                            "article": "Dedicated servers or bare metal servers are a server in itself with no server resources sharing with other hosting account users. These servers offer a higher power and flexibility, but usually comes at a premium cost. In such cases, you must have to research well about the dedicated hosting service providers."
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://article-rewriter-pro-api.p.rapidapi.com/\"\nquerystring = {\"lang\": \"en\", \"article\": \"Dedicated servers or bare metal servers are a server in itself with no server resources sharing with  other hosting account users. These servers offer a higher power and flexibility, but usually comes at a  premium cost. In such cases, you must have to research well about the dedicated hosting service providers.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"article-rewriter-pro-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Article Rewriter Pro API",
            "api_arguments_original": [
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "article",
                    "type": "STRING",
                    "description": "",
                    "default": "Dedicated servers or bare metal servers are a server in itself with no server resources sharing with  other hosting account users. These servers offer a higher power and flexibility, but usually comes at a  premium cost. In such cases, you must have to research well about the dedicated hosting service providers."
                }
            ]
        }
    },
    {
        "query": "How do I send a WhatsApp message to a group with the whin API using Python, specifically to a group with the ID 'group123' and including the origin service in the request?",
        "model_answer": "requests.get(\"https://whin2.p.rapidapi.com/webhk\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"whin2.p.rapidapi.com\"}, params={\"gid\": \"group123\", \"origin\": \"origin_service\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Send and receive any message type to your WhatsApp or owned groups with our gateway.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://whin2.p.rapidapi.com/webhk'\nquerystring = {\"gid\": \"\", \"origin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://whin2.p.rapidapi.com/webhk\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://whin2.p.rapidapi.com/webhk"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "whin2.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://whin2.p.rapidapi.com/webhk\"\nquerystring = {\"gid\": \"1234567890123\", \"origin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whin2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "whin",
            "api_arguments_original": [
                {
                    "name": "gid",
                    "type": "STRING",
                    "description": "Each whatsapp group will have its own webhook address; set the group-id on this field to get a unique valid url and deliver webhooks as messages on each whatsapp group. Learn how to get a valid value [here](https://rapidapi.com/inutil-inutil-default/api/whin2/tutorials/how-to-use-the-groups-category-to-send-and-receive-whatsapps-to%2Ffrom-groups%3F-1).",
                    "default": "1234567890123"
                },
                {
                    "name": "origin",
                    "type": "ENUM",
                    "description": "This is the service that is sending Webhooks to your whin personal receiver. If the origin service is nos listed you can select `Do not include in request`, or leave the value blank, and whin will do its best to parse the payload received.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you recommend some popular cities for digital nomads in Latin America, sorted by overall score, with 20 cities per page?",
        "model_answer": "requests.get(\"https://nomad-list-cities.p.rapidapi.com/nomad-list/latin-america\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\",\"X-RapidAPI-Host\":\"nomad-list-cities.p.rapidapi.com\"}, params={\"sort_by\": \"overall_score\", \"page\": \"1\", \"sort\": \"desc\", \"size\": \"20\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nomad-list-cities.p.rapidapi.com/nomad-list/latin-america'\nquerystring = {\"sort_by\": \"\", \"page\": \"\", \"sort\": \"\", \"size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nomad-list-cities.p.rapidapi.com/nomad-list/latin-america\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://nomad-list-cities.p.rapidapi.com/nomad-list/latin-america"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "TO BE FILLED",
                            "X-RapidAPI-Host": "nomad-list-cities.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "sort_by": "overall_score",
                            "page": "1",
                            "sort": "desc",
                            "size": "20"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nomad-list-cities.p.rapidapi.com/nomad-list/latin-america\"\nquerystring = {\"sort_by\": \"overall_score\", \"page\": \"1\", \"sort\": \"desc\", \"size\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nomad-list-cities.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Nomad List Cities",
            "api_arguments_original": [
                {
                    "name": "sort_by",
                    "type": "STRING",
                    "description": "",
                    "default": "overall_score"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "desc"
                },
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the participants in the folder with id 54321 using Sertifi eSignature and ePayment API.",
        "model_answer": "requests.get(\"https://sertifi-esignature-and-epayment.p.rapidapi.com/v1/54321/participants\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"sertifi-esignature-and-epayment.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Our agreement platform available as an integratable API\nallows your company to send signatures and payments\ndirectly through your technology.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sertifi-esignature-and-epayment.p.rapidapi.com/v1/{folderId}/participants'\nquerystring = {\"folderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sertifi-esignature-and-epayment.p.rapidapi.com/v1/{folderId}/participants\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://sertifi-esignature-and-epayment.p.rapidapi.com/v1/54321/participants"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "sertifi-esignature-and-epayment.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sertifi-esignature-and-epayment.p.rapidapi.com/v1/{folderId}/participants\"\nquerystring = {\"folderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sertifi-esignature-and-epayment.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sertifi eSignature and ePayment",
            "api_arguments_original": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "The id of the folder to retrieve data for.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to check if the email address example123@gmail.com is a disposable email address using the Punto 61 API.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example123@gmail.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": ".61 API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://punto-61.p.rapidapi.com/public/api/blog/archive/it/00000000'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://punto-61.p.rapidapi.com/public/api/blog/archive/it/00000000\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://punto-61.p.rapidapi.com/public/api/blog/archive/it/00000000\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"punto-61.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Punto 61",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the walk score for the address \"456 Elm St, Anytown, USA\" using the OpenNWI API.",
        "model_answer": "requests.get(\"https://opennwi.p.rapidapi.com/scores\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"opennwi.p.rapidapi.com\"}, params={\"address\": \"456 Elm St, Anytown, USA\"})",
        "original": {
            "domain": "Payments",
            "framework": "RapidAPI",
            "functionality": "An open-source API to access local walk scores and regional bike and transit data for any address recognized by US Census Geocoding.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://opennwi.p.rapidapi.com/scores'\nquerystring = {\"address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://opennwi.p.rapidapi.com/scores\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://opennwi.p.rapidapi.com/scores"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "opennwi.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "address": "456 Elm St, Anytown, USA"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://opennwi.p.rapidapi.com/scores\"\nquerystring = {\"address\": \"1600 Pennsylvania Ave. NW Washington, DC 20500\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennwi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OpenNWI",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "1600 Pennsylvania Ave. NW Washington, DC 20500"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the content of a LINE Messaging API message with the message ID \"987654\".",
        "model_answer": "import requests\n\nrequests.get(\"https://line-messaging1.p.rapidapi.com/bot/message/987654/content\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"line-messaging1.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "LINE Messaging API lets you develop two-way communication between your service and LINE users. Push and reply messages Push messages are messages that your bot can send to users at any time. Reply messages are messages that your bot sends in response to users' messages. 1-on-1 and group chats Send messages not only to users who have added your bot as a friend but also in group chats that your bot has been added to.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://line-messaging1.p.rapidapi.com/bot/message/{messageId}/content'\nquerystring = {\"messageId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://line-messaging1.p.rapidapi.com/bot/message/{messageId}/content\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://line-messaging1.p.rapidapi.com/bot/message/{messageId}/content\"\nquerystring = {\"messageId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"line-messaging1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LINE Messaging",
            "api_arguments_original": [
                {
                    "name": "messageId",
                    "type": "STRING",
                    "description": "Message ID",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a Python function call to generate a recipe based on chicken and print the JSON response?",
        "model_answer": "requests.get(\"https://generate-a-recipe-based-on-an-ingredient.p.rapidapi.com/generate_recipe\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"generate-a-recipe-based-on-an-ingredient.p.rapidapi.com\"}, params={\"ingredient\": \"chicken\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Generate a health recipe based on the ingredients you specify in the request",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://generate-a-recipe-based-on-an-ingredient.p.rapidapi.com/generate_recipe'\nquerystring = {\"ingredient\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://generate-a-recipe-based-on-an-ingredient.p.rapidapi.com/generate_recipe\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://generate-a-recipe-based-on-an-ingredient.p.rapidapi.com/generate_recipe"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "generate-a-recipe-based-on-an-ingredient.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://generate-a-recipe-based-on-an-ingredient.p.rapidapi.com/generate_recipe\"\nquerystring = {\"ingredient\": \"chicken\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"generate-a-recipe-based-on-an-ingredient.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Generate a recipe based on an ingredient",
            "api_arguments_original": [
                {
                    "name": "ingredient",
                    "type": "STRING",
                    "description": "",
                    "default": "chicken"
                }
            ]
        }
    },
    {
        "query": "How can I retrieve Google Calendar events from a public calendar for the next 6 months?",
        "model_answer": "requests.get(\"https://calendarevents.p.rapidapi.com/calendar/a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com/2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"calendarevents.p.rapidapi.com\"}, params={\"src\": \"a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com\", \"months\": \"6\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Retrieve Google Calendar Events from a public calendar",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://calendarevents.p.rapidapi.com/calendar/a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com/2'\nquerystring = {\"src\": \"\", \"months\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://calendarevents.p.rapidapi.com/calendar/a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://calendarevents.p.rapidapi.com/calendar/a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com/2"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "calendarevents.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        null
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://calendarevents.p.rapidapi.com/calendar/a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"calendarevents.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CalendarEvents",
            "api_arguments_original": [
                {
                    "name": "src",
                    "type": "string",
                    "description": "Calendar ID (ending in `@group.calendar.google.com`).\nYou can find it in the `src` parameter of the embed URL",
                    "default": "a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com"
                },
                {
                    "name": "months",
                    "type": "NUMBER",
                    "description": "Number of months of events to retireve.\nDefault is `2`. Max is `12`.",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Please provide a Python function call to check if the email address \"sample@gmail.com\" is valid by using the RapidAPI \"check-disposable-email\" endpoint.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"sample@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "AE6888  - Ae6888.net\u2b50 Trang ch\u1ee7 \u0111\u0103ng k\u00fd, \u0111\u0103ng nh\u1eadp AE888 m\u1edbi nh\u1ea5t \u2b50\ufe0f bao g\u1ed3m: \u0111\u00e1 g\u00e0 thomo, t\u00e0i x\u1ec9u, th\u1ec3 thao, l\u00f4 \u0111\u1ec1 online \u2b50\ufe0f Link v\u00e0o ae388 - ae688 - ae88 ch\u00ednh th\u1ee9c.\n#\u0111\u0103ng_k\u00fd_ae6888 #n\u1ea1p_ti\u1ec1n_ae6888  #link_v\u00e0o_ae6888 #t\u1ea3i app ae6888 #/m/033_l8  /m/033_l8 #Casino #l\u1ecbnkvaoae68882022 #dangnhap #\u0111\u0103ng_nh\u1eadp_ae6888\n\u0110\u1ecba ch\u1ec9 : 74 Ng\u00f5 238 T\u00e2n Mai, T\u00e2n Mai, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i, Vi\u1ec7t Nam\t\nHotline 0839138910\t\nGmail: ae6888net@gmail.com\t\nWebsite https://ae6888.net/\nhttps://ae6888.net/huong-dan-dang-ky-ae6...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ae6888-link-vao-nha-cai-ae688-2022.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ae6888-link-vao-nha-cai-ae688-2022.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "The endpoint URL to which the API request is made. It specifies the location of the resource on the server.",
                    "enum": [
                        "https://check-disposable-email.p.rapidapi.com/api/disposable"
                    ]
                },
                {
                    "name": "headers",
                    "type": "Dict",
                    "description": "Contains metadata sent with the API request. Headers can include authentication tokens, client information, and other key-value pairs to provide context or directives for the request.",
                    "enum": [
                        {
                            "X-RapidAPI-Key": "SIGN-UP-FOR-KEY",
                            "X-RapidAPI-Host": "check-disposable-email.p.rapidapi.com"
                        }
                    ]
                },
                {
                    "name": "params",
                    "type": "Dict",
                    "description": "Parameters passed with the API request, typically used to filter or customize the response. They are included in the URL after a question mark (?).",
                    "enum": [
                        {
                            "email": "sample@gmail.com"
                        }
                    ]
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ae6888-link-vao-nha-cai-ae688-2022.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ae6888-link-vao-nha-cai-ae688-2022.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AE6888 Link vao nha cai AE688  2022",
            "api_arguments_original": []
        }
    }
]