[
    {
        "query": "I want to check if example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "123",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test-pg-prod.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test-pg-prod.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test-pg-prod.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test-pg-prod.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test pg prod",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you find the UK postal addresses for the query \"123 Main Street\" and limit the results to 5?",
        "model_answer": "requests.get(\"https://uk-postcode.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"uk-postcode.p.rapidapi.com\"}, params={\"q\": \"123 Main Street\", \"limit\": 5})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Integrate this API with your website's address form to quickly and accurately auto-fill UK postal addresses or find locations of addresses. This API contains a database of almost 1.7 million UK postcodes, along with address and location information.\n\nFor a simple demo, visit https://tomwimmenhove.com/ukpostcode/",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uk-postcode.p.rapidapi.com/search'\nquerystring = {\"q\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uk-postcode.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "The query string",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "The maximum number of results of the query (May be artificially limited)",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uk-postcode.p.rapidapi.com/search\"\nquerystring = {\"q\": \"Downing Street London\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uk-postcode.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "UK Postcode",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The query string",
                    "default": "Downing Street London"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The maximum number of results of the query (May be artificially limited)",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to get the location data for the IP address 192.168.1.1.",
        "model_answer": "requests.get(\"https://ip-to-location1.p.rapidapi.com/myip\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"ip-to-location1.p.rapidapi.com\"}, params={\"ip\": \"192.168.1.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "API returns location data such as country, city, latitude, longitude, timezone ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-to-location1.p.rapidapi.com/myip'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-to-location1.p.rapidapi.com/myip\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "If provide this query, API will return geo information for the given IP",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-to-location1.p.rapidapi.com/myip\"\nquerystring = {\"ip\": \"8.30.234.123\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-to-location1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ip-to-location_v2",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "If provide this query, API will return geo information for the given IP\n",
                    "default": "8.30.234.123"
                }
            ]
        }
    },
    {
        "query": "I want to get data from the YouTooSound API.",
        "model_answer": "requests.get(\"https://youtoosound.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtoosound.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "YouTooSound",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtoosound.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtoosound.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtoosound.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtoosound.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTooSound",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you generate a catchy caption for my social media post about Apple?",
        "model_answer": "requests.get(\"https://social-media-caption.p.rapidapi.com/social-caption\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"social-media-caption.p.rapidapi.com\"}, params={\"name\": \"Apple\", \"description\": \"Apple designs, manufactures and markets smartphones, personal computers, tablets, wearables and accessories, and sells a variety of related services.\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "Generate catchy captions for social media",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://social-media-caption.p.rapidapi.com/social-caption'\nquerystring = {\"name\": \"\", \"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://social-media-caption.p.rapidapi.com/social-caption\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://social-media-caption.p.rapidapi.com/social-caption\"\nquerystring = {\"name\": \"Apple\", \"description\": \"Apple designs, manufactures and markets smartphones, personal computers, tablets, wearables and accessories, and sells a variety of related services.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"social-media-caption.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Social media caption",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Apple"
                },
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "Apple designs, manufactures and markets smartphones, personal computers, tablets, wearables and accessories, and sells a variety of related services."
                }
            ]
        }
    },
    {
        "query": "I want to get the lotto draw results for all available games.",
        "model_answer": "requests.get(\"https://lotto-draw-results-global.p.rapidapi.com/get_games\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"lotto-draw-results-global.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Up to 65 countries lotto draw results available.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lotto-draw-results-global.p.rapidapi.com/get_games'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lotto-draw-results-global.p.rapidapi.com/get_games\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lotto-draw-results-global.p.rapidapi.com/get_games\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lotto-draw-results-global.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lotto Draw Results - Global",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the latest feed for the user \"cybrox\" using the Hummingbird API?",
        "model_answer": "requests.get(\"https://hbrd-v1.p.rapidapi.com/users/cybrox/feed\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hbrd-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "APIv1 is the old Hummingbird API that is already implemented in multiple applications, its syntax and functionality will surely not change in the future so it is recommended to use this for any long-running projects.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hbrd-v1.p.rapidapi.com/users/cybrox/feed'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hbrd-v1.p.rapidapi.com/users/cybrox/feed\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hbrd-v1.p.rapidapi.com/users/cybrox/feed\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hbrd-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hummingbird APIv1",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "cybrox"
                }
            ]
        }
    },
    {
        "query": "I want to search for the product \"iPhone 12\" in the US marketplace using the \"Get and Compare Products All Over the Web\" API.",
        "model_answer": "requests.get(\"https://get-and-compate-products-allover-the-web.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"get-and-compate-products-allover-the-web.p.rapidapi.com\"}, params={\"query\": \"iPhone 12\", \"page\": 1, \"country\": \"US\", \"location\": \"us\", \"lang\": \"en\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "With our eCommerce products API you can easily search for products by name and retrieve newly added items from the last X days, among other features.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://get-and-compate-products-allover-the-web.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"page\": \"\", \"country\": \"\", \"location\": \"\", \"lang\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://get-and-compate-products-allover-the-web.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "country",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "location",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://get-and-compate-products-allover-the-web.p.rapidapi.com/\"\nquerystring = {\"country\": \"countryUS\", \"location\": \"us\", \"lang\": \"en\", \"period\": \"\", \"query\": \"ipone 14 256Gb\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"get-and-compate-products-allover-the-web.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Get and Compate products allover the web",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "ipone 14 256Gb"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": "countryUS"
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "",
                    "default": "us"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "period",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to convert 100 USD to EUR using the IP2Currency Exchange Rate API.",
        "model_answer": "requests.get(\"https://fraudlabs-ip2currency-v1.p.rapidapi.com/ip2currencywebservice.asmx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fraudlabs-ip2currency-v1.p.rapidapi.com\"}, params={\"VISITORIP\": \"\", \"FROMCURRENCYCODE\": \"USD\", \"TOCURRENCYCODE\": \"EUR\", \"FROMAMOUNT\": \"100\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "IP2Currency Exchange Rate Web Service provides the user with an easy way to get a localized & latest Currency Exchange Rate based on the visitor's IP address.\r\n\r\nSign up for free license key at http://www.fraudlabs.com/freelicense.aspx?PackageID=10 which allows up to 90 queries a month.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fraudlabs-ip2currency-v1.p.rapidapi.com/ip2currencywebservice.asmx'\nquerystring = {\"LICENSE\": \"\", \"VISITORIP\": \"\", \"FROMCURRENCYCODE\": \"\", \"TOCURRENCYCODE\": \"\", \"FROMAMOUNT\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fraudlabs-ip2currency-v1.p.rapidapi.com/ip2currencywebservice.asmx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "license",
                    "description": "API license key.",
                    "type": "STRING"
                },
                {
                    "name": "visitorip",
                    "description": "IP address of visitor.",
                    "type": "STRING"
                },
                {
                    "name": "fromcurrencycode",
                    "description": "Base currency code.",
                    "type": "STRING"
                },
                {
                    "name": "tocurrencycode",
                    "description": "Target currency code.",
                    "type": "STRING"
                },
                {
                    "name": "fromamount",
                    "description": "Currency amount for conversion.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fraudlabs-ip2currency-v1.p.rapidapi.com/ip2currencywebservice.asmx\"\nquerystring = {\"VISITORIP\": \"\", \"FROMCURRENCYCODE\": \"\", \"TOCURRENCYCODE\": \"\", \"FROMAMOUNT\": \"\", \"LICENSE\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fraudlabs-ip2currency-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP2Currency",
            "api_arguments_original": [
                {
                    "name": "LICENSE",
                    "type": "STRING",
                    "description": "API license key.",
                    "default": ""
                },
                {
                    "name": "VISITORIP",
                    "type": "STRING",
                    "description": "IP address of visitor.",
                    "default": ""
                },
                {
                    "name": "FROMCURRENCYCODE",
                    "type": "STRING",
                    "description": "Base currency code.",
                    "default": ""
                },
                {
                    "name": "TOCURRENCYCODE",
                    "type": "STRING",
                    "description": "Target currency code.",
                    "default": ""
                },
                {
                    "name": "FROMAMOUNT",
                    "type": "STRING",
                    "description": "Currency amount for conversion.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with tide height and time predictions for station with ID 8570283?",
        "model_answer": "response = requests.get(\"https://noaa-tides.p.rapidapi.com/stations/8570283\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"noaa-tides.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "United States NOAA tide height and time predictions in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://noaa-tides.p.rapidapi.com/stations/8570283'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://noaa-tides.p.rapidapi.com/stations/8570283\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://noaa-tides.p.rapidapi.com/stations/8570283\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"noaa-tides.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NOAA Tides",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "8570283"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the available versions for the Go Code Compiler API?",
        "model_answer": "requests.get(\"https://go-code-compiler.p.rapidapi.com/versions/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"go-code-compiler.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Go Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://go-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://go-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://go-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"go-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Go Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please convert the amount $1000 to letters in Mexican Pesos.",
        "model_answer": "requests.get(\"https://numberstoletters.p.rapidapi.com/convert\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"numberstoletters.p.rapidapi.com\"}, params={\"moneda\": \"PESOS\", \"monto\": \"1000\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Convierte cantidad a letras peso Mexicano, Espa\u00f1ol e Ingles",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://numberstoletters.p.rapidapi.com/convert'\nquerystring = {\"moneda\": \"\", \"monto\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://numberstoletters.p.rapidapi.com/convert\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "moneda",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "monto",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://numberstoletters.p.rapidapi.com/convert\"\nquerystring = {\"moneda\": \"DOLARES\", \"monto\": \"1000\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"numberstoletters.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NumbersToLetters",
            "api_arguments_original": [
                {
                    "name": "moneda",
                    "type": "STRING",
                    "description": "",
                    "default": "DOLARES"
                },
                {
                    "name": "monto",
                    "type": "STRING",
                    "description": "",
                    "default": "1000"
                }
            ]
        }
    },
    {
        "query": "How can I get the character profile for the player \"JohnDoe\" in the US region and the realm \"Stormrage\" using the Raider.IO API?",
        "model_answer": "requests.get(\"https://raider-io.p.rapidapi.com/api/v1/characters/profile\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"raider-io.p.rapidapi.com\"}, params={\"region\": \"us\", \"realm\": \"stormrage\", \"fields\": \"mythic_plus_scores_by_season:current\", \"name\": \"JohnDoe\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Raider.IO API to gather Character information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://raider-io.p.rapidapi.com/api/v1/characters/profile'\nquerystring = {\"region\": \"\", \"realm\": \"\", \"fields\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://raider-io.p.rapidapi.com/api/v1/characters/profile\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "region",
                    "description": "Region (us)",
                    "type": "STRING"
                },
                {
                    "name": "realm",
                    "description": "Realm (stormrage)",
                    "type": "STRING"
                },
                {
                    "name": "fields",
                    "description": "Field (gear or mythic_plus_scores_by_season:current",
                    "type": "STRING"
                },
                {
                    "name": "name",
                    "description": "Character Name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://raider-io.p.rapidapi.com/api/v1/characters/profile\"\nquerystring = {\"region\": \"us\", \"realm\": \"stormrage\", \"fields\": \"mythic_plus_scores_by_season:current\", \"name\": \"zadorie\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"raider-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Raider.IO",
            "api_arguments_original": [
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "Region (us)",
                    "default": "us"
                },
                {
                    "name": "realm",
                    "type": "STRING",
                    "description": "Realm (stormrage)",
                    "default": "stormrage"
                },
                {
                    "name": "fields",
                    "type": "STRING",
                    "description": "Field (gear or mythic_plus_scores_by_season:current",
                    "default": "mythic_plus_scores_by_season:current"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Character Name",
                    "default": "zadorie"
                }
            ]
        }
    },
    {
        "query": "I want to check if \"example@example.com\" is a disposable email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@example.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "partydiva",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://partydiva.p.rapidapi.comhttp://partydiva.local/'\nquerystring = {\"to\": \"\", \"from\": \"\", \"amount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://partydiva.p.rapidapi.comhttp://partydiva.local/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "to",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "from",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "amount",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://partydiva.p.rapidapi.comhttp://partydiva.local/\"\nquerystring = {\"to\": \"VND\", \"from\": \"SGD\", \"amount\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"partydiva.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "partydiva",
            "api_arguments_original": [
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "",
                    "default": "VND"
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "",
                    "default": "SGD"
                },
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to send a text message with \"Hello, how are you?\" to phone number 1234567890 using BroadNet SMS API.",
        "model_answer": "requests.get(\"https://broadnet-sms1.p.rapidapi.com/websmpp/websms\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"broadnet-sms1.p.rapidapi.com\"}, params={\"text\": \"Hello, how are you?\", \"accesskey\": \"\", \"sid\": \"\", \"mno\": \"1234567890\", \"type\": 1})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Broadnet is an international leading business messaging solution provider. We are a GSMA associate member, ISO in information security management and quality management system and GDPR Certified; Broadnet is well known for its services: Bulk SMS, A2P SMS, HLR Lookup, SMSC Gateway and SMS Firewall; more  than 60,000+ Clients. Direct connection to more than 680+ Operators & Carriers.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://broadnet-sms1.p.rapidapi.com/websmpp/websms'\nquerystring = {\"text\": \"\", \"accesskey\": \"\", \"sid\": \"\", \"mno\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://broadnet-sms1.p.rapidapi.com/websmpp/websms\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "accesskey",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "sid",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "mno",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://broadnet-sms1.p.rapidapi.com/websmpp/websms\"\nquerystring = {\"text\": \"Example text msg\", \"accesskey\": \"\", \"sid\": \"\", \"mno\": \"\", \"type\": 1}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"broadnet-sms1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BroadNet SMS",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Example text msg"
                },
                {
                    "name": "accesskey",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sid",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "mno",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "NUMBER",
                    "description": "",
                    "default": 1
                }
            ]
        }
    },
    {
        "query": "I want to get the detailed information of a specific video on Youtube Music API (Detailed).",
        "model_answer": "requests.get(\"https://youtube-music-api-detailed.p.rapidapi.com/get_watch_playlist\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-music-api-detailed.p.rapidapi.com\"}, params={\"video_id\": \"1A7Qw88As64\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Detailed Youtube Music API. Lyrics, Trends, Albums, Artists, Songs, Users, Playlists, Songs etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-music-api-detailed.p.rapidapi.com/get_watch_playlist'\nquerystring = {\"video_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-music-api-detailed.p.rapidapi.com/get_watch_playlist\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "video_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-music-api-detailed.p.rapidapi.com/get_watch_playlist\"\nquerystring = {\"video_id\": \"1A7Qw88As64\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-music-api-detailed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Youtube Music API (Detailed)",
            "api_arguments_original": [
                {
                    "name": "video_id",
                    "type": "STRING",
                    "description": "",
                    "default": "1A7Qw88As64"
                }
            ]
        }
    },
    {
        "query": "Can you give me the comments from the product with id 1234567 on \u00c7i\u00e7eksepeti?",
        "model_answer": "requests.get(\"https://ciceksepeti-data.p.rapidapi.com/getCommentsFromProduct\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ciceksepeti-data.p.rapidapi.com\"}, params={\"product_id\": \"1234567\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "ARDIC's \u00c7i\u00e7eksepeti data retrieval service.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ciceksepeti-data.p.rapidapi.com/getCommentsFromProduct'\nquerystring = {\"product_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ciceksepeti-data.p.rapidapi.com/getCommentsFromProduct\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "product_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ciceksepeti-data.p.rapidapi.com/getCommentsFromProduct\"\nquerystring = {\"product_id\": \"41892066\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ciceksepeti-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\u00c7i\u00e7eksepeti Data",
            "api_arguments_original": [
                {
                    "name": "product_id",
                    "type": "STRING",
                    "description": "",
                    "default": "41892066"
                }
            ]
        }
    },
    {
        "query": "Can you please convert 10 kilograms to grams using the Measurement Units Converter API?",
        "model_answer": "response = requests.get(\"https://measurement-units-converter.p.rapidapi.com/api/v1/market/conversions/convert\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"measurement-units-converter.p.rapidapi.com\"}, params={\"output_unit\": \"g\", \"input_unit\": \"kg\", \"value\": \"10\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Easily and quickly convert all types of measurement units using the API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://measurement-units-converter.p.rapidapi.com/api/v1/market/conversions/convert'\nquerystring = {\"output_unit\": \"\", \"input_unit\": \"\", \"value\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://measurement-units-converter.p.rapidapi.com/api/v1/market/conversions/convert\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "output_unit",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "input_unit",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://measurement-units-converter.p.rapidapi.com/api/v1/market/conversions/convert\"\nquerystring = {\"output_unit\": \"g\", \"input_unit\": \"kg\", \"value\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"measurement-units-converter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Measurement Units Converter",
            "api_arguments_original": [
                {
                    "name": "output_unit",
                    "type": "STRING",
                    "description": "",
                    "default": "g"
                },
                {
                    "name": "input_unit",
                    "type": "STRING",
                    "description": "",
                    "default": "kg"
                },
                {
                    "name": "value",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to exchange 0.5 BTC to ETH using ChangeNOW crypto exchange API.",
        "model_answer": "requests.get(\"https://changenow-crypto-exchange.p.rapidapi.com/v1/exchange-range/fixed-rate/btc_eth\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"changenow-crypto-exchange.p.rapidapi.com\"}, params={\"from_to\": \"btc_eth\", \"api_key\": \"your_api_key\", \"useRateId\": \"true\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Empower your business by letting your customers buy, sell, and exchange crypto. You will earn % on every transaction. 400+ cryptocurrencies and 75+ fiats are available. IMPORTANT: You should get your API key by creating a partner's account here: changenow.io/affiliate. Or email us: partners@changenow.io. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://changenow-crypto-exchange.p.rapidapi.com/v1/exchange-range/fixed-rate/btc_eth'\nquerystring = {\"from_to\": \"\", \"api_key\": \"\", \"useRateId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://changenow-crypto-exchange.p.rapidapi.com/v1/exchange-range/fixed-rate/btc_eth\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "from_to",
                    "description": "(Required) Underscore separated pair of tickers",
                    "type": "STRING"
                },
                {
                    "name": "api_key",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "userateid",
                    "description": "(Optional) Use rateId for fixed-rate flow. If this field is true, you could use returned field \\\\\\\\\\\\\\\"rateId\\\\\\\\\\\\\\\" in next method for creating transaction to freeze estimated amount that you got in this method. Current estimated amount would be valid until time in field \\\\\\\\\\\\\\\"validUntil\\\\\\\\\\\\\\\"",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://changenow-crypto-exchange.p.rapidapi.com/v1/exchange-range/fixed-rate/btc_eth\"\nquerystring = {\"useRateId\": \"true\", \"api_key\": \"your_api_key\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"changenow-crypto-exchange.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ChangeNOW crypto exchange",
            "api_arguments_original": [
                {
                    "name": "from_to",
                    "type": "STRING",
                    "description": "(Required) Underscore separated pair of tickers",
                    "default": "btc_eth"
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": "your_api_key"
                },
                {
                    "name": "useRateId",
                    "type": "STRING",
                    "description": "(Optional) Use rateId for fixed-rate flow. If this field is true, you could use returned field \\\\\\\\\\\\\\\"rateId\\\\\\\\\\\\\\\" in next method for creating transaction to freeze estimated amount that you got in this method. Current estimated amount would be valid until time in field \\\\\\\\\\\\\\\"validUntil\\\\\\\\\\\\\\\"",
                    "default": "true"
                }
            ]
        }
    },
    {
        "query": "Please retrieve the Amazon product information for ASIN B09DKV849B in the US marketplace.",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "How many points did the DAX40 stock index gain or lose each month (during this period: Jan-Aug, 2022). This API will get the data that will answer that question.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dax1.p.rapidapi.com/points'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dax1.p.rapidapi.com/points\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dax1.p.rapidapi.com/points\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dax1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DAX",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please translate the sentence \"Hello, how are you?\" from English to French.",
        "model_answer": "requests.get(\"https://translate-it1.p.rapidapi.com/options\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"translate-it1.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Api translator, with this api you could get translate your text easily from one of the supported languages to another one",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translate-it1.p.rapidapi.com/options'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translate-it1.p.rapidapi.com/options\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translate-it1.p.rapidapi.com/options\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translate-it1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translate it",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me send a message from my WhatsApp using the Maytapi WhatsApp API? I need to enter my phone ID to send the message.",
        "model_answer": "requests.get(\"https://maytapi-whatsapp.p.rapidapi.com/{phone_id}/queue\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"maytapi-whatsapp.p.rapidapi.com\"}, params={\"phone_id\": \"your_phone_id\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Send and receive messages from WhatsApp via Maytapi. It is a stable and reliable solution. See more:  https://maytapi.com/",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://maytapi-whatsapp.p.rapidapi.com/{phone_id}/queue'\nquerystring = {\"phone_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://maytapi-whatsapp.p.rapidapi.com/{phone_id}/queue\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "phone_id",
                    "description": "Enter phone id",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://maytapi-whatsapp.p.rapidapi.com/{phone_id}/queue\"\nquerystring = {\"phone_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"maytapi-whatsapp.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Maytapi WhatsApp",
            "api_arguments_original": [
                {
                    "name": "phone_id",
                    "type": "STRING",
                    "description": "Enter phone id",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me a list of beers from Italy?",
        "model_answer": "requests.get(\"https://beers-list.p.rapidapi.com/beers/italy\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"beers-list.p.rapidapi.com\"})",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "A list of beers from many European countries",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://beers-list.p.rapidapi.com/beers/italy'\nquerystring = {\"beerId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://beers-list.p.rapidapi.com/beers/italy\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "beerid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://beers-list.p.rapidapi.com/beers/italy\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"beers-list.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Beers List",
            "api_arguments_original": [
                {
                    "name": "beerId",
                    "type": "string",
                    "description": "",
                    "default": "italy"
                }
            ]
        }
    },
    {
        "query": "Please check the WHOIS information for the domain name \"example.com\".",
        "model_answer": "requests.get(\"https://whoisapi-whois-v2-v1.p.rapidapi.com/whoisserver/WhoisService\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"whoisapi-whois-v2-v1.p.rapidapi.com\"}, params={\"domainName\": \"example.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "WHOIS API (v2) returns well-parsed WHOIS records with fields in XML and JSON formats for any IPv4, IPv6 address, domain name, or email.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://whoisapi-whois-v2-v1.p.rapidapi.com/whoisserver/WhoisService'\nquerystring = {\"domainName\": \"\", \"thinWhois\": \"\", \"callback\": \"\", \"preferfresh\": \"\", \"checkproxydata\": \"\", \"_parse\": \"\", \"registryrawtext\": \"\", \"registrarRawText\": \"\", \"ipwhois\": \"\", \"ip\": \"\", \"da\": \"\", \"outputFormat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://whoisapi-whois-v2-v1.p.rapidapi.com/whoisserver/WhoisService\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domainname",
                    "description": "The name of the domain looked up.",
                    "type": "STRING"
                },
                {
                    "name": "thinwhois",
                    "description": "1 results in returning whois data from the registry only, without fetching data from the registrar. Returned registry data are to be found in the WhoisRecord \u2192 registryData schema element. Accepted values are 0 and 1, the default is 0.",
                    "type": "STRING"
                },
                {
                    "name": "callback",
                    "description": "A JAVAscript function used when outputFormat is JSON; this is an implementation known as JSONP which invokes the callback on the returned response.",
                    "type": "STRING"
                },
                {
                    "name": "preferfresh",
                    "description": "Can be 0 or 1. 1 results in getting the latest Whois record even if it is incomplete. Defaults to 0.",
                    "type": "STRING"
                },
                {
                    "name": "checkproxydata",
                    "description": "1 results in fetching proxy/whois guard data, if found, they are returned in the WhoisRecord \u2192 privateWhoisProxy schema element. Accepted values are 0 and 1, the default is 0.",
                    "type": "STRING"
                },
                {
                    "name": "_parse",
                    "description": "This parameter enables the use of the API for parsing WHOIS raw text provided in the query.1 provides parsing for input WHOIS raw texts described at the parameters registryRawText and registrarRawText. Accepted values are 0 and 1, the default is 0.",
                    "type": "STRING"
                },
                {
                    "name": "registryrawtext",
                    "description": "The string containing the registry WHOIS raw text to be parsed; works only when the _parse parameter is equal to 1.",
                    "type": "STRING"
                },
                {
                    "name": "registrarrawtext",
                    "description": "A string containing the registrar WHOIS raw text to be parsed; works only when the _parse parameter is equal to 1.",
                    "type": "STRING"
                },
                {
                    "name": "ipwhois",
                    "description": "1 results in returning the WHOIS record for the hosting IP if the WHOIS record for the domain is not supported. For unsupported TLDs, domain NameServers are returned if the ipWhois flag is activated, a WHOIS record for the hosting IP is added to the result.  Accepted values are 0 and 1, the default is 0.",
                    "type": "STRING"
                },
                {
                    "name": "ip",
                    "description": "Return IPs for the domain name. Accepted values are 0 and 1. Defaults to 0: no IPs are returned. 1 results in returning IPs.",
                    "type": "STRING"
                },
                {
                    "name": "da",
                    "description": "Perform domain availability check. Accepted values are 0, 1 and 2. Defaults to 0: no domain availability check is performed. When set to 1 the result contains a quick check on domain availability, 2 is slower but more accurate. Results are returned under WhoisRecord \u2192 domainAvailability (AVAILABLE | UNAVAILABLE | UNDETERMINED).",
                    "type": "STRING"
                },
                {
                    "name": "outputformat",
                    "description": "Response output format.  Acceptable values: XML or JSON. Defaults to XML.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://whoisapi-whois-v2-v1.p.rapidapi.com/whoisserver/WhoisService\"\nquerystring = {\"thinWhois\": \"0\", \"callback\": \"\", \"preferfresh\": \"0\", \"checkproxydata\": \"0\", \"_parse\": \"0\", \"registryrawtext\": \"\", \"registrarRawText\": \"\", \"ipwhois\": \"0\", \"ip\": \"0\", \"domainName\": \"whoisxmlapi.com\", \"da\": \"0\", \"outputFormat\": \"XML\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whoisapi-whois-v2-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WHOIS v2",
            "api_arguments_original": [
                {
                    "name": "domainName",
                    "type": "STRING",
                    "description": "The name of the domain looked up.",
                    "default": "whoisxmlapi.com"
                },
                {
                    "name": "thinWhois",
                    "type": "STRING",
                    "description": "1 results in returning whois data from the registry only, without fetching data from the registrar. Returned registry data are to be found in the WhoisRecord \u2192 registryData schema element. Accepted values are 0 and 1, the default is 0.",
                    "default": "0"
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "A JAVAscript function used when outputFormat is JSON; this is an implementation known as JSONP which invokes the callback on the returned response.",
                    "default": ""
                },
                {
                    "name": "preferfresh",
                    "type": "STRING",
                    "description": "Can be 0 or 1. 1 results in getting the latest Whois record even if it is incomplete. Defaults to 0.",
                    "default": "0"
                },
                {
                    "name": "checkproxydata",
                    "type": "STRING",
                    "description": "1 results in fetching proxy/whois guard data, if found, they are returned in the WhoisRecord \u2192 privateWhoisProxy schema element. Accepted values are 0 and 1, the default is 0.",
                    "default": "0"
                },
                {
                    "name": "_parse",
                    "type": "STRING",
                    "description": "This parameter enables the use of the API for parsing WHOIS raw text provided in the query.1 provides parsing for input WHOIS raw texts described at the parameters registryRawText and registrarRawText. Accepted values are 0 and 1, the default is 0.",
                    "default": "0"
                },
                {
                    "name": "registryrawtext",
                    "type": "STRING",
                    "description": "The string containing the registry WHOIS raw text to be parsed; works only when the _parse parameter is equal to 1.",
                    "default": ""
                },
                {
                    "name": "registrarRawText",
                    "type": "STRING",
                    "description": "A string containing the registrar WHOIS raw text to be parsed; works only when the _parse parameter is equal to 1.",
                    "default": ""
                },
                {
                    "name": "ipwhois",
                    "type": "STRING",
                    "description": "1 results in returning the WHOIS record for the hosting IP if the WHOIS record for the domain is not supported. For unsupported TLDs, domain NameServers are returned if the ipWhois flag is activated, a WHOIS record for the hosting IP is added to the result.  Accepted values are 0 and 1, the default is 0.",
                    "default": "0"
                },
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "Return IPs for the domain name. Accepted values are 0 and 1. Defaults to 0: no IPs are returned. 1 results in returning IPs.",
                    "default": "0"
                },
                {
                    "name": "da",
                    "type": "STRING",
                    "description": "Perform domain availability check. Accepted values are 0, 1 and 2. Defaults to 0: no domain availability check is performed. When set to 1 the result contains a quick check on domain availability, 2 is slower but more accurate. Results are returned under WhoisRecord \u2192 domainAvailability (AVAILABLE | UNAVAILABLE | UNDETERMINED).",
                    "default": "0"
                },
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "Response output format.  Acceptable values: XML or JSON. Defaults to XML.",
                    "default": "XML"
                }
            ]
        }
    },
    {
        "query": "Can you check if the following text contains any profanity? \"I really hate that guy!\"",
        "model_answer": "requests.get(\"https://community-purgomalum.p.rapidapi.com/json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"community-purgomalum.p.rapidapi.com\"}, params={\"text\": \"I really hate that guy!\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "PurgoMalum is a simple, free, RESTful web service for filtering and removing content of profanity, obscenity and other unwanted text. PurgoMalum's interface accepts several parameters for customization and can return results in plain text, XML and JSON.\r\n\r\nPurgoMalum is designed to remove words from input text, based on an internal profanity list (you may optionally add your own words to the profanity list through a request parameter (see Request Parameters below). It is designed to recognize character alternates often used in place of standard alphabetic characters, e.g. \"@\" will be recognized as an \"a\", \"$\" will be recognized as an \"s\", and so forth.\r\n\r\nPurgoMalum also utilizes a list of \"safe words\", i.e. innocuous words which contain words from the profanity list (\"class\" for example). These safe words are excluded from the filter.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-purgomalum.p.rapidapi.com/json'\nquerystring = {\"text\": \"\", \"add\": \"\", \"fill_text\": \"\", \"fill_char\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-purgomalum.p.rapidapi.com/json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "Input text to be processed.",
                    "type": "STRING"
                },
                {
                    "name": "add",
                    "description": "A comma separated list of words to be added to the profanity list. Accepts letters, numbers, underscores (_) and commas (,). Accepts up to 10 words (or 200 maximum characters in length). The PurgoMalum filter is case-insensitive, so the case of you entry is not important.",
                    "type": "STRING"
                },
                {
                    "name": "fill_text",
                    "description": "Text used to replace any words matching the profanity list. Accepts letters, numbers, underscores (_) tildes (~), exclamation points (!), dashes/hyphens (-), equal signs (=), pipes (|), single quotes ('), double quotes (\"), asterisks (*), open and closed curly brackets ({ }), square brackets ([ ]) and parentheses (). Maximum length of 20 characters. When not used, the default is an asterisk (*) fill.",
                    "type": "STRING"
                },
                {
                    "name": "fill_char",
                    "description": "Single character used to replace any words matching the profanity list. Fills designated character to length of word replaced. Accepts underscore (_) tilde (~), dash/hyphen (-), equal sign (=), pipe (|) and asterisk (*). When not used, the default is an asterisk (*) fill.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-purgomalum.p.rapidapi.com/json\"\nquerystring = {\"text\": \"This is some test input\", \"add\": \"\", \"fill_text\": \"\", \"fill_char\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-purgomalum.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PurgoMalum",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Input text to be processed.",
                    "default": "This is some test input"
                },
                {
                    "name": "add",
                    "type": "STRING",
                    "description": "A comma separated list of words to be added to the profanity list. Accepts letters, numbers, underscores (_) and commas (,). Accepts up to 10 words (or 200 maximum characters in length). The PurgoMalum filter is case-insensitive, so the case of you entry is not important.",
                    "default": ""
                },
                {
                    "name": "fill_text",
                    "type": "STRING",
                    "description": "Text used to replace any words matching the profanity list. Accepts letters, numbers, underscores (_) tildes (~), exclamation points (!), dashes/hyphens (-), equal signs (=), pipes (|), single quotes ('), double quotes (\"), asterisks (*), open and closed curly brackets ({ }), square brackets ([ ]) and parentheses (). Maximum length of 20 characters. When not used, the default is an asterisk (*) fill.",
                    "default": ""
                },
                {
                    "name": "fill_char",
                    "type": "STRING",
                    "description": "Single character used to replace any words matching the profanity list. Fills designated character to length of word replaced. Accepts underscore (_) tilde (~), dash/hyphen (-), equal sign (=), pipe (|) and asterisk (*). When not used, the default is an asterisk (*) fill.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the metadata of Vietnamese news articles from February 2020 with an offset of 2.",
        "model_answer": "requests.get(\"https://vietnamese-news.p.rapidapi.com/date/2020-02-*/2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"vietnamese-news.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Metadata of 250,000+ tagged Vietnamese local news articles from as soon as 2005. Updated hourly.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vietnamese-news.p.rapidapi.com/date/2020-02-*/2'\nquerystring = {\"dateString\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vietnamese-news.p.rapidapi.com/date/2020-02-*/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "datestring",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vietnamese-news.p.rapidapi.com/date/2020-02-*/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vietnamese-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vietnamese News",
            "api_arguments_original": [
                {
                    "name": "dateString",
                    "type": "string",
                    "description": "",
                    "default": "2020-02-*"
                },
                {
                    "name": "offset",
                    "type": "string",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Please calculate the monthly payment for a loan of $300,000 with an interest rate of 4% and a term of 30 years.",
        "model_answer": "requests.get(\"https://mypeak-calculator-api.p.rapidapi.com/financial/payment-calculator\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mypeak-calculator-api.p.rapidapi.com\"}, params={\"termType\": 30, \"amortizationInYears\": 30, \"interestRate\": 4, \"loanAmount\": 300000})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Basic calculator",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mypeak-calculator-api.p.rapidapi.com/financial/payment-calculator'\nquerystring = {\"termType\": \"\", \"amortizationInYears\": \"\", \"interestRate\": \"\", \"loanAmount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mypeak-calculator-api.p.rapidapi.com/financial/payment-calculator\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "termtype",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "amortizationinyears",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "interestrate",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "loanamount",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mypeak-calculator-api.p.rapidapi.com/financial/payment-calculator\"\nquerystring = {\"termType\": \"0\", \"amortizationInYears\": \"15\", \"interestRate\": \"6\", \"loanAmount\": \"200000\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mypeak-calculator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MyPEAK Calculator API",
            "api_arguments_original": [
                {
                    "name": "termType",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "amortizationInYears",
                    "type": "NUMBER",
                    "description": "",
                    "default": "15"
                },
                {
                    "name": "interestRate",
                    "type": "NUMBER",
                    "description": "",
                    "default": "6"
                },
                {
                    "name": "loanAmount",
                    "type": "NUMBER",
                    "description": "",
                    "default": "200000"
                }
            ]
        }
    },
    {
        "query": "I want to get the pages from 9GAG API.",
        "model_answer": "requests.get(\"https://9gag-api-detailed.p.rapidapi.com/get_pages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"9gag-api-detailed.p.rapidapi.com\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Detailed 9GAG API. Scraping posts, categories, users. Includes download videos/photos.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://9gag-api-detailed.p.rapidapi.com/get_pages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://9gag-api-detailed.p.rapidapi.com/get_pages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://9gag-api-detailed.p.rapidapi.com/get_pages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"9gag-api-detailed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "9GAG API (Detailed)",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the trending stickers in the Mojitok Sticker Store SDK.",
        "model_answer": "requests.get(\"https://mojitok-sticker-store-sdk.p.rapidapi.com/stickers/trending\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mojitok-sticker-store-sdk.p.rapidapi.com\"}, params={\"include\": \"STICKER_PACK\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Mojitok Sticker Store API/SDK is a curated store of licensed animated stickers, emojis, and GIFs. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mojitok-sticker-store-sdk.p.rapidapi.com/stickers/trending'\nquerystring = {\"include\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mojitok-sticker-store-sdk.p.rapidapi.com/stickers/trending\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "include",
                    "description": "Use when you want to receive a response including sticker pack or creator information",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mojitok-sticker-store-sdk.p.rapidapi.com/stickers/trending\"\nquerystring = {\"include\": \"STICKER_PACK\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mojitok-sticker-store-sdk.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mojitok Sticker Store SDK",
            "api_arguments_original": [
                {
                    "name": "include",
                    "type": "STRING",
                    "description": "Use when you want to receive a response including sticker pack or creator information",
                    "default": "STICKER_PACK"
                }
            ]
        }
    },
    {
        "query": "I want to verify if my friend is a registered nurse with the Indian Nurse Council using their request ID (1234567890).",
        "model_answer": "requests.get(\"https://nurse-verification.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"nurse-verification.p.rapidapi.com\"}, params={\"request_id\": \"1234567890\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Nurse verification is used to verify whether an individual is a registered nurse with the Indian Nurse Council (INC).\n\nUse GET Call API to fetch results, using the request_id received in response.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nurse-verification.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nurse-verification.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nurse-verification.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nurse-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Nurse Verification",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Please convert 100 USD to EUR.",
        "model_answer": "requests.get(\"https://exchangerate-api.p.rapidapi.com/rapid/latest/USD\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"exchangerate-api.p.rapidapi.com\"}, params={\"Base_Code\": \"USD\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Free currency conversion API for all 160 world currencies. Tens of thousands of developers have picked ExchangeRate-API.com over the last 10 years for its reliable data & exceptional uptime - give it a try!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://exchangerate-api.p.rapidapi.com/rapid/latest/USD'\nquerystring = {\"Base_Code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://exchangerate-api.p.rapidapi.com/rapid/latest/USD\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "base_code",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://exchangerate-api.p.rapidapi.com/rapid/latest/USD\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"exchangerate-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ExchangeRate-API",
            "api_arguments_original": [
                {
                    "name": "Base_Code",
                    "type": "string",
                    "description": "",
                    "default": "USD"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the compatibility score between Oliver M and Chloe P using The Love Calculator API?",
        "model_answer": "requests.get(\"https://the-love-calculator.p.rapidapi.com/love-calculator\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"the-love-calculator.p.rapidapi.com\"}, params={\"fname\": \"Oliver M\", \"sname\": \"Chloe P\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "A fun api that shows the compatibility of your crush!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-love-calculator.p.rapidapi.com/love-calculator'\nquerystring = {\"fname\": \"\", \"sname\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-love-calculator.p.rapidapi.com/love-calculator\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "fname",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "sname",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-love-calculator.p.rapidapi.com/love-calculator\"\nquerystring = {\"fname\": \"oliver m\", \"sname\": \"chloe p\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-love-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Love Calculator",
            "api_arguments_original": [
                {
                    "name": "fname",
                    "type": "STRING",
                    "description": "",
                    "default": "oliver m"
                },
                {
                    "name": "sname",
                    "type": "STRING",
                    "description": "",
                    "default": "chloe p"
                }
            ]
        }
    },
    {
        "query": "Can you track the location of user_id",
        "model_answer": "requests.get(\"https://geospark.p.rapidapi.com/user/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"geospark.p.rapidapi.com\"}, params={\"user_id\": \"123456\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "Location tracking simplified.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geospark.p.rapidapi.com/user/'\nquerystring = {\"user_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geospark.p.rapidapi.com/user/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "user_id",
                    "description": "user_id",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geospark.p.rapidapi.com/user/\"\nquerystring = {\"user_id\": \"USER_ID\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geospark.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GeoSpark",
            "api_arguments_original": [
                {
                    "name": "user_id",
                    "type": "STRING",
                    "description": "user_id",
                    "default": "USER_ID"
                }
            ]
        }
    },
    {
        "query": "I want to get information about a user with the username \"user123\" using the PetStoreAPI2.0.",
        "model_answer": "requests.get(\"https://petstoreapi2-0.p.rapidapi.com/user/user123\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"petstoreapi2-0.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://petstoreapi2-0.p.rapidapi.com/user/{username}'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://petstoreapi2-0.p.rapidapi.com/user/{username}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "description": "The name that needs to be fetched. Use user1 for testing.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://petstoreapi2-0.p.rapidapi.com/user/{username}\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"petstoreapi2-0.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PetStoreAPI2.0",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The name that needs to be fetched. Use user1 for testing. ",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to convert my Excel file \"data.xlsx\" to a PDF file using the Aspose.Cells Cloud API.",
        "model_answer": "requests.get(\"https://aspose-cells-cloud.p.rapidapi.com/ocr/hc_full\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"aspose-cells-cloud.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Aspose.Cells Cloud is a REST API that enables you to perform a wide range of document processing operations including creation, manipulation, conversion and rendering of Excel documents in the cloud. You can convert your XLS and XLSX files to various other formats like PDF, HTML, ODS, XPS, CSV etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aspose-cells-cloud.p.rapidapi.com/ocr/hc_full'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aspose-cells-cloud.p.rapidapi.com/ocr/hc_full\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aspose-cells-cloud.p.rapidapi.com/ocr/hc_full\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-cells-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aspose.Cells Cloud",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get a list of evergreen blogs ordered by date published.",
        "model_answer": "requests.get(\"https://blogsapi.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"blogsapi.p.rapidapi.com\"}, params={\"ordering\" \"-date_published\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get evergreen blogs for your mobile apps.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://blogsapi.p.rapidapi.com/'\nquerystring = {\"ordering\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://blogsapi.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ordering",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://blogsapi.p.rapidapi.com/\"\nquerystring = {\"ordering\": \"-date_published\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"blogsapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BlogsAPI",
            "api_arguments_original": [
                {
                    "name": "ordering",
                    "type": "STRING",
                    "description": "",
                    "default": "-date_published"
                }
            ]
        }
    },
    {
        "query": "Can you get the top trending music for the United States using the SoundCloud Charts API?",
        "model_answer": "requests.get(\"https://soundcloud-charts-api.p.rapidapi.com/charts\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"soundcloud-charts-api.p.rapidapi.com\"}, params={\"genre\" \"soundcloud:genres:rbsoul\", \"kind\" \"trending\", \"limit\" \"50\", \"region\" \"soundcloud:regions:US\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Get trending and top charts (New & Hot and other)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://soundcloud-charts-api.p.rapidapi.com/charts'\nquerystring = {\"genre\": \"\", \"kind\": \"\", \"limit\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://soundcloud-charts-api.p.rapidapi.com/charts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "genre",
                    "description": "all-music, ambient, classical, hiphoprap, alternativerock, country, danceedm, dancehall, deephouse, disco, drumbass, dubstep, electronic, folksingersongwriter, hiphoprap, house, indie, jazzblues, latin, metal, piano, pop, reggae, reggaeton, rock, soundtrack, techno, trance, trap, triphop, world .\nAll in this format: soundcloud:genres:disco",
                    "type": "STRING"
                },
                {
                    "name": "kind",
                    "description": "'trending' or 'top'",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "region",
                    "description": "ISO2 Country codes like US, DE, GB. Use in this format:\nsoundcloud:regions:DE",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://soundcloud-charts-api.p.rapidapi.com/charts\"\nquerystring = {\"genre\": \"soundcloud:genres:rbsoul\", \"limit\": \"50\", \"kind\": \"trending\", \"region\": \"soundcloud:regions:US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"soundcloud-charts-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SoundCloud Charts API",
            "api_arguments_original": [
                {
                    "name": "genre",
                    "type": "STRING",
                    "description": "all-music, ambient, classical, hiphoprap, alternativerock, country, danceedm, dancehall, deephouse, disco, drumbass, dubstep, electronic, folksingersongwriter, hiphoprap, house, indie, jazzblues, latin, metal, piano, pop, reggae, reggaeton, rock, soundtrack, techno, trance, trap, triphop, world .\nAll in this format: soundcloud:genres:disco",
                    "default": "soundcloud:genres:rbsoul"
                },
                {
                    "name": "kind",
                    "type": "STRING",
                    "description": "'trending' or 'top'",
                    "default": "trending"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "50"
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "ISO2 Country codes like US, DE, GB. Use in this format:\nsoundcloud:regions:DE",
                    "default": "soundcloud:regions:US"
                }
            ]
        }
    },
    {
        "query": "How can I translate the phrase \"Hello, how are you?\" from English to Hindi?",
        "model_answer": "response = requests.get(\"https://indic-translator.p.rapidapi.com/rapidapi_translate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indic-translator.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Indic Translator is an advance AI based Translator Indian languages translator API. It has outperformed Google and other translators for tricky Indian languages. Indic Translator has been especially designed for Indian languages, and has been trained on advance deep learning algorithm to perform well on nuanced Indian languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indic-translator.p.rapidapi.com/rapidapi_translate'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indic-translator.p.rapidapi.com/rapidapi_translate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indic-translator.p.rapidapi.com/rapidapi_translate\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indic-translator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indic-Translator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me with the player data for weight 200 lbs?",
        "model_answer": "requests.get(\"https://player-data.p.rapidapi.com/search_by_weight\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"player-data.p.rapidapi.com\"}, params={\"input_weight\": \"200\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "SSCB players",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://player-data.p.rapidapi.com/search_by_weight'\nquerystring = {\"input_weight\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://player-data.p.rapidapi.com/search_by_weight\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "input_weight",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://player-data.p.rapidapi.com/search_by_weight\"\nquerystring = {\"input_weight\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"player-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Player Data",
            "api_arguments_original": [
                {
                    "name": "input_weight",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check omniinfer task status with task_id = \"abc123\".",
        "model_answer": "requests.get(\"https://omniinfer.p.rapidapi.com/v2/progress\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"omniinfer.p.rapidapi.com\"}, params={\"task_id\": \"abc123\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Stable Diffusion API with 1000+ Models\nFast, stable, and cheap API of popular SD (stablediffusion) models for developers to easily integrate and not maintain GPUs. You can use it to build Text to Image, Image Generation applications.\nFor more information, please refer to https://omniinfer.io?ref=rapidapi\n\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://omniinfer.p.rapidapi.com/v2/progress'\nquerystring = {\"task_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://omniinfer.p.rapidapi.com/v2/progress\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "task_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://omniinfer.p.rapidapi.com/v2/progress\"\nquerystring = {\"task_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"omniinfer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Omniinfer",
            "api_arguments_original": [
                {
                    "name": "task_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please generate a QR code with the data \"https://www.example.com\" and size 10.",
        "model_answer": "requests.get(\"https://bar-qr-code-generator.p.rapidapi.com/encoded/api/download\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bar-qr-code-generator.p.rapidapi.com\"}, params={\"type\": \"qr_code\", \"size\": 10, \"data\": \"https://www.example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Generate barcodes and QR codes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bar-qr-code-generator.p.rapidapi.com/encoded/api/download'\nquerystring = {\"type\": \"\", \"data\": \"\", \"size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bar-qr-code-generator.p.rapidapi.com/encoded/api/download\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "type",
                    "description": "The type of barcode can be one of qr_code, code_128a, code_128b, code_128c, code_25, code_25_interleaved, code_25_iata, code_39, code_93, gs1_128, ean_13, bookland, ean_8, upc_supplemental, codabar",
                    "type": "STRING"
                },
                {
                    "name": "data",
                    "description": "The data to be encoded",
                    "type": "STRING"
                },
                {
                    "name": "size",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bar-qr-code-generator.p.rapidapi.com/encoded/api/download\"\nquerystring = {\"type\": \"qr_code\", \"size\": \"5\", \"data\": \"https://www.wynk182.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bar-qr-code-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bar QR Code Generator",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "The type of barcode can be one of qr_code, code_128a, code_128b, code_128c, code_25, code_25_interleaved, code_25_iata, code_39, code_93, gs1_128, ean_13, bookland, ean_8, upc_supplemental, codabar",
                    "default": "qr_code"
                },
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "The data to be encoded",
                    "default": "https://www.wynk182.com"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the QR Code image for the URL \"https://example.com\"?",
        "model_answer": "requests.get(\"https://tvb-qr-code.p.rapidapi.com/qr-code\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tvb-qr-code.p.rapidapi.com\"}, params={\"url\": \"https://example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This API takes the URL and returns the image of the QR code.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tvb-qr-code.p.rapidapi.com/qr-code'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tvb-qr-code.p.rapidapi.com/qr-code\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tvb-qr-code.p.rapidapi.com/qr-code\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tvb-qr-code.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TVB QR Code",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide details about the site with ID 12345?",
        "model_answer": "requests.get(\"https://sitedomain1.p.rapidapi.com/siteDoamin/detail/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sitedomain1.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "site adm domain",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sitedomain1.p.rapidapi.com/siteDoamin/detail/{did}'\nquerystring = {\"did\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sitedomain1.p.rapidapi.com/siteDoamin/detail/{did}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "did",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sitedomain1.p.rapidapi.com/siteDoamin/detail/{did}\"\nquerystring = {\"did\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sitedomain1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "siteDomain",
            "api_arguments_original": [
                {
                    "name": "did",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to access the income statement for AAPL stock using the FmpCloud API.",
        "model_answer": "requests.get(\"https://fmpcloud.p.rapidapi.com/income-statement/AAPL\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fmpcloud.p.rapidapi.com\"}, params={\"apikey\":\"demo\", \"period\":\"quarter\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Access stock prices. Financial statements, real stock price values. SEC EDGAR API with all filings in real time. Free stock API to discover financial data instantly more at https://fmpcloud.io/ ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fmpcloud.p.rapidapi.com/income-statement/AAPL'\nquerystring = {\"stock\": \"\", \"apikey\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fmpcloud.p.rapidapi.com/income-statement/AAPL\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "stock",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "apikey",
                    "description": "get your apikey at https://fmpcloud.io/register",
                    "type": "STRING"
                },
                {
                    "name": "period",
                    "description": "annual / quarter",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fmpcloud.p.rapidapi.com/income-statement/AAPL\"\nquerystring = {\"period\": \"quarter\", \"apikey\": \"demo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fmpcloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FmpCloud",
            "api_arguments_original": [
                {
                    "name": "stock",
                    "type": "string",
                    "description": "",
                    "default": "AAPL"
                },
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "get your apikey at https://fmpcloud.io/register",
                    "default": "demo"
                },
                {
                    "name": "period",
                    "type": "STRING",
                    "description": "annual / quarter",
                    "default": "quarter"
                }
            ]
        }
    },
    {
        "query": "How can I get real-time stock market data for company \"AAPL\"?",
        "model_answer": "requests.get(\"https://stock-cryptocurrency-forex-market-data.p.rapidapi.com/search/exchange\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"stock-cryptocurrency-forex-market-data.p.rapidapi.com\"}, params={\"q\": \"AAPL\", \"category\": \"Stock\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Real-time Stock, Cryptocurrency, and Forex market data from NASDAQ, NYSE, LSE, MYX, IDX, Binance, FTX, PancakeSwap, Uniswap, FRED etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stock-cryptocurrency-forex-market-data.p.rapidapi.com/search/exchange'\nquerystring = {\"q\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stock-cryptocurrency-forex-market-data.p.rapidapi.com/search/exchange\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "category",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stock-cryptocurrency-forex-market-data.p.rapidapi.com/search/exchange\"\nquerystring = {\"q\": \"B\", \"category\": \"Cryptocurrency\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stock-cryptocurrency-forex-market-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stock Cryptocurrency Forex Market Data",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "B"
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": "Cryptocurrency"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve a list of soccer matches from Soccerway for a specific date, say June 15, 2022, and include live matches?",
        "model_answer": "response = requests.get(\"https://soccerway-feed.p.rapidapi.com/v1/matches/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"soccerway-feed.p.rapidapi.com\"}, params={\"date\": \"2022-06-15\", \"add_live\": \"true\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Soccerway covers over 1000 football leagues & cups from 134+ countries. It is the world\u2019s largest football database. Data without delay, instant update. Historical data since 1901.  **Site:** [soccerway.com](https://int.soccerway.com/)  **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://soccerway-feed.p.rapidapi.com/v1/matches/list'\nquerystring = {\"date\": \"\", \"add_live\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://soccerway-feed.p.rapidapi.com/v1/matches/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "date",
                    "description": "date",
                    "type": "STRING"
                },
                {
                    "name": "add_live",
                    "description": "is_playing",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://soccerway-feed.p.rapidapi.com/v1/matches/list\"\nquerystring = {\"date\": \"2022-06-15\", \"add_live\": true}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"soccerway-feed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Soccerway Feed",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "date",
                    "default": "2022-06-15"
                },
                {
                    "name": "add_live",
                    "type": "BOOLEAN",
                    "description": "is_playing",
                    "default": true
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\":\"example@gmail.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "DEPRECATED. Will deleted after 2023-03-01",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aliexpress-unofficial.p.rapidapi.com/categories'\nquerystring = {\"locale\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aliexpress-unofficial.p.rapidapi.com/categories\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "locale",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aliexpress-unofficial.p.rapidapi.com/categories\"\nquerystring = {\"locale\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aliexpress-unofficial.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AliExpress unofficial",
            "api_arguments_original": [
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the news list from Flixster API.",
        "model_answer": "requests.get(\"https://flixster.p.rapidapi.com/news/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"flixster.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "This API helps to query for movies, actors, theaters, showtime, etc... to create a site/application, such as : rottentomatoes.com, flixster.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flixster.p.rapidapi.com/news/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flixster.p.rapidapi.com/news/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flixster.p.rapidapi.com/news/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flixster.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flixster",
            "api_arguments_original": []
        }
    },
    {
        "query": "What is the latest news from The Times newspaper?",
        "model_answer": "response = requests.get(\"https://new-climate.p.rapidapi.com/news/thetimes\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"new-climate.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Climate data sd",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://new-climate.p.rapidapi.com/news/thetimes'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://new-climate.p.rapidapi.com/news/thetimes\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaperid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://new-climate.p.rapidapi.com/news/thetimes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"new-climate.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "New climate",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "thetimes"
                }
            ]
        }
    },
    {
        "query": "Please provide me with deepsound API data.",
        "model_answer": "requests.get(\"https://deepsound4.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"deepsound4.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "deepsound",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://deepsound4.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://deepsound4.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://deepsound4.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"deepsound4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "deepsound",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the duration of a website visit on the site ABCR?",
        "model_answer": "response = requests.get(\"https://abcr.p.rapidapi.comhttp://abcr.sitescor.com.br\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"abcr.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Bloco de Tempo do Site ABCR",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://abcr.p.rapidapi.comhttp://abcr.sitescor.com.br'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://abcr.p.rapidapi.comhttp://abcr.sitescor.com.br\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://abcr.p.rapidapi.comhttp://abcr.sitescor.com.br\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"abcr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ABCR",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the top 10 songs of all time from the Billboard API.",
        "model_answer": "requests.get(\"https://billboard3.p.rapidapi.com/greatest-of-all-time-songs-of-the-summer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"billboard3.p.rapidapi.com\"}, params={\"range\": \"1-10\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Billboard API: Billboard Hot 100, Billboard 200, Artist 100, Billboard Global 200, Top Artists, Year-End Hot 100 Songs, Year-End Billboard Global 200, Year-End Billboard 200 Albums, Year-End Top Artists, Greatest of All Time Artists, Greatest of All Time Songs of the Summer, Greatest of All Time Hot 100 Songs and much more!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://billboard3.p.rapidapi.com/greatest-of-all-time-songs-of-the-summer'\nquerystring = {\"range\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://billboard3.p.rapidapi.com/greatest-of-all-time-songs-of-the-summer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "range",
                    "description": "Returns all results if range is not specified",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://billboard3.p.rapidapi.com/greatest-of-all-time-songs-of-the-summer\"\nquerystring = {\"range\": \"1-10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"billboard3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Billboard_v2",
            "api_arguments_original": [
                {
                    "name": "range",
                    "type": "STRING",
                    "description": "Returns all results if range is not specified",
                    "default": "1-10"
                }
            ]
        }
    },
    {
        "query": "I want to get the COVID-19 data for India from the Corona virus World and India data API.",
        "model_answer": "response = requests.get(\"https://corona-virus-world-and-india-data.p.rapidapi.com/api\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"corona-virus-world-and-india-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "COVID-19  World and India data (Depricated since 13th August 2021)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://corona-virus-world-and-india-data.p.rapidapi.com/api'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://corona-virus-world-and-india-data.p.rapidapi.com/api\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://corona-virus-world-and-india-data.p.rapidapi.com/api\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"corona-virus-world-and-india-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Corona virus World and India data",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the news articles from the \"rttrt\" API?",
        "model_answer": "requests.get(\"https://rttrt.p.rapidapi.com/users\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"rttrt.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "juts build and connect",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://rttrt.p.rapidapi.com/users'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://rttrt.p.rapidapi.com/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://rttrt.p.rapidapi.com/users\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rttrt.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "rttrt",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to find the domain for the company name \"vercel\".",
        "model_answer": "requests.get(\"https://company-domain-finder.p.rapidapi.com/get_company_url\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"company-domain-finder.p.rapidapi.com\"}, params={\"company_name\" \"vercel\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Finds the matching domain given a company name",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://company-domain-finder.p.rapidapi.com/get_company_url'\nquerystring = {\"company_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://company-domain-finder.p.rapidapi.com/get_company_url\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "company_name",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://company-domain-finder.p.rapidapi.com/get_company_url\"\nquerystring = {\"company_name\": \"vercel\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"company-domain-finder.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Company Domain Finder",
            "api_arguments_original": [
                {
                    "name": "company_name",
                    "type": "STRING",
                    "description": "",
                    "default": "vercel"
                }
            ]
        }
    },
    {
        "query": "Can you find the current location of the International Space Station?",
        "model_answer": "requests.get(\"https://iss-location.p.rapidapi.com/get\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"iss-location.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Sends geographical location of NASA",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://iss-location.p.rapidapi.com/get'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://iss-location.p.rapidapi.com/get\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://iss-location.p.rapidapi.com/get\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iss-location.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ISS Location",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please translate the phrase \"Hello, how are you?\" from English to Spanish.",
        "model_answer": "requests.get(\"https://translator97.p.rapidapi.com/languages\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"translator97.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Text Translation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translator97.p.rapidapi.com/languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translator97.p.rapidapi.com/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translator97.p.rapidapi.com/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translator97.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you generate a customizable SVG pattern with the name \"stripes\" and scale of 1.5?",
        "model_answer": "requests.get(\"https://pattern-monster.p.rapidapi.com/api/v1/vector\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pattern-monster.p.rapidapi.com\"}, params={\"name\": \"stripes\", \"scale\": \"1.5\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Create customizable SVG patterns for your projects",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pattern-monster.p.rapidapi.com/api/v1/vector'\nquerystring = {\"name\": \"\", \"scale\": \"\", \"moveLeft\": \"\", \"angle\": \"\", \"strokeJoin\": \"\", \"moveTop\": \"\", \"colors\": \"\", \"spacing\": \"\", \"stroke\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pattern-monster.p.rapidapi.com/api/v1/vector\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "Name of the pattern specified at https://pattern.monster/api\n(Default: Random name if not specified)",
                    "type": "STRING"
                },
                {
                    "name": "scale",
                    "description": "0.5 to Max Scale of the pattern specified at https://pattern.monster/api\n(Default: Random scale if not specified)",
                    "type": "NUMBER"
                },
                {
                    "name": "moveleft",
                    "description": "0 - 100 ( Default: 0 )",
                    "type": "NUMBER"
                },
                {
                    "name": "angle",
                    "description": "0 - 360 (Default: Random angle if not specified)",
                    "type": "NUMBER"
                },
                {
                    "name": "strokejoin",
                    "description": "round or square \n(Default: round)\nValid only for patterns with Stroke Join as specified at https://pattern.monster/api",
                    "type": "STRING"
                },
                {
                    "name": "movetop",
                    "description": "0 - 100 ( Default: 0 )",
                    "type": "NUMBER"
                },
                {
                    "name": "colors",
                    "description": "2 to Max Colors of the pattern specified at https://pattern.monster/api\nFormat: Color1|Color2|Color3|Color4|Color5\nAt least, two colors are required if specified\n(Default: Random colors if not specified)\nAccepted color values: \nCSS colors ( eg. aqua, red )\nRGB or RGBA colors ( eg. rgb(59,130,246), rgba(234,179,8,0.7) )\nHSL or HSLA colors ( eg. hsl(300, 76%, 72%), hsla(147,50%,47%,0.5) )\nHEX colors without the hash symbol ( eg. E11D48, 2563eb )",
                    "type": "STRING"
                },
                {
                    "name": "spacing",
                    "description": "Horizontal Spacing | Vertical Spacing\n(Default: 0|0)\nMax Spacing of the pattern specified at https://pattern.monster/api\nValid only for patterns with Max Spacing other than 0|0",
                    "type": "STRING"
                },
                {
                    "name": "stroke",
                    "description": "0.5 to Max Stroke of the pattern specified at https://pattern.monster/api\n(Default: Random stroke if not specified)\nValid only for patterns with Mode as Stroke",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pattern-monster.p.rapidapi.com/api/v1/vector\"\nquerystring = {\"name\": \"waves-1\", \"scale\": \"2\", \"moveLeft\": \"0\", \"angle\": \"100\", \"strokeJoin\": \"round\", \"moveTop\": \"0\", \"colors\": \"E11D48|rgb(234,179,8)\", \"spacing\": \"0|0\", \"stroke\": \"3\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pattern-monster.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pattern Monster",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name of the pattern specified at https://pattern.monster/api\n(Default: Random name if not specified)",
                    "default": "waves-1"
                },
                {
                    "name": "scale",
                    "type": "NUMBER",
                    "description": "0.5 to Max Scale of the pattern specified at https://pattern.monster/api\n(Default: Random scale if not specified)",
                    "default": "2"
                },
                {
                    "name": "moveLeft",
                    "type": "NUMBER",
                    "description": "0 - 100 ( Default: 0 )",
                    "default": "0"
                },
                {
                    "name": "angle",
                    "type": "NUMBER",
                    "description": "0 - 360 (Default: Random angle if not specified)",
                    "default": "100"
                },
                {
                    "name": "strokeJoin",
                    "type": "STRING",
                    "description": "round or square \n(Default: round)\nValid only for patterns with Stroke Join as specified at https://pattern.monster/api",
                    "default": "round"
                },
                {
                    "name": "moveTop",
                    "type": "NUMBER",
                    "description": "0 - 100 ( Default: 0 )",
                    "default": "0"
                },
                {
                    "name": "colors",
                    "type": "STRING",
                    "description": "2 to Max Colors of the pattern specified at https://pattern.monster/api\nFormat: Color1|Color2|Color3|Color4|Color5\nAt least, two colors are required if specified\n(Default: Random colors if not specified)\nAccepted color values: \nCSS colors ( eg. aqua, red )\nRGB or RGBA colors ( eg. rgb(59,130,246), rgba(234,179,8,0.7) )\nHSL or HSLA colors ( eg. hsl(300, 76%, 72%), hsla(147,50%,47%,0.5) )\nHEX colors without the hash symbol ( eg. E11D48, 2563eb )",
                    "default": "E11D48|rgb(234,179,8)"
                },
                {
                    "name": "spacing",
                    "type": "STRING",
                    "description": "Horizontal Spacing | Vertical Spacing\n(Default: 0|0)\nMax Spacing of the pattern specified at https://pattern.monster/api\nValid only for patterns with Max Spacing other than 0|0\n",
                    "default": "0|0"
                },
                {
                    "name": "stroke",
                    "type": "NUMBER",
                    "description": "0.5 to Max Stroke of the pattern specified at https://pattern.monster/api\n(Default: Random stroke if not specified)\nValid only for patterns with Mode as Stroke",
                    "default": "3"
                }
            ]
        }
    },
    {
        "query": "Please provide me with news articles from a Japanese newspaper.",
        "model_answer": "requests.get(\"https://east-china-news.p.rapidapi.com/japan/example_newspaper_id\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"east-china-news.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Api that filters through notable news networks for China, Japan, and Korea news",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://east-china-news.p.rapidapi.com/japan/{newspaperId}'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://east-china-news.p.rapidapi.com/japan/{newspaperId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaperid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://east-china-news.p.rapidapi.com/japan/{newspaperId}\"\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"east-china-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "East China News",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to decrypt the encrypted text \"SGVsbG8gV29ybGQh\" using the AES algorithm with the secret key \"mykey\".",
        "model_answer": "requests.get(\"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"}, params={\"cryptAlgorithm\": \"AES\", \"secretKey\": \"mykey\", \"cipherMode\": \"CBC\", \"encryptedText\": \"SGVsbG8gV29ybGQh\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Encrypt/Decrypt String/File Using these Algorithms (AES, DES, TripleDES, RC2, Rijndael).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring'\nquerystring = {\"cryptAlgorithm\": \"\", \"secretKey\": \"\", \"encryptedText\": \"\", \"cipherMode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cryptalgorithm",
                    "description": "Decryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "type": "STRING"
                },
                {
                    "name": "secretkey",
                    "description": "Secret-Key string which will be used on decryption process, and it should be same secret-key which used on encryption process.",
                    "type": "STRING"
                },
                {
                    "name": "encryptedtext",
                    "description": "Encrypted text on base64-string format.",
                    "type": "STRING"
                },
                {
                    "name": "ciphermode",
                    "description": "Decryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://encryption-api1.p.rapidapi.com/api/Cryptor/decryptstring\"\nquerystring = {\"cryptAlgorithm\": \"AES\", \"secretKey\": \"my-secret-key\", \"cipherMode\": \"CBC\", \"encryptedText\": \"base64-encrypted-text\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"encryption-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Encryption-Api",
            "api_arguments_original": [
                {
                    "name": "cryptAlgorithm",
                    "type": "STRING",
                    "description": "Decryption Algorithm (AES [default], DES, TripleDES, RC2, Rijndael).",
                    "default": "AES"
                },
                {
                    "name": "secretKey",
                    "type": "STRING",
                    "description": "Secret-Key string which will be used on decryption process, and it should be same secret-key which used on encryption process.",
                    "default": "my-secret-key"
                },
                {
                    "name": "encryptedText",
                    "type": "STRING",
                    "description": "Encrypted text on base64-string format.",
                    "default": "base64-encrypted-text"
                },
                {
                    "name": "cipherMode",
                    "type": "STRING",
                    "description": "Decryption Cipher-Mode (CBC [default], ECB, CFB).",
                    "default": "CBC"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve the search results for the keyword \"python\" from Yandex?",
        "model_answer": "requests.get(\"https://yandex-serp.p.rapidapi.com/GetTaskResult\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yandex-serp.p.rapidapi.com\"}, params={\"task_id\": \"\"})",
        "original": {
            "domain": "Jobs",
            "framework": "RapidAPI",
            "functionality": "\ud83c\udf4f Gain an edge in SEO with our Yandex SERP API. Cost-effective and incredibly user-friendly. Unleash your potential today!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yandex-serp.p.rapidapi.com/GetTaskResult'\nquerystring = {\"task_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yandex-serp.p.rapidapi.com/GetTaskResult\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "task_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yandex-serp.p.rapidapi.com/GetTaskResult\"\nquerystring = {\"task_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yandex-serp.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yandex SERP",
            "api_arguments_original": [
                {
                    "name": "task_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please find all allowable words that can be formed using the letters \"ABCDEGIKMNOPQR\" in a Boggle game.",
        "model_answer": "requests.get(\"https://codebox-boggle-v1.p.rapidapi.com/ABCDEGIKMNOPQR\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"codebox-boggle-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "A Boggle solver - supply 16 letters representing the tiles on a Boggle board and the service will return all allowable words that can be found. Letters from the first row of the board should be listed first reading from left to right, followed by letters from the second row and so on down the board. On a traditional Boggle board, the letters 'Q' and 'U' appear together on a single square, in order to be consistent with this rule the web service will interpret the single letter 'Q' as the sequence 'QU'.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://codebox-boggle-v1.p.rapidapi.com/{letters}'\nquerystring = {\"letters\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://codebox-boggle-v1.p.rapidapi.com/{letters}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "letters",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://codebox-boggle-v1.p.rapidapi.com/{letters}\"\nquerystring = {\"letters\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codebox-boggle-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Boggle",
            "api_arguments_original": [
                {
                    "name": "letters",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to perform a DNS lookup on example.com.",
        "model_answer": "requests.get(\"https://dns-lookup2.p.rapidapi.com/Api/a/example.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dns-lookup2.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "API to programmatically perform DNS lookups.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dns-lookup2.p.rapidapi.com/Api/a/oxog.net'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dns-lookup2.p.rapidapi.com/Api/a/oxog.net\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dns-lookup2.p.rapidapi.com/Api/a/oxog.net\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dns-lookup2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DNS Lookup",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "oxog.net"
                }
            ]
        }
    },
    {
        "query": "I want to check if the year 2022 is a valid season year for Formula 1.",
        "model_answer": "requests.get(\"https://formula-1-fixed.p.rapidapi.com/api/f1/year/status\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"formula-1-fixed.p.rapidapi.com\"}, params={\"year\": \"2022\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "F1",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://formula-1-fixed.p.rapidapi.com/api/f1/year/status'\nquerystring = {\"year\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://formula-1-fixed.p.rapidapi.com/api/f1/year/status\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "year",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://formula-1-fixed.p.rapidapi.com/api/f1/year/status\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"formula-1-fixed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Formula 1 - fixed",
            "api_arguments_original": [
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": "year"
                }
            ]
        }
    },
    {
        "query": "Can you generate a meme with the text \"This is a funny meme\" and \"I can't stop laughing\"?",
        "model_answer": "requests.get(\"https://memeados.p.rapidapi.com/drakelikehate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"memeados.p.rapidapi.com\"}, params={\"text2\": \"This is a funny meme\", \"text1\": \"I can't stop laughing\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Generate custom image, gif and video memes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://memeados.p.rapidapi.com/drakelikehate'\nquerystring = {\"text2\": \"\", \"text1\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://memeados.p.rapidapi.com/drakelikehate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text2",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "text1",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://memeados.p.rapidapi.com/drakelikehate\"\nquerystring = {\"text2\": \"This text is liked.\", \"text1\": \"This text is hated\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"memeados.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Memeados",
            "api_arguments_original": [
                {
                    "name": "text2",
                    "type": "STRING",
                    "description": "",
                    "default": "This text is liked."
                },
                {
                    "name": "text1",
                    "type": "STRING",
                    "description": "",
                    "default": "This text is hated"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve a random quote.",
        "model_answer": "requests.get(\"https://quotes85.p.rapidapi.com/keyword\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"quotes85.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "A Quotes API is an application programming interface that allows developers to access and retrieve a collection of quotes. It provides a convenient way to access a wide range of quotes from various authors, categories, or topics.Using a Quotes API, developers can integrate inspiring, motivational, or thought-provoking quotes into their applications, websites, or projects. The API typically offers endpoints that allow developers to fetch random quotes, search for quotes based on keywords or ca...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quotes85.p.rapidapi.com/keyword'\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quotes85.p.rapidapi.com/keyword\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "word",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quotes85.p.rapidapi.com/keyword\"\nquerystring = {\"word\": \"success\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quotes85.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quotes_v2",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "success"
                }
            ]
        }
    },
    {
        "query": "I want to get the Playstation Store Deals data with a count of 10.",
        "model_answer": "requests.get(\"https://playstation-store-deals-api.p.rapidapi.com/playstation_deals/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"playstation-store-deals-api.p.rapidapi.com\"}, params={\"count\":10})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Get Playstation Store Deals data that are on Deals which you can find here: https://store.playstation.com/en-us/category/35027334-375e-423b-b500-0d4d85eff784/1?FULL_GAME=storeDisplayClassification\n\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://playstation-store-deals-api.p.rapidapi.com/playstation_deals/'\nquerystring = {\"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://playstation-store-deals-api.p.rapidapi.com/playstation_deals/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "count",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://playstation-store-deals-api.p.rapidapi.com/playstation_deals/\"\nquerystring = {\"count\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"playstation-store-deals-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Playstation Store Deals API",
            "api_arguments_original": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "What is the distance between pincode 12345 and 67890?",
        "model_answer": "requests.get(\"https://pincode-distance-measurement.p.rapidapi.com/pincode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pincode-distance-measurement.p.rapidapi.com\"}, params={\"from\": \"12345\", \"to\": \"67890\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Pincode distance calculator API allows users to calculate the distance between two or more pin codes or zip codes. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pincode-distance-measurement.p.rapidapi.com/pincode'\nquerystring = {\"from\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pincode-distance-measurement.p.rapidapi.com/pincode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "from",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pincode-distance-measurement.p.rapidapi.com/pincode\"\nquerystring = {\"from\": \"415612\", \"to\": \"415639\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pincode-distance-measurement.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pincode Distance Measurement ",
            "api_arguments_original": [
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "",
                    "default": "415612"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "",
                    "default": "415639"
                }
            ]
        }
    },
    {
        "query": "Please check if the phone numbers 1234567890 and 9876543210 are valid using the Branded SMS Pakistan API.",
        "model_answer": "requests.get(\"https://branded-sms-pakistan.p.rapidapi.com/send\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"branded-sms-pakistan.p.rapidapi.com\"}, params={\"to\": \"1234567890, 9876543210\", \"key\": \"6014c421fd3dc1185d2b0603b41\", \"mask\": \"H3 TEST SMS\", \"email\": \"hello@brandedsmspakistan.com\", \"message\": \"Hello I am sending test message\", \"status\": \"\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Branded SMS Pakistan provide Mask or Short Code Messaging Gateway in Pakistan",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://branded-sms-pakistan.p.rapidapi.com/send'\nquerystring = {\"to\": \"\", \"key\": \"\", \"mask\": \"\", \"email\": \"\", \"message\": \"\", \"status\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://branded-sms-pakistan.p.rapidapi.com/send\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "to",
                    "description": "Destination Number (Default Format) 923151231016",
                    "type": "STRING"
                },
                {
                    "name": "key",
                    "description": "Account API Key",
                    "type": "STRING"
                },
                {
                    "name": "mask",
                    "description": "Masking (Branded Name)",
                    "type": "STRING"
                },
                {
                    "name": "email",
                    "description": "Account Email Address",
                    "type": "STRING"
                },
                {
                    "name": "message",
                    "description": "Message Limited to 640 characters",
                    "type": "STRING"
                },
                {
                    "name": "status",
                    "description": "Return Message ID",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://branded-sms-pakistan.p.rapidapi.com/send\"\nquerystring = {\"to\": \"923151231015, 923151231016\", \"key\": \"6014c421fd3dc1185d2b0603b41\", \"mask\": \"H3 TEST SMS\", \"email\": \"hello@brandedsmspakistan.com\", \"status\": \"\", \"message\": \"Hello I am sending test message\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"branded-sms-pakistan.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Branded SMS Pakistan",
            "api_arguments_original": [
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Destination Number (Default Format) 923151231016",
                    "default": "923151231015, 923151231016"
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Account API Key",
                    "default": "6014c421fd3dc1185d2b0603b41"
                },
                {
                    "name": "mask",
                    "type": "STRING",
                    "description": "Masking (Branded Name)",
                    "default": "H3 TEST SMS"
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Account Email Address",
                    "default": "hello@brandedsmspakistan.com"
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "Message Limited to 640 characters",
                    "default": "Hello I am sending test message"
                },
                {
                    "name": "status",
                    "type": "BOOLEAN",
                    "description": "Return Message ID",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you verify if the phone number 1234567890 is valid in the United States?",
        "model_answer": "requests.get(\"https://checky-verify-phone-number.p.rapidapi.com/verify\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"checky-verify-phone-number.p.rapidapi.com\"}, params={\"phone\": \"1234567890\", \"country\": \"US\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Determine in realtime if a given phone number is valid and the type of phone line it is connected to. Works for all countries!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://checky-verify-phone-number.p.rapidapi.com/verify'\nquerystring = {\"phone\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://checky-verify-phone-number.p.rapidapi.com/verify\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "phone",
                    "description": "The phone number to verify. It should be provided without any spaces or special characters.",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "The two-letter country code of the phone number.  eg **US**, **CA**, **FR** etc.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://checky-verify-phone-number.p.rapidapi.com/verify\"\nquerystring = {\"phone\": \"6502530000\", \"country\": \"US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"checky-verify-phone-number.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Checky - Verify Phone Number",
            "api_arguments_original": [
                {
                    "name": "phone",
                    "type": "STRING",
                    "description": "The phone number to verify. It should be provided without any spaces or special characters.",
                    "default": "6502530000"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "The two-letter country code of the phone number.  eg **US**, **CA**, **FR** etc.",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve the featured cards for the user \"johnsmith\" on Geeklist?",
        "model_answer": "requests.get(\"https://geeklist.p.rapidapi.com/users/johnsmith/cards\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"geeklist.p.rapidapi.com\"}, params={\"featured\": \"true\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "The first social network for developers and the tech community.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geeklist.p.rapidapi.com/users/{user}/cards'\nquerystring = {\"user\": \"\", \"featured\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geeklist.p.rapidapi.com/users/{user}/cards\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "user",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "featured",
                    "description": "Returns only featured cards for user (only for cards and not contribs).",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geeklist.p.rapidapi.com/users/{user}/cards\"\nquerystring = {\"featured\": \"\", \"user\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geeklist.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Geeklist",
            "api_arguments_original": [
                {
                    "name": "user",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "featured",
                    "type": "STRING",
                    "description": "Returns only featured cards for user (only for cards and not contribs).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with detailed information about the Bugatti Chiron made in 2021.",
        "model_answer": "requests.get(\"https://infocarsapi.p.rapidapi.com/cars/bugatti/chiron/2021\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"infocarsapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Access detailed car data and captivating visuals effortlessly.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://infocarsapi.p.rapidapi.com/cars/bugatti/chiron/2021'\nquerystring = {\"model\": \"\", \"year\": \"\", \"maker\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://infocarsapi.p.rapidapi.com/cars/bugatti/chiron/2021\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "model",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "year",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "maker",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://infocarsapi.p.rapidapi.com/cars/bugatti/chiron/2021\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"infocarsapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "InfoCarsAPI",
            "api_arguments_original": [
                {
                    "name": "model",
                    "type": "string",
                    "description": "",
                    "default": "chiron"
                },
                {
                    "name": "year",
                    "type": "string",
                    "description": "",
                    "default": "2021"
                },
                {
                    "name": "maker",
                    "type": "string",
                    "description": "",
                    "default": "bugatti"
                }
            ]
        }
    },
    {
        "query": "Could you please look up the definition of the word \"apple\" using the Dictionary by API-Ninjas?",
        "model_answer": "requests.get(\"https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dictionary-by-api-ninjas.p.rapidapi.com\"}, params={\"word\": \"apple\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Look up any word in the English dictionary. See more info at https://api-ninjas.com/api/dictionary.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary'\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "word",
                    "description": "Word to look up.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dictionary-by-api-ninjas.p.rapidapi.com/v1/dictionary\"\nquerystring = {\"word\": \"bright\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dictionary-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dictionary by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "Word to look up.",
                    "default": "bright"
                }
            ]
        }
    },
    {
        "query": "I want to get air pollution data and weather information for station with id 'Jmy9oL75KSZnsqi6L' in Asia/Singapore timezone.",
        "model_answer": "requests.get(\"https://airvisual1.p.rapidapi.com/stations/v2/get-measurements\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"airvisual1.p.rapidapi.com\"}, params={\"id\": \"Jmy9oL75KSZnsqi6L\", \"x-user-timezone\": \"Asia/Singapore\", \"x-units-temperature\": \"celsius\", \"x-user-lang\": \"en-US\", \"x-units-pressure\": \"mbar\", \"x-units-distance\": \"kilometer\", \"x-aqi-index\": \"us\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Query for Air Pollution Data, Weather information, Health Recommendations, etc... as on the official application",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://airvisual1.p.rapidapi.com/stations/v2/get-measurements'\nquerystring = {\"id\": \"\", \"x-user-timezone\": \"\", \"x-units-temperature\": \"\", \"x-user-lang\": \"\", \"x-units-pressure\": \"\", \"x-units-distance\": \"\", \"x-aqi-index\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://airvisual1.p.rapidapi.com/stations/v2/get-measurements\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "The value of id field (type is station) that returned in \u2026/v2/auto-complete endpoint",
                    "type": "STRING"
                },
                {
                    "name": "x_user_timezone",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "x_units_temperature",
                    "description": "One of the following : fahrenheit|celsius",
                    "type": "STRING"
                },
                {
                    "name": "x_user_lang",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "x_units_pressure",
                    "description": "One of the following : hg|mbar",
                    "type": "STRING"
                },
                {
                    "name": "x_units_distance",
                    "description": "One of the following : miles|kilometer",
                    "type": "STRING"
                },
                {
                    "name": "x_aqi_index",
                    "description": "One of the following : us|cn",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://airvisual1.p.rapidapi.com/stations/v2/get-measurements\"\nquerystring = {\"x-user-timezone\": \"Asia/Singapore\", \"x-units-temperature\": \"celsius\", \"x-user-lang\": \"en-US\", \"x-units-pressure\": \"mbar\", \"id\": \"Jmy9oL75KSZnsqi6L\", \"x-units-distance\": \"kilometer\", \"x-aqi-index\": \"us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"airvisual1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AirVisual",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The value of id field (type is station) that returned in \u2026/v2/auto-complete endpoint",
                    "default": "Jmy9oL75KSZnsqi6L"
                },
                {
                    "name": "x-user-timezone",
                    "type": "STRING",
                    "description": "",
                    "default": "Asia/Singapore"
                },
                {
                    "name": "x-units-temperature",
                    "type": "STRING",
                    "description": "One of the following : fahrenheit|celsius",
                    "default": "celsius"
                },
                {
                    "name": "x-user-lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en-US"
                },
                {
                    "name": "x-units-pressure",
                    "type": "STRING",
                    "description": "One of the following : hg|mbar",
                    "default": "mbar"
                },
                {
                    "name": "x-units-distance",
                    "type": "STRING",
                    "description": "One of the following : miles|kilometer",
                    "default": "kilometer"
                },
                {
                    "name": "x-aqi-index",
                    "type": "STRING",
                    "description": "One of the following : us|cn",
                    "default": "us"
                }
            ]
        }
    },
    {
        "query": "Can you generate a random picture of a cute kitten for my website?",
        "model_answer": "requests.get(\"https://nijikokun-random-cats.p.rapidapi.com/random/kitten\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nijikokun-random-cats.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "Generate random pictures of cute kittens or adorable cats for your applications, website, or just for your personal amusement. Show me your creativity!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nijikokun-random-cats.p.rapidapi.com/random/kitten'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nijikokun-random-cats.p.rapidapi.com/random/kitten\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nijikokun-random-cats.p.rapidapi.com/random/kitten\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nijikokun-random-cats.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Kitten Placeholder",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please validate the email address example@example.com?",
        "model_answer": "requests.get(\"https://validate-email5.p.rapidapi.com/v1/validate\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"validate-email5.p.rapidapi.com\"}, params={\"email\" \"example@example.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "\u201cValidate Email\u201d before you send. Discover deliverability of email addresses by our most popular email verification API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://validate-email5.p.rapidapi.com/v1/validate'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://validate-email5.p.rapidapi.com/v1/validate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://validate-email5.p.rapidapi.com/v1/validate\"\nquerystring = {\"email\": \"hello@apitier.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"validate-email5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Validate Email",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "hello@apitier.com"
                }
            ]
        }
    },
    {
        "query": "I want to get the official match schedule for the 2014 FIFA World Cup Brazil.",
        "model_answer": "requests.get(\"https://community-official-world-cup.p.rapidapi.com/wc/matches\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"community-official-world-cup.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "The Official Match Schedule for the 2014 FIFA World Cup Brazil.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-official-world-cup.p.rapidapi.com/wc/matches'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-official-world-cup.p.rapidapi.com/wc/matches\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-official-world-cup.p.rapidapi.com/wc/matches\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-official-world-cup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Official World Cup",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me with the current Rocket League tournaments in the Europe region?",
        "model_answer": "requests.get(\"https://rocket-league1.p.rapidapi.com/tournaments/europe\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"rocket-league1.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Ranks, stats, news & more, provided by the fastest and most powerful API for Rocket League.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://rocket-league1.p.rapidapi.com/tournaments/{region}'\nquerystring = {\"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://rocket-league1.p.rapidapi.com/tournaments/{region}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "region",
                    "description": "The region to search. Valid options include:\n- `asia-east`\n- `asia-se-mainland`\n- `asia-se-maritime`\n- `europe`\n- `india`\n- `asia-east`\n- `middle-east`\n- `oceania`\n- `south-africa`\n- `south-america`\n- `us-east`\n- `us-west`",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://rocket-league1.p.rapidapi.com/tournaments/{region}\"\nquerystring = {\"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rocket-league1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Rocket League",
            "api_arguments_original": [
                {
                    "name": "region",
                    "type": "ENUM",
                    "description": "The region to search. Valid options include:\n- `asia-east`\n- `asia-se-mainland`\n- `asia-se-maritime`\n- `europe`\n- `india`\n- `asia-east`\n- `middle-east`\n- `oceania`\n- `south-africa`\n- `south-america`\n- `us-east`\n- `us-west`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to search for \"python\" and get related keywords using the JoJ Web Search API.",
        "model_answer": "requests.get(\"https://joj-web-search.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"joj-web-search.p.rapidapi.com\"}, params={\"query\": \"python\", \"related_keywords\": \"true\", \"limit\": \"10\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "JoJ Web Search API. Search the world's information, including webpages, related keywords and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://joj-web-search.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"related_keywords\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://joj-web-search.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "Search query. You can use Google Search parameters.\n\ne.g. `adele site:youtube.com`\ne.g. `harry potter filetype:pdf`\ne.g. `inurl:store`\ne.g. `ronaldo -cristiano`",
                    "type": "STRING"
                },
                {
                    "name": "related_keywords",
                    "description": "Shows related keywords. Default: `false`\n\n*Entering `true`, increases API latency*",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Max results number. Max recommended value is `300`.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://joj-web-search.p.rapidapi.com/\"\nquerystring = {\"related_keywords\": \"true\", \"query\": \"Nike\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"joj-web-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "JoJ Web Search",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query. You can use Google Search parameters.\n\ne.g. `adele site:youtube.com`\ne.g. `harry potter filetype:pdf`\ne.g. `inurl:store`\ne.g. `ronaldo -cristiano`",
                    "default": "Nike"
                },
                {
                    "name": "related_keywords",
                    "type": "STRING",
                    "description": "Shows related keywords. Default: `false`\n\n*Entering `true`, increases API latency*",
                    "default": "true"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Max results number. Max recommended value is `300`.",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to use the test_v3 API to get the test result.",
        "model_answer": "requests.get(\"https://test1285.p.rapidapi.com/test\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"test1285.p.rapidapi.com\"}, params={\"test\": \"\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "this is a test api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test1285.p.rapidapi.com/test'\nquerystring = {\"test\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test1285.p.rapidapi.com/test\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "test",
                    "description": "ddd",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test1285.p.rapidapi.com/test\"\nquerystring = {\"test\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test1285.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test_v3",
            "api_arguments_original": [
                {
                    "name": "test",
                    "type": "STRING",
                    "description": "ddd",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you check if the credit card number 4916285325833071 is valid?",
        "model_answer": "requests.get(\"https://credit-card-number-validator.p.rapidapi.com/v1/validatecard\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"credit-card-number-validator.p.rapidapi.com\"}, params={\"cardnumber\": \"4916285325833071\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Enter the first few all numbers of a Credit Card to determine if it is valid and its details. By simply providing the first few numbers or a complete credit card number, this API will validate what card type it is and if it is likely valid using algorithms.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://credit-card-number-validator.p.rapidapi.com/v1/validatecard'\nquerystring = {\"cardnumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://credit-card-number-validator.p.rapidapi.com/v1/validatecard\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cardnumber",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://credit-card-number-validator.p.rapidapi.com/v1/validatecard\"\nquerystring = {\"cardnumber\": \"4682776017589385\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"credit-card-number-validator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Credit Card Number Validator",
            "api_arguments_original": [
                {
                    "name": "cardnumber",
                    "type": "STRING",
                    "description": "",
                    "default": "4682776017589385"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the basic metadata of all breeds of dogs?",
        "model_answer": "requests.get(\"https://dogbreeddb.p.rapidapi.com/paginated/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dogbreeddb.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Get the basic metadata on all breeds of dogs from around the world. Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dogbreeddb.p.rapidapi.com/paginated/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dogbreeddb.p.rapidapi.com/paginated/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dogbreeddb.p.rapidapi.com/paginated/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dogbreeddb.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DogBreedDB",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the data for ASIN \"B07WDSD7G7\" from the Amazon Live Data API in the \"us\" locale.",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B07WDSD7G7\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Online Shop HaloBiru.store",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://halobiru-store.p.rapidapi.comadmin'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://halobiru-store.p.rapidapi.comadmin\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://halobiru-store.p.rapidapi.comadmin\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"halobiru-store.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "HaloBiru.store",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Increase your e-commerce business with this API, we offer all services that you **need**<br>1.  product detail from product ID<br>2.  shipping information<br>3.  detect the new future nuggets<br>4.  trend and hitoric of sales and price on more than **80000** products (best products)<br>5.  Request the products by categories filter by **brands** and **attributes**<br>",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://magic-aliexpress1.p.rapidapi.com/api/product/3256804150697616'\nquerystring = {\"productId\": \"\", \"targetCurrency\": \"\", \"lg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://magic-aliexpress1.p.rapidapi.com/api/product/3256804150697616\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "productid",
                    "description": "The Aliexpress product ID",
                    "type": "NUMBER"
                },
                {
                    "name": "targetcurrency",
                    "description": "Represents the currency whished when the product is retrieved",
                    "type": "STRING"
                },
                {
                    "name": "lg",
                    "description": "Represents the language wished when displaying the single product. He must compliant with ISO 639-1 either have two digits",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://magic-aliexpress1.p.rapidapi.com/api/product/3256804150697616\"\nquerystring = {\"targetCurrency\": \"\", \"lg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magic-aliexpress1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Magic AliExpress",
            "api_arguments_original": [
                {
                    "name": "productId",
                    "type": "NUMBER",
                    "description": "The Aliexpress product ID",
                    "default": "3256804150697616"
                },
                {
                    "name": "targetCurrency",
                    "type": "STRING",
                    "description": "Represents the currency whished when the product is retrieved",
                    "default": ""
                },
                {
                    "name": "lg",
                    "type": "STRING",
                    "description": "Represents the language wished when displaying the single product. He must compliant with ISO 639-1 either have two digits",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the video details for episode 123.",
        "model_answer": "requests.get(\"https://vod-app.p.rapidapi.com/video/123\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"vod-app.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "API for video on demand app",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vod-app.p.rapidapi.com/video/{episodeHouseNumber}'\nquerystring = {\"episodeHouseNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vod-app.p.rapidapi.com/video/{episodeHouseNumber}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "episodehousenumber",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vod-app.p.rapidapi.com/video/{episodeHouseNumber}\"\nquerystring = {\"episodeHouseNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vod-app.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "VOD App",
            "api_arguments_original": [
                {
                    "name": "episodeHouseNumber",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get OAuth/OpenID Connect authentication information for Google.",
        "model_answer": "requests.get(\"https://acrosuite-oauther.p.rapidapi.com/v0_1/CstService/tools/oauth/oidclist\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"acrosuite-oauther.p.rapidapi.com\"}, params={\"oAuthCode\": \"GoogleOIDC\", \"redirectHost\": \"\", \"redirectPort\": \"\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Get OAuth/OpenID Connect authentication information. OpenID Connect\u8a8d\u8a3c\u60c5\u5831\u53d6\u5f97\u30b5\u30fc\u30d3\u30b9\u3092\u63d0\u4f9b\u3044\u307e\u3059\u3002",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://acrosuite-oauther.p.rapidapi.com/v0_1/CstService/tools/oauth/oidclist'\nquerystring = {\"oAuthCode\": \"\", \"redirectHost\": \"\", \"redirectPort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://acrosuite-oauther.p.rapidapi.com/v0_1/CstService/tools/oauth/oidclist\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "oauthcode",
                    "description": "OIDCProviderCode(GoogleOIDC/LineOIDC/YahooJPOIDC)",
                    "type": "STRING"
                },
                {
                    "name": "redirecthost",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "redirectport",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://acrosuite-oauther.p.rapidapi.com/v0_1/CstService/tools/oauth/oidclist\"\nquerystring = {\"oAuthCode\": \"\", \"redirectHost\": \"\", \"redirectPort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"acrosuite-oauther.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AcroSuite OAuther",
            "api_arguments_original": [
                {
                    "name": "oAuthCode",
                    "type": "STRING",
                    "description": "OIDCProviderCode(GoogleOIDC/LineOIDC/YahooJPOIDC)",
                    "default": ""
                },
                {
                    "name": "redirectHost",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "redirectPort",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to generate a random GUID.",
        "model_answer": "requests.get(\"https://guid-generator1.p.rapidapi.com/GenerateGuid\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"guid-generator1.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "The API that generates random GUIDs.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://guid-generator1.p.rapidapi.com/GenerateGuid'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://guid-generator1.p.rapidapi.com/GenerateGuid\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://guid-generator1.p.rapidapi.com/GenerateGuid\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"guid-generator1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GUID generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the nutritional information for milk.",
        "model_answer": "requests.get(\"https://food-nutrional-data.p.rapidapi.com/milk\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"food-nutrional-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Access thousands of food ingredients and their nutritional information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://food-nutrional-data.p.rapidapi.com/milk'\nquerystring = {\"nutrientQuery\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://food-nutrional-data.p.rapidapi.com/milk\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "nutrientquery",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://food-nutrional-data.p.rapidapi.com/milk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"food-nutrional-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Food Nutrional Data",
            "api_arguments_original": [
                {
                    "name": "nutrientQuery",
                    "type": "string",
                    "description": "",
                    "default": "milk"
                }
            ]
        }
    },
    {
        "query": "Please provide 5 easy words from the Mixy Word Guess API.",
        "model_answer": "requests.get('https://mixy-word-guess-api.p.rapidapi.com/api/v1/word', headers={'X-RapidAPI-Key': 'SIGN-UP-FOR-KEY', 'X-RapidAPI-Host': 'mixy-word-guess-api.p.rapidapi.com'}, params=(('amount', '5'), ('difficulty', 'easy')))",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mixy-word-guess-api.p.rapidapi.com/api/v1/word'\nquerystring = {\"amount\": \"\", \"difficulty\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mixy-word-guess-api.p.rapidapi.com/api/v1/word\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "amount",
                    "description": "Valid values: integer between 1 and 100",
                    "type": "NUMBER"
                },
                {
                    "name": "difficulty",
                    "description": "valid values: \"easy\", \"medium\", \"hard\"",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mixy-word-guess-api.p.rapidapi.com/api/v1/word\"\nquerystring = {\"amount\": \"10\", \"difficulty\": \"easy\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mixy-word-guess-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mixy Word Guess Api",
            "api_arguments_original": [
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "Valid values: integer between 1 and 100",
                    "default": "10"
                },
                {
                    "name": "difficulty",
                    "type": "STRING",
                    "description": "valid values: \"easy\", \"medium\", \"hard\"",
                    "default": "easy"
                }
            ]
        }
    },
    {
        "query": "I want to calculate the similarity between the texts \"Hello\" and \"Hi\".",
        "model_answer": "requests.get(\"https://text-similarity-calculator.p.rapidapi.com/stringcalculator.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"text-similarity-calculator.p.rapidapi.com\"}, params={\"ftext\": \"Hello\", \"stext\": \"Hi\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "This calculates the similarity between two texts in percentage. It is an implementation as described in Programming Classics: Implementing the World's Best Algorithms by Ian Oliver). Note that this implementation does not use a stack as in Oliver's pseudo code, but recursive calls which may or may not speed up the whole process. Note also that the complexity of this algorithm is O(N**3) where N is the length of the longest string.\r\n\r\nFor more details: \r\nhttps://en.wikipedia.org/wiki/Approximate_string_matching",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://text-similarity-calculator.p.rapidapi.com/stringcalculator.php'\nquerystring = {\"ftext\": \"\", \"stext\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://text-similarity-calculator.p.rapidapi.com/stringcalculator.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ftext",
                    "description": "Enter text number one",
                    "type": "STRING"
                },
                {
                    "name": "stext",
                    "description": "Enter text number two.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://text-similarity-calculator.p.rapidapi.com/stringcalculator.php\"\nquerystring = {\"ftext\": \"This is text numer one.\", \"stext\": \"This is text number two.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"text-similarity-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Text similarity calculator",
            "api_arguments_original": [
                {
                    "name": "ftext",
                    "type": "STRING",
                    "description": "Enter text number one",
                    "default": "This is text numer one."
                },
                {
                    "name": "stext",
                    "type": "STRING",
                    "description": "Enter text number two.",
                    "default": "This is text number two."
                }
            ]
        }
    },
    {
        "query": "\"I want to get the GST details and filing data for GSTIN",
        "model_answer": "requests.get(\"https://gst-details-filing-data.p.rapidapi.com/gst/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gst-details-filing-data.p.rapidapi.com\"}, params={\"GSTIN\": \"33AAACR4849R4ZP\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Get company details, Return Status & Filing Data based on GSTIN\n- Monthly Data, Quarterly Data, Yearly Data & hsn codes\n-Update 21 May 2023: I have updated the API & it's even faster with zero errors.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gst-details-filing-data.p.rapidapi.com/gst/'\nquerystring = {\"GSTIN\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gst-details-filing-data.p.rapidapi.com/gst/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "gstin",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gst-details-filing-data.p.rapidapi.com/gst/\"\nquerystring = {\"GSTIN\": \"33AAACR4849R4ZP\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gst-details-filing-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GST Details & Filing Data",
            "api_arguments_original": [
                {
                    "name": "GSTIN",
                    "type": "STRING",
                    "description": "",
                    "default": "33AAACR4849R4ZP"
                }
            ]
        }
    },
    {
        "query": "Can you get me the details of the current free games available on Epic Games Store?",
        "model_answer": "requests.get(\"https://epic-free-games.p.rapidapi.com/epic-free-games\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"epic-free-games.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Epic Games Store - Free Games with details.\n\nGame Name,\nGame Description,\nGame Image Wide - Tall,\nGame Publisher,\nGame Discount Price,\nGame Original Price,\nGame Price Currency Code,\nGame Epic URL\n\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://epic-free-games.p.rapidapi.com/epic-free-games'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://epic-free-games.p.rapidapi.com/epic-free-games\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://epic-free-games.p.rapidapi.com/epic-free-games\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"epic-free-games.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Epic Free Games",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the email address john@example.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"john@example.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "market data for used apple products",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://apfelpreise.p.rapidapi.com/price/TVdQNzJEL0E='\nquerystring = {\"manufacturerNumBase64Encoded\": \"\", \"condition\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://apfelpreise.p.rapidapi.com/price/TVdQNzJEL0E=\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "manufacturernumbase64encoded",
                    "description": "A manufacturer number of an apple product, base64 encoded, e.g for a Apple MacBook Pro 13\\\\\\\" 2020 with manufacturer number MWP72D/A -> TVdQNzJEL0E=",
                    "type": "string"
                },
                {
                    "name": "condition",
                    "description": "ENUM, valid values are: USED, NEW, DEFECT, REFURBISHED\n\nNote: Until now in v1, only values USED and REFURBISHED are allowed and give the same results (no distringuish between USED or REFURBISHED, so use any of the two.\nIn a future release, the other values will be also supported.",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://apfelpreise.p.rapidapi.com/price/TVdQNzJEL0E=\"\nquerystring = {\"condition\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"apfelpreise.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Apfelpreise",
            "api_arguments_original": [
                {
                    "name": "manufacturerNumBase64Encoded",
                    "type": "string",
                    "description": "A manufacturer number of an apple product, base64 encoded, e.g for a Apple MacBook Pro 13\\\\\\\" 2020 with manufacturer number MWP72D/A -> TVdQNzJEL0E=",
                    "default": "TVdQNzJEL0E="
                },
                {
                    "name": "condition",
                    "type": "ENUM",
                    "description": "ENUM, valid values are: USED, NEW, DEFECT, REFURBISHED\n\nNote: Until now in v1, only values USED and REFURBISHED are allowed and give the same results (no distringuish between USED or REFURBISHED, so use any of the two.\nIn a future release, the other values will be also supported.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please validate the phone number +1 (123) 456-7890 using the phone validation API.",
        "model_answer": "requests.get(\"https://phone-validation.p.rapidapi.com/+11234567890\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"phone-validation.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Mobile phone validation with extended checks",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://phone-validation.p.rapidapi.com/{phone}'\nquerystring = {\"phone\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://phone-validation.p.rapidapi.com/{phone}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "phone",
                    "description": "Provided number should be in E.164 format. (E.164 numbers can have a maximum of fifteen digits and are usually written as follows: [+][country code][subscriber number including area code].)",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://phone-validation.p.rapidapi.com/{phone}\"\nquerystring = {\"phone\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"phone-validation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "phone validation",
            "api_arguments_original": [
                {
                    "name": "phone",
                    "type": "STRING",
                    "description": "Provided number should be in E.164 format. (E.164 numbers can have a maximum of fifteen digits and are usually written as follows: [+][country code][subscriber number including area code].)",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest NFT activities from the ETH blockchain using the Rich NFT API?",
        "model_answer": "requests.get(\"https://rich-nft-api-metadata.p.rapidapi.com/activity/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"rich-nft-api-metadata.p.rapidapi.com\"}, params={\"chain_id\": \"eth\", \"collection_id\": \"0xa7d8d9ef8d8ce8992df33d8b8cf4aebabd5bd270\", \"is_whale\": \"false\", \"order_by\": \"-time_at\", \"limit\": \"20\", \"start\": \"0\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Rich NFT API. Browse collections, tokens, metadata, holders, activities, transfers",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://rich-nft-api-metadata.p.rapidapi.com/activity/list'\nquerystring = {\"chain_id\": \"\", \"collection_id\": \"\", \"is_whale\": \"\", \"order_by\": \"\", \"limit\": \"\", \"start\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://rich-nft-api-metadata.p.rapidapi.com/activity/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "chain_id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "collection_id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "is_whale",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "order_by",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "start",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://rich-nft-api-metadata.p.rapidapi.com/activity/list\"\nquerystring = {\"is_whale\": \"false\", \"order_by\": \"-time_at\", \"chain_id\": \"eth\", \"collection_id\": \"0xa7d8d9ef8d8ce8992df33d8b8cf4aebabd5bd270\", \"limit\": \"20\", \"start\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rich-nft-api-metadata.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Rich NFT API + Metadata",
            "api_arguments_original": [
                {
                    "name": "chain_id",
                    "type": "STRING",
                    "description": "",
                    "default": "eth"
                },
                {
                    "name": "collection_id",
                    "type": "STRING",
                    "description": "",
                    "default": "0xa7d8d9ef8d8ce8992df33d8b8cf4aebabd5bd270"
                },
                {
                    "name": "is_whale",
                    "type": "STRING",
                    "description": "",
                    "default": "false"
                },
                {
                    "name": "order_by",
                    "type": "STRING",
                    "description": "",
                    "default": "-time_at"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                },
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Can you help me perform a Whois lookup for the domain name \"example.com\"?",
        "model_answer": "requests.get(\"https://whois-lookup1.p.rapidapi.com/imnikgoyal/whois-lookup\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"whois-lookup1.p.rapidapi.com\"}, params={\"domain\": \"example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Whois Lookup API in JSON",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://whois-lookup1.p.rapidapi.com/imnikgoyal/whois-lookup'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://whois-lookup1.p.rapidapi.com/imnikgoyal/whois-lookup\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://whois-lookup1.p.rapidapi.com/imnikgoyal/whois-lookup\"\nquerystring = {\"domain\": \"facebook.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whois-lookup1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Whois Lookup_v2",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "facebook.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the exchange rates on February 3, 2005?",
        "model_answer": "requests.get(\"https://mlatman-currency-v1.p.rapidapi.com/2005-02-03\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mlatman-currency-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Get current and historical currency exchange rates with ease. Rates from the European Central Bank, updated every 15 minutes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mlatman-currency-v1.p.rapidapi.com/{2005-02-03}'\nquerystring = {\"2005-02-03\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mlatman-currency-v1.p.rapidapi.com/{2005-02-03}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "2005_02_03",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mlatman-currency-v1.p.rapidapi.com/{2005-02-03}\"\nquerystring = {\"2005-02-03\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mlatman-currency-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Currency_v3",
            "api_arguments_original": [
                {
                    "name": "2005-02-03",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide the address information for latitude 37.7749 and longitude -122.4194 after converting it to the World Geodetic System?",
        "model_answer": "requests.get(\"https://navitime-geocoding.p.rapidapi.com/datum_conversion\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"navitime-geocoding.p.rapidapi.com\"}, params={\"coord\": \"37.7749,-122.4194\", \"after_datum\": \"wgs84\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Return address informations including longitude/latitude and a postal code, by specifying keywords or a postal code. \nWe also provide Reverse geocoding function, which converts from longitude/latitude into address informations.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://navitime-geocoding.p.rapidapi.com/datum_conversion'\nquerystring = {\"coord\": \"\", \"after_datum\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://navitime-geocoding.p.rapidapi.com/datum_conversion\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "coord",
                    "description": "Latitude and longitude before conversion.\nSupport millisecond and degree indication.",
                    "type": "STRING"
                },
                {
                    "name": "after_datum",
                    "description": "Geodetic system after conversion.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System)",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://navitime-geocoding.p.rapidapi.com/datum_conversion\"\nquerystring = {\"coord\": \"35.624822,139.742121\", \"after_datum\": \"wgs84\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"navitime-geocoding.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NAVITIME Geocoding",
            "api_arguments_original": [
                {
                    "name": "coord",
                    "type": "STRING",
                    "description": "Latitude and longitude before conversion.\nSupport millisecond and degree indication.",
                    "default": "35.624822,139.742121"
                },
                {
                    "name": "after_datum",
                    "type": "STRING",
                    "description": "Geodetic system after conversion.\n(wgs84: World Geodetic System (default), tokyo: Old Japan Geodetic System)",
                    "default": "wgs84"
                }
            ]
        }
    },
    {
        "query": "Can you show me the latest news and price data for The Sandbox metaverse?",
        "model_answer": "requests.get(\"https://the-sandbox-sand.p.rapidapi.com/market/chart/7d\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"the-sandbox-sand.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "An API dedicated to The Sandbox metaverse. Get the latest news and price data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-sandbox-sand.p.rapidapi.com/market/chart/7d'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-sandbox-sand.p.rapidapi.com/market/chart/7d\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-sandbox-sand.p.rapidapi.com/market/chart/7d\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-sandbox-sand.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Sandbox - SAND",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me get live data of a product with ASIN B09DKV849B on Amazon in the US marketplace?",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "daftar big89 dan login big89 judi online indonesia terpercaya",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://big89.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://big89.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://big89.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"big89.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "big89",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the details of the airport in Dublin?",
        "model_answer": "requests.get(\"https://world-airports-directory.p.rapidapi.com/v1/airports/dub\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"world-airports-directory.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "API returns all matching airpot details based on the most relevant keyword of city, airport code, city code etc. among collection of all airports around the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-airports-directory.p.rapidapi.com/v1/airports/dub'\nquerystring = {\"matchingKeywordAirportOrCityOrCode\": \"\", \"sortBy\": \"\", \"page\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-airports-directory.p.rapidapi.com/v1/airports/dub\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "matchingkeywordairportorcityorcode",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "sortby",
                    "description": "Valid format to sort is `field:order`\ne.g. `AirportName:asc`, `AirportName:desc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "This controls the pagination of results.\nDefault is `1`",
                    "type": "NUMBER"
                },
                {
                    "name": "limit",
                    "description": "This indicates how many results you would like to query in one time.\nDefault value is `10` if limit is not provided.\nMaximum limit is `20`",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-airports-directory.p.rapidapi.com/v1/airports/dub\"\nquerystring = {\"sortBy\": \"AirportName:asc\", \"page\": 1, \"limit\": 20}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-airports-directory.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Airports Directory",
            "api_arguments_original": [
                {
                    "name": "matchingKeywordAirportOrCityOrCode",
                    "type": "string",
                    "description": "",
                    "default": "dub"
                },
                {
                    "name": "sortBy",
                    "type": "STRING",
                    "description": "Valid format to sort is `field:order`\ne.g. `AirportName:asc`, `AirportName:desc`\nwhere `asc` for sorting in ascending order\n`desc` for sorting in descending order",
                    "default": "AirportName:asc"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "This controls the pagination of results.\nDefault is `1`",
                    "default": 1
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "This indicates how many results you would like to query in one time.\nDefault value is `10` if limit is not provided.\nMaximum limit is `20`",
                    "default": 20
                }
            ]
        }
    },
    {
        "query": "I want to search for \"macbook air\" on Amazon using the Basic Amazon Scraper API.",
        "model_answer": "requests.get(\"https://basic-amazon-scraper.p.rapidapi.com/search/macbook air\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"basic-amazon-scraper.p.rapidapi.com\"}, params={\"api_key\" \"f03399e151f471ce4a771f1se2f5yg3d\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Free API to get Amazon product metadata. Product details, Reviews, Offers, and Search Queries.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://basic-amazon-scraper.p.rapidapi.com/search/macbook air'\nquerystring = {\"searchQuery\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://basic-amazon-scraper.p.rapidapi.com/search/macbook air\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchquery",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "api_key",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://basic-amazon-scraper.p.rapidapi.com/search/macbook air\"\nquerystring = {\"api_key\": \"f03399e151f471ce4a771f1se2f5yg3d\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"basic-amazon-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Basic Amazon Scraper",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "macbook air"
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": "f03399e151f471ce4a771f1se2f5yg3d"
                }
            ]
        }
    },
    {
        "query": "Can you help me complete the sentence \"All [MASK] like to chase rats\" with an AI model?",
        "model_answer": "requests.get(\"https://walnut-word-completion.p.rapidapi.com/wrt_transformer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"walnut-word-completion.p.rapidapi.com\"}, params={\"payload\": \"All [MASK] like to chase rats\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Complete any masked word in a sentence using AI.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://walnut-word-completion.p.rapidapi.com/wrt_transformer'\nquerystring = {\"payload\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://walnut-word-completion.p.rapidapi.com/wrt_transformer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "payload",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://walnut-word-completion.p.rapidapi.com/wrt_transformer\"\nquerystring = {\"payload\": \"All [MASK] like to chase rats.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"walnut-word-completion.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Walnut Word Completion",
            "api_arguments_original": [
                {
                    "name": "payload",
                    "type": "STRING",
                    "description": "",
                    "default": "All [MASK] like to chase rats."
                }
            ]
        }
    },
    {
        "query": "I want to get a random cocktail recipe.",
        "model_answer": "requests.get(\"https://the-cocktail-db3.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"the-cocktail-db3.p.rapidapi.com/\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Cocktail recipes with high-quality images stored on AWS S3 for fast accessibility. Easy to use!\nCategory: Food",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-cocktail-db3.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-cocktail-db3.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-cocktail-db3.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-cocktail-db3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Cocktail DB",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me with the tracking details (using the Transportistas de Argentina API) for task ID 12345?",
        "model_answer": "requests.get(\"https://transportistas-de-argentina.p.rapidapi.com/tracking/correo_argentino/result_task/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"transportistas-de-argentina.p.rapidapi.com\"})",
        "original": {
            "domain": "Logistics",
            "framework": "RapidAPI",
            "functionality": "Obten las oficinas, localidades y precios de tus envios en Argentina para Andreani, Oca y Correo Argentino.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://transportistas-de-argentina.p.rapidapi.com/tracking/correo_argentino/result_task/{task_id}'\nquerystring = {\"task_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://transportistas-de-argentina.p.rapidapi.com/tracking/correo_argentino/result_task/{task_id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "task_id",
                    "description": "Task ID",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://transportistas-de-argentina.p.rapidapi.com/tracking/correo_argentino/result_task/{task_id}\"\nquerystring = {\"task_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"transportistas-de-argentina.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Transportistas de Argentina",
            "api_arguments_original": [
                {
                    "name": "task_id",
                    "type": "STRING",
                    "description": "Task ID",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the live prices for Gold, Silver, Palladium, and Platinum in Euro currency.",
        "model_answer": "requests.get(\"https://live-metal-prices.p.rapidapi.com/v1/latest/XAU,XAG,PA,PL/EUR\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"live-metal-prices.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Live prices for Gold, Silver, Palladium and Platinum in 160+ currencies including USD, GBP and EUR.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://live-metal-prices.p.rapidapi.com/v1/latest/XAU,XAG,PA,PL,GBP,EUR/EUR'\nquerystring = {\"requestedSymbols\": \"\", \"requestedCurrency\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://live-metal-prices.p.rapidapi.com/v1/latest/XAU,XAG,PA,PL,GBP,EUR/EUR\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "requestedsymbols",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "requestedcurrency",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://live-metal-prices.p.rapidapi.com/v1/latest/XAU,XAG,PA,PL,GBP,EUR/EUR\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"live-metal-prices.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Live Metal Prices",
            "api_arguments_original": [
                {
                    "name": "requestedSymbols",
                    "type": "string",
                    "description": "",
                    "default": "XAU,XAG,PA,PL,GBP,EUR"
                },
                {
                    "name": "requestedCurrency",
                    "type": "string",
                    "description": "",
                    "default": "EUR"
                }
            ]
        }
    },
    {
        "query": "How can I get the details of Airbnb listings in Tenerife with a maximum guest capacity of 2 and 1 bedroom?",
        "model_answer": "requests.get(\"https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"}, params={\"market\": \"Tenerife\", \"offset\": 0, \"maxGuestCapacity\": 2, \"bedrooms\": 1})",
        "original": {
            "domain": "Logistics",
            "framework": "RapidAPI",
            "functionality": "Get airbnb listings details, prices, availability and more using listing IDs, latitude and longitude or \"market\". \nData analytics endpoints are also available to get detailed info around all airbnb accomodations.\nData are not in realtime but updated as frequently as possible. Each time property prices, details or statuses are requested we prioritize this property to be updated multiple times/day for the next 24 hours. So on your very first request of a property data you may get not updated data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket'\nquerystring = {\"market\": \"\", \"offset\": \"\", \"maxGuestCapacity\": \"\", \"bedrooms\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "market",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "offset",
                    "description": "index to start from",
                    "type": "NUMBER"
                },
                {
                    "name": "maxguestcapacity",
                    "description": "Max guest the listing can accomodate",
                    "type": "NUMBER"
                },
                {
                    "name": "bedrooms",
                    "description": "number of bedrooms",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://airbnb-listings.p.rapidapi.com/v2/listingsByMarket\"\nquerystring = {\"maxGuestCapacity\": \"2\", \"market\": \"Tenerife\", \"bedrooms\": \"1\", \"offset\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"airbnb-listings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Airbnb listings",
            "api_arguments_original": [
                {
                    "name": "market",
                    "type": "STRING",
                    "description": "",
                    "default": "Tenerife"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "index to start from",
                    "default": "0"
                },
                {
                    "name": "maxGuestCapacity",
                    "type": "NUMBER",
                    "description": "Max guest the listing can accomodate",
                    "default": "2"
                },
                {
                    "name": "bedrooms",
                    "type": "NUMBER",
                    "description": "number of bedrooms",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you check the license plate AB913CT using the \"Verifica Targhe Italiane\" API?",
        "model_answer": "requests.get(\"https://verifica-targhe-italiane-api.p.rapidapi.com/default/BVSLambda\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"verifica-targhe-italiane-api.p.rapidapi.com\"}, params={\"plate\": \"AB913CT\", \"function\": \"getktypefornumplateitalian\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Verifica Targhe Italiane ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://verifica-targhe-italiane-api.p.rapidapi.com/default/BVSLambda'\nquerystring = {\"plate\": \"\", \"function\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://verifica-targhe-italiane-api.p.rapidapi.com/default/BVSLambda\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "plate",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "function",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://verifica-targhe-italiane-api.p.rapidapi.com/default/BVSLambda\"\nquerystring = {\"plate\": \"AB913CT\", \"function\": \"getktypefornumplateitalian\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"verifica-targhe-italiane-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Verifica Targhe Italiane - API",
            "api_arguments_original": [
                {
                    "name": "plate",
                    "type": "STRING",
                    "description": "",
                    "default": "AB913CT"
                },
                {
                    "name": "function",
                    "type": "STRING",
                    "description": "",
                    "default": "getktypefornumplateitalian"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the Italian Serie A standings for the current season?",
        "model_answer": "requests.get(\"https://serie-a-standings.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"serie-a-standings.p.rapidapi.com\"}, params={\"season\": \"\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Italian Serie A Standings & Table",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://serie-a-standings.p.rapidapi.com/'\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://serie-a-standings.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "season",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://serie-a-standings.p.rapidapi.com/\"\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"serie-a-standings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Serie A Standings",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you test the Test_v5 API for me?",
        "model_answer": "requests.get(\"https://test1506.p.rapidapi.com/test1506.p.rapidapi.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test1506.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test1506.p.rapidapi.com/test1506.p.rapidapi.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test1506.p.rapidapi.com/test1506.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test1506.p.rapidapi.com/test1506.p.rapidapi.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test1506.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Test_v5",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please check if the domain google.com is available?",
        "model_answer": "requests.get(\"https://domain-checker-api.p.rapidapi.com/lookup\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"domain-checker-api.p.rapidapi.com\"}, params={\"url\": \"google.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "The Domain Checker API allows users to retrieve detailed information about a specific domain name. With this API, developers, businesses, and individuals can access valuable data such as the domain's registrar information and registrant contact details.\n\nBy making use of the Domain Checker API, users can obtain the following information related to a domain:\n\nRegistrar Info: This includes the name of the domain registrar, the WHOIS server responsible for providing domain registration informati...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://domain-checker-api.p.rapidapi.com/lookup'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://domain-checker-api.p.rapidapi.com/lookup\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://domain-checker-api.p.rapidapi.com/lookup\"\nquerystring = {\"url\": \"https://rapidapi.com/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"domain-checker-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Domain Checker API",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://rapidapi.com/"
                }
            ]
        }
    },
    {
        "query": "Can you provide the geographic coordinates for zip code 90210?",
        "model_answer": "requests.get(\"https://us-zipcodes.p.rapidapi.com/codes/90210\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"us-zipcodes.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The API offers detailed data about zip codes in the USA, including geographic coordinates, county, city, and time zone. This information is valuable for targeted marketing, data analysis, and location-based services. Users can retrieve location-specific details about a given zip code using the API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://us-zipcodes.p.rapidapi.com/codes/501'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://us-zipcodes.p.rapidapi.com/codes/501\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "code",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://us-zipcodes.p.rapidapi.com/codes/501\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"us-zipcodes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "US Zipcodes",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "",
                    "default": "501"
                }
            ]
        }
    },
    {
        "query": "What is the climate data for New York?",
        "model_answer": "requests.get(\"https://climate-data.p.rapidapi.com/api/getlocation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"climate-data.p.rapidapi.com\"}, params={\"CITY\": \"New York\", \"LANG\": \"en\", \"ZIPCODE\": \"\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "climate data worldwide",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-data.p.rapidapi.com/api/getlocation'\nquerystring = {\"CITY\": \"\", \"LANG\": \"\", \"ZIPCODE\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-data.p.rapidapi.com/api/getlocation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "city",
                    "description": "name of a city",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "language [en,fr,nl,es,pt,it,tr,gr,cz,pl,ru,cn]",
                    "type": "STRING"
                },
                {
                    "name": "zipcode",
                    "description": "zip code of the city",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-data.p.rapidapi.com/api/getlocation\"\nquerystring = {\"CITY\": \"New York\", \"LANG\": \"en\", \"ZIPCODE\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "climate data",
            "api_arguments_original": [
                {
                    "name": "CITY",
                    "type": "STRING",
                    "description": "name of a city",
                    "default": "New York"
                },
                {
                    "name": "LANG",
                    "type": "STRING",
                    "description": "language [en,fr,nl,es,pt,it,tr,gr,cz,pl,ru,cn]",
                    "default": "en"
                },
                {
                    "name": "ZIPCODE",
                    "type": "STRING",
                    "description": "zip code of the city",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please show me the top 10 cryptocurrencies using the All-In-One Crypto Swiss Knife API.",
        "model_answer": "requests.get(\"https://all-in-one-crypto-swiss-knife.p.rapidapi.com/coins/toplist\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"all-in-one-crypto-swiss-knife.p.rapidapi.com\"}, params={\"limit\": \"10\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Coins, NFTS, Portfolio tracker, Whales, airdrops, news, tweets, YT videos, reddit posts, DeFi protocols,, games, podcasts, events, gas price and more!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-in-one-crypto-swiss-knife.p.rapidapi.com/coins/toplist'\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-in-one-crypto-swiss-knife.p.rapidapi.com/coins/toplist\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-in-one-crypto-swiss-knife.p.rapidapi.com/coins/toplist\"\nquerystring = {\"limit\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-in-one-crypto-swiss-knife.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\ud83d\udd25 All-In-One Crypto Swiss Knife \ud83d\ude80",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with information about the user?",
        "model_answer": "response = requests.get(\"https://bogieapis.p.rapidapi.com/userinfo\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bogieapis.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "qqwerty",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bogieapis.p.rapidapi.com/userinfo'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bogieapis.p.rapidapi.com/userinfo\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bogieapis.p.rapidapi.com/userinfo\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bogieapis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BogieApis",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the available languages for news content extraction?",
        "model_answer": "requests.get(\"https://news-content-extraction-live.p.rapidapi.com/get_languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"news-content-extraction-live.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Comprehensive Extraction of Web News Content",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://news-content-extraction-live.p.rapidapi.com/get_languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://news-content-extraction-live.p.rapidapi.com/get_languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://news-content-extraction-live.p.rapidapi.com/get_languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-content-extraction-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "News Content Extraction - Live",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the list of most expensive and bestselling NFTs ever.",
        "model_answer": "requests.get(\"https://most-expensive-nft-artworks.p.rapidapi.com/monthly_crypto_art_volume\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"most-expensive-nft-artworks.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get list of most expensive and bestselling NFTs ever",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://most-expensive-nft-artworks.p.rapidapi.com/monthly_crypto_art_volume'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://most-expensive-nft-artworks.p.rapidapi.com/monthly_crypto_art_volume\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://most-expensive-nft-artworks.p.rapidapi.com/monthly_crypto_art_volume\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"most-expensive-nft-artworks.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Most expensive NFT artworks",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the playlists of the YouTube channel with the ID UC3rdAPGxR8YN1PEVBIroFSA?",
        "model_answer": "requests.get(\"https://yt-api.p.rapidapi.com/channel/playlists\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yt-api.p.rapidapi.com\"}, params={\"id\": \"UC3rdAPGxR8YN1PEVBIroFSA\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "An all-in-one Youtube API solution. It provides both data and stream or download info. API solutions for video, shorts, channel, search, playlist, trending, comments, shorts sound attribution, hashtag, URL resolving, etc",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yt-api.p.rapidapi.com/channel/playlists'\nquerystring = {\"id\": \"\", \"sort_by\": \"\", \"lang\": \"\", \"geo\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yt-api.p.rapidapi.com/channel/playlists\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "sort_by",
                    "description": "Sorts the channel playlists. Available options:\n`date_added` [default]\n`last_video_added`",
                    "type": "ENUM"
                },
                {
                    "name": "lang",
                    "description": "Language code for localized results. Like en, gb, hi, etc",
                    "type": "STRING"
                },
                {
                    "name": "geo",
                    "description": "ISO 3166-2 country code of the region. Like US (default), UK, CA, IN, etc.",
                    "type": "STRING"
                },
                {
                    "name": "token",
                    "description": "Pagination Token",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yt-api.p.rapidapi.com/channel/playlists\"\nquerystring = {\"id\": \"UCMhe8jmac-tWKU0Vj_OXDvA\", \"sort_by\": \"\", \"lang\": \"\", \"geo\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yt-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YT-API",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "UCMhe8jmac-tWKU0Vj_OXDvA"
                },
                {
                    "name": "sort_by",
                    "type": "ENUM",
                    "description": "Sorts the channel playlists. Available options:\n`date_added` [default]\n`last_video_added`\n",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "Language code for localized results. Like en, gb, hi, etc",
                    "default": ""
                },
                {
                    "name": "geo",
                    "type": "STRING",
                    "description": "ISO 3166-2 country code of the region. Like US (default), UK, CA, IN, etc.",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "Pagination Token",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "please get the top 5 reviews for the product with app key \"APPKEY123\" and domain key \"DOMAINKEY456\".",
        "model_answer": "requests.get(\"https://yotpo.p.rapidapi.com/products/B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1/92431514/reviews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yotpo.p.rapidapi.com\"}, params={\"count\": \"5\", \"page\": \"1\", \"app_key\": \"APPKEY123\", \"domain_key\": \"DOMAINKEY456\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Yotpo is taking reviews social being a fun, social way for your e-commerce customers to read and write reviews!\r\n\r\nBEFORE YOU BEGIN, you must sign for a free account at Yotpo: https://www.yotpo.com/register , and you are more than welcome to further read on us at: http://www.yotpo.com . \r\n\r\nWe also encourage first time users to checkout our example sites where Yotpo is installed: \r\n\r\nhttp://magento.yotpo.com/\r\nhttp://shop.yotpo.com \r\n\r\nfor list of existing customers please refer to our website. \r\n\r\n\r\nYotpo API, works above the Yotpo Social Reviews service. It is designed to create more customised solutions for Yotpo customers, and to let them smartly integrate with Yotpo's system.\r\n\r\nStayed tuned, the Yotpo API is a work in progress.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yotpo.p.rapidapi.com/products/B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1/92431514/reviews'\nquerystring = {\"count\": \"\", \"page\": \"\", \"app_key\": \"\", \"domain_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yotpo.p.rapidapi.com/products/B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1/92431514/reviews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "count",
                    "description": "specify how many reviews you want to pull",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "specify the page number you want to pull",
                    "type": "STRING"
                },
                {
                    "name": "app_key",
                    "description": "your application key that is assigned to you after signing up to Yotpo (www.yotpo.com)",
                    "type": "STRING"
                },
                {
                    "name": "domain_key",
                    "description": "unique identifier of the product as stored when creating the review",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yotpo.p.rapidapi.com/products/B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1/92431514/reviews\"\nquerystring = {\"count\": \"3\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yotpo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yotpo",
            "api_arguments_original": [
                {
                    "name": "count",
                    "type": "STRING",
                    "description": "specify how many reviews you want to pull",
                    "default": "3"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "specify the page number you want to pull",
                    "default": "1"
                },
                {
                    "name": "app_key",
                    "type": "STRING",
                    "description": "your application key that is assigned to you after signing up to Yotpo (www.yotpo.com)",
                    "default": "B02uug6tF2uEA0Denhj0c9PV73y5PEOuKFmTCGb1"
                },
                {
                    "name": "domain_key",
                    "type": "STRING",
                    "description": "unique identifier of the product as stored when creating the review",
                    "default": "92431514"
                }
            ]
        }
    },
    {
        "query": "I want to send a message saying \"Hello, how are you?\" using the message API.",
        "model_answer": "requests.get(\"https://message-api.p.rapidapi.com/api/messages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"message-api.p.rapidapi.com\"}, params={\"Message\": \"Hello, how are you?\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "Some message api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://message-api.p.rapidapi.com/api/messages'\nquerystring = {\"Message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://message-api.p.rapidapi.com/api/messages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "message",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://message-api.p.rapidapi.com/api/messages\"\nquerystring = {\"Message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"message-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "message-api",
            "api_arguments_original": [
                {
                    "name": "Message",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the product details and pricing of the item with ASIN B07FR4ZLTD on IHerb.",
        "model_answer": "requests.get(\"https://iherb-product-data-api.p.rapidapi.com/api/IHerb/solicitations/3877908a2fb546228178436800372368\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"iherb-product-data-api.p.rapidapi.com\"}, params={\"protocol\": \"B07FR4ZLTD\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Query for products using many filters! Filter by price, review, discount percentage, if has stock, etc! Or export a .zip file with all updated products!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://iherb-product-data-api.p.rapidapi.com/api/IHerb/solicitations/3877908a2fb546228178436800372368'\nquerystring = {\"protocol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://iherb-product-data-api.p.rapidapi.com/api/IHerb/solicitations/3877908a2fb546228178436800372368\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "protocol",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://iherb-product-data-api.p.rapidapi.com/api/IHerb/solicitations/3877908a2fb546228178436800372368\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iherb-product-data-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IHerb Product Data Api",
            "api_arguments_original": [
                {
                    "name": "protocol",
                    "type": "string",
                    "description": "",
                    "default": "3877908a2fb546228178436800372368"
                }
            ]
        }
    },
    {
        "query": "Please track the package with tracking number 123456789 using the TrackingPackage API.",
        "model_answer": "response = requests.get(\"https://trackingpackage.p.rapidapi.com/TrackingPackage\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"trackingpackage.p.rapidapi.com\"}, params={\"trackingNumber\": \"123456789\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "track ups, fedex,usps and DHL packages.\nWindows store app available \u2192 https://www.microsoft.com/store/apps/9PHP0Z68X02N?cid=rapidAPI",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://trackingpackage.p.rapidapi.com/TrackingPackage'\nquerystring = {\"trackingNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://trackingpackage.p.rapidapi.com/TrackingPackage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "trackingnumber",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://trackingpackage.p.rapidapi.com/TrackingPackage\"\nquerystring = {\"trackingNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"trackingpackage.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TrackingPackage",
            "api_arguments_original": [
                {
                    "name": "trackingNumber",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please check the expiry date of vehicle registration '1HNT923' in Western Australia?",
        "model_answer": "requests.get(\"https://wa-rego-check.p.rapidapi.com/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"wa-rego-check.p.rapidapi.com\"}, params={\"rego\": \"1HNT923\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Western Australia vehicle license expiry date query, data from DoTDirect\nhttps://csnb.net/wa-rego-check-api/",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wa-rego-check.p.rapidapi.com/check'\nquerystring = {\"rego\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wa-rego-check.p.rapidapi.com/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "rego",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wa-rego-check.p.rapidapi.com/check\"\nquerystring = {\"rego\": \"1HNT923\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wa-rego-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WA Rego Check",
            "api_arguments_original": [
                {
                    "name": "rego",
                    "type": "STRING",
                    "description": "",
                    "default": "1HNT923"
                }
            ]
        }
    },
    {
        "query": "How can I check if the IP address 192.168.1.1 is a Tor node?",
        "model_answer": "requests.get(\"https://tor-detect.p.rapidapi.com/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tor-detect.p.rapidapi.com\"}, params={\"ip\": \"192.168.1.1\", \"geo\": \"true\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "A fast and simple API to identify and retrieve information about Tor nodes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tor-detect.p.rapidapi.com/check'\nquerystring = {\"ip\": \"\", \"geo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tor-detect.p.rapidapi.com/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "geo",
                    "description": "",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tor-detect.p.rapidapi.com/check\"\nquerystring = {\"geo\": \"true\", \"ip\": \"95.214.54.97\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tor-detect.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tor detect",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "95.214.54.97"
                },
                {
                    "name": "geo",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                }
            ]
        }
    },
    {
        "query": "I want to resend the OTP to customer with mobile number 9999999999 using the Fund Transfer API.",
        "model_answer": "requests.get(\"https://mano2468-fund-transfer-v1.p.rapidapi.com/resend_ot_ps\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mano2468-fund-transfer-v1.p.rapidapi.com\"}, params={\"Body\": \"{   \\\"name\\\": \\\"xyz\\\",   \\\"customerMobileNo\\\": \\\"9999999999\\\" }\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This document details out the technical integration approach of FUND TRANSFER and merchants. This document refers to the server APIs.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mano2468-fund-transfer-v1.p.rapidapi.com/resend_ot_ps'\nquerystring = {\"Body\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mano2468-fund-transfer-v1.p.rapidapi.com/resend_ot_ps\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "body",
                    "description": "Give customerMobileNo in json format",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mano2468-fund-transfer-v1.p.rapidapi.com/resend_ot_ps\"\nquerystring = {\"Body\": \"{   \\\"name\\\": \\\"xyz\\\",   \\\"customerMobileNo\\\": \\\"9999999999\\\" }\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mano2468-fund-transfer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fund Transfer",
            "api_arguments_original": [
                {
                    "name": "Body",
                    "type": "STRING",
                    "description": "Give customerMobileNo in json format",
                    "default": "{   \"name\": \"xyz\",   \"customerMobileNo\": \"9999999999\" }"
                }
            ]
        }
    },
    {
        "query": "Please provide the location details for postcode 3750-016 in Portugal.",
        "model_answer": "requests.get(\"https://pt-postcodes.p.rapidapi.com/pt/address/3750/016\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pt-postcodes.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Portuguese postcode lookup",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pt-postcodes.p.rapidapi.com/pt/address/3750/016'\nquerystring = {\"cp4\": \"\", \"cp3\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pt-postcodes.p.rapidapi.com/pt/address/3750/016\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cp4",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "cp3",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pt-postcodes.p.rapidapi.com/pt/address/3750/016\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pt-postcodes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PT Postcodes",
            "api_arguments_original": [
                {
                    "name": "cp4",
                    "type": "STRING",
                    "description": "",
                    "default": "3750"
                },
                {
                    "name": "cp3",
                    "type": "STRING",
                    "description": "",
                    "default": "016"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the archived web pages for the URL \"https://www.example.com/\" using the Wayback Machine API.",
        "model_answer": "requests.get(\"https://wayback-machine4.p.rapidapi.com/v1/sparkline/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"wayback-machine4.p.rapidapi.com\"}, params={\"url\" \"https://www.example.com/\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Wayback Machine Internet Archive API allows developers to access and retrieve archived web pages from the Internet Archive's extensive collection. It provides a convenient way to explore the evolution of websites over time and integrate web archival functionality into applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wayback-machine4.p.rapidapi.com/v1/sparkline/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wayback-machine4.p.rapidapi.com/v1/sparkline/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "Web URL",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wayback-machine4.p.rapidapi.com/v1/sparkline/\"\nquerystring = {\"url\": \"https://www.google.com/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wayback-machine4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wayback Machine",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "Web URL",
                    "default": "https://www.google.com/"
                }
            ]
        }
    },
    {
        "query": "Can you give me the surf forecast for spot ID 123456?",
        "model_answer": "requests.get(\"https://simple-surf-forecast-api1.p.rapidapi.com/api/forecasts/today/123456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"simple-surf-forecast-api1.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Surf forecast api very simple to use",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://simple-surf-forecast-api1.p.rapidapi.com/api/forecasts/today/{spotId}'\nquerystring = {\"spotId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://simple-surf-forecast-api1.p.rapidapi.com/api/forecasts/today/{spotId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "spotid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://simple-surf-forecast-api1.p.rapidapi.com/api/forecasts/today/{spotId}\"\nquerystring = {\"spotId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"simple-surf-forecast-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Simple Surf Forecast Api",
            "api_arguments_original": [
                {
                    "name": "spotId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to search for all cars information.",
        "model_answer": "requests.get(\"https://all-cars-names-image-and-variants-info.p.rapidapi.com/motororchestrator/api/v1/mmv\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"all-cars-names-image-and-variants-info.p.rapidapi.com\"}, params={\"vehicle_type\": \"car\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Search All Cars Names, Image and Variants Info with this api ,search once and get list of all cars. use it for auto-suggestion",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-cars-names-image-and-variants-info.p.rapidapi.com/motororchestrator/api/v1/mmv'\nquerystring = {\"vehicle_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-cars-names-image-and-variants-info.p.rapidapi.com/motororchestrator/api/v1/mmv\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "vehicle_type",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-cars-names-image-and-variants-info.p.rapidapi.com/motororchestrator/api/v1/mmv\"\nquerystring = {\"vehicle_type\": \"car\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-cars-names-image-and-variants-info.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "All Cars Names, Image and Variants Info",
            "api_arguments_original": [
                {
                    "name": "vehicle_type",
                    "type": "STRING",
                    "description": "",
                    "default": "car"
                }
            ]
        }
    },
    {
        "query": "I want to get the recent anime quotes for page 3.",
        "model_answer": "requests.get(\"https://10000-anime-quotes-with-pagination-support.p.rapidapi.com/rapidHandler/recent\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"10000-anime-quotes-with-pagination-support.p.rapidapi.com\"}, params={\"page\": \"3\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Access best quality anime quotes from over 10000+ animes with pagination supports. Easily access quotes ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://10000-anime-quotes-with-pagination-support.p.rapidapi.com/rapidHandler/recent'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://10000-anime-quotes-with-pagination-support.p.rapidapi.com/rapidHandler/recent\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://10000-anime-quotes-with-pagination-support.p.rapidapi.com/rapidHandler/recent\"\nquerystring = {\"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"10000-anime-quotes-with-pagination-support.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "10000+ Anime Quotes With Pagination Support",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve data for places and facilities in a specified radius.",
        "model_answer": "requests.get(\"https://places-in-radius.p.rapidapi.com/openapi.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"places-in-radius.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API for retrieving places &amp; facilities data for given origin, distance and list of facility types.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://places-in-radius.p.rapidapi.com/openapi.json'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://places-in-radius.p.rapidapi.com/openapi.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://places-in-radius.p.rapidapi.com/openapi.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"places-in-radius.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Places in radius",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with an art quote.",
        "model_answer": "requests.get(\"https://quotes-villa.p.rapidapi.com/quotes/art\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quotes-villa.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Quotes with different categories",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quotes-villa.p.rapidapi.com/quotes/art'\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quotes-villa.p.rapidapi.com/quotes/art\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "category",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quotes-villa.p.rapidapi.com/quotes/art\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quotes-villa.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quotes Villa",
            "api_arguments_original": [
                {
                    "name": "category",
                    "type": "string",
                    "description": "",
                    "default": "art"
                }
            ]
        }
    },
    {
        "query": "How can I get the current playing song on TuneIn?",
        "model_answer": "requests.get(\"https://community-tunein.p.rapidapi.com/Playing.ashx/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"community-tunein.p.rapidapi.com\"}, params={\"title\": \"\", \"artist\": \"\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "AIR is our broadcaster API. It offers several simple methods to allow broadcasters and other publishers to send radio directory content to TuneIn in realtime.\r\nWhen you implement the AIR API, your listeners will:\r\nSee current artist album artwork on TuneIn.com player\r\nDiscover your station by searching for your artists\r\nBrowse station playlist history on TuneIn mobile and TuneIn.com\r\nPlease e-mail broadcaster-support@tunein.com your TuneIn station URL (search for your station on TuneIn.com) for permission to use the API, and we will grant a partnerId and partnerKey. If you use a special broadcaster software, let us know as well.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-tunein.p.rapidapi.com/Playing.ashx/'\nquerystring = {\"title\": \"\", \"artist\": \"\", \"album\": \"\", \"commericial\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-tunein.p.rapidapi.com/Playing.ashx/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "title",
                    "description": "The name of the song",
                    "type": "STRING"
                },
                {
                    "name": "artist",
                    "description": "The artist associated with the song",
                    "type": "STRING"
                },
                {
                    "name": "album",
                    "description": "The name of the associated album",
                    "type": "STRING"
                },
                {
                    "name": "commericial",
                    "description": "Set to true if the now playing broadcast is in commercial rather than a song",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-tunein.p.rapidapi.com/Playing.ashx/\"\nquerystring = {\"title\": \"\", \"artist\": \"\", \"album\": \"\", \"commericial\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-tunein.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TuneIn",
            "api_arguments_original": [
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "The name of the song",
                    "default": ""
                },
                {
                    "name": "artist",
                    "type": "STRING",
                    "description": "The artist associated with the song",
                    "default": ""
                },
                {
                    "name": "album",
                    "type": "STRING",
                    "description": "The name of the associated album",
                    "default": ""
                },
                {
                    "name": "commericial",
                    "type": "BOOLEAN",
                    "description": "Set to true if the now playing broadcast is in commercial rather than a song",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to use the \"lets\" API to get some data.",
        "model_answer": "response = requests.get(\"https://lets1.p.rapidapi.comlets\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"lets1.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "lets",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lets1.p.rapidapi.comlets'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lets1.p.rapidapi.comlets\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lets1.p.rapidapi.comlets\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lets1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "lets",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the weather forecast for New York City.",
        "model_answer": "requests.get(\"https://magicmirror10.p.rapidapi.com/\")",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "MagicMirror",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://magicmirror10.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://magicmirror10.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://magicmirror10.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magicmirror10.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MagicMirror",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I check the number of comments for a TikTok video with URL \"https://www.tiktok.com/@tiktok/video/7093219391759764782\" using the Tiktok download video API?",
        "model_answer": "response = requests.get(\"https://tiktok-download-video1.p.rapidapi.com/commentList\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tiktok-download-video1.p.rapidapi.com\"}, params={\"url\": \"https://www.tiktok.com/@tiktok/video/7093219391759764782\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Tiktok Best Spider. Fast. HD Quality. Without Watermark Download. Video Full Detail. Signature X-Argus,X-Ladon,X-Gorgon \nmail: nb429429@gmail.com\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-download-video1.p.rapidapi.com/commentList'\nquerystring = {\"url\": \"\", \"count\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-download-video1.p.rapidapi.com/commentList\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "https://www.tiktok.com/@tiktok/video/7093219391759764782\nor\n7093219391759764782",
                    "type": "STRING"
                },
                {
                    "name": "count",
                    "description": "max 50",
                    "type": "STRING"
                },
                {
                    "name": "cursor",
                    "description": "hasMore is True",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-download-video1.p.rapidapi.com/commentList\"\nquerystring = {\"count\": \"10\", \"cursor\": \"0\", \"url\": \"https://www.tiktok.com/@tiktok/video/7093219391759764782\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-download-video1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "tiktok download video ",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "https://www.tiktok.com/@tiktok/video/7093219391759764782\nor\n7093219391759764782",
                    "default": "https://www.tiktok.com/@tiktok/video/7093219391759764782"
                },
                {
                    "name": "count",
                    "type": "STRING",
                    "description": "max 50",
                    "default": "10"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "hasMore is True",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to get the todo list with ID 1 from the API.",
        "model_answer": "requests.get(\"https://test5081.p.rapidapi.com/jsonplaceholder.typicode.com/todos/1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test5081.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "sasdadf",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test5081.p.rapidapi.com/jsonplaceholder.typicode.com/todos/1'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test5081.p.rapidapi.com/jsonplaceholder.typicode.com/todos/1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test5081.p.rapidapi.com/jsonplaceholder.typicode.com/todos/1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test5081.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Test_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to proxy the URL \"https://www.google.com\" using the Cors Proxy API.",
        "model_answer": "requests.get(\"https://cors-proxy.p.rapidapi.com/proxy\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cors-proxy.p.rapidapi.com\"}, params={\"url\": \"https://www.google.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Cross-Origin Resource Sharing Proxy",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cors-proxy.p.rapidapi.com/proxy'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cors-proxy.p.rapidapi.com/proxy\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cors-proxy.p.rapidapi.com/proxy\"\nquerystring = {\"url\": \"https://www.google.de\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cors-proxy.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cors Proxy",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.google.de"
                }
            ]
        }
    },
    {
        "query": "Can you fetch the details of the tweet with ID 1485953263040188416 using the Twitter Data API?",
        "model_answer": "requests.get(url=\"https://twitter-data1.p.rapidapi.com/TweetDetail/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"twitter-data1.p.rapidapi.com\"}, params={\"id\": \"1485953263040188416\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Twitter public and private data API for search, Tweets, users, followers, images, media and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitter-data1.p.rapidapi.com/TweetDetail/'\nquerystring = {\"id\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitter-data1.p.rapidapi.com/TweetDetail/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "Tweet ID",
                    "type": "STRING"
                },
                {
                    "name": "cursor",
                    "description": "Cursor for other results",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitter-data1.p.rapidapi.com/TweetDetail/\"\nquerystring = {\"cursor\": \"\", \"id\": \"1485953263040188416\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitter-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Twitter Data",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Tweet ID",
                    "default": "1485953263040188416"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Cursor for other results",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please fetch the latest posts using the 8prd2T1api1 API?",
        "model_answer": "requests.get(\"https://8prd2t1api1.p.rapidapi.com/posts\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"8prd2t1api1.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "8prd2T1",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://8prd2t1api1.p.rapidapi.com/posts'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://8prd2t1api1.p.rapidapi.com/posts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://8prd2t1api1.p.rapidapi.com/posts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"8prd2t1api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "8prd2T1api1",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if John Doe has any filed evictions, suits, liens, or judgments against him in the past 7 years.",
        "model_answer": "requests.get(\"https://evictions-suits-liens-and-judgments.p.rapidapi.com/GetArchiveReport\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"evictions-suits-liens-and-judgments.p.rapidapi.com\"}, params={\"AppId\": \"\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This API returns filed evictions, suits, liens and judgments against an individual within the past 7 years.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://evictions-suits-liens-and-judgments.p.rapidapi.com/GetArchiveReport'\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://evictions-suits-liens-and-judgments.p.rapidapi.com/GetArchiveReport\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "appid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://evictions-suits-liens-and-judgments.p.rapidapi.com/GetArchiveReport\"\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"evictions-suits-liens-and-judgments.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Evictions Suits Liens and Judgments",
            "api_arguments_original": [
                {
                    "name": "AppId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a Captcha image?",
        "model_answer": "requests.get(\"https://captcha9.p.rapidapi.com/api/captcha/errors\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"captcha9.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": " SmileMe's Captcha provide a Captcha image for you. Just call and the API will return the info Captcha ( include image base64, id, value ...) ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://captcha9.p.rapidapi.com/api/captcha/errors'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://captcha9.p.rapidapi.com/api/captcha/errors\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://captcha9.p.rapidapi.com/api/captcha/errors\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"captcha9.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Captcha_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve live weather data for New York City.",
        "model_answer": "requests.get(\"https://api.weatherapi.com/v1/current.json?key=YOUR_API_KEY&q=New%20York%20City\")",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "E2open is a cloud-based, real-time operating platform that orchestrates the global supply chains of the world's best-known brands. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://e2open-llc.p.rapidapi.comhttps://www.e2open.com/intelligent-applications/demand-sensing/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://e2open-llc.p.rapidapi.comhttps://www.e2open.com/intelligent-applications/demand-sensing/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://e2open-llc.p.rapidapi.comhttps://www.e2open.com/intelligent-applications/demand-sensing/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"e2open-llc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "E2open, LLC.",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the details of a specific dessert with an ID of \"12345\".",
        "model_answer": "requests.get(\"https://beverages-and-desserts.p.rapidapi.com/desserts/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"beverages-and-desserts.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "This api returns various kinds of Beverages and Desserts",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://beverages-and-desserts.p.rapidapi.com/desserts/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://beverages-and-desserts.p.rapidapi.com/desserts/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://beverages-and-desserts.p.rapidapi.com/desserts/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"beverages-and-desserts.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Beverages and Desserts",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please check the health status of the test-api_v2 API?",
        "model_answer": "requests.get(\"https://test-api440.p.rapidapi.com/health\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"test-api440.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test-api440.p.rapidapi.com/health'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test-api440.p.rapidapi.com/health\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test-api440.p.rapidapi.com/health\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test-api440.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test-api_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with a list of all live TV channels available in Kenya and Uganda?",
        "model_answer": "requests.get(\"https://live-tv-api1.p.rapidapi.com/channels\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"live-tv-api1.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API that has all live tv stations in Kenya and uganda **NOTE for educational purposes only**",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://live-tv-api1.p.rapidapi.com/channels'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://live-tv-api1.p.rapidapi.com/channels\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://live-tv-api1.p.rapidapi.com/channels\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"live-tv-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LIVE TV API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please fetch the live weather data for New York City?",
        "model_answer": "response = requests.get(\"https://52-in-kicks.p.rapidapi.com/test\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"52-in-kicks.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Travel blog for the connected generation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://52-in-kicks.p.rapidapi.com/test'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://52-in-kicks.p.rapidapi.com/test\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://52-in-kicks.p.rapidapi.com/test\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"52-in-kicks.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "52 In Kicks",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me find the location of a restaurant near me?",
        "model_answer": "requests.get(\"https://location52.p.rapidapi.com/index.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"location52.p.rapidapi.com\"}, params={\"q\": \"restaurant\", \"latitude\":\"37.7749\", \"longitude\":\"-122.4194\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "We are providing a location search result according to your search query",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://location52.p.rapidapi.com/index.php'\nquerystring = {\"q\": \"\", \"latitude\": \"\", \"longitude\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://location52.p.rapidapi.com/index.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "latitude",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "longitude",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://location52.p.rapidapi.com/index.php\"\nquerystring = {\"q\": \"pizza\", \"latitude\": \"24.562394\", \"longitude\": \"73.7124675\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"location52.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Location_v2",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "pizza"
                },
                {
                    "name": "latitude",
                    "type": "STRING",
                    "description": "",
                    "default": "24.562394"
                },
                {
                    "name": "longitude",
                    "type": "STRING",
                    "description": "",
                    "default": "73.7124675"
                }
            ]
        }
    },
    {
        "query": "How can I check if a certain email address is valid using the Check Disposable Email API?",
        "model_answer": "response = requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "DASas",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dad1.p.rapidapi.com/asd'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dad1.p.rapidapi.com/asd\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dad1.p.rapidapi.com/asd\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dad1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DAd",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the latest outcome of the XXXTreme Lightning Roulette game.",
        "model_answer": "requests.get(\"https://xxxtremelightningrouletteapi.p.rapidapi.com/latest-outcome\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"xxxtremelightningrouletteapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "XXXTremeLightningRoulette is a real-time API that provides developers with a way to integrate live data into their applications.This API is designed to be fast, reliable, and easy to use, allowing developers to quickly and easily access real-time lightning roulette game outcome data so they can integrate in any strategy",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://xxxtremelightningrouletteapi.p.rapidapi.com/latest-outcome'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://xxxtremelightningrouletteapi.p.rapidapi.com/latest-outcome\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://xxxtremelightningrouletteapi.p.rapidapi.com/latest-outcome\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xxxtremelightningrouletteapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "XXXtremeLightningRouletteAPI",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check ryan@example.com is a valid email address.",
        "model_answer": "requests.get(\"https://alpha-email-verification.p.rapidapi.com/disposable/ryan@example.com\",headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"alpha-email-verification.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Email Validation Service. check if a specific e-mail address is valid. Is it a proper domain? Is the e-mail a temporary/disposable e-mail? Our API contains 180k disposable email domains and gives the most valid email",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://alpha-email-verification.p.rapidapi.com/disposable/rahul@gmail.com'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://alpha-email-verification.p.rapidapi.com/disposable/rahul@gmail.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://alpha-email-verification.p.rapidapi.com/disposable/rahul@gmail.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"alpha-email-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Alpha Email Verification",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "",
                    "default": "rahul@gmail.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a list of independent tracks with label numbers from the Indie Songs API?",
        "model_answer": "requests.get(\"https://indie-songs-distrokid-unsigned.p.rapidapi.com/tracks/full\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indie-songs-distrokid-unsigned.p.rapidapi.com\"}, params={\"offset\": \"0\", \"limit\": \"20\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Independent tracks with label numbers. Daily updating stats, weekly updating songs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indie-songs-distrokid-unsigned.p.rapidapi.com/tracks/full'\nquerystring = {\"offset\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indie-songs-distrokid-unsigned.p.rapidapi.com/tracks/full\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "offset",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indie-songs-distrokid-unsigned.p.rapidapi.com/tracks/full\"\nquerystring = {\"offset\": \"0\", \"limit\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indie-songs-distrokid-unsigned.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indie Songs : DistroKid & Unsigned",
            "api_arguments_original": [
                {
                    "name": "offset",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve information about the user with id 123.",
        "model_answer": "requests.get(\"https://democracia.p.rapidapi.com/usuarios/123\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"democracia.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "prueba democracia",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://democracia.p.rapidapi.comusuarios/{idusers}'\nquerystring = {\"idusers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://democracia.p.rapidapi.comusuarios/{idusers}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "idusers",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://democracia.p.rapidapi.comusuarios/{idusers}\"\nquerystring = {\"idusers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"democracia.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "democracia",
            "api_arguments_original": [
                {
                    "name": "idusers",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to obtain a list of all dog breeds using the Dog API.",
        "model_answer": "requests.get(\"https://dog-api.p.rapidapi.com/list/all\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dog-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Do you care about accessing free images of dogs on the internet? Do you want your dog pictures to be served at lightning fast speed with 99.999% uptime? Do you care about DaaS (Dogs as a Service)? Help us pay our hosting bills and ensure that Dog API stays free to access and use for everyone. We'll even gift you an executive business tie for your pet (or small child) to say thanks.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dog-api.p.rapidapi.com/list/all'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dog-api.p.rapidapi.com/list/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dog-api.p.rapidapi.com/list/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dog-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dog API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please show me the TikTok posts for the challenge with the challenge_id '12345'?",
        "model_answer": "requests.get(\"https://tiktok87.p.rapidapi.com/challenge_posts/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"tiktok87.p.rapidapi.com\"}, params={\"cursor\" \"\", \"challenge_id\" \"12345\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "TikTok API third party service, Stable and 24/7 maintenance. for any Help or Suggestions Contact me on https://t.me/dhmye",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok87.p.rapidapi.com/challenge_posts/'\nquerystring = {\"cursor\": \"\", \"challenge_id\": \"\", \"challenge_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok87.p.rapidapi.com/challenge_posts/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cursor",
                    "description": "put the cursor ther returned from the server in your Url param to get the next posts/items",
                    "type": "NUMBER"
                },
                {
                    "name": "challenge_id",
                    "description": "if u have the challenge_id  already use \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param insted,\nit will return data faster then the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param.",
                    "type": "STRING"
                },
                {
                    "name": "challenge_name",
                    "description": "if u have the challenge_id already use \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param insted,\nit will return data faster then the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok87.p.rapidapi.com/challenge_posts/\"\nquerystring = {\"cursor\": \"\", \"challenge_id\": \"42164\", \"challenge_name\": \"foryou\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok87.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok_v4",
            "api_arguments_original": [
                {
                    "name": "cursor",
                    "type": "NUMBER",
                    "description": "put the cursor ther returned from the server in your Url param to get the next posts/items",
                    "default": ""
                },
                {
                    "name": "challenge_id",
                    "type": "STRING",
                    "description": "if u have the challenge_id  already use \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param insted,\nit will return data faster then the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param.",
                    "default": "42164"
                },
                {
                    "name": "challenge_name",
                    "type": "STRING",
                    "description": "if u have the challenge_id already use \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_id\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param insted,\nit will return data faster then the \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"challenge_name\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" param.",
                    "default": "foryou"
                }
            ]
        }
    },
    {
        "query": "I want to find the best vinyl records in my collection from the year 1980.",
        "model_answer": "requests.get(\"https://yourvinylstore.p.rapidapi.com/endpoint\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yourvinylstore.p.rapidapi.com\"}, params={\"Year\": \"1980\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Best vinyl records in your collection.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yourvinylstore.p.rapidapi.com/endpoint'\nquerystring = {\"Year\": \"\", \"Artist\": \"\", \"Genre\": \"\", \"Album\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yourvinylstore.p.rapidapi.com/endpoint\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "year",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "artist",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "genre",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "album",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yourvinylstore.p.rapidapi.com/endpoint\"\nquerystring = {\"Year\": \"\", \"Artist\": \"\", \"Genre\": \"\", \"Album\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yourvinylstore.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YourVinylStore",
            "api_arguments_original": [
                {
                    "name": "Year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "Artist",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "Genre",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "Album",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "How can I get the trending articles in English from the Webit News Search API?",
        "model_answer": "requests.get(\"https://webit-news-search.p.rapidapi.com/trending\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"webit-news-search.p.rapidapi.com\"}, params={\"offset\": \"\", \"language\": \"en\", \"category\": \"\", \"from_sources\": \"\", \"number\": \"\", \"has_image\": \"\", \"exclude_sources\": \"\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "40+ Languages News Search, Trending articles feed.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webit-news-search.p.rapidapi.com/trending'\nquerystring = {\"offset\": \"\", \"language\": \"\", \"category\": \"\", \"from_sources\": \"\", \"number\": \"\", \"has_image\": \"\", \"exclude_sources\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webit-news-search.p.rapidapi.com/trending\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "offset",
                    "description": "Offset to start getting results from.\n\nFor example, if you search 10 articles at a time (number=10), then you should set offset=0 for page 1, offset=10 for page 2, offset=20 for page 3 and so on.",
                    "type": "NUMBER"
                },
                {
                    "name": "language",
                    "description": "Supported languages (ISO 639-1 codes):\nSupported languages (ISO 639-1 codes):\n- Stable: 'en', 'bg', 'de', 'es', 'fr', 'fi', 'it', 'ja', 'nl', 'pl', 'pt', 'ro', 'ru', 'zh';\n- Beta: 'ar', 'ca', 'ko', 'nb', 'sv', 'tr', 'uk';\n- Alpha: 'be', 'ca', 'da', 'el', 'et', 'fa', 'ga', 'gl', 'he', 'hi', 'hr', 'hu', 'id', 'lv', 'no', 'om', 'sk', 'sr', 'tt', 'vi'.",
                    "type": "STRING"
                },
                {
                    "name": "category",
                    "description": "[COMING SOON (APRIL 2021) - It is currently ignored] Category to restrict articles by.",
                    "type": "ENUM"
                },
                {
                    "name": "from_sources",
                    "description": "[PREMIUM - PRO+ plans only] Comma separated list of sources hosts to pick news from. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc. This will exclude any other source.",
                    "type": "STRING"
                },
                {
                    "name": "number",
                    "description": "Number of articles to retrieve with a single request.\n\nMaximum allowed results number per request:\n- 10 results for Free/Basic plan;\n- 50 results for Pro plan;\n- 50 results for Ultra plan;\n- 100 results for Mega plan.\n\nFor requesting any customized quota, please contact our support team.",
                    "type": "NUMBER"
                },
                {
                    "name": "has_image",
                    "description": "Set this to \\\"True\\\" in order to get only articles having an image associated to. Default is \\\"False\\\".",
                    "type": "BOOLEAN"
                },
                {
                    "name": "exclude_sources",
                    "description": "[PREMIUM - PRO+ plans only] Comma separated list of sources hosts to exclude from the results. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webit-news-search.p.rapidapi.com/trending\"\nquerystring = {\"offset\": \"\", \"language\": \"en\", \"category\": \"\", \"from_sources\": \"\", \"number\": \"\", \"has_image\": \"\", \"exclude_sources\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-news-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webit News Search",
            "api_arguments_original": [
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Offset to start getting results from.\n\nFor example, if you search 10 articles at a time (number=10), then you should set offset=0 for page 1, offset=10 for page 2, offset=20 for page 3 and so on.",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Supported languages (ISO 639-1 codes):\nSupported languages (ISO 639-1 codes):\n- Stable: 'en', 'bg', 'de', 'es', 'fr', 'fi', 'it', 'ja', 'nl', 'pl', 'pt', 'ro', 'ru', 'zh';\n- Beta: 'ar', 'ca', 'ko', 'nb', 'sv', 'tr', 'uk';\n- Alpha: 'be', 'ca', 'da', 'el', 'et', 'fa', 'ga', 'gl', 'he', 'hi', 'hr', 'hu', 'id', 'lv', 'no', 'om', 'sk', 'sr', 'tt', 'vi'.",
                    "default": "en"
                },
                {
                    "name": "category",
                    "type": "ENUM",
                    "description": "[COMING SOON (APRIL 2021) - It is currently ignored] Category to restrict articles by.",
                    "default": ""
                },
                {
                    "name": "from_sources",
                    "type": "STRING",
                    "description": "[PREMIUM - PRO+ plans only] Comma separated list of sources hosts to pick news from. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc. This will exclude any other source.",
                    "default": ""
                },
                {
                    "name": "number",
                    "type": "NUMBER",
                    "description": "Number of articles to retrieve with a single request.\n\nMaximum allowed results number per request:\n- 10 results for Free/Basic plan;\n- 50 results for Pro plan;\n- 50 results for Ultra plan;\n- 100 results for Mega plan.\n\nFor requesting any customized quota, please contact our support team.",
                    "default": ""
                },
                {
                    "name": "has_image",
                    "type": "BOOLEAN",
                    "description": "Set this to \\\"True\\\" in order to get only articles having an image associated to. Default is \\\"False\\\".",
                    "default": ""
                },
                {
                    "name": "exclude_sources",
                    "type": "STRING",
                    "description": "[PREMIUM - PRO+ plans only] Comma separated list of sources hosts to exclude from the results. For instance: \\\"nytimes.com, digitaltrends.com, ...\\\", etc.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me a random cat fact?",
        "model_answer": "requests.get(\"https://daily-cat-facts.p.rapidapi.com/facts/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"daily-cat-facts.p.rapidapi.com\"}, params={\"animal_type\": \"cat\", \"amount\": \"1\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "This  APIs and Services from the web to do just one thing... send cat facts.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://daily-cat-facts.p.rapidapi.com/facts/random'\nquerystring = {\"animal_type\": \"\", \"amount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://daily-cat-facts.p.rapidapi.com/facts/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "animal_type",
                    "description": "Type of animal the fact will describe . Default : \\\"cat\\\"",
                    "type": "STRING"
                },
                {
                    "name": "amount",
                    "description": "Number of Facts to retrieve. If set to one, response will be a fact object. If many, response will be an array of Facts . \nDefault : 1.\nLimit : 500.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://daily-cat-facts.p.rapidapi.com/facts/random\"\nquerystring = {\"animal_type\": \"\", \"amount\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"daily-cat-facts.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Daily Cat Facts",
            "api_arguments_original": [
                {
                    "name": "animal_type",
                    "type": "STRING",
                    "description": "Type of animal the fact will describe . Default : \\\"cat\\\"",
                    "default": ""
                },
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "Number of Facts to retrieve. If set to one, response will be a fact object. If many, response will be an array of Facts . \nDefault : 1.\nLimit : 500.",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to get live data from the HelloRold API.",
        "model_answer": "requests.get(\"https://hellorold.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hellorold.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "HelloWorld",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hellorold.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hellorold.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hellorold.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hellorold.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "HelloRold",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the referral domains for the website \"example.com\".",
        "model_answer": "requests.get(\"https://referral-domain-checker-api.p.rapidapi.com/referraldomains.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"referral-domain-checker-api.p.rapidapi.com\"}, params={\"domain\": \"example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Get Referral Domains of a website, backlink counts , ranks etc ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://referral-domain-checker-api.p.rapidapi.com/referraldomains.php'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://referral-domain-checker-api.p.rapidapi.com/referraldomains.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://referral-domain-checker-api.p.rapidapi.com/referraldomains.php\"\nquerystring = {\"domain\": \"getecz.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"referral-domain-checker-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Referral Domain checker API",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "getecz.com"
                }
            ]
        }
    },
    {
        "query": "I want to get the location details for IP address 123.45.67.89.",
        "model_answer": "requests.get(\"https://ip-to-location3.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-to-location3.p.rapidapi.com\"}, params={\"ip\": \"123.45.67.89\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "100% free to use. Get location details from IP address, endpoint returns coordinates [latitude, longitude], ip, isp, host[ ip_address, prefix len, status, country, region, city, location,area code, country code",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-to-location3.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-to-location3.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-to-location3.p.rapidapi.com/\"\nquerystring = {\"ip\": \"179.27.93.248\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-to-location3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ip To Location",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "179.27.93.248"
                }
            ]
        }
    },
    {
        "query": "I want to get a random cocktail.",
        "model_answer": "requests.get(\"https://cocktails3.p.rapidapi.com/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cocktails3.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "The cocktail API with over 300 Cocktails! Get Cocktail and the ingredients. Get a random one or search! ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cocktails3.p.rapidapi.com/random'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cocktails3.p.rapidapi.com/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cocktails3.p.rapidapi.com/random\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cocktails3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cocktails",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me retrieve information about products related to \"electronics\" on yiwugo.com in English?",
        "model_answer": "requests.get(\"https://yiwugo-product-data.p.rapidapi.com/api/sc/yiwugo/search/product\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yiwugo-product-data.p.rapidapi.com\"}, params={\"keyword\": \"electronics\", \"lan\": \"en\", \"page\": \"1\", \"pageSize\": \"10\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Get the yiwugo.com(\u4e49\u4e4c\u8d2d) products'  information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yiwugo-product-data.p.rapidapi.com/api/sc/yiwugo/search/product'\nquerystring = {\"keyword\": \"\", \"lan\": \"\", \"page\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yiwugo-product-data.p.rapidapi.com/api/sc/yiwugo/search/product\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "keyword",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lan",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "pagesize",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yiwugo-product-data.p.rapidapi.com/api/sc/yiwugo/search/product\"\nquerystring = {\"lan\": \"\", \"page\": \"1\", \"keyword\": \"\", \"pageSize\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yiwugo-product-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "yiwugo product data",
            "api_arguments_original": [
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lan",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "How can I get the details of a specific football match with Eid 315868 using the LiveScore_v2 API?",
        "model_answer": "requests.get(\"https://livescore6.p.rapidapi.com/matches/v2/detail\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"livescore6.p.rapidapi.com\"}, params={\"Eid\": \"315868\", \"Category\": \"soccer\", \"Timezone\": \"-7\", \"LiveTable\": \"false\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "This API helps to query for football, cricket, basketball, tennis, hockey matches, leagues, news, etc... to create a sporting site/application such as livescore.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://livescore6.p.rapidapi.com/matches/v2/detail'\nquerystring = {\"Eid\": \"\", \"Category\": \"\", \"Timezone\": \"\", \"LiveTable\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://livescore6.p.rapidapi.com/matches/v2/detail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "eid",
                    "description": "The value of Eid field returned in .../matches/v2/list-by-league or .../matches/v2/list-by-date or .../matches/v2/list-live endpoints",
                    "type": "NUMBER"
                },
                {
                    "name": "category",
                    "description": "One of the followings : soccer|cricket|basketball|tennis|hockey",
                    "type": "STRING"
                },
                {
                    "name": "timezone",
                    "description": "One of the following : -11|-10|-9.5|-9|-8.5|-8|-7|-6|-5|-4.5|-4|-3.5|-3|-2.5|-2|-1|0|1|2|3|3.5|4|4.5|5|5.5|5.75|6|6.5|6.75|7|7.5|8|8.5|8.75|9|9.5|9.75|10|10.5|11|11.5|12|12.5|12.75|13|13.75|14",
                    "type": "NUMBER"
                },
                {
                    "name": "livetable",
                    "description": "true|false - Whether or not include live table relating to current match",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://livescore6.p.rapidapi.com/matches/v2/detail\"\nquerystring = {\"Timezone\": \"-7\", \"Eid\": \"315868\", \"LiveTable\": \"false\", \"Category\": \"soccer\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"livescore6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LiveScore_v2",
            "api_arguments_original": [
                {
                    "name": "Eid",
                    "type": "NUMBER",
                    "description": "The value of Eid field returned in .../matches/v2/list-by-league or .../matches/v2/list-by-date or .../matches/v2/list-live endpoints",
                    "default": "315868"
                },
                {
                    "name": "Category",
                    "type": "STRING",
                    "description": "One of the followings : soccer|cricket|basketball|tennis|hockey",
                    "default": "soccer"
                },
                {
                    "name": "Timezone",
                    "type": "NUMBER",
                    "description": "One of the following : -11|-10|-9.5|-9|-8.5|-8|-7|-6|-5|-4.5|-4|-3.5|-3|-2.5|-2|-1|0|1|2|3|3.5|4|4.5|5|5.5|5.75|6|6.5|6.75|7|7.5|8|8.5|8.75|9|9.5|9.75|10|10.5|11|11.5|12|12.5|12.75|13|13.75|14",
                    "default": "-7"
                },
                {
                    "name": "LiveTable",
                    "type": "BOOLEAN",
                    "description": "true|false - Whether or not include live table relating to current match",
                    "default": "false"
                }
            ]
        }
    },
    {
        "query": "Can you fetch the details of the vehicle with the registration number DL3CAF1234?",
        "model_answer": "requests.get(\"https://vehicle-rc-information.p.rapidapi.com/api/PB65AM0008\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"vehicle-rc-information.p.rapidapi.com\"}, params={\"VehicleNumber\": \"DL3CAF1234\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Fetch any Indian Vehicle's Information through it's Registration Number/License Plate.\nThis API can fetch:-\n[+] Owner Name\n[+] Owner's Father Name\n[+] Owner's Permanent & Current Address\n[+] Vehicle Details\n[+] Financer Details\n[+] Permit & Insurance Details\n[+] NOC Details\n.......And Much More\n\nTags: Parivahan mParivahan Vehicle Info RC Details India Car Info Car Info RC database",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vehicle-rc-information.p.rapidapi.com/api/PB65AM0008'\nquerystring = {\"VehicleNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vehicle-rc-information.p.rapidapi.com/api/PB65AM0008\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "vehiclenumber",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vehicle-rc-information.p.rapidapi.com/api/PB65AM0008\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vehicle-rc-information.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vehicle RC Information_v2",
            "api_arguments_original": [
                {
                    "name": "VehicleNumber",
                    "type": "string",
                    "description": "",
                    "default": "PB65AM0008"
                }
            ]
        }
    },
    {
        "query": "Please check if example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"check-disposable-email.p.rapidapi.com\"}, params={\"email\" \"example@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Temporary emails in code",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gettestmail.p.rapidapi.com/gettestmail/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gettestmail.p.rapidapi.com/gettestmail/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "The ID of the GetTestMail to retrieve",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gettestmail.p.rapidapi.com/gettestmail/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gettestmail.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GetTestMail",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The ID of the GetTestMail to retrieve",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get movie showtimes for Cinemas NOS.",
        "model_answer": "requests.get(\"https://movie-showtimes.p.rapidapi.com/api/all\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"movie-showtimes.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Movie showtimes for Cinemas NOS (portuguese movie theaters)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://movie-showtimes.p.rapidapi.com/api/all'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://movie-showtimes.p.rapidapi.com/api/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://movie-showtimes.p.rapidapi.com/api/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"movie-showtimes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Movie Showtimes",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to generate a QR code with the id \"12345\".",
        "model_answer": "requests.get(\"https://qrcode3.p.rapidapi.com/images/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qrcode3.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Customisable QR Codes. Support for styles, images and more! Bare metal engine gives it incredible speed. Full documentation can be found at: https://linqr.app/docs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qrcode3.p.rapidapi.com/images/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qrcode3.p.rapidapi.com/images/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qrcode3.p.rapidapi.com/images/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qrcode3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QRCode",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the Call of Duty leaderboard for season 3 with the limit of top 50 players.",
        "model_answer": "requests.get(\"https://cod-api-2-0.p.rapidapi.com/mw2/ranked/mp/season/s3\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cod-api-2-0.p.rapidapi.com\"}, params={\"limit\": \"50\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Provides an easy access to the COD api leaderboard endpoints.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cod-api-2-0.p.rapidapi.com/mw2/ranked/mp/season/s1'\nquerystring = {\"season\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cod-api-2-0.p.rapidapi.com/mw2/ranked/mp/season/s1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "season",
                    "description": "Example: s1",
                    "type": "string"
                },
                {
                    "name": "limit",
                    "description": "Provide a number from 1 to 250",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cod-api-2-0.p.rapidapi.com/mw2/ranked/mp/season/s1\"\nquerystring = {\"limit\": \"250\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cod-api-2-0.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "COD API 2.0",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "string",
                    "description": "Example: s1",
                    "default": "s1"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Provide a number from 1 to 250",
                    "default": "250"
                }
            ]
        }
    },
    {
        "query": "I want to find the boundaries of the German postal code at longitude 9.8972 and latitude 52.5163.",
        "model_answer": "requests.get(\"https://de-boundaries-io1.p.rapidapi.com/rest/v1/public/boundary/postalcode/within\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"de-boundaries-io1.p.rapidapi.com\"}, params={\"longitude\": \"9.8972\", \"latitude\": \"52.5163\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "A Germany PostalCode Boundaries API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://de-boundaries-io1.p.rapidapi.com/rest/v1/public/boundary/postalcode/within'\nquerystring = {\"longitude\": \"\", \"latitude\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://de-boundaries-io1.p.rapidapi.com/rest/v1/public/boundary/postalcode/within\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "longitude",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "latitude",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://de-boundaries-io1.p.rapidapi.com/rest/v1/public/boundary/postalcode/within\"\nquerystring = {\"longitude\": \"11.5835\", \"latitude\": \"48.1633\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"de-boundaries-io1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "de-boundaries-io",
            "api_arguments_original": [
                {
                    "name": "longitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "11.5835"
                },
                {
                    "name": "latitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "48.1633"
                }
            ]
        }
    },
    {
        "query": "Can you please check if the option with ID \"12345\" exists in TradingFlow Option Flow?",
        "model_answer": "requests.get(\"https://tradingflow-option-flow.p.rapidapi.com/admin/canary\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tradingflow-option-flow.p.rapidapi.com\"}, params={\"id\": \"12345\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Subscribe to TradingFlow TradingFlow Option Flow Api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tradingflow-option-flow.p.rapidapi.com/admin/canary'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tradingflow-option-flow.p.rapidapi.com/admin/canary\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tradingflow-option-flow.p.rapidapi.com/admin/canary\"\nquerystring = {\"id\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tradingflow-option-flow.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TradingFlow Option Flow",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you help me convert a YouTube video to mp4? I have this video URL",
        "model_answer": "requests.get(\"https://youtube-to-mp4.p.rapidapi.com/url=&title\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-to-mp4.p.rapidapi.com\"}, params={\"url\": \"https://www.youtube.com/watch?v=IfNB5RTxnhI\", \"title\": \"Call of Duty Modern Warfare 2 Remastered - All Weapon Reload Animations in 4 Minutes\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "An online service that grabs YouTube video file from the unique server address on Google.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-to-mp4.p.rapidapi.com/url=&title'\nquerystring = {\"url\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-to-mp4.p.rapidapi.com/url=&title\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "title",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-to-mp4.p.rapidapi.com/url=&title\"\nquerystring = {\"url\": \"https://www.youtube.com/watch?v=IfNB5RTxnhI\", \"title\": \"Call of Duty : Modern Warfare 2 Remastered - All Weapon Reload Animations in 4 Minutes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-to-mp4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube to Mp4",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.youtube.com/watch?v=IfNB5RTxnhI"
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "",
                    "default": "Call of Duty : Modern Warfare 2 Remastered - All Weapon Reload Animations in 4 Minutes"
                }
            ]
        }
    },
    {
        "query": "Can you please check the details of this product URL",
        "model_answer": "requests.get(\"https://shopee6.p.rapidapi.com/product/url\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shopee6.p.rapidapi.com\"}, params={\"url\": \"https://www.shopee.ph/product/12345678\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Shopee API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shopee6.p.rapidapi.com/product/url'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shopee6.p.rapidapi.com/product/url\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shopee6.p.rapidapi.com/product/url\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shopee6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shopee_v2",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you use the ykapi API to search for videos with the keyword \"funny cats\"?",
        "model_answer": "requests.get(\"https://ykapi.p.rapidapi.com/search/cocomelon\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"ykapi.p.rapidapi.com\"}, params={\"searchQuery\": \"funny cats\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "ykapi description",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ykapi.p.rapidapi.com/search/cocomelon'\nquerystring = {\"searchQuery\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ykapi.p.rapidapi.com/search/cocomelon\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchquery",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ykapi.p.rapidapi.com/search/cocomelon\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ykapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ykapi",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "cocomelon"
                }
            ]
        }
    },
    {
        "query": "I want to generate a quiz on the topic of history using the Quizy API.",
        "model_answer": "requests.get(\"https://quizy-api2.p.rapidapi.com/generateQuiz\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quizy-api2.p.rapidapi.com\"}, params={\"topic\": \"history\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "The Quizy API is a powerful tool that allows developers to create and customize quizzes programmatically. With this API, you can generate a wide variety of quizzes on different topics, ranging from educational quizzes for students to fun quizzes for entertainment purposes.\n\nThe API provides a simple and intuitive interface to generate quizzes based on parameters such as the number of questions, difficulty level, topic, and format. It leverages a vast repository of questions and answers, ensur...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quizy-api2.p.rapidapi.com/generateQuiz'\nquerystring = {\"topic\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quizy-api2.p.rapidapi.com/generateQuiz\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "topic",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quizy-api2.p.rapidapi.com/generateQuiz\"\nquerystring = {\"topic\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quizy-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quizy API",
            "api_arguments_original": [
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me 3 random words that start with the letter \"s\"?",
        "model_answer": "requests.get(\"https://random-words5.p.rapidapi.com/getMultipleRandom\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"random-words5.p.rapidapi.com\"}, params={\"count\": 3, \"beginsWith\": \"s\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "Random words api provides you a list of random words or a single random word",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-words5.p.rapidapi.com/getMultipleRandom'\nquerystring = {\"count\": \"\", \"maxLength\": \"\", \"endsWith\": \"\", \"wordLength\": \"\", \"includes\": \"\", \"beginsWith\": \"\", \"minLength\": \"\", \"excludes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-words5.p.rapidapi.com/getMultipleRandom\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "count",
                    "description": "The word count must be between 2 and 20",
                    "type": "NUMBER"
                },
                {
                    "name": "maxlength",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "endswith",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "wordlength",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "includes",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "beginswith",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "minlength",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "excludes",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-words5.p.rapidapi.com/getMultipleRandom\"\nquerystring = {\"maxLength\": \"\", \"endsWith\": \"\", \"wordLength\": \"\", \"includes\": \"\", \"beginsWith\": \"\", \"minLength\": \"\", \"excludes\": \"\", \"count\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-words5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Words",
            "api_arguments_original": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "The word count must be between 2 and 20",
                    "default": "5"
                },
                {
                    "name": "maxLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "endsWith",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "wordLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "includes",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "beginsWith",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "minLength",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "excludes",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to translate the phrase \"Hello, how are you?\" from English to Spanish.",
        "model_answer": "requests.get(\"https://simple-elegant-translation-service.p.rapidapi.com/translate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"simple-elegant-translation-service.p.rapidapi.com\"}, params={\"text\": \"Hello, how are you?\", \"source_lang\": \"en\", \"target_lang\": \"es\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Simple & Elegant Translation Service. This translation service is similar to similar. You can actually do a lot of things with the help of the Google Translate API ranging from detecting languages to simple text translation, setting source and destination languages, and translating entire lists of text phrases",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://simple-elegant-translation-service.p.rapidapi.com/getSupportedLanguages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://simple-elegant-translation-service.p.rapidapi.com/getSupportedLanguages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://simple-elegant-translation-service.p.rapidapi.com/getSupportedLanguages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"simple-elegant-translation-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Simple & Elegant Translation Service",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the data from the Telecom API?",
        "model_answer": "requests.get(\"https://api-telecom.p.rapidapi.com/products\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"api-telecom.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "servicio de prueba api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://api-telecom.p.rapidapi.com/products'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://api-telecom.p.rapidapi.com/products\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://api-telecom.p.rapidapi.com/products\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"api-telecom.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "api-telecom",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please help me retrieve the followers of user ID 12345678 on Twitter?",
        "model_answer": "requests.get(\"https://twitter135.p.rapidapi.com/v2/Followers/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"twitter135.p.rapidapi.com\"}, params={\"id\": \"12345678\", \"cursor\": \"\", \"count\": \"20\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Twitter public and private data API for search, Tweets, users, followers, images, media and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitter135.p.rapidapi.com/v2/Followers/'\nquerystring = {\"id\": \"\", \"cursor\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitter135.p.rapidapi.com/v2/Followers/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
                    "type": "STRING"
                },
                {
                    "name": "cursor",
                    "description": "Cursor for other results",
                    "type": "STRING"
                },
                {
                    "name": "count",
                    "description": "Number of results",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitter135.p.rapidapi.com/v2/Followers/\"\nquerystring = {\"cursor\": \"\", \"count\": \"20\", \"id\": \"44196397\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitter135.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Twitter_v4",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "User ID\n\nUse the `User By Screen Name` endpoint to find the ID from a username.",
                    "default": "44196397"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Cursor for other results",
                    "default": ""
                },
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "Number of results",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "Can you find news articles about technology in the United States?",
        "model_answer": "requests.get(url=\"https://newscatcher.p.rapidapi.com/v1/aggregation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"newscatcher.p.rapidapi.com\"}, params={\"q\": \"technology\", \"country\": \"US\", \"topic\": \"tech\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "API to find news articles by any topic, country, language, website, or keyword",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://newscatcher.p.rapidapi.com/v1/aggregation'\nquerystring = {\"q\": \"\", \"country\": \"\", \"topic\": \"\", \"sources\": \"\", \"agg_by\": \"\", \"to_rank\": \"\", \"media\": \"\", \"lang\": \"\", \"not_sources\": \"\", \"to\": \"\", \"ranked_only\": \"\", \"from\": \"\", \"search_in\": \"\", \"from_rank\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://newscatcher.p.rapidapi.com/v1/aggregation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "String to search for. Has to be [URL-encoded](https://en.wikipedia.org/wiki/Percent-encoding).",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "The country to which you want to narrow your search. This parameter is [experimental]. We advise you to use it in conjunction with the `lang` parameter. Accepts any [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes",
                    "type": "STRING"
                },
                {
                    "name": "topic",
                    "description": "The topic to which you want to restrict the articles of your choice. This parameter is [experimental]. Accepted values are `news`, `sport`, `tech`, `world`, `finance`, `politics`, `business`, `economics`, `entertainment`,`beauty`,`travel`,`music`,`food`,`science`\n- `news` usually means a general news feed (main headlines of a website).\n> Important: this parameter is [experimental]. Not all news articles are assigned with a `topic`, therefore, we cannot guarantee that 100% of topics talking about technology will be assigned a `tech` label.\n> One topic at a time, for example, `topic=sport`",
                    "type": "STRING"
                },
                {
                    "name": "sources",
                    "description": "One or more news resources to filter your search. It should be the normal form of the URL, for example, **[nytimes.com](http://nytimes.com/)**, **[theguardian.com](http://theguardian.com/)**\n> Comma separated string, for example `sources=nytimes.com,cnn.com,wsj.com`",
                    "type": "STRING"
                },
                {
                    "name": "agg_by",
                    "description": "- `day` \u2014 default option. Aggregate results by day. No more than 100 days \n- `hour` \u2014 Aggregate results by hour. No more than 100 hours",
                    "type": "STRING"
                },
                {
                    "name": "to_rank",
                    "description": "Upper boundary of the rank of news website to filter by",
                    "type": "NUMBER"
                },
                {
                    "name": "media",
                    "description": "Adds to the output of the call two more variables: `media` and `media_content`\n\nMedia - the main image published with an article \n\nmedia_content  - a comma-separated string of all images used in an article",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "Specifies the language of the search.  Allowed values are:\n`af`, `ar`, `bg`, `bn`, `ca`,`cn`, `cs`, `cy`, `da`, `de`, `el`, `en`, `es`, `et`, `fa`, `fi`, `fr`, `gu`, `he`, `hi`, `hr`, `hu`, `id`, `it`, `ja`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mr`, `ne`, `nl`, `no`, `pa`, `pl`, `pt`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`,`tw`, `uk`, `ur`, `vi`. \nSpecifying the language will make your search more relevant",
                    "type": "STRING"
                },
                {
                    "name": "not_sources",
                    "description": "One or more sources to be excluded from the search. \n> Comma separated string, for example, `not_sources=nytimes.com,cnn.com,wsj.com`",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "Until which point in time to search for. The default timezone is UTC",
                    "type": "STRING"
                },
                {
                    "name": "ranked_only",
                    "description": "Limit the search only for the sources which are in top 1 million online websites. Defaults to `True` (`False` if you want to turn it off). Unranked sources are assigned a rank that equals to `999999`",
                    "type": "STRING"
                },
                {
                    "name": "from",
                    "description": "From which point in time to start the search. No specific format is required. E.g. (`2020/05/01`, `2020-05-01` ,`2020-05-01 12:54:14`, `2020-05-01 4:15am`, `yesterday 2:02 am`, `2020/05/01 12:55 EST`) Default timezone is UTC. **\nThe default is set to one week ago at midnight UTC.**",
                    "type": "STRING"
                },
                {
                    "name": "search_in",
                    "description": "By default, we search what you specified in `q` in both `title` and `summary` of the article. However, you can limit this to either `title` or `summary`",
                    "type": "STRING"
                },
                {
                    "name": "from_rank",
                    "description": "Lowest boundary of the rank of news website to filter by. **Important**: lower rank means that a source is more popular",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://newscatcher.p.rapidapi.com/v1/aggregation\"\nquerystring = {\"country\": \"\", \"topic\": \"\", \"sources\": \"\", \"q\": \"Apple\", \"agg_by\": \"day\", \"to_rank\": \"\", \"media\": \"True\", \"lang\": \"\", \"not_sources\": \"\", \"to\": \"\", \"ranked_only\": \"\", \"from\": \"\", \"search_in\": \"\", \"from_rank\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"newscatcher.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Newscatcher",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "String to search for. Has to be [URL-encoded](https://en.wikipedia.org/wiki/Percent-encoding). ",
                    "default": "Apple"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "The country to which you want to narrow your search. This parameter is [experimental]. We advise you to use it in conjunction with the `lang` parameter. Accepts any [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes",
                    "default": ""
                },
                {
                    "name": "topic",
                    "type": "STRING",
                    "description": "The topic to which you want to restrict the articles of your choice. This parameter is [experimental]. Accepted values are `news`, `sport`, `tech`, `world`, `finance`, `politics`, `business`, `economics`, `entertainment`,`beauty`,`travel`,`music`,`food`,`science`\n- `news` usually means a general news feed (main headlines of a website).\n> Important: this parameter is [experimental]. Not all news articles are assigned with a `topic`, therefore, we cannot guarantee that 100% of topics talking about technology will be assigned a `tech` label.\n> One topic at a time, for example, `topic=sport`",
                    "default": ""
                },
                {
                    "name": "sources",
                    "type": "STRING",
                    "description": "One or more news resources to filter your search. It should be the normal form of the URL, for example, **[nytimes.com](http://nytimes.com/)**, **[theguardian.com](http://theguardian.com/)**\n> Comma separated string, for example `sources=nytimes.com,cnn.com,wsj.com`",
                    "default": ""
                },
                {
                    "name": "agg_by",
                    "type": "STRING",
                    "description": "- `day` \u2014 default option. Aggregate results by day. No more than 100 days \n- `hour` \u2014 Aggregate results by hour. No more than 100 hours",
                    "default": "day"
                },
                {
                    "name": "to_rank",
                    "type": "NUMBER",
                    "description": "Upper boundary of the rank of news website to filter by",
                    "default": ""
                },
                {
                    "name": "media",
                    "type": "STRING",
                    "description": "Adds to the output of the call two more variables: `media` and `media_content`\n\nMedia - the main image published with an article \n\nmedia_content  - a comma-separated string of all images used in an article",
                    "default": "True"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "Specifies the language of the search.  Allowed values are:\n`af`, `ar`, `bg`, `bn`, `ca`,`cn`, `cs`, `cy`, `da`, `de`, `el`, `en`, `es`, `et`, `fa`, `fi`, `fr`, `gu`, `he`, `hi`, `hr`, `hu`, `id`, `it`, `ja`, `kn`, `ko`, `lt`, `lv`, `mk`, `ml`, `mr`, `ne`, `nl`, `no`, `pa`, `pl`, `pt`, `ro`, `ru`, `sk`, `sl`, `so`, `sq`, `sv`, `sw`, `ta`, `te`, `th`, `tl`, `tr`,`tw`, `uk`, `ur`, `vi`. \nSpecifying the language will make your search more relevant",
                    "default": ""
                },
                {
                    "name": "not_sources",
                    "type": "STRING",
                    "description": "One or more sources to be excluded from the search. \n> Comma separated string, for example, `not_sources=nytimes.com,cnn.com,wsj.com`",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Until which point in time to search for. The default timezone is UTC",
                    "default": ""
                },
                {
                    "name": "ranked_only",
                    "type": "STRING",
                    "description": "Limit the search only for the sources which are in top 1 million online websites. Defaults to `True` (`False` if you want to turn it off). Unranked sources are assigned a rank that equals to `999999`",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "From which point in time to start the search. No specific format is required. E.g. (`2020/05/01`, `2020-05-01` ,`2020-05-01 12:54:14`, `2020-05-01 4:15am`, `yesterday 2:02 am`, `2020/05/01 12:55 EST`) Default timezone is UTC. **\nThe default is set to one week ago at midnight UTC.** ",
                    "default": ""
                },
                {
                    "name": "search_in",
                    "type": "STRING",
                    "description": "By default, we search what you specified in `q` in both `title` and `summary` of the article. However, you can limit this to either `title` or `summary`",
                    "default": ""
                },
                {
                    "name": "from_rank",
                    "type": "NUMBER",
                    "description": "Lowest boundary of the rank of news website to filter by. **Important**: lower rank means that a source is more popular",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asin-data.p.rapidapi.com/request'\nquerystring = {\"type\": \"\", \"refinements\": \"\", \"amazon_domain\": \"\", \"page\": \"\", \"sort_by\": \"\", \"category_id\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asin-data.p.rapidapi.com/request\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "type",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "refinements",
                    "description": "A comma-seperated list of refinement values to filter the category results by. These allow you to refine your category results by values such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reviews rating 4 and over\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"price range\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" and \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"brand\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\n\nRefinement values are returned in the refinements array of each type=category result. Refinement values are dynamic and change by category area or search term used. If you wish to use refinements you should first issue a type=category request without specifying any refinements to retrieve a master list of the available refinements for the given category area/search term. You can then cache these refinement values for use on subsequent requests.\n\nFor example, to run a type=search request specifying two refinements with values `p_85/2470955011` and `p_36/2421886011` the value of the refinements parameter would be `refinements=p_85/2470955011,p_36/2421886011`\n\nNote that sometimes Amazon do not present a explicit refinement value and instead a link is returned. In this instance you should pass the link into the url request parameter of your type=category request to retrieve data from that refinement-filtered page.",
                    "type": "STRING"
                },
                {
                    "name": "amazon_domain",
                    "description": "The Amazon domain to retrieve category results from. For a full list of supported Amazon domains see [Supported Amazon Domains](https://www.asindataapi.com/docs/product-data-api/reference/amazon-domains).",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "The current page of category results to retrieve. Inspect the pagination.total_pages property in the Category results to see how many pages of category results are available.\n\nupdate value of num to get additional pages",
                    "type": "NUMBER"
                },
                {
                    "name": "sort_by",
                    "description": "Determines the sort order of category results to return. Valid values are:\n\n- most_recent\n- price_low_to_high\n- price_high_to_low\n- featured\n- average_review",
                    "type": "STRING"
                },
                {
                    "name": "category_id",
                    "description": "A category ID to retrieve results from. You may supply any arbitary value in the category_id parameter.\n\nASIN Data API will use the category_id in the following form: `https://amazon_domain/s?node=category_id.`\n\nNote that pagination for top-level categories is not supported by the Amazon sites. If you wish to iterate the contents of a category the recommended approach is to pick the lowest level categories to perform your iteration / pagination on.",
                    "type": "STRING"
                },
                {
                    "name": "url",
                    "description": "The Amazon category results page URL to retrieve category results from. Be sure to URL-encode the url parameter.\n\n**Note the url parameter is supplied, the category_id parameter cannot be used (as the url itself defines the category ID used).**",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asin-data.p.rapidapi.com/request\"\nquerystring = {\"refinements\": \"\", \"amazon_domain\": \"\", \"page\": \"\", \"sort_by\": \"\", \"category_id\": \"\", \"url\": \"https://www.amazon.com/s?bbn=16225009011&rh=n%3A%2116225009011%2Cn%3A502394%2Cn%3A281052\", \"type\": \"category\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asin-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ASIN Data",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "category"
                },
                {
                    "name": "refinements",
                    "type": "STRING",
                    "description": "\nA comma-seperated list of refinement values to filter the category results by. These allow you to refine your category results by values such as \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"Reviews rating 4 and over\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"price range\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\" and \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"brand\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\".\n\nRefinement values are returned in the refinements array of each type=category result. Refinement values are dynamic and change by category area or search term used. If you wish to use refinements you should first issue a type=category request without specifying any refinements to retrieve a master list of the available refinements for the given category area/search term. You can then cache these refinement values for use on subsequent requests.\n\nFor example, to run a type=search request specifying two refinements with values `p_85/2470955011` and `p_36/2421886011` the value of the refinements parameter would be `refinements=p_85/2470955011,p_36/2421886011`\n\nNote that sometimes Amazon do not present a explicit refinement value and instead a link is returned. In this instance you should pass the link into the url request parameter of your type=category request to retrieve data from that refinement-filtered page.",
                    "default": ""
                },
                {
                    "name": "amazon_domain",
                    "type": "STRING",
                    "description": "The Amazon domain to retrieve category results from. For a full list of supported Amazon domains see [Supported Amazon Domains](https://www.asindataapi.com/docs/product-data-api/reference/amazon-domains).",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "The current page of category results to retrieve. Inspect the pagination.total_pages property in the Category results to see how many pages of category results are available.\n\nupdate value of num to get additional pages",
                    "default": ""
                },
                {
                    "name": "sort_by",
                    "type": "STRING",
                    "description": "Determines the sort order of category results to return. Valid values are:\n\n- most_recent\n- price_low_to_high\n- price_high_to_low\n- featured\n- average_review\n",
                    "default": ""
                },
                {
                    "name": "category_id",
                    "type": "STRING",
                    "description": "A category ID to retrieve results from. You may supply any arbitary value in the category_id parameter.\n\nASIN Data API will use the category_id in the following form: `https://amazon_domain/s?node=category_id.`\n\nNote that pagination for top-level categories is not supported by the Amazon sites. If you wish to iterate the contents of a category the recommended approach is to pick the lowest level categories to perform your iteration / pagination on.",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The Amazon category results page URL to retrieve category results from. Be sure to URL-encode the url parameter.\n\n**Note the url parameter is supplied, the category_id parameter cannot be used (as the url itself defines the category ID used).**",
                    "default": "https://www.amazon.com/s?bbn=16225009011&rh=n%3A%2116225009011%2Cn%3A502394%2Cn%3A281052"
                }
            ]
        }
    },
    {
        "query": "I want to convert the latitude 37.7749 and longitude -122.4194 to an address.",
        "model_answer": "requests.get(\"https://address-from-to-latitude-longitude1.p.rapidapi.com/GetLatLng\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"address-from-to-latitude-longitude1.p.rapidapi.com\"}, params={\"Lat\": \"37.7749\", \"Lng\": \"-122.4194\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Free API to convert coordinates (latitude, longitude) to and from address An Easy, Open, Worldwide, Free Geocoding API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://address-from-to-latitude-longitude1.p.rapidapi.com/GetLatLng'\nquerystring = {\"Lng\": \"\", \"Lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://address-from-to-latitude-longitude1.p.rapidapi.com/GetLatLng\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lng",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lat",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://address-from-to-latitude-longitude1.p.rapidapi.com/GetLatLng\"\nquerystring = {\"Lng\": \"88.4048656\", \"Lat\": \"22.5757344\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"address-from-to-latitude-longitude1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Address From To Latitude Longitude",
            "api_arguments_original": [
                {
                    "name": "Lng",
                    "type": "STRING",
                    "description": "",
                    "default": "88.4048656"
                },
                {
                    "name": "Lat",
                    "type": "STRING",
                    "description": "",
                    "default": "22.5757344"
                }
            ]
        }
    },
    {
        "query": "Can you show me the latest climate change news from The Guardian?",
        "model_answer": "requests.get(\"https://climate-change-api20.p.rapidapi.com/news/guardian\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"climate-change-api20.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API showing all the latest climate change news around the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-change-api20.p.rapidapi.com/news/guardian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-change-api20.p.rapidapi.com/news/guardian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaperid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-change-api20.p.rapidapi.com/news/guardian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-change-api20.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate Change API_v3",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "guardian"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with images and videos of a specific location with latitude 37.422213 and longitude -122.084058?",
        "model_answer": "response = requests.get(\"https://geocoding-places.p.rapidapi.com/get_geocoding_images/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"geocoding-places.p.rapidapi.com\"}, params={\"lat\": \"37.422213\", \"lng\": \"-122.084058\", \"version\": \"v1\", \"lang\": \"en\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Geocoding places Info with images & videos.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geocoding-places.p.rapidapi.com/get_geocoding_images/v1'\nquerystring = {\"lat\": \"\", \"lng\": \"\", \"version\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geocoding-places.p.rapidapi.com/get_geocoding_images/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lat",
                    "description": "Latitude in decimal degrees (wgs84)",
                    "type": "NUMBER"
                },
                {
                    "name": "lng",
                    "description": "Longitude in decimal degrees (wgs84)",
                    "type": "NUMBER"
                },
                {
                    "name": "version",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "lang",
                    "description": "Prefered language of content.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geocoding-places.p.rapidapi.com/get_geocoding_images/v1\"\nquerystring = {\"lat\": \"37.422213\", \"lang\": \"en\", \"lng\": \"-122.084058\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geocoding-places.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Geocoding Places",
            "api_arguments_original": [
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "Latitude in decimal degrees (wgs84)",
                    "default": "37.422213"
                },
                {
                    "name": "lng",
                    "type": "NUMBER",
                    "description": "Longitude in decimal degrees (wgs84)",
                    "default": "-122.084058"
                },
                {
                    "name": "version",
                    "type": "string",
                    "description": "",
                    "default": "v1"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "Prefered language of content.",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the answer to the question \"How far away is the sun from Earth?\"",
        "model_answer": "requests.get(\"https://question-answered.p.rapidapi.com/question/how far away is the sun from earth?\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"question-answered.p.rapidapi.com\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Ask a question and get an answer. Example: When did World War two end? answer -  September 2, 1945",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://question-answered.p.rapidapi.com/question/how far away is the sun from earth?'\nquerystring = {\"questionAsked\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://question-answered.p.rapidapi.com/question/how far away is the sun from earth?\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "questionasked",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://question-answered.p.rapidapi.com/question/how far away is the sun from earth?\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"question-answered.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Question-Answered",
            "api_arguments_original": [
                {
                    "name": "questionAsked",
                    "type": "string",
                    "description": "",
                    "default": "how far away is the sun from earth?"
                }
            ]
        }
    },
    {
        "query": "Can you give me the latest 10 news from the Philippine News API?",
        "model_answer": "requests.get(url=\"https://philippine-news.p.rapidapi.com/latest\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"philippine-news.p.rapidapi.com\"}, params={\"limit\": 10})",
        "original": {
            "domain": "Cybersecurity",
            "framework": "RapidAPI",
            "functionality": "An unofficial API to find the latest and top Philippine stories and news.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://philippine-news.p.rapidapi.com/latest'\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://philippine-news.p.rapidapi.com/latest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "description": "This is the maximum number of news that may be returned.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://philippine-news.p.rapidapi.com/latest\"\nquerystring = {\"limit\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"philippine-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Philippine News",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": " This is the maximum number of news that may be returned.",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to check if this email example@gmail.com is a disposable email.",
        "model_answer": "response = requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "API1",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://api194.p.rapidapi.com/showreview/productdetail/1?productId=2433'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://api194.p.rapidapi.com/showreview/productdetail/1?productId=2433\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://api194.p.rapidapi.com/showreview/productdetail/1?productId=2433\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"api194.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "API1",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to download a YouTube video in 1080p resolution using the provided API.",
        "model_answer": "response = requests.get(\"https://youtube86.p.rapidapi.com/api/youtube/go\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"youtube86.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Get a link to a YouTube video in any quality and resolution in less than 2 seconds! Over 3 mln users download videos thanks to us",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube86.p.rapidapi.com/api/youtube/go'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube86.p.rapidapi.com/api/youtube/go\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube86.p.rapidapi.com/api/youtube/go\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube86.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "youtube",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you estimate the success of a YouTube video from a channel named \"TechGuru\" with channel ID \"UCxyz123\"?",
        "model_answer": "requests.get(url=\"https://youtuber-success-estimator.p.rapidapi.com/api/v0/analytics/creators/estimator\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtuber-success-estimator.p.rapidapi.com\"}, params={\"channelName\": \"TechGuru\", \"channelType\": \"youtube\", \"channelId\": \"UCxyz123\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "Estimates how successful a hypothetical video from a given YouTube channel will be in the first 30 days of its lifecycle. Useful for influencer marketers to plan for successful campaigns and publishers to better rank their content",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtuber-success-estimator.p.rapidapi.com/api/v0/analytics/creators/estimator'\nquerystring = {\"channelType\": \"\", \"channelName\": \"\", \"channelId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtuber-success-estimator.p.rapidapi.com/api/v0/analytics/creators/estimator\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "channeltype",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "channelname",
                    "description": "Lookup a channel projection by the given name of the channel. Either channelName or channelId is required",
                    "type": "STRING"
                },
                {
                    "name": "channelid",
                    "description": "Lookup the channel projection by the unique id provided by the channel's host platform (for example: YouTube, TikTok, Twitch). Either channelId or channelName is required",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtuber-success-estimator.p.rapidapi.com/api/v0/analytics/creators/estimator\"\nquerystring = {\"channelName\": \"chrispirillo\", \"channelType\": \"youtube\", \"channelId\": \"UChQl2YkLt3dj-KDyGUBzcHw\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtuber-success-estimator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTuber Success Estimator",
            "api_arguments_original": [
                {
                    "name": "channelType",
                    "type": "STRING",
                    "description": "",
                    "default": "youtube"
                },
                {
                    "name": "channelName",
                    "type": "STRING",
                    "description": "Lookup a channel projection by the given name of the channel. Either channelName or channelId is required",
                    "default": "chrispirillo"
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Lookup the channel projection by the unique id provided by the channel's host platform (for example: YouTube, TikTok, Twitch). Either channelId or channelName is required",
                    "default": "UChQl2YkLt3dj-KDyGUBzcHw"
                }
            ]
        }
    },
    {
        "query": "I want to check if the IP address 192.168.1.1 is a valid IP address.",
        "model_answer": "response = requests.get(\"https://ip-geo-location-find-ip-location-and-details.p.rapidapi.com/iplocation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-geo-location-find-ip-location-and-details.p.rapidapi.com\"}, params={\"ip\":\"192.168.1.1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON formats.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-geo-location-find-ip-location-and-details.p.rapidapi.com/iplocation'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-geo-location-find-ip-location-and-details.p.rapidapi.com/iplocation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-geo-location-find-ip-location-and-details.p.rapidapi.com/iplocation\"\nquerystring = {\"ip\": \"182.182.36.128\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-geo-location-find-ip-location-and-details.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Geo Location - Find IP Location and Details",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "182.182.36.128"
                }
            ]
        }
    },
    {
        "query": "Please check if the phone number +123456789 is registered on WhatsApp.",
        "model_answer": "requests.get(\"https://bulk-whatsapp-validator.p.rapidapi.com/free/about\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bulk-whatsapp-validator.p.rapidapi.com\"}, params={\"phone\": \"+123456789\", \"token\": \"ENTER_HERE_A_TEMP_TOKEN\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Checks if a number is registered on whatsapp. Adds context to whatsapp profiles.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bulk-whatsapp-validator.p.rapidapi.com/free/about'\nquerystring = {\"phone\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bulk-whatsapp-validator.p.rapidapi.com/free/about\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "phone",
                    "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.",
                    "type": "NUMBER"
                },
                {
                    "name": "token",
                    "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bulk-whatsapp-validator.p.rapidapi.com/free/about\"\nquerystring = {\"phone\": \"34655719560\", \"token\": \"ENTER_HERE_A_TEMP_TOKEN\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bulk-whatsapp-validator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bulk Whatsapp Validator",
            "api_arguments_original": [
                {
                    "name": "phone",
                    "type": "NUMBER",
                    "description": "The phone number must be written as a number (including countrycode); \ndo **NOT** include: any non-number character, spaces, or anything which is not a number; do **NOT** add zeros (0) at the beginning.",
                    "default": "34655719560"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "To get a free token, click [here](https://wa.me/34631428039?text=get-token) to send a whatsapp with the command `get-token`.",
                    "default": "ENTER_HERE_A_TEMP_TOKEN"
                }
            ]
        }
    },
    {
        "query": "I want to get the lottery results.",
        "model_answer": "response = requests.get(\"https://lottery9.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"lottery9.p.rapidapi.com\"})",
        "original": {
            "domain": "Devices",
            "framework": "RapidAPI",
            "functionality": "lottery studio",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lottery9.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lottery9.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lottery9.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lottery9.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "lottery",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please fetch the details for the record id \"b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c\" using the Magical Taske API.",
        "model_answer": "requests.get(\"https://magical-taske.p.rapidapi.com/details\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"magical-taske.p.rapidapi.com\"}, params={\"id\": \"b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Fetch sceneries and getaways in Kenya.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://magical-taske.p.rapidapi.com/details'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://magical-taske.p.rapidapi.com/details\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "Record id",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://magical-taske.p.rapidapi.com/details\"\nquerystring = {\"id\": \"b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magical-taske.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Magical Taske",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Record id",
                    "default": "b4180336-ef07-453d-b833-807161aedf36,7cf78e19-57d2-4bce-8999-63aad8f0e70c"
                }
            ]
        }
    },
    {
        "query": "What is the exchange rate from USD to EUR for 100 USD?",
        "model_answer": "requests.get(\"https://currency23.p.rapidapi.com/exchange\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"currency23.p.rapidapi.com\"}, params={\"base\": \"USD\", \"to\": \"EUR\", \"int\": \"100\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Find currency and bitcoin prices.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://currency23.p.rapidapi.com/exchange'\nquerystring = {\"base\": \"\", \"to\": \"\", \"int\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://currency23.p.rapidapi.com/exchange\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "base",
                    "description": "Currency Code (USD, EUR etc.)",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "Target Currency Code",
                    "type": "STRING"
                },
                {
                    "name": "int",
                    "description": "Amount of Money (default: 1)",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://currency23.p.rapidapi.com/exchange\"\nquerystring = {\"int\": \"1\", \"base\": \"USD\", \"to\": \"EUR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"currency23.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Currency_v2",
            "api_arguments_original": [
                {
                    "name": "base",
                    "type": "STRING",
                    "description": "Currency Code (USD, EUR etc.)",
                    "default": "USD"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Target Currency Code",
                    "default": "EUR"
                },
                {
                    "name": "int",
                    "type": "STRING",
                    "description": "Amount of Money (default: 1)",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to store a file named \"example.txt\" in Aniku Files Storage API.",
        "model_answer": "requests.get(\"https://aniku.p.rapidapi.comStorage\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"aniku.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Aniku Files Storage",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aniku.p.rapidapi.comStorage'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aniku.p.rapidapi.comStorage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aniku.p.rapidapi.comStorage\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aniku.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aniku",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to extract text from an image using the Voltox OCR API for the image named \"image.jpg\".",
        "model_answer": "requests.get(\"https://voltox-ocr.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"voltox-ocr.p.rapidapi.com\"}, params={\"filepath\" \"image.jpg\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Ocr for voltox ocr",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://voltox-ocr.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://voltox-ocr.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://voltox-ocr.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"voltox-ocr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Voltox OCR",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the next payout date or yield of the ticker AGNC.",
        "model_answer": "requests.get(\"https://sundayfinance.p.rapidapi.com/yield/agnc\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sundayfinance.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Feed it a ticker and return next payout date or yield  in response.\n\n/payout example: \nhttps://sundayfinance.p.rapidapi.com/stock/agnc\noutput:\n{\"result\":[\"agnc,14.56%\"]}\n\n/yield example: \nhttps://sundayfinance.p.rapidapi.com/yield/aapl\noutput:\n{\"result\":[\"aapl,16 Feb 2023 (Thu)\"]}\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sundayfinance.p.rapidapi.com/yield/agnc'\nquerystring = {\"ticker\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sundayfinance.p.rapidapi.com/yield/agnc\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ticker",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sundayfinance.p.rapidapi.com/yield/agnc\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sundayfinance.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "sundayfinance",
            "api_arguments_original": [
                {
                    "name": "ticker",
                    "type": "STRING",
                    "description": "",
                    "default": "agnc"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve chapters and verses from the book of Isaiah in the Bible.",
        "model_answer": "response = requests.get(\"https://bible-search.p.rapidapi.com/books-by-name\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bible-search.p.rapidapi.com\"}, params={\"bookName\": \"Isaiah\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Retrieve chapters and verses from the Old Testament and New Testament of the KJV. This API does not include the false gnostic books of the bible called the Pauline and Petrine epistles.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bible-search.p.rapidapi.com/books-by-name'\nquerystring = {\"bookName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bible-search.p.rapidapi.com/books-by-name\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "bookname",
                    "description": "Name of the book.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bible-search.p.rapidapi.com/books-by-name\"\nquerystring = {\"bookName\": \"Isaiah\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bible-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bible Search",
            "api_arguments_original": [
                {
                    "name": "bookName",
                    "type": "STRING",
                    "description": "Name of the book.",
                    "default": "Isaiah"
                }
            ]
        }
    },
    {
        "query": "Can you generate a QR code for the website google.com?",
        "model_answer": "requests.get(\"https://quick-qr-code-generator.p.rapidapi.com/hello\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quick-qr-code-generator.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Generate QR code",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quick-qr-code-generator.p.rapidapi.com/hello'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quick-qr-code-generator.p.rapidapi.com/hello\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quick-qr-code-generator.p.rapidapi.com/hello\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quick-qr-code-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quick QR Code Generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you increment the number 15 by one?",
        "model_answer": "response = requests.get(\"https://plus-one.p.rapidapi.com/15\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"plus-one.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This tool allows you to perform an increment by one on your integer",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://plus-one.p.rapidapi.com/15'\nquerystring = {\"number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://plus-one.p.rapidapi.com/15\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "number",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://plus-one.p.rapidapi.com/15\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"plus-one.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Plus One",
            "api_arguments_original": [
                {
                    "name": "number",
                    "type": "NUMBER",
                    "description": "",
                    "default": "15"
                }
            ]
        }
    },
    {
        "query": "Can you verify if the company with registration number \"12345\" is registered with the Registrar of Companies?",
        "model_answer": "requests.get(\"https://mca-corporate-verifications.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mca-corporate-verifications.p.rapidapi.com\"}, params={\"request_id\": \"12345\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Make your onboarding process safer, faster, and smarter by verifying if your merchants are registered with the Registrar of Companies, and are registered with the same details that you expect.\n\nWith the MCA Verification API, you can now confidently onboard merchants knowing that they are authorized and registered with the RoC.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mca-corporate-verifications.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mca-corporate-verifications.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mca-corporate-verifications.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mca-corporate-verifications.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MCA Corporate Verifications",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Please provide me with detailed technical specs on the Gulfstream G550 aircraft.",
        "model_answer": "requests.get(\"https://aircraft-by-api-ninjas.p.rapidapi.com/v1/aircraft\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"aircraft-by-api-ninjas.p.rapidapi.com\"}, params={\"model\": \"G550\", \"manufacturer\": \"Gulfstream\"})",
        "original": {
            "domain": "Payments",
            "framework": "RapidAPI",
            "functionality": "Detailed technical specs on over 1000 airplane models. See more info at https://api-ninjas.com/api/aircraft",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aircraft-by-api-ninjas.p.rapidapi.com/v1/aircraft'\nquerystring = {\"min_height\": \"\", \"min_wingspan\": \"\", \"limit\": \"\", \"max_height\": \"\", \"max_length\": \"\", \"min_length\": \"\", \"max_range\": \"\", \"min_range\": \"\", \"max_speed\": \"\", \"max_wingspan\": \"\", \"engine_type\": \"\", \"min_speed\": \"\", \"model\": \"\", \"manufacturer\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aircraft-by-api-ninjas.p.rapidapi.com/v1/aircraft\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "min_height",
                    "description": "Minimum height of the aircraft in feet.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_wingspan",
                    "description": "Minimum wingspan of the aircraft in feet.",
                    "type": "NUMBER"
                },
                {
                    "name": "limit",
                    "description": "How many results to return. Must be between 1 and 30. Default is 1.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_height",
                    "description": "Maximum height of the aircraft in feet.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_length",
                    "description": "Maximum length of the aircraft in feet.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_length",
                    "description": "Minimum length of the aircraft in feet.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_range",
                    "description": "Maximum range of the aircraft in nautical miles.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_range",
                    "description": "Minimum range of the aircraft in nautical miles.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_speed",
                    "description": "Maximum max. air speed in knots.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_wingspan",
                    "description": "Maximum wingspan of the aircraft in feet.",
                    "type": "NUMBER"
                },
                {
                    "name": "engine_type",
                    "description": "Type of engine. Must be one of: piston, propjet, jet.",
                    "type": "STRING"
                },
                {
                    "name": "min_speed",
                    "description": "Minimum max. air speed in knots.",
                    "type": "NUMBER"
                },
                {
                    "name": "model",
                    "description": "Aircraft model name.",
                    "type": "STRING"
                },
                {
                    "name": "manufacturer",
                    "description": "Company that designed and built the aircraft.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aircraft-by-api-ninjas.p.rapidapi.com/v1/aircraft\"\nquerystring = {\"min_height\": \"\", \"min_wingspan\": \"\", \"limit\": \"\", \"max_height\": \"\", \"max_length\": \"\", \"min_length\": \"\", \"max_range\": \"\", \"min_range\": \"\", \"max_speed\": \"\", \"max_wingspan\": \"\", \"engine_type\": \"\", \"min_speed\": \"\", \"model\": \"G550\", \"manufacturer\": \"Gulfstream\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aircraft-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aircraft by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "min_height",
                    "type": "NUMBER",
                    "description": "Minimum height of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "min_wingspan",
                    "type": "NUMBER",
                    "description": "Minimum wingspan of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "How many results to return. Must be between 1 and 30. Default is 1.",
                    "default": ""
                },
                {
                    "name": "max_height",
                    "type": "NUMBER",
                    "description": "Maximum height of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "max_length",
                    "type": "NUMBER",
                    "description": "Maximum length of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "min_length",
                    "type": "NUMBER",
                    "description": "Minimum length of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "max_range",
                    "type": "NUMBER",
                    "description": "Maximum range of the aircraft in nautical miles.",
                    "default": ""
                },
                {
                    "name": "min_range",
                    "type": "NUMBER",
                    "description": "Minimum range of the aircraft in nautical miles.",
                    "default": ""
                },
                {
                    "name": "max_speed",
                    "type": "NUMBER",
                    "description": "Maximum max. air speed in knots.",
                    "default": ""
                },
                {
                    "name": "max_wingspan",
                    "type": "NUMBER",
                    "description": "Maximum wingspan of the aircraft in feet.",
                    "default": ""
                },
                {
                    "name": "engine_type",
                    "type": "STRING",
                    "description": "Type of engine. Must be one of: piston, propjet, jet.",
                    "default": ""
                },
                {
                    "name": "min_speed",
                    "type": "NUMBER",
                    "description": "Minimum max. air speed in knots.",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "Aircraft model name.",
                    "default": "G550"
                },
                {
                    "name": "manufacturer",
                    "type": "STRING",
                    "description": "Company that designed and built the aircraft.",
                    "default": "Gulfstream"
                }
            ]
        }
    },
    {
        "query": "I want to check if this document is plagiarized using the dedu API.",
        "model_answer": "requests.get(\"https://dedu.p.rapidapi.comhttp://14.102.40.116:8081/dedu_lnipe/index.aspx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dedu.p.rapidapi.com\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "dedu",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dedu.p.rapidapi.comhttp://14.102.40.116:8081/dedu_lnipe/index.aspx'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dedu.p.rapidapi.comhttp://14.102.40.116:8081/dedu_lnipe/index.aspx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dedu.p.rapidapi.comhttp://14.102.40.116:8081/dedu_lnipe/index.aspx\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dedu.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dedu",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the Instagram user information for username",
        "model_answer": "requests.get(\"https://instagram-api-media-downloader.p.rapidapi.com/ig/userInfoByUsername/johndoe\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram-api-media-downloader.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Cheapest Instagram API: HD profile pictures, download stories, reels, videos, photos and more!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-api-media-downloader.p.rapidapi.com/ig/userInfoByUsername/mileycyrus'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-api-media-downloader.p.rapidapi.com/ig/userInfoByUsername/mileycyrus\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-api-media-downloader.p.rapidapi.com/ig/userInfoByUsername/mileycyrus\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-api-media-downloader.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram API - Media Downloader",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "default": "mileycyrus"
                }
            ]
        }
    },
    {
        "query": "Can you check if order number 123456 is valid?",
        "model_answer": "requests.get(\"https://petstore132.p.rapidapi.com/store/order/123456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"petstore132.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Petstore API Example",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://petstore132.p.rapidapi.com/store/order/{orderId}'\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://petstore132.p.rapidapi.com/store/order/{orderId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "orderid",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://petstore132.p.rapidapi.com/store/order/{orderId}\"\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"petstore132.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Petstore",
            "api_arguments_original": [
                {
                    "name": "orderId",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Is example@gmail.com a valid email address?",
        "model_answer": "requests.get(\"https://email-existence-validator.p.rapidapi.com/help\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-existence-validator.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "API which checks if email really exist on server or not.\nIt check for different parameters for giving end results .\nCheck for MX records, SMTP deliverability, Disposable check and many more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-existence-validator.p.rapidapi.com/help'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-existence-validator.p.rapidapi.com/help\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-existence-validator.p.rapidapi.com/help\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-existence-validator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Existence Validator",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the server time using the ByBit Leaderboard API?",
        "model_answer": "requests.get(\"https://bybit-leaderboard.p.rapidapi.com/GetServerTime\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"bybit-leaderboard.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "\ud83c\udfc6 Experience the power of ByBit Exchange with our ByBit API. Analyze, follow top crypto traders, dominate the market!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bybit-leaderboard.p.rapidapi.com/GetServerTime'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bybit-leaderboard.p.rapidapi.com/GetServerTime\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bybit-leaderboard.p.rapidapi.com/GetServerTime\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bybit-leaderboard.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ByBit Leaderboard",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you get the trip details for the MF Reference \"ABC123\" using the ASR Hub API?",
        "model_answer": "requests.get(\"https://asr-hub.p.rapidapi.com/api/TripDetails/ABC123\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"asr-hub.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "ASR Hub is a nomalized XML API which integrates airline content from multiple sources like Direct &amp; NDC connect, Multi-GDS and aggregators from various markets and\u00a0 offers search, ticket, Payments, ancillary sales, and post bookings services through a single API.\u00a0 ASR Hub 1.0 provides the complete Travel Tech Stack for Airline Retailing\u200b.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asr-hub.p.rapidapi.com/api/TripDetails/{MFRef}'\nquerystring = {\"MFRef\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asr-hub.p.rapidapi.com/api/TripDetails/{MFRef}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "mfref",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asr-hub.p.rapidapi.com/api/TripDetails/{MFRef}\"\nquerystring = {\"MFRef\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asr-hub.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ASR Hub",
            "api_arguments_original": [
                {
                    "name": "MFRef",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the comments for the given ID.",
        "model_answer": "requests.get(\"https://hanime-python-api.p.rapidapi.com/getComment\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"hanime-python-api.p.rapidapi.com\"}, params={\"id\": \"1234567\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Hanime API  with more feature and free to use",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hanime-python-api.p.rapidapi.com/getComment'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hanime-python-api.p.rapidapi.com/getComment\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hanime-python-api.p.rapidapi.com/getComment\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hanime-python-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "hanime-python-api",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to convert the speech-to-text for transaction ID \"1234\".",
        "model_answer": "requests.get(\"https://melrose-labs-voice-api1.p.rapidapi.com/speechtotext/string\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"melrose-labs-voice-api1.p.rapidapi.com\"}, params={\"transactionid\": \"1234\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "The Voice API is used for text-to-speech, speech-to-text and inbound/outbound voice routing.  The Voice API is part of the <a href=\"https://melroselabs.com/services/voice-gateway/\">Voice Gateway</a> from Melrose Labs.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://melrose-labs-voice-api1.p.rapidapi.com/speechtotext/string'\nquerystring = {\"transactionid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://melrose-labs-voice-api1.p.rapidapi.com/speechtotext/string\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "transactionid",
                    "description": "ID of speech-to-text transaction",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://melrose-labs-voice-api1.p.rapidapi.com/speechtotext/string\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"melrose-labs-voice-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Melrose Labs Voice API",
            "api_arguments_original": [
                {
                    "name": "transactionid",
                    "type": "STRING",
                    "description": "ID of speech-to-text transaction",
                    "default": "string"
                }
            ]
        }
    },
    {
        "query": "How can I convert 100 USD to EUR and GBP using the Currency Conversion and Exchange Rates API?",
        "model_answer": "requests.get(\"https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"currency-conversion-and-exchange-rates.p.rapidapi.com\"}, params={\"from\" \"USD\", \"to\" \"EUR,GBP\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Simple reliable API for current and historical foreign exchange (forex) currency rates.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest'\nquerystring = {\"from\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "from",
                    "description": "Three-letter currency code of the currency would would like to convert from. This currency will be converted into the code of the currency provided in the `to` parameter",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "A comma-separated list of currency codes to convert the `from` parameter into.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://currency-conversion-and-exchange-rates.p.rapidapi.com/latest\"\nquerystring = {\"from\": \"USD\", \"to\": \"EUR,GBP\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"currency-conversion-and-exchange-rates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Currency Conversion and Exchange Rates",
            "api_arguments_original": [
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Three-letter currency code of the currency would would like to convert from. This currency will be converted into the code of the currency provided in the `to` parameter",
                    "default": "USD"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "A comma-separated list of currency codes to convert the `from` parameter into.",
                    "default": "EUR,GBP"
                }
            ]
        }
    },
    {
        "query": "I want to check if example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "ssssssssssssssssss",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ssssss.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ssssss.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ssssss.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ssssss.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ssssss",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the Net Promoter Score (NPS) for survey ID 123456.",
        "model_answer": "requests.get(\"https://nps-net-promoter-score.p.rapidapi.com/nps/survey/read/nlp/123456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nps-net-promoter-score.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": " This API allows rapidly implement one of the most  well known and accepted KPI to measure customer satisfaction and loyalty: Net Promoter Score\u00ae, or NPS\u00ae. Create your survey templates and request them from wherever your applications are. Easily get the NPS for an Organization.  We also provide a word cloud mechanism and sentiment analysis to analyse your customers feedback! Try it . If you need an additional feature, feel free to consult us, because we are glad to serve if we can!!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nps-net-promoter-score.p.rapidapi.com/nps/survey/read/nlp/{sid}'\nquerystring = {\"sid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nps-net-promoter-score.p.rapidapi.com/nps/survey/read/nlp/{sid}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nps-net-promoter-score.p.rapidapi.com/nps/survey/read/nlp/{sid}\"\nquerystring = {\"sid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nps-net-promoter-score.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NPS-Net Promoter Score",
            "api_arguments_original": [
                {
                    "name": "sid",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to translate the sentence \"Hello, how are you?\" from English to French using the MyMemory - Translation Memory API.",
        "model_answer": "requests.get(\"https://translated-mymemory---translation-memory.p.rapidapi.com/get\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"translated-mymemory---translation-memory.p.rapidapi.com\"}, params={\"langpair\": \"en|fr\", \"q\": \"Hello, how are you?\", \"onlyprivate\": \"0\", \"mt\": \"1\", \"de\": \"a@b.c\", \"key\": \"\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Get a better translation! MyMemory is the world's largest Translation Memory that contains billions of words translated by professional translators. MyMemory will give you ModernMT machine translation  if a human translation is not available.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translated-mymemory---translation-memory.p.rapidapi.com/get'\nquerystring = {\"langpair\": \"\", \"q\": \"\", \"onlyprivate\": \"\", \"mt\": \"\", \"de\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translated-mymemory---translation-memory.p.rapidapi.com/get\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "langpair",
                    "description": "The language pair. Two ISO-631 language codes, separated by |.\nMyMemory support over 80 languages but some combinations may contains no data. Nepali into Vietnamese?",
                    "type": "STRING"
                },
                {
                    "name": "q",
                    "description": "the text you want to translate. Normally a sentence.",
                    "type": "STRING"
                },
                {
                    "name": "onlyprivate",
                    "description": "If a key has been specified, only private matches will be returned. 0 (disabled: default) | 1 (enabled)",
                    "type": "STRING"
                },
                {
                    "name": "mt",
                    "description": "Enables MT in results: 0 (disabled) | 1 (enabled: default)",
                    "type": "STRING"
                },
                {
                    "name": "de",
                    "description": "A valid email (recommended for CAT tools and high volume usage)",
                    "type": "STRING"
                },
                {
                    "name": "key",
                    "description": "Gives access to private memories and customized API limits",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translated-mymemory---translation-memory.p.rapidapi.com/get\"\nquerystring = {\"onlyprivate\": \"0\", \"mt\": \"1\", \"de\": \"a@b.c\", \"key\": \"\", \"langpair\": \"en|it\", \"q\": \"Hello World!\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translated-mymemory---translation-memory.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MyMemory - Translation Memory",
            "api_arguments_original": [
                {
                    "name": "langpair",
                    "type": "STRING",
                    "description": "The language pair. Two ISO-631 language codes, separated by |.\nMyMemory support over 80 languages but some combinations may contains no data. Nepali into Vietnamese?",
                    "default": "en|it"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "the text you want to translate. Normally a sentence.",
                    "default": "Hello World!"
                },
                {
                    "name": "onlyprivate",
                    "type": "STRING",
                    "description": "If a key has been specified, only private matches will be returned. 0 (disabled: default) | 1 (enabled)",
                    "default": "0"
                },
                {
                    "name": "mt",
                    "type": "STRING",
                    "description": "Enables MT in results: 0 (disabled) | 1 (enabled: default)",
                    "default": "1"
                },
                {
                    "name": "de",
                    "type": "STRING",
                    "description": "A valid email (recommended for CAT tools and high volume usage)",
                    "default": "a@b.c"
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Gives access to private memories and customized API limits",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide information about an astro photo?",
        "model_answer": "requests.get(\"https://astro-gallery.p.rapidapi.com/get_astro_photo_info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"astro-gallery.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Astro Photo Gallery",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://astro-gallery.p.rapidapi.com/get_astro_photo_info'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://astro-gallery.p.rapidapi.com/get_astro_photo_info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://astro-gallery.p.rapidapi.com/get_astro_photo_info\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"astro-gallery.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Astro Gallery",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you fetch alerts, traffic jams information and driving directions from Waze/Google in real-time?",
        "model_answer": "requests.get(\"https://waze.p.rapidapi.com/autocomplete\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"waze.p.rapidapi.com\"}, params={\"q\": \"traffic\", \"lang\": \"en\", \"coordinates\": \"37.376754, -122.023350\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Fetch alerts, traffic jams information and driving directions from Waze/Google in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://waze.p.rapidapi.com/autocomplete'\nquerystring = {\"q\": \"\", \"lang\": \"\", \"coordinates\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://waze.p.rapidapi.com/autocomplete\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "Free-text geographic query",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "The language of the results. See https://wazeopedia.waze.com/wiki/USA/Countries_and_Languages for a list of supported languages.",
                    "type": "STRING"
                },
                {
                    "name": "coordinates",
                    "description": "Geographic coordinates (latitude, longitude) bias. Highly recommended to use for getting accurate results.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://waze.p.rapidapi.com/autocomplete\"\nquerystring = {\"q\": \"sunn\", \"lang\": \"en\", \"coordinates\": \"37.376754, -122.023350\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"waze.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Waze",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Free-text geographic query",
                    "default": "sunn"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "The language of the results. See https://wazeopedia.waze.com/wiki/USA/Countries_and_Languages for a list of supported languages.",
                    "default": "en"
                },
                {
                    "name": "coordinates",
                    "type": "STRING",
                    "description": "Geographic coordinates (latitude, longitude) bias. Highly recommended to use for getting accurate results.",
                    "default": "37.376754, -122.023350"
                }
            ]
        }
    },
    {
        "query": "Can you help me find the nearest EV charging station within 50 miles of my current location?",
        "model_answer": "requests.get(\"https://vehicle-charging-stations.p.rapidapi.com/poi/\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"vehicle-charging-stations.p.rapidapi.com\"}, params={\"distance\": \"50\", \"longitude\": \"<longitude>\", \"latitude\": \"<latitude>\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Find EV charging stations for cars\nYou can use this API to retrieve charging location information,",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vehicle-charging-stations.p.rapidapi.com/poi/'\nquerystring = {\"distance\": \"\", \"longitude\": \"\", \"latitude\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vehicle-charging-stations.p.rapidapi.com/poi/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "distance",
                    "description": "Unit: Miles",
                    "type": "STRING"
                },
                {
                    "name": "longitude",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "latitude",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vehicle-charging-stations.p.rapidapi.com/poi/\"\nquerystring = {\"distance\": \"100\", \"longitude\": \"2.4379392\", \"latitude\": \"44.351488\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vehicle-charging-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vehicle charging stations ",
            "api_arguments_original": [
                {
                    "name": "distance",
                    "type": "STRING",
                    "description": "Unit: Miles",
                    "default": "100"
                },
                {
                    "name": "longitude",
                    "type": "STRING",
                    "description": "",
                    "default": "2.4379392"
                },
                {
                    "name": "latitude",
                    "type": "STRING",
                    "description": "",
                    "default": "44.351488"
                }
            ]
        }
    },
    {
        "query": "I want to get the top 10 property listings from the MLS Router API.",
        "model_answer": "response = requests.get(\"https://mls-router1.p.rapidapi.com/reso/odata/Property\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mls-router1.p.rapidapi.com\"}, params={\"orderby\": \"ModificationTimestamp desc\", \"select\": \"\", \"top\": \"10\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The MLS Router API provides consumers access to MLS data feeds to develop apps using Property Listings and Headless Architecture. MLS Router API is ideal for developers across multiple platforms and languages to build their real estate solutions. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mls-router1.p.rapidapi.com/reso/odata/Property'\nquerystring = {\"orderby\": \"\", \"select\": \"\", \"top\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mls-router1.p.rapidapi.com/reso/odata/Property\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "orderby",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "select",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "top",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mls-router1.p.rapidapi.com/reso/odata/Property\"\nquerystring = {\"orderby\": \"ModificationTimestamp desc\", \"select\": \"\", \"top\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mls-router1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MLS Router",
            "api_arguments_original": [
                {
                    "name": "orderby",
                    "type": "STRING",
                    "description": "",
                    "default": "ModificationTimestamp desc"
                },
                {
                    "name": "select",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "top",
                    "type": "STRING",
                    "description": "",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "Could you please test if the text \"Hello, world!\" is valid using the test_v20 API?",
        "model_answer": "requests.get(\"https://test9500.p.rapidapi.com/test\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test9500.p.rapidapi.com\"}, params={\"test\": \"Hello, world!\", \"test1\": \"233\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "teset",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test9500.p.rapidapi.com/test'\nquerystring = {\"test\": \"\", \"test1\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test9500.p.rapidapi.com/test\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "test",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "test1",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test9500.p.rapidapi.com/test\"\nquerystring = {\"test\": \"1111\", \"test1\": \"233\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test9500.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test_v20",
            "api_arguments_original": [
                {
                    "name": "test",
                    "type": "STRING",
                    "description": "",
                    "default": "1111"
                },
                {
                    "name": "test1",
                    "type": "STRING",
                    "description": "",
                    "default": "233"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the latest news from the German Police and Crime News Live API.",
        "model_answer": "requests.get(\"https://german-police-and-crime-news-live.p.rapidapi.com/news/tag24\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"german-police-and-crime-news-live.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API showing all the latest Police, Crime, Accident etc. News in Germany",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://german-police-and-crime-news-live.p.rapidapi.com/news/tag24'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://german-police-and-crime-news-live.p.rapidapi.com/news/tag24\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaperid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://german-police-and-crime-news-live.p.rapidapi.com/news/tag24\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"german-police-and-crime-news-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "German Police and Crime News Live",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "tag24"
                }
            ]
        }
    },
    {
        "query": "Can you help me extract the taxpayer identification number (TIN) from a scanned image of a Philippines TIN card?",
        "model_answer": "response = requests.get(\"https://philippines-tin-ocr.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"philippines-tin-ocr.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Philippines TIN OCR API allows you to onboard your customers with speed and precision.\n\nEnable them to pre-fill their onboarding forms instantly, by just uploading or scanning their Taxpayer Identification Number (TIN) card \u2013 IDfy will digitize the document for you!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://philippines-tin-ocr.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://philippines-tin-ocr.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://philippines-tin-ocr.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"philippines-tin-ocr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Philippines TIN OCR",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Could you please recommend some trendy fashion items for me?",
        "model_answer": "requests.get(\"https://fashion4.p.rapidapi.com/v1/version\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fashion4.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "This Fashion API offers an image class-prediction algorithm for clothes and accessories. [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/fashion) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/fashion?utm_source=fashion_rapidapi&utm_medium=endpoints&utm_campaign=rapidapi) [![Telegram](https://img.shields.io/badge/-Telegram%20demo-white?logo=tele...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fashion4.p.rapidapi.com/v1/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fashion4.p.rapidapi.com/v1/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fashion4.p.rapidapi.com/v1/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fashion4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fashion",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me check if this video has been processed using the Videogrammer API? The job ID is abc123.",
        "model_answer": "requests.get(\"https://videogrammer.p.rapidapi.com/video\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"videogrammer.p.rapidapi.com\"}, params={\"job_id\": \"abc123\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Videogrammer is a simple but powerful way to multiply social media videos",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://videogrammer.p.rapidapi.com/video'\nquerystring = {\"job_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://videogrammer.p.rapidapi.com/video\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "job_id",
                    "description": "the previous recieved job_id",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://videogrammer.p.rapidapi.com/video\"\nquerystring = {\"job_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"videogrammer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "videogrammer",
            "api_arguments_original": [
                {
                    "name": "job_id",
                    "type": "STRING",
                    "description": "the previous recieved job_id",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the match statistics for the Serie A match with match ID \"2022-34-INTROM\".",
        "model_answer": "requests.get(\"https://serie-a2.p.rapidapi.com/match_stats/2022-34-INTROM\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"serie-a2.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Serie a API! Here you can find all the info you need about the Serie A, the Italian football league among the best ones all over the world. You can ask for team statistics, players statistics and also for info about upcoming matches, also including live scores, live formations, live stats and much more. You can easily build your Serie A related portal or enhance your Ml/AI projects. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://serie-a2.p.rapidapi.com/match_stats/2022-34-INTROM'\nquerystring = {\"match_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://serie-a2.p.rapidapi.com/match_stats/2022-34-INTROM\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "match_id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://serie-a2.p.rapidapi.com/match_stats/2022-34-INTROM\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"serie-a2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Serie A",
            "api_arguments_original": [
                {
                    "name": "match_id",
                    "type": "string",
                    "description": "",
                    "default": "2022-34-INTROM"
                }
            ]
        }
    },
    {
        "query": "\"Can you help me to find all known subdomains of the website google.com?\"",
        "model_answer": "requests.get(\"https://subdomains-lookup1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"subdomains-lookup1.p.rapidapi.com\"}, params={\"type\": \"SUBDOMAINS\", \"pagenum\": \"1\", \"q\": \"google.com\"})",
        "original": {
            "domain": "Storage",
            "framework": "RapidAPI",
            "functionality": "Return all known subdomains from root domain inquiry",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://subdomains-lookup1.p.rapidapi.com/'\nquerystring = {\"type\": \"\", \"pagenum\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://subdomains-lookup1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "type",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "pagenum",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://subdomains-lookup1.p.rapidapi.com/\"\nquerystring = {\"type\": \"SUBDOMAINS\", \"pagenum\": \"1\", \"q\": \"tumblr.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"subdomains-lookup1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Subdomains lookup",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "SUBDOMAINS"
                },
                {
                    "name": "pagenum",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "tumblr.com"
                }
            ]
        }
    },
    {
        "query": "I want to create a cold wallet for BTC.",
        "model_answer": "requests.get(\"https://crypto-asset-cold-wallet-create.p.rapidapi.com/api/v1/currency\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crypto-asset-cold-wallet-create.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "A free service that allows you to create cold wallets for various crypto assets such as BTC, ADA, ALGO, ATOM, AVAX, CHZ, DOT, EOS, LINK, MANA, MATIC, SHIB, SOL, TRX, ETH, LTC, XTZ, DOGE, XLM, and XRP. It can be a software or a website that you can use to create a cold wallet for the supported crypto assets. You can store the private key in a safe place and use the public key to receive the crypto assets. Some of these services also allow you to print out the private key on a physical paper an...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crypto-asset-cold-wallet-create.p.rapidapi.com/api/v1/currency'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crypto-asset-cold-wallet-create.p.rapidapi.com/api/v1/currency\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crypto-asset-cold-wallet-create.p.rapidapi.com/api/v1/currency\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-asset-cold-wallet-create.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crypto Asset Cold Wallet Create",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to download the downloadable URLs of the tracks from the album \"https://scntstlab.bandcamp.com/track/mwidit-edit\" using the Bandcamp Downloader API.",
        "model_answer": "requests.get(\"https://bandamp-downloader-api.p.rapidapi.com/tracks/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bandamp-downloader-api.p.rapidapi.com\"}, params={\"url\": \"https://scntstlab.bandcamp.com/track/mwidit-edit\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "An all-in-one scraper to get everything from Bandcamp. Get tracks, Albums details with downloadable URLs.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bandamp-downloader-api.p.rapidapi.com/tracks/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bandamp-downloader-api.p.rapidapi.com/tracks/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bandamp-downloader-api.p.rapidapi.com/tracks/\"\nquerystring = {\"url\": \"https://scntstlab.bandcamp.com/track/mwidit-edit\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bandamp-downloader-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bandamp Downloader API",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://scntstlab.bandcamp.com/track/mwidit-edit"
                }
            ]
        }
    },
    {
        "query": "I want to get the list of companies on the eNotas Gateway API with page number 2 and page size 50.",
        "model_answer": "requests.get(\"https://enotas-enotas-gateway-v1.p.rapidapi.com/empresas\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"enotas-enotas-gateway-v1.p.rapidapi.com\"}, params={\"pageNumber\": 2, \"pageSize\": 50})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Automatic e-Service Brazilian invoicing platform, the easy way.\r\nNota Fiscal Eletr\u00f4nica de Servi\u00e7o Autom\u00e1tica, em n\u00edvel nacional, da forma mais f\u00e1cil poss\u00edvel.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://enotas-enotas-gateway-v1.p.rapidapi.com/empresas'\nquerystring = {\"pageNumber\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://enotas-enotas-gateway-v1.p.rapidapi.com/empresas\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pagenumber",
                    "description": "Pagina\u00e7\u00e3o, a partir de 0",
                    "type": "NUMBER"
                },
                {
                    "name": "pagesize",
                    "description": "Tamanho da p\u00e1gina",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://enotas-enotas-gateway-v1.p.rapidapi.com/empresas\"\nquerystring = {\"pageNumber\": \"0\", \"pageSize\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"enotas-enotas-gateway-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "eNotas Gateway",
            "api_arguments_original": [
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "Pagina\u00e7\u00e3o, a partir de 0",
                    "default": "0"
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "Tamanho da p\u00e1gina",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "I want to list all the accounts in 31Events.",
        "model_answer": "requests.get(\"https://pinke01-31events-auth.p.rapidapi.com/account/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pinke01-31events-auth.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "31Events is a simple, yet powerful calendaring event management service that allows for the sending of calendaring events directly to your customer\u2019s calendar.  It could be used for Webinars, Seminars, Training, etc.   If the customer accepts the calendar invite they are automatically signed up for the event.\r\n\r\nStandards based iCal compliant that works with Exchange calendars, Google Calendars, mobile phones. \r\n\r\nNo more \"Click to download to calendar\" Send directly to a email account for accept or reject.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pinke01-31events-auth.p.rapidapi.com/account/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pinke01-31events-auth.p.rapidapi.com/account/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pinke01-31events-auth.p.rapidapi.com/account/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pinke01-31events-auth.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "31Events - Send Native Calendar Invites",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me validate this email 'example@gmail.com'?",
        "model_answer": "requests.get(url=\"https://email-validator9.p.rapidapi.com/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"email-validator9.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Clean your email list now!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-validator9.p.rapidapi.com/check'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-validator9.p.rapidapi.com/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-validator9.p.rapidapi.com/check\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-validator9.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Validator_v9",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me check if the zip code 12345 is valid in Mexico?",
        "model_answer": "requests.get(\"https://postali.p.rapidapi.com/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"postali.p.rapidapi.com\"}, params={\"code\": \"12345\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Mexico zip codes / C\u00f3digos postales de M\u00e9xico",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://postali.p.rapidapi.com/v1'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://postali.p.rapidapi.com/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "code",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://postali.p.rapidapi.com/v1\"\nquerystring = {\"code\": \"66446\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"postali.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Postali",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "",
                    "default": "66446"
                }
            ]
        }
    },
    {
        "query": "I want to search for properties in Chelsea, London on Zoopla.",
        "model_answer": "response = requests.get(\"https://zoopla3.p.rapidapi.com/to-rent/travel-time-search-to-rent\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"zoopla3.p.rapidapi.com\"}, params={\"search_area\": \"Chelsea, London\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Real-time data, unofficial API zoopla co uk. Users can search for information on flats, houses, villas, serviced apartments, and various other types of properties across the country. Zoopla offers an easy way to view details about each property, including photos, descriptions, information on size, number of rooms, and amenities. Users can also explore parameters such as estimated value, sales history, and the surrounding market.\nThe occurrence rate of the response status code != 200 is &lt; 0...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://zoopla3.p.rapidapi.com/to-rent/travel-time-search-to-rent'\nquerystring = {\"search_area\": \"\", \"keywords\": \"\", \"furnishing_state\": \"\", \"show_let_or_let_agreed\": \"\", \"available_from\": \"\", \"added_to_site\": \"\", \"price_per\": \"\", \"min_bedroom\": \"\", \"has_garden\": \"\", \"has_bills_included\": \"\", \"has_parking_garage\": \"\", \"has_balcony_terrace\": \"\", \"has_pets_allowed\": \"\", \"max_travel_time\": \"\", \"max_price\": \"\", \"retirement_homes\": \"\", \"sort_order\": \"\", \"house_share\": \"\", \"max_bedroom\": \"\", \"transport_type\": \"\", \"min_price\": \"\", \"property_type\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://zoopla3.p.rapidapi.com/to-rent/travel-time-search-to-rent\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "search_area",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "keywords",
                    "description": "e.g. conservatory or \\\"double garage\\\"",
                    "type": "STRING"
                },
                {
                    "name": "furnishing_state",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "show_let_or_let_agreed",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "available_from",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "added_to_site",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "price_per",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "min_bedroom",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "has_garden",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "has_bills_included",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "has_parking_garage",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "has_balcony_terrace",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "has_pets_allowed",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "max_travel_time",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "max_price",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "retirement_homes",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "sort_order",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "house_share",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "max_bedroom",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "transport_type",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "min_price",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "property_type",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://zoopla3.p.rapidapi.com/to-rent/travel-time-search-to-rent\"\nquerystring = {\"keywords\": \"\", \"furnishing_state\": \"\", \"show_let_or_let_agreed\": \"\", \"available_from\": \"\", \"added_to_site\": \"\", \"price_per\": \"\", \"min_bedroom\": \"\", \"has_garden\": \"\", \"has_bills_included\": \"\", \"has_parking_garage\": \"\", \"has_balcony_terrace\": \"\", \"has_pets_allowed\": \"\", \"max_travel_time\": \"\", \"max_price\": \"\", \"retirement_homes\": \"\", \"sort_order\": \"\", \"house_share\": \"\", \"search_area\": \"Chelsea, London\", \"max_bedroom\": \"\", \"transport_type\": \"\", \"min_price\": \"\", \"property_type\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"zoopla3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Zoopla",
            "api_arguments_original": [
                {
                    "name": "search_area",
                    "type": "STRING",
                    "description": "",
                    "default": "Chelsea, London"
                },
                {
                    "name": "keywords",
                    "type": "STRING",
                    "description": "e.g. conservatory or \\\"double garage\\\"",
                    "default": ""
                },
                {
                    "name": "furnishing_state",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "show_let_or_let_agreed",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "available_from",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "added_to_site",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "price_per",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "min_bedroom",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_garden",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_bills_included",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_parking_garage",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_balcony_terrace",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "has_pets_allowed",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "max_travel_time",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "max_price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "retirement_homes",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sort_order",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "house_share",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "max_bedroom",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "transport_type",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "min_price",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "property_type",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me search for Xbox products on eBay in Europe?",
        "model_answer": "requests.get(\"https://ebay-products-search-scraper.p.rapidapi.com/products\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ebay-products-search-scraper.p.rapidapi.com\"}, params={\"page\": 1, \"Item_Location\": \"europe\", \"query\": \"Xbox\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "eBay products search scraper for getting search products data.\nYou can choose the Location: the US Only,  North America , Europe , Asia, or Default.\nYou will get 25 products per page .",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ebay-products-search-scraper.p.rapidapi.com/products'\nquerystring = {\"page\": \"\", \"Item_Location\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ebay-products-search-scraper.p.rapidapi.com/products\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "the number of the page",
                    "type": "NUMBER"
                },
                {
                    "name": "item_location",
                    "description": "Item Location :  europe  , north___america.    , asia  ,us__only  , default",
                    "type": "STRING"
                },
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ebay-products-search-scraper.p.rapidapi.com/products\"\nquerystring = {\"page\": \"1\", \"Item_Location\": \"europe\", \"query\": \"xbox\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ebay-products-search-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "eBay products search scraper",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "the number of the page",
                    "default": "1"
                },
                {
                    "name": "Item_Location",
                    "type": "STRING",
                    "description": "Item Location :  europe  , north___america.    , asia  ,us__only  , default",
                    "default": "europe"
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "xbox"
                }
            ]
        }
    },
    {
        "query": "I want to make a GET request to the httpbin API.",
        "model_answer": "requests.get(\"https://httpbin32.p.rapidapi.com/anything\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"httpbin32.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "httpbin",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://httpbin32.p.rapidapi.com/anything'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://httpbin32.p.rapidapi.com/anything\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://httpbin32.p.rapidapi.com/anything\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"httpbin32.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "httpbin",
            "api_arguments_original": []
        }
    },
    {
        "query": "",
        "model_answer": "requests.get(\"https://world-country.p.rapidapi.com/get/regions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"world-country.p.rapidapi.com\"}, params={\"keyword\": \"\", \"perpage\": \"\", \"id\": \"\", \"page\": \"\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "More than 200+ countries, 5K states and 150K cities with various information.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-country.p.rapidapi.com/get/regions'\nquerystring = {\"keyword\": \"\", \"perpage\": \"\", \"id\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-country.p.rapidapi.com/get/regions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "keyword",
                    "description": "search Region by keyword",
                    "type": "STRING"
                },
                {
                    "name": "perpage",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "id",
                    "description": "id of Region",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-country.p.rapidapi.com/get/regions\"\nquerystring = {\"keyword\": \"asia\", \"perpage\": \"50\", \"id\": \"\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-country.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Country",
            "api_arguments_original": [
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "search Region by keyword",
                    "default": "asia"
                },
                {
                    "name": "perpage",
                    "type": "NUMBER",
                    "description": "",
                    "default": "50"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "id of Region",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to find the logo of google.com.",
        "model_answer": "requests.get(\"https://logo4.p.rapidapi.com/logo/google.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"logo4.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "Find the Logo of each company in real-time.  Using our logo finder service is entirely free with attribution. However, we require a link back to companyurlfinder.com on any page the service is used.   Just use the following format to embed logos in your systems:  <img src=\"https://api.companyurlfinder.com/logo/amazon.com\" />",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://logo4.p.rapidapi.com/logo/amazon.com'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://logo4.p.rapidapi.com/logo/amazon.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://logo4.p.rapidapi.com/logo/amazon.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"logo4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Logo",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "string",
                    "description": "",
                    "default": "amazon.com"
                }
            ]
        }
    },
    {
        "query": "Please give me a random cat fact.",
        "model_answer": "requests.get(\"https://random-cat-fact.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"random-cat-fact.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Get some random cat facts",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-cat-fact.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-cat-fact.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-cat-fact.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-cat-fact.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Cat Fact",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the exchange rate for 100 USD to EUR on a specific date?",
        "model_answer": "requests.get(\"https://forexgo.p.rapidapi.com/fx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"forexgo.p.rapidapi.com\"}, params={\"amount\": 100, \"from\": \"USD\", \"to\": \"EUR\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Introducing ForexGo API - the powerful currency exchange solution for developers. Effortlessly integrate real-time forex rates and conversion capabilities into your applications with our easy-to-use API. Enhance your projects with accurate and up-to-date exchange data, empowering users across the globe to make informed financial decisions. Get started with ForexGo API today!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://forexgo.p.rapidapi.com/fx'\nquerystring = {\"amount\": \"\", \"from\": \"\", \"to\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://forexgo.p.rapidapi.com/fx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "amount",
                    "description": "Defines the value of the amount.",
                    "type": "NUMBER"
                },
                {
                    "name": "from",
                    "description": "Supported currencies are listed below.\n\nEUR, USD, JPY, BGN, CZK, DKK, GBP, HUF, PLN, RON, SEK, CHF, ISK, NOK, TRY, AUD, BRL, CAD, CNY, HKD, IDR, ILS, INR, KRW, MXN, MYR, NZD, PHP, SGD, THB, ZAR",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "Supported currencies are listed below.\n\nEUR, USD, JPY, BGN, CZK, DKK, GBP, HUF, PLN, RON, SEK, CHF, ISK, NOK, TRY, AUD, BRL, CAD, CNY, HKD, IDR, ILS, INR, KRW, MXN, MYR, NZD, PHP, SGD, THB, ZAR",
                    "type": "STRING"
                },
                {
                    "name": "date",
                    "description": "ISO Date format:\n\nYYYY-MM-DDTHH:mm:ss.sssZ\n\nPull data from requested date.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://forexgo.p.rapidapi.com/fx\"\nquerystring = {\"amount\": \"10\", \"from\": \"EUR\", \"date\": \"\", \"to\": \"USD\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"forexgo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ForexGo",
            "api_arguments_original": [
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "Defines the value of the amount.",
                    "default": "10"
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Supported currencies are listed below.\n\nEUR, USD, JPY, BGN, CZK, DKK, GBP, HUF, PLN, RON, SEK, CHF, ISK, NOK, TRY, AUD, BRL, CAD, CNY, HKD, IDR, ILS, INR, KRW, MXN, MYR, NZD, PHP, SGD, THB, ZAR",
                    "default": "EUR"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Supported currencies are listed below.\n\nEUR, USD, JPY, BGN, CZK, DKK, GBP, HUF, PLN, RON, SEK, CHF, ISK, NOK, TRY, AUD, BRL, CAD, CNY, HKD, IDR, ILS, INR, KRW, MXN, MYR, NZD, PHP, SGD, THB, ZAR",
                    "default": "USD"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "ISO Date format:\n\nYYYY-MM-DDTHH:mm:ss.sssZ\n\nPull data from requested date.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with some quiz questions using the QUIZ API?",
        "model_answer": "requests.get(\"https://quiz26.p.rapidapi.com/questions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"quiz26.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "The Quiz API is a powerful and versatile tool designed to provide developers with easy access to a wide range of quiz-related functionalities. With this API, you can seamlessly integrate quizzes into your applications, websites, or educational platforms. Whether you're building a learning management system, a trivia game, or a quiz-based assessment platform, the Quiz API has got you covered.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quiz26.p.rapidapi.com/questions'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quiz26.p.rapidapi.com/questions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quiz26.p.rapidapi.com/questions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quiz26.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QUIZ",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide connection information about IP address 192.168.0.1?",
        "model_answer": "response = requests.get(\"https://about-my-ip.p.rapidapi.com/getipinfo/192.168.0.1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"about-my-ip.p.rapidapi.com\"})",
        "original": {
            "domain": "Monitoring",
            "framework": "RapidAPI",
            "functionality": "Connection information about an IP Address",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://about-my-ip.p.rapidapi.com/getipinfo/{ip}'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://about-my-ip.p.rapidapi.com/getipinfo/{ip}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://about-my-ip.p.rapidapi.com/getipinfo/{ip}\"\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"about-my-ip.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "About My IP",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "How can I retrieve a list of all remote jobs from remoteok.com?",
        "model_answer": "requests.get(\"https://jobs-from-remoteok.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"jobs-from-remoteok.p.rapidapi.com\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "list of all remote jobs from remoteok.com web-site - not official! ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jobs-from-remoteok.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jobs-from-remoteok.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jobs-from-remoteok.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jobs-from-remoteok.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Jobs from remoteok",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to listen to the Hip Hop station.",
        "model_answer": "requests.get(\"https://station1.p.rapidapi.com/Hip-Hop-Musiquecom-s115313/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"station1.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "radio",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://station1.p.rapidapi.com/Hip-Hop-Musiquecom-s115313/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://station1.p.rapidapi.com/Hip-Hop-Musiquecom-s115313/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://station1.p.rapidapi.com/Hip-Hop-Musiquecom-s115313/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"station1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "station",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if \"example@gmail.com\" is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Parse quantities and units from text / text replace",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yoonit.p.rapidapi.com/currencies'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yoonit.p.rapidapi.com/currencies\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yoonit.p.rapidapi.com/currencies\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yoonit.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "yoonit",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the details of media ID 4 in the LiveScore Sports API?",
        "model_answer": "requests.get(\"https://livescore-sports.p.rapidapi.com/v1/media/details\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"livescore-sports.p.rapidapi.com\"}, params={\"timezone\" \"0\", \"locale\" \"EN\", \"media_id\" \"4\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "LiveScore Sports | The number one destination for real time scores for Football, Cricket, Tennis, Basketball, Hockey and more. Support: tipsters@rapi.one / t.me/api_tipsters Other sports api: https://rapi.one ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://livescore-sports.p.rapidapi.com/v1/media/details'\nquerystring = {\"timezone\": \"\", \"locale\": \"\", \"media_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://livescore-sports.p.rapidapi.com/v1/media/details\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "timezone",
                    "description": "Timezone, offsets from UTC",
                    "type": "NUMBER"
                },
                {
                    "name": "locale",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "media_id",
                    "description": "Media ID",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://livescore-sports.p.rapidapi.com/v1/media/details\"\nquerystring = {\"timezone\": \"0\", \"locale\": \"EN\", \"media_id\": \"4\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"livescore-sports.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LiveScore Sports",
            "api_arguments_original": [
                {
                    "name": "timezone",
                    "type": "NUMBER",
                    "description": "Timezone, offsets from UTC",
                    "default": "0"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": "EN"
                },
                {
                    "name": "media_id",
                    "type": "NUMBER",
                    "description": "Media ID",
                    "default": "4"
                }
            ]
        }
    },
    {
        "query": "Please fetch the client data from the fachaapi API.",
        "model_answer": "requests.get(\"https://fachaapi.p.rapidapi.com/cliente\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fachaapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "testing",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fachaapi.p.rapidapi.com/cliente'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fachaapi.p.rapidapi.com/cliente\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fachaapi.p.rapidapi.com/cliente\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fachaapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "fachaApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get a motivational quote with id 5.",
        "model_answer": "requests.get(\"https://motivational-content.p.rapidapi.com/quotes/4\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"motivational-content.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get motivational quotes and motivational pictures.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://motivational-content.p.rapidapi.com/quotes/4'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://motivational-content.p.rapidapi.com/quotes/4\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://motivational-content.p.rapidapi.com/quotes/4\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"motivational-content.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Motivational Content",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "4"
                }
            ]
        }
    },
    {
        "query": "Could you please provide information about the best movies available?",
        "model_answer": "requests.get(\"https://porn-movies.p.rapidapi.com/index.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"porn-movies.p.rapidapi.com\"}, params={\"id\": 1})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Best Movies",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://porn-movies.p.rapidapi.com/index.php'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://porn-movies.p.rapidapi.com/index.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://porn-movies.p.rapidapi.com/index.php\"\nquerystring = {\"id\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"porn-movies.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Porn Movies",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with information about the IP ranges and IP address owners for AS number 1234 in XML format?",
        "model_answer": "requests.get(\"https://ip-netblocks.p.rapidapi.com/api/v2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-netblocks.p.rapidapi.com\"}, params={\"asn\": \"1234\", \"outputFormat\": \"XML\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "IP Netblocks API gives you extensive information about IP ranges and IP address owners.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-netblocks.p.rapidapi.com/api/v2'\nquerystring = {\"asn\": \"\", \"limit\": \"\", \"org\": \"\", \"outputFormat\": \"\", \"mask\": \"\", \"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-netblocks.p.rapidapi.com/api/v2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "asn",
                    "description": "Get ranges by ASN (Autonomous System Number).",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Max count of returned records. Acceptable values: 1 - 1000. Default: 100",
                    "type": "STRING"
                },
                {
                    "name": "org",
                    "description": "Find IP Netblocks which have the specified search terms in their Netblock (netname, description, remarks), or Organisation (org.org, org.name, org.email, org.address) fields",
                    "type": "STRING"
                },
                {
                    "name": "outputformat",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "type": "STRING"
                },
                {
                    "name": "mask",
                    "description": "Get ranges by CIDR. Acceptable values: 0 - 128 (0 - 32 for IPv4). Default: 128",
                    "type": "STRING"
                },
                {
                    "name": "ip",
                    "description": "Get ranges by IPv4/IPv6 address or by CIDR depending on input",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-netblocks.p.rapidapi.com/api/v2\"\nquerystring = {\"asn\": \"\", \"limit\": \"\", \"org\": \"\", \"outputFormat\": \"\", \"mask\": \"\", \"ip\": \"8.8.8.8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-netblocks.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Netblocks",
            "api_arguments_original": [
                {
                    "name": "asn",
                    "type": "STRING",
                    "description": "Get ranges by ASN (Autonomous System Number).",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Max count of returned records. Acceptable values: 1 - 1000. Default: 100",
                    "default": ""
                },
                {
                    "name": "org",
                    "type": "STRING",
                    "description": "Find IP Netblocks which have the specified search terms in their Netblock (netname, description, remarks), or Organisation (org.org, org.name, org.email, org.address) fields",
                    "default": ""
                },
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "default": ""
                },
                {
                    "name": "mask",
                    "type": "STRING",
                    "description": "Get ranges by CIDR. Acceptable values: 0 - 128 (0 - 32 for IPv4). Default: 128",
                    "default": ""
                },
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "Get ranges by IPv4/IPv6 address or by CIDR depending on input",
                    "default": "8.8.8.8"
                }
            ]
        }
    },
    {
        "query": "I want to get data from the gcfen API.",
        "model_answer": "requests.get(\"https://gcfen.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gcfen.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "cinema test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gcfen.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gcfen.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gcfen.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gcfen.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "gcfen",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with information about a tennis player with the player ID 317306?",
        "model_answer": "requests.get(\"https://ultimate-tennis1.p.rapidapi.com/wta/player_info/317306\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"ultimate-tennis1.p.rapidapi.com\"})",
        "original": {
            "domain": "Science",
            "framework": "RapidAPI",
            "functionality": " Welcome to the Ultimate Tennis API!  It provides all the information you need about the tennis world, including all the details related to players and tournaments(live scores, matches, statistics), from both the ATP and tha WTA circuits, both singles and doubles . We also provide live bettings odds for every match in every tennis category. You can easily build your tennis related portal or enhance your Ml/AI projects.   ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ultimate-tennis1.p.rapidapi.com/wta/player_info/317306'\nquerystring = {\"player_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ultimate-tennis1.p.rapidapi.com/wta/player_info/317306\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "player_id",
                    "description": "Player ID",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ultimate-tennis1.p.rapidapi.com/wta/player_info/317306\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ultimate-tennis1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ultimate Tennis",
            "api_arguments_original": [
                {
                    "name": "player_id",
                    "type": "string",
                    "description": "Player ID",
                    "default": "317306"
                }
            ]
        }
    },
    {
        "query": "I want to get a list of football team names.",
        "model_answer": "response = requests.get(\"https://football-soccer-team-names.p.rapidapi.com/get-teams\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"football-soccer-team-names.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Large database of team names, You'll receive 7000+ football (soccer) team names, with their short names from almost every league, nation etc\u2026 This API can be useful for you for ex.: if you want to create football (soccer) statistics based on team names and short names",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://football-soccer-team-names.p.rapidapi.com/get-teams'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://football-soccer-team-names.p.rapidapi.com/get-teams\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://football-soccer-team-names.p.rapidapi.com/get-teams\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"football-soccer-team-names.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Football (soccer) team names",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me identify this song? The artist ID is 73406786.",
        "model_answer": "requests.get(\"https://shazam.p.rapidapi.com/shazam-events/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shazam.p.rapidapi.com\"}, params={\"artistId\": \"73406786\", \"l\": \"en-US\", \"from\": \"2022-12-31\", \"limit\": \"50\", \"offset\": \"0\", \"to\": \"\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Identify any song. Discover, artists, lyrics, videos & playlists to create a song detector site/application such as shazam.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shazam.p.rapidapi.com/shazam-events/list'\nquerystring = {\"artistId\": \"\", \"l\": \"\", \"from\": \"\", \"limit\": \"\", \"offset\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shazam.p.rapidapi.com/shazam-events/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "artistid",
                    "description": "The value of 'artist->adamid' field returned in \u2026/search OR \u2026/songs/v2/detect OR \u2026/songs/get-details endpoint\nThe value of 'artists->id' field returned in \u2026/shazam-songs/get-details OR \u2026/albums/get-details OR \u2026/albums/get-related-artist",
                    "type": "STRING"
                },
                {
                    "name": "l",
                    "description": "The language code",
                    "type": "STRING"
                },
                {
                    "name": "from",
                    "description": "The date to list events from",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "The number of items per page, for paging purpose",
                    "type": "NUMBER"
                },
                {
                    "name": "offset",
                    "description": "The page index, for paging purpose",
                    "type": "NUMBER"
                },
                {
                    "name": "to",
                    "description": "The date to list events to. Ex : 2023-01-15",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shazam.p.rapidapi.com/shazam-events/list\"\nquerystring = {\"l\": \"en-US\", \"artistId\": \"73406786\", \"from\": \"2022-12-31\", \"limit\": \"50\", \"offset\": \"0\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shazam.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shazam",
            "api_arguments_original": [
                {
                    "name": "artistId",
                    "type": "STRING",
                    "description": "The value of 'artist->adamid' field returned in \u2026/search OR \u2026/songs/v2/detect OR \u2026/songs/get-details endpoint\nThe value of 'artists->id' field returned in \u2026/shazam-songs/get-details OR \u2026/albums/get-details OR \u2026/albums/get-related-artist",
                    "default": "73406786"
                },
                {
                    "name": "l",
                    "type": "STRING",
                    "description": "The language code",
                    "default": "en-US"
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "The date to list events from",
                    "default": "2022-12-31"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The number of items per page, for paging purpose",
                    "default": "50"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "The page index, for paging purpose",
                    "default": "0"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "The date to list events to. Ex : 2023-01-15",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "",
        "model_answer": "requests.get(\"https://openblur.p.rapidapi.com/listings\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"openblur.p.rapidapi.com\"}, params={\"pageSize\": 10, \"pageNumber\": 1, \"orderBy\": \"ASC\", \"contractAddress\": \"\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Unofficial Listings API for blur.io\n\n- For Blur V1 endpoints use this API: https://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.\n\nJoin our Discord to inquire & find out the latest information and tools: \n\nhttps://discord.gg/Yezs2VDhBV",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://openblur.p.rapidapi.com/listings'\nquerystring = {\"pageSize\": \"\", \"pageNumber\": \"\", \"orderBy\": \"\", \"contractAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://openblur.p.rapidapi.com/listings\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pagesize",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "pagenumber",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "orderby",
                    "description": "Listing Price: ASC or DESC",
                    "type": "STRING"
                },
                {
                    "name": "contractaddress",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://openblur.p.rapidapi.com/listings\"\nquerystring = {\"pageNumber\": \"1\", \"orderBy\": \"ASC\", \"pageSize\": \"20\", \"contractAddress\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"openblur.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OpenBlur",
            "api_arguments_original": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": "20"
                },
                {
                    "name": "pageNumber",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "orderBy",
                    "type": "STRING",
                    "description": "Listing Price: ASC or DESC",
                    "default": "ASC"
                },
                {
                    "name": "contractAddress",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you summarize the YouTube video with the URL \"https://www.youtube.com/watch?v=ykY69lSpDdo\"?",
        "model_answer": "requests.get(\"https://youtube-video-summarizer1.p.rapidapi.com/v1/youtube/summarizeVideoFromCache\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-video-summarizer1.p.rapidapi.com\"}, params={\"videoURL\": \"https://www.youtube.com/watch?v=ykY69lSpDdo\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "A powerful tool for generating concise summaries of YouTube videos, highlighting the most important points for easy note-taking and referencing.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-video-summarizer1.p.rapidapi.com/v1/youtube/summarizeVideoFromCache'\nquerystring = {\"videoURL\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-video-summarizer1.p.rapidapi.com/v1/youtube/summarizeVideoFromCache\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "videourl",
                    "description": "The URL of the YouTube video to get from the summary cache.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-video-summarizer1.p.rapidapi.com/v1/youtube/summarizeVideoFromCache\"\nquerystring = {\"videoURL\": \"https://www.youtube.com/watch?v=ykY69lSpDdo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-video-summarizer1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube Video Summarizer",
            "api_arguments_original": [
                {
                    "name": "videoURL",
                    "type": "STRING",
                    "description": "The URL of the YouTube video to get from the summary cache.",
                    "default": "https://www.youtube.com/watch?v=ykY69lSpDdo"
                }
            ]
        }
    },
    {
        "query": "I want to generate a QR code for the URL www.example.com.",
        "model_answer": "requests.get(\"https://qr-code-generator-pro1.p.rapidapi.com/qr\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qr-code-generator-pro1.p.rapidapi.com\"}, params={\"url\": \"www.example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Easily generate QR codes for urls, and receive a downloadable png image file",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-code-generator-pro1.p.rapidapi.com/qr'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-code-generator-pro1.p.rapidapi.com/qr\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-code-generator-pro1.p.rapidapi.com/qr\"\nquerystring = {\"url\": \"www.example.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-generator-pro1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR Code Generator Pro",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "www.example.com"
                }
            ]
        }
    },
    {
        "query": "Can you validate if the email address \"example@example.com\" is a valid email address using the Email API?",
        "model_answer": "requests.get(\"https://email-api8.p.rapidapi.com/fake_email\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-api8.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "This Email API is helpful to validate email addresses(single or bulk, using txt and csv), detect temporary, get fake emails, check free emails, check MX records and identify free/paid email service providers.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-api8.p.rapidapi.com/fake_email'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-api8.p.rapidapi.com/fake_email\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-api8.p.rapidapi.com/fake_email\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-api8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email API",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the per-capita income based on the coordinates (longitude",
        "model_answer": "requests.get(\"https://world-coordinates-to-income.p.rapidapi.com/test/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"world-coordinates-to-income.p.rapidapi.com\"}, params={\"lon\": \"-87.6297982\", \"lat\": \"41.8781136\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get sub-city level individual per-capita USD/yr income data from across the globe.\nUseful in LTV & user valuation modeling.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-coordinates-to-income.p.rapidapi.com/test/'\nquerystring = {\"lon\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-coordinates-to-income.p.rapidapi.com/test/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lon",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "lat",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-coordinates-to-income.p.rapidapi.com/test/\"\nquerystring = {\"lon\": \"0\", \"lat\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-coordinates-to-income.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Coordinates to Income",
            "api_arguments_original": [
                {
                    "name": "lon",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Can you look up the product details for the barcode 9780143573659?",
        "model_answer": "requests.get(\"https://barcode-lookup.p.rapidapi.com/v3/products\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"barcode-lookup.p.rapidapi.com\"}, params={\"barcode\": \"9780143573659\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Lookup product data and pricing for over 635 million unique items by UPC, EAN, ISBN codes or search terms.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://barcode-lookup.p.rapidapi.com/v3/products'\nquerystring = {\"asin\": \"\", \"page\": \"\", \"barcode\": \"\", \"mpn\": \"\", \"search\": \"\", \"category\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://barcode-lookup.p.rapidapi.com/v3/products\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "asin",
                    "description": "ASIN",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "Page number for any search query (10 results per page)",
                    "type": "STRING"
                },
                {
                    "name": "barcode",
                    "description": "UPC, EAN or ISBN number",
                    "type": "NUMBER"
                },
                {
                    "name": "mpn",
                    "description": "Manufacturer Part Number",
                    "type": "STRING"
                },
                {
                    "name": "search",
                    "description": "Any search term or phrase",
                    "type": "STRING"
                },
                {
                    "name": "category",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "title",
                    "description": "Product Name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://barcode-lookup.p.rapidapi.com/v3/products\"\nquerystring = {\"asin\": \"\", \"page\": \"\", \"barcode\": \"\", \"mpn\": \"\", \"search\": \"\", \"category\": \"\", \"title\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"barcode-lookup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Barcode Lookup",
            "api_arguments_original": [
                {
                    "name": "asin",
                    "type": "STRING",
                    "description": "ASIN",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "Page number for any search query (10 results per page)",
                    "default": ""
                },
                {
                    "name": "barcode",
                    "type": "NUMBER",
                    "description": "UPC, EAN or ISBN number",
                    "default": ""
                },
                {
                    "name": "mpn",
                    "type": "STRING",
                    "description": "Manufacturer Part Number",
                    "default": ""
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "Any search term or phrase",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "title",
                    "type": "STRING",
                    "description": "Product Name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the daily horoscope for the Leo sign.",
        "model_answer": "requests.get(\"https://horoscope-astrology.p.rapidapi.com/dailyphrase\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"horoscope-astrology.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "The Horoscope API Server provides daily horoscope predictions for all zodiac signs. Users can access the API to retrieve daily astrological forecasts for their specific sun sign, as well as general horoscope information for the entire zodiac. The API is designed to be simple and easy to use, allowing developers to integrate horoscope content into their own applications and websites. The predictions are generated using algorithms that consider the position of the planets and other astrological...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://horoscope-astrology.p.rapidapi.com/dailyphrase'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://horoscope-astrology.p.rapidapi.com/dailyphrase\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://horoscope-astrology.p.rapidapi.com/dailyphrase\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"horoscope-astrology.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Horoscope Astrology",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I find the addresses for the postcode PL11DN in UK?",
        "model_answer": "requests.get(\"https://find-by-postcode.p.rapidapi.com/v1/postcodes/PL11DN\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"find-by-postcode.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "\u201cFind By PostCode\u201d API get addresses for the given UK PostCode. This API provides a JSON interface to search UK addresses for a postcode.his API uses the latest PAF and Multiple Residence data from Royal Mail.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://find-by-postcode.p.rapidapi.com/v1/postcodes/PL11DN'\nquerystring = {\"postcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://find-by-postcode.p.rapidapi.com/v1/postcodes/PL11DN\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "postcode",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://find-by-postcode.p.rapidapi.com/v1/postcodes/PL11DN\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"find-by-postcode.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Find By PostCode",
            "api_arguments_original": [
                {
                    "name": "postcode",
                    "type": "string",
                    "description": "",
                    "default": "PL11DN"
                }
            ]
        }
    },
    {
        "query": "I want to detect objects in the image located at \"https://example.com/image.jpg\".",
        "model_answer": "requests.get(\"https://mantis-object-detection.p.rapidapi.com/rest/v1/public/detectObjects\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mantis-object-detection.p.rapidapi.com\"}, params={\"url\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Reliable and Accurate Face and Object Detection via ResNet-50",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mantis-object-detection.p.rapidapi.com/rest/v1/public/detectObjects'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mantis-object-detection.p.rapidapi.com/rest/v1/public/detectObjects\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mantis-object-detection.p.rapidapi.com/rest/v1/public/detectObjects\"\nquerystring = {\"url\": \"https://dm0qx8t0i9gc9.cloudfront.net/thumbnails/video/4ZrVLdVKeijzurndz/people-emotion-and-facial-expression-concept-face-of-happy-smiling-middle-aged-woman-at-office_rleqp4y7g_thumbnail-1080_09.png\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mantis-object-detection.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mantis Object Detection",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://dm0qx8t0i9gc9.cloudfront.net/thumbnails/video/4ZrVLdVKeijzurndz/people-emotion-and-facial-expression-concept-face-of-happy-smiling-middle-aged-woman-at-office_rleqp4y7g_thumbnail-1080_09.png"
                }
            ]
        }
    },
    {
        "query": "Can you help me search for upcoming games on the Epic Store in US marketplace?",
        "model_answer": "requests.get(\"https://epic-store-games.p.rapidapi.com/comingSoon\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"epic-store-games.p.rapidapi.com\"}, params={\"searchWords\": \"\", \"categories\": \"\", \"country\": \"us\", \"locale\": \"us\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Search Games, Editions, Demos on Epic Store",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://epic-store-games.p.rapidapi.com/comingSoon'\nquerystring = {\"searchWords\": \"\", \"categories\": \"\", \"country\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://epic-store-games.p.rapidapi.com/comingSoon\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchwords",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "categories",
                    "description": "Default: **Games**",
                    "type": "ENUM"
                },
                {
                    "name": "country",
                    "description": "Default: **us** --- *For the price*",
                    "type": "STRING"
                },
                {
                    "name": "locale",
                    "description": "Default: **us** --- *For the language*",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://epic-store-games.p.rapidapi.com/comingSoon\"\nquerystring = {\"searchWords\": \"Assasin\", \"categories\": \"\", \"country\": \"us\", \"locale\": \"us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"epic-store-games.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Epic Store Games",
            "api_arguments_original": [
                {
                    "name": "searchWords",
                    "type": "STRING",
                    "description": "",
                    "default": "Assasin"
                },
                {
                    "name": "categories",
                    "type": "ENUM",
                    "description": "Default: **Games**",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Default: **us** --- *For the price*",
                    "default": "us"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "Default: **us** --- *For the language*",
                    "default": "us"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest news related to artificial intelligence.",
        "model_answer": "requests.get(\"https://artificial-intelligence-news-api.p.rapidapi.com/ai-news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"artificial-intelligence-news-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "The Artificial Intelligence News API is a web service that provides access to news articles related to the field of artificial intelligence from around the world. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://artificial-intelligence-news-api.p.rapidapi.com/ai-news'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://artificial-intelligence-news-api.p.rapidapi.com/ai-news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://artificial-intelligence-news-api.p.rapidapi.com/ai-news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"artificial-intelligence-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Artificial intelligence News API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to test the API \"test10977.p.rapidapi.com/ee\".",
        "model_answer": "requests.get(\"https://test10977.p.rapidapi.com/ee\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"test10977.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test10977.p.rapidapi.com/ee'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test10977.p.rapidapi.com/ee\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test10977.p.rapidapi.com/ee\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test10977.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please retrieve the current air quality for latitude 40.7128 and longitude -74.0060?",
        "model_answer": "requests.get(\"https://air-quality.p.rapidapi.com/history/airquality\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"air-quality.p.rapidapi.com\"}, params={\"lat\" \"40.7128\", \"lon\" \"-74.0060\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Retrieve current, forecasted, and historical air quality for any point in the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://air-quality.p.rapidapi.com/history/airquality'\nquerystring = {\"lat\": \"\", \"lon\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://air-quality.p.rapidapi.com/history/airquality\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lat",
                    "description": "Latitude",
                    "type": "NUMBER"
                },
                {
                    "name": "lon",
                    "description": "Longitude",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://air-quality.p.rapidapi.com/history/airquality\"\nquerystring = {\"lat\": \"35.779\", \"lon\": \"-78.638\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"air-quality.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Air Quality",
            "api_arguments_original": [
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "Latitude",
                    "default": "35.779"
                },
                {
                    "name": "lon",
                    "type": "NUMBER",
                    "description": "Longitude",
                    "default": "-78.638"
                }
            ]
        }
    },
    {
        "query": "Can you help me access real-time stock prices for Apple Inc. (AAPL) using the Yahoo Finance API?",
        "model_answer": "response = requests.get(\"https://yahoo-finance127.p.rapidapi.com/news/tsla\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yahoo-finance127.p.rapidapi.com\"}, params={\"symbol\": \"AAPL\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Access Yahoo Finance Realtime Stock Price |  Options | ESG | Trends | Statistics | Earnings | Balance Sheets | Analytics | Asset Profile and much more",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yahoo-finance127.p.rapidapi.com/news/tsla'\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yahoo-finance127.p.rapidapi.com/news/tsla\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "symbol",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yahoo-finance127.p.rapidapi.com/news/tsla\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance127.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yahoo Finance",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "string",
                    "description": "",
                    "default": "tsla"
                }
            ]
        }
    },
    {
        "query": "I want to check the current weather at KSFO airport.",
        "model_answer": "requests.get(\"https://aviation-weather-center.p.rapidapi.com/adds/dataserver_current/httpparam\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"aviation-weather-center.p.rapidapi.com\"}, params={\"datasource\": \"stations\", \"stationString\": \"KSFO\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "This API provides official aviation weather data, including SIGMETs, AIRMETs, METARs, TAFs and PIREPs from NOAA, available on aviationweather.gov",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aviation-weather-center.p.rapidapi.com/adds/dataserver_current/httpparam'\nquerystring = {\"datasource\": \"\", \"stationString\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aviation-weather-center.p.rapidapi.com/adds/dataserver_current/httpparam\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "datasource",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "stationstring",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aviation-weather-center.p.rapidapi.com/adds/dataserver_current/httpparam\"\nquerystring = {\"datasource\": \"stations\", \"stationString\": \"KSFO\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aviation-weather-center.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aviation Weather Center",
            "api_arguments_original": [
                {
                    "name": "datasource",
                    "type": "STRING",
                    "description": "",
                    "default": "stations"
                },
                {
                    "name": "stationString",
                    "type": "STRING",
                    "description": "",
                    "default": "KSFO"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a random insult from \"The Dozen - The Yo Mamsa Roast API\"?",
        "model_answer": "requests.get(\"https://the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com/insults/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Rest API that serves random, catagorized and filteres lighthearted familial insults/jokes",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com/insults/{category}'\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com/insults/{category}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "category",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com/insults/{category}\"\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-dozen-the-yo-mamsa-roast-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Dozen - The Yo Mamsa Roast API",
            "api_arguments_original": [
                {
                    "name": "category",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the latest schedule and stats for FIFA World Cup 2022 with a date of November 10th, 2022 and UTC offset of 5.",
        "model_answer": "requests.get(\"https://fifa-2022-schedule-and-stats.p.rapidapi.com/schedule\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fifa-2022-schedule-and-stats.p.rapidapi.com\"}, params={\"date\": \"2022-11-10\", \"utc_offset\": \"5\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Get the latest FIFA World Cup Schedule and Stats ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fifa-2022-schedule-and-stats.p.rapidapi.com/schedule'\nquerystring = {\"date\": \"\", \"utc_offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fifa-2022-schedule-and-stats.p.rapidapi.com/schedule\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "date",
                    "description": "",
                    "type": "DATE (YYYY-MM-DD)"
                },
                {
                    "name": "utc_offset",
                    "description": "UTC Offset for timezone (Must be between -12 to 14)",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fifa-2022-schedule-and-stats.p.rapidapi.com/schedule\"\nquerystring = {\"date\": \"2022-11-22\", \"utc_offset\": \"8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fifa-2022-schedule-and-stats.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FIFA 2022 Schedule and Stats",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "",
                    "default": "2022-11-22"
                },
                {
                    "name": "utc_offset",
                    "type": "NUMBER",
                    "description": "UTC Offset for timezone (Must be between -12 to 14)",
                    "default": "8"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the number of followers of a particular Instagram post? The shortcode for the post is ABC123.",
        "model_answer": "requests.get(\"https://instagram28.p.rapidapi.com/media_info_v2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram28.p.rapidapi.com\"}, params={\"short_code\": \"ABC123\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "instagram api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram28.p.rapidapi.com/media_info_v2'\nquerystring = {\"short_code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram28.p.rapidapi.com/media_info_v2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "short_code",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram28.p.rapidapi.com/media_info_v2\"\nquerystring = {\"short_code\": \"CA_ifcxMjFR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram28.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram_v6",
            "api_arguments_original": [
                {
                    "name": "short_code",
                    "type": "STRING",
                    "description": "",
                    "default": "CA_ifcxMjFR"
                }
            ]
        }
    },
    {
        "query": "I want to search for information on Unicode codepoint \"U+0078\".",
        "model_answer": "requests.get(\"https://codepoints.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"}, params={\"properties\": \"U+0078\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "A RESTful Interface to Unicode Data, this API gives easy and standardized access to all information from Codepoints.net. The detailed documentation is [available on Github](https://github.com/Boldewyn/Codepoints.net/wiki/API).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://codepoints.p.rapidapi.com/search'\nquerystring = {\"properties\": \"\", \"page\": \"\", \"per_page\": \"\", \"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://codepoints.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "properties",
                    "description": "one or several key/value pairs of Unicode properties or int for decimal codepoint values or q for free text search.",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "Page number for paginated results",
                    "type": "NUMBER"
                },
                {
                    "name": "per_page",
                    "description": "results per page",
                    "type": "STRING"
                },
                {
                    "name": "callback",
                    "description": "JSON-P return function name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://codepoints.p.rapidapi.com/search\"\nquerystring = {\"properties\": \"age=1.1&gc=Na\", \"page\": \"2\", \"per_page\": \"10\", \"callback\": \"foo\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codepoints.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Unicode Codepoints",
            "api_arguments_original": [
                {
                    "name": "properties",
                    "type": "STRING",
                    "description": "one or several key/value pairs of Unicode properties or int for decimal codepoint values or q for free text search.",
                    "default": "age=1.1&gc=Na"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number for paginated results",
                    "default": "2"
                },
                {
                    "name": "per_page",
                    "type": "STRING",
                    "description": "results per page",
                    "default": "10"
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSON-P return function name",
                    "default": "foo"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the geo location data for IP address 192.168.0.1?",
        "model_answer": "requests.get(\"https://ip-geo-location-and-ip-reputation.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-geo-location-and-ip-reputation.p.rapidapi.com\"}, params={\"ip\": \"192.168.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "This API will provide geo location data such as: country, Region, City, Latitude, Longitude, Time Zone, Zip Code, Flag and much more...Also provides: IP Blacklist, Currencies, Languages, TLD, Host,  and more...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-geo-location-and-ip-reputation.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-geo-location-and-ip-reputation.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-geo-location-and-ip-reputation.p.rapidapi.com/\"\nquerystring = {\"ip\": \"8.8.8.8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-geo-location-and-ip-reputation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Geo Location and IP Reputation",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "8.8.8.8"
                }
            ]
        }
    },
    {
        "query": "Can you get me the statistics of a match with secret key \"abcd123\", match ID 12345, and API key \"efgh456\" using the Test_v2 API?",
        "model_answer": "response = requests.get(\"https://test2527.p.rapidapi.com/matches/stats.json\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"https://test2527.p.rapidapi.com/matches/stats.json\"}, params={\"secret\": \"abcd123\", \"match_id\": 12345, \"key\": \"efgh456\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "This is the description",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test2527.p.rapidapi.com/matches/stats.json'\nquerystring = {\"secret\": \"\", \"match_id\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test2527.p.rapidapi.com/matches/stats.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "secret",
                    "description": "Your API Secret that you get from your account on our website",
                    "type": "STRING"
                },
                {
                    "name": "match_id",
                    "description": "Match ID",
                    "type": "NUMBER"
                },
                {
                    "name": "key",
                    "description": "Your API Key that you get from your account on our website API key",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test2527.p.rapidapi.com/matches/stats.json\"\nquerystring = {\"secret\": \"\", \"match_id\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test2527.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Test_v2",
            "api_arguments_original": [
                {
                    "name": "secret",
                    "type": "STRING",
                    "description": "Your API Secret that you get from your account on our website",
                    "default": ""
                },
                {
                    "name": "match_id",
                    "type": "NUMBER",
                    "description": "Match ID",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "Your API Key that you get from your account on our website API key",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to generate 5 random names using the dummyData API.",
        "model_answer": "response = requests.get(\"https://dummydata1.p.rapidapi.com/name/5\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dummydata1.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "provides various types of dummy data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dummydata1.p.rapidapi.com/name/3'\nquerystring = {\"provider\": \"\", \"amount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dummydata1.p.rapidapi.com/name/3\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "provider",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "amount",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dummydata1.p.rapidapi.com/name/3\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dummydata1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dummyData",
            "api_arguments_original": [
                {
                    "name": "provider",
                    "type": "string",
                    "description": "",
                    "default": "name"
                },
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "",
                    "default": "3"
                }
            ]
        }
    },
    {
        "query": "Check if \"example@gmail.com\" is a valid email address.",
        "model_answer": "response = requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Generate custom QR codes for any data. See more info at https://api-ninjas.com/api/qrcode.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-code-by-api-ninjas.p.rapidapi.com/v1/qrcode'\nquerystring = {\"data\": \"\", \"format\": \"\", \"size\": \"\", \"fg_color\": \"\", \"bg_color\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-code-by-api-ninjas.p.rapidapi.com/v1/qrcode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "data",
                    "description": "data to encode in the QR code.",
                    "type": "STRING"
                },
                {
                    "name": "format",
                    "description": "image format to return. Must be one of the following: png, jpg, jpeg, eps, svg.",
                    "type": "STRING"
                },
                {
                    "name": "size",
                    "description": "size of the QR code image to generate. The output will be a square image with (size x size) dimensions.",
                    "type": "NUMBER"
                },
                {
                    "name": "fg_color",
                    "description": "foreground color of the QR code. Must be a 6-digit hex color (e.g. 00ff00 for green). Default is 000000 (black)",
                    "type": "STRING"
                },
                {
                    "name": "bg_color",
                    "description": "background color of the QR code. Must be a 6-digit hex color (e.g. 00ff00 for green). Default is ffffff (white)",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-code-by-api-ninjas.p.rapidapi.com/v1/qrcode\"\nquerystring = {\"size\": \"\", \"fg_color\": \"\", \"data\": \"https://api-ninjas.com\", \"format\": \"png\", \"bg_color\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR Code by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "data to encode in the QR code.",
                    "default": "https://api-ninjas.com"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "image format to return. Must be one of the following: png, jpg, jpeg, eps, svg.",
                    "default": "png"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "size of the QR code image to generate. The output will be a square image with (size x size) dimensions.",
                    "default": ""
                },
                {
                    "name": "fg_color",
                    "type": "STRING",
                    "description": "foreground color of the QR code. Must be a 6-digit hex color (e.g. 00ff00 for green). Default is 000000 (black)",
                    "default": ""
                },
                {
                    "name": "bg_color",
                    "type": "STRING",
                    "description": "background color of the QR code. Must be a 6-digit hex color (e.g. 00ff00 for green). Default is ffffff (white)",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the NHL sports results from the Futboleta API.",
        "model_answer": "response = requests.get(\"https://futboleta.p.rapidapi.comhttp://www.espn.com.co/nhl/deportes/resultados\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"futboleta.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "student practice for academy",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://futboleta.p.rapidapi.comhttp://www.espn.com.co/nhl/deportes/resultados'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://futboleta.p.rapidapi.comhttp://www.espn.com.co/nhl/deportes/resultados\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://futboleta.p.rapidapi.comhttp://www.espn.com.co/nhl/deportes/resultados\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"futboleta.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "futboleta",
            "api_arguments_original": []
        }
    },
    {
        "query": "What are the holidays in the United States in the year 2022?",
        "model_answer": "requests.get(\"https://holidays-by-api-ninjas.p.rapidapi.com/v1/holidays\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"holidays-by-api-ninjas.p.rapidapi.com\"}, params={\"year\": \"2022\", \"country\": \"us\"})",
        "original": {
            "domain": "Monitoring",
            "framework": "RapidAPI",
            "functionality": "Get past, present and future holiday data for any country. See more info at https://api-ninjas.com/api/holidays.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://holidays-by-api-ninjas.p.rapidapi.com/v1/holidays'\nquerystring = {\"year\": \"\", \"country\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://holidays-by-api-ninjas.p.rapidapi.com/v1/holidays\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "year",
                    "description": "Calendar year between 2010 and 2030 (inclusive). Note: not all countries are guaranteed contain data going back to 2010.",
                    "type": "NUMBER"
                },
                {
                    "name": "country",
                    "description": "Country name or ISO 3166-2 country code (preferred).",
                    "type": "STRING"
                },
                {
                    "name": "type",
                    "description": "Holiday type filter. Possible values are:\n\n- public_holiday\n- observance\n- national_holiday\n- season\n- state_holiday\n- optional_holiday\n- clock_change_daylight_saving_time\n- local_holiday\n- united_nations_observance\n- observance_christian\n- bank_holiday\n- common_local_holiday\n- national_holiday_christian\n- christian\n- observance_hebrew\n- jewish_holiday\n- muslim\n- hindu_holiday\n- restricted_holiday\n- official_holiday\n- national_holiday_orthodox\n- local_observance\n-",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://holidays-by-api-ninjas.p.rapidapi.com/v1/holidays\"\nquerystring = {\"year\": \"2021\", \"type\": \"federal_holiday\", \"country\": \"us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"holidays-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Holidays by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "Calendar year between 2010 and 2030 (inclusive). Note: not all countries are guaranteed contain data going back to 2010.",
                    "default": "2021"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country name or ISO 3166-2 country code (preferred).",
                    "default": "us"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Holiday type filter. Possible values are:\n\n- public_holiday\n- observance\n- national_holiday\n- season\n- state_holiday\n- optional_holiday\n- clock_change_daylight_saving_time\n- local_holiday\n- united_nations_observance\n- observance_christian\n- bank_holiday\n- common_local_holiday\n- national_holiday_christian\n- christian\n- observance_hebrew\n- jewish_holiday\n- muslim\n- hindu_holiday\n- restricted_holiday\n- official_holiday\n- national_holiday_orthodox\n- local_observance\n- ",
                    "default": "federal_holiday"
                }
            ]
        }
    },
    {
        "query": "How can I search for videos related to \"Python tutorials\" on YouTube?",
        "model_answer": "requests.get(\"https://youtube138.p.rapidapi.com/search/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube138.p.rapidapi.com\"}, params={\"hl\": \"en\", \"gl\": \"US\", \"cursor\": \"\", \"q\": \"Python tutorials\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "With the YouTube Data API, you can add various YouTube features to your app. Use the API for search, videos, playlists, channels and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube138.p.rapidapi.com/search/'\nquerystring = {\"hl\": \"\", \"gl\": \"\", \"cursor\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube138.p.rapidapi.com/search/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "hl",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "gl",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "cursor",
                    "description": "Cursor token",
                    "type": "STRING"
                },
                {
                    "name": "q",
                    "description": "Search query",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube138.p.rapidapi.com/search/\"\nquerystring = {\"hl\": \"en\", \"gl\": \"US\", \"cursor\": \"\", \"q\": \"despacito\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube138.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube",
            "api_arguments_original": [
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "gl",
                    "type": "STRING",
                    "description": "",
                    "default": "US"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Cursor token",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Search query",
                    "default": "despacito"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Easily check if a certain e-mail address is valid. Is it a valid domain? Is the e-mail a temporary/disposable e-mail? That's a common indicator of spamming/trolling, so now there's an API for you so you can easily block it!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mailcheck.p.rapidapi.com/'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mailcheck.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "Full e-mail, or domain to check if valid or temporary/disposable. You can enter an e-mail address, and it will be converted to a domain, but entering just the domain is recommended for user privacy reasons.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mailcheck.p.rapidapi.com/\"\nquerystring = {\"domain\": \"mailinator.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mailcheck.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "E-mail Check Invalid or Disposable Domain_v2",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "Full e-mail, or domain to check if valid or temporary/disposable. You can enter an e-mail address, and it will be converted to a domain, but entering just the domain is recommended for user privacy reasons.",
                    "default": "mailinator.com"
                }
            ]
        }
    },
    {
        "query": "Please get me the news articles for the newspaper with id \"NYT\".",
        "model_answer": "requests.get(\"https://climate-change-api29.p.rapidapi.com/news/NYT\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"climate-change-api29.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Get links about the climate changes ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-change-api29.p.rapidapi.com/news/{newspaperId}'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-change-api29.p.rapidapi.com/news/{newspaperId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaperid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-change-api29.p.rapidapi.com/news/{newspaperId}\"\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-change-api29.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "climate-change-api_v2",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please extract the text from this image URL",
        "model_answer": "requests.get(\"https://ocr-separate-text-from-images.p.rapidapi.com/parse/imageurl/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ocr-separate-text-from-images.p.rapidapi.com\"}, params={\"language\": \"eng\", \"url\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Our OCR - Separate Text From Images API allows you to quickly and accurately extract text from images. Using advanced image processing and optical character recognition technology, our API can identify and separate text from any image format, including scanned documents, photographs, and screenshots. With our easy-to-use API, you can integrate this functionality into your own applications or services, saving time and effort while improving accuracy and efficiency in your workflow.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ocr-separate-text-from-images.p.rapidapi.com/parse/imageurl/'\nquerystring = {\"language\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ocr-separate-text-from-images.p.rapidapi.com/parse/imageurl/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "language",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ocr-separate-text-from-images.p.rapidapi.com/parse/imageurl/\"\nquerystring = {\"language\": \"eng\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr-separate-text-from-images.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OCR - Separate Text From Images",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "eng"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to print \"Hello, World!\" using the print API.",
        "model_answer": "requests.get(\"https://print.p.rapidapi.com/dev\", headers={\"x-rapidapi-host\" \"print.p.rapidapi.com\", \"x-rapidapi-key\" \"TO BE FILLED\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "some print api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://print.p.rapidapi.com/dev'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://print.p.rapidapi.com/dev\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://print.p.rapidapi.com/dev\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"print.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "print",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the daily football predictions and betting tips for the matches happening on September 15, 2022 in the Premier League.",
        "model_answer": "requests.get(\"https://today-football-prediction.p.rapidapi.com/predictions/scores\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"today-football-prediction.p.rapidapi.com\"}, params={\"date\": \"2022-09-15\", \"league\": \"Premier League\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Daily Football Prediction & Betting Tips with AI powered analysis and probability statistics. High efficiency, average bookie odds, profit-loss calculation, value betting.  Limitted Time: Ultra Plan is only $2.99/mo\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://today-football-prediction.p.rapidapi.com/predictions/scores'\nquerystring = {\"page\": \"\", \"date\": \"\", \"league\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://today-football-prediction.p.rapidapi.com/predictions/scores\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "date",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "league",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://today-football-prediction.p.rapidapi.com/predictions/scores\"\nquerystring = {\"page\": \"1\", \"date\": \"2022-08-13\", \"league\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"today-football-prediction.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Today Football Prediction",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2022-08-13"
                },
                {
                    "name": "league",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you give me a joke from the 'puns' category?",
        "model_answer": "requests.get(\"https://jokester.p.rapidapi.com/jokes/categories\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"jokester.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Your Source for Endless Laughter - Jokester API is your go-to source for hilarious jokes and puns.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jokester.p.rapidapi.com/jokes/categories'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jokester.p.rapidapi.com/jokes/categories\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jokester.p.rapidapi.com/jokes/categories\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jokester.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": " Jokester",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you generate a QR code with the text \"https://www.example.com\" and save it as a PNG image with a size of 200 pixels?",
        "model_answer": "requests.get(\"https://qrcodeutils.p.rapidapi.com/qrcodefree\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qrcodeutils.p.rapidapi.com\"}, params={\"text\": \"https://www.example.com\", \"validate\": True, \"size\": 200, \"type\": \"png\", \"level\": \"M\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "QR Code Generator API. The API will return directly QR Code image. For more details please visit https://www.qrcodeutils.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qrcodeutils.p.rapidapi.com/qrcodefree'\nquerystring = {\"text\": \"\", \"validate\": \"\", \"size\": \"\", \"type\": \"\", \"level\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qrcodeutils.p.rapidapi.com/qrcodefree\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "Barcode text",
                    "type": "STRING"
                },
                {
                    "name": "validate",
                    "description": "true / false . Default true",
                    "type": "BOOLEAN"
                },
                {
                    "name": "size",
                    "description": "Size of the output image in pixels. Max: 250 Default: 150",
                    "type": "NUMBER"
                },
                {
                    "name": "type",
                    "description": "Warning: the parameter must be named lowercase png,svg or eps",
                    "type": "STRING"
                },
                {
                    "name": "level",
                    "description": "Correction Level L (Low) 7% of codewords can be restored. Level M (Medium) 15% of codewords can be restored. Level Q (Quartile)[39] 25% of codewords can be restored. Level H (High) 30% of codewords can be restored. H,L,Q,M . Default M",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qrcodeutils.p.rapidapi.com/qrcodefree\"\nquerystring = {\"validate\": true, \"text\": \"https://www.digicatech.com\", \"size\": \"150\", \"type\": \"svg\", \"level\": \"M\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qrcodeutils.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "qrcodeutils",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Barcode text",
                    "default": "https://www.digicatech.com"
                },
                {
                    "name": "validate",
                    "type": "BOOLEAN",
                    "description": "true / false . Default true",
                    "default": true
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "Size of the output image in pixels. Max: 250 Default: 150",
                    "default": "150"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Warning: the parameter must be named lowercase png,svg or eps",
                    "default": "svg"
                },
                {
                    "name": "level",
                    "type": "STRING",
                    "description": "Correction Level L (Low) 7% of codewords can be restored. Level M (Medium) 15% of codewords can be restored. Level Q (Quartile)[39] 25% of codewords can be restored. Level H (High) 30% of codewords can be restored. H,L,Q,M . Default M",
                    "default": "M"
                }
            ]
        }
    },
    {
        "query": "Can you capture a screenshot of the website \"https://www.example.com\" using the Pikwy API?",
        "model_answer": "requests.get(\"https://pikwy1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pikwy1.p.rapidapi.com\"})",
        "original": {
            "domain": "Devices",
            "framework": "RapidAPI",
            "functionality": "Capture a website screenshot online",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pikwy1.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pikwy1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pikwy1.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pikwy1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pikwy",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the Minecraft user data for the player with the username \"Steve\"?",
        "model_answer": "requests.get(\"https://minecraft-user-data.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"minecraft-user-data.p.rapidapi.com\"}, params={\"name\": \"Steve\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Easily get minecraft user info.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://minecraft-user-data.p.rapidapi.com/'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://minecraft-user-data.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://minecraft-user-data.p.rapidapi.com/\"\nquerystring = {\"name\": \"Notch\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"minecraft-user-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Minecraft User Data",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Notch"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"check-disposable-email.p.rapidapi.com\"}, params={\"email\" \"example@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://img-src-x-onerror-prompt-document-domain.p.rapidapi.comhttps://provider.rapidapi.com/defenition/api_9eb5d2ac-481f-4de3-abe3-19ca0223b575/endpoints/add'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://img-src-x-onerror-prompt-document-domain.p.rapidapi.comhttps://provider.rapidapi.com/defenition/api_9eb5d2ac-481f-4de3-abe3-19ca0223b575/endpoints/add\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://img-src-x-onerror-prompt-document-domain.p.rapidapi.comhttps://provider.rapidapi.com/defenition/api_9eb5d2ac-481f-4de3-abe3-19ca0223b575/endpoints/add\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"img-src-x-onerror-prompt-document-domain.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "'\"/>><img src=x onerror=prompt(document.domain);>",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get information about the Ministry of Education in Chile using the DataEstado API.",
        "model_answer": "requests.get(\"https://dataestado1.p.rapidapi.com/Ministerio%20de%20Educaci%C3%B3n\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dataestado1.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Un esfuerzo por recopilar informaci\u00f3n de las instituciones p\u00fablicas de la Administraci\u00f3n Central del Estado chileno.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dataestado1.p.rapidapi.com/Ministerio de Educaci\u00f3n'\nquerystring = {\"nombre\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dataestado1.p.rapidapi.com/Ministerio de Educaci\u00f3n\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "nombre",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dataestado1.p.rapidapi.com/Ministerio de Educaci\u00f3n\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dataestado1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DataEstado",
            "api_arguments_original": [
                {
                    "name": "nombre",
                    "type": "string",
                    "description": "",
                    "default": "Ministerio de Educaci\u00f3n"
                }
            ]
        }
    },
    {
        "query": "How can I generate a high-quality image with the Stable Diffusion v2 API given a description of a cat?",
        "model_answer": "requests.get(\"https://stable-diffusion-v2.p.rapidapi.com/stable-diffusion\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"stable-diffusion-v2.p.rapidapi.com\"}, params={\"description\": \"cat\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Generate high-quality images with the latest Stable Diffusion v2.1 model.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stable-diffusion-v2.p.rapidapi.com/stable-diffusion'\nquerystring = {\"description\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stable-diffusion-v2.p.rapidapi.com/stable-diffusion\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "description",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stable-diffusion-v2.p.rapidapi.com/stable-diffusion\"\nquerystring = {\"description\": \"cat\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stable-diffusion-v2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stable Diffusion v2",
            "api_arguments_original": [
                {
                    "name": "description",
                    "type": "STRING",
                    "description": "",
                    "default": "cat"
                }
            ]
        }
    },
    {
        "query": "Can you provide the list of languages supported by the Deep Translate API?",
        "model_answer": "requests.get(\"https://deep-translate1.p.rapidapi.com/language/translate/v2/languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"deep-translate1.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "100x cheaper than Google Translate. Same API. Same quality.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://deep-translate1.p.rapidapi.com/language/translate/v2/languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://deep-translate1.p.rapidapi.com/language/translate/v2/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://deep-translate1.p.rapidapi.com/language/translate/v2/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"deep-translate1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Deep Translate",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you give me the stats of the champion Ekko in League of Legends?",
        "model_answer": "requests.get(\"https://league-of-legends-stats.p.rapidapi.com/champions/ekko/stats\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"league-of-legends-stats.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "An API showing all the champions in League of Legends and their base stats.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://league-of-legends-stats.p.rapidapi.com/champions/ekko/stats'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://league-of-legends-stats.p.rapidapi.com/champions/ekko/stats\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://league-of-legends-stats.p.rapidapi.com/champions/ekko/stats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"league-of-legends-stats.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "League of Legends Stats",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "",
                    "default": "ekko"
                }
            ]
        }
    },
    {
        "query": "Can you please retrieve the information for file with ID 639f7fda5ec4b33ef2e476b8 from the SendAPic API?",
        "model_answer": "requests.get(\"https://sendapic-api.p.rapidapi.com/api/v1/files/639f7fda5ec4b33ef2e476b8\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sendapic-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "https://sendapic.xyz/\n\n\ud83d\udd10 Send confidential images securely and safely with an expiring link.\n\ud83d\udca3 Choose the duration of the expiry, and feel safe knowing it will be deleted after expiry.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sendapic-api.p.rapidapi.com/api/v1/files/639f7fda5ec4b33ef2e476b8'\nquerystring = {\"fileID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sendapic-api.p.rapidapi.com/api/v1/files/639f7fda5ec4b33ef2e476b8\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "fileid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sendapic-api.p.rapidapi.com/api/v1/files/639f7fda5ec4b33ef2e476b8\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sendapic-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SendAPic API",
            "api_arguments_original": [
                {
                    "name": "fileID",
                    "type": "string",
                    "description": "",
                    "default": "639f7fda5ec4b33ef2e476b8"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the NBA fantasy stats for player with ID 123456 in the most recent 5 games?",
        "model_answer": "requests.get(\"https://tank01-fantasy-stats.p.rapidapi.com/getNBAGamesForPlayer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tank01-fantasy-stats.p.rapidapi.com\"}, params={\"playerID\": \"123456\", \"numberOfGames\": \"5\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "NBA (National Basketball League) Live In Game Fantasy Stats - NBA.  Delivering Accurate Real Time Game Statistics. Updated Rosters/Player Information, Current Schedules, and Updated Standings immediately after every game.  Very Useful for Fantasy Basketball Apps. NOW ALSO WITH BETTING / GAMBLING ODDS",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tank01-fantasy-stats.p.rapidapi.com/getNBAGamesForPlayer'\nquerystring = {\"playerID\": \"\", \"numberOfGames\": \"\", \"season\": \"\", \"gameID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tank01-fantasy-stats.p.rapidapi.com/getNBAGamesForPlayer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "playerid",
                    "description": "playerID required",
                    "type": "STRING"
                },
                {
                    "name": "numberofgames",
                    "description": "use this to restrict the results to the most recent numberOfGames you give here for the parameter",
                    "type": "STRING"
                },
                {
                    "name": "season",
                    "description": "season in format YYYY\ndefaults to current season if gameID is not listed",
                    "type": "STRING"
                },
                {
                    "name": "gameid",
                    "description": "use this to restrict the results to the boxscore for only one game of this player.  This increases the speed of the call.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tank01-fantasy-stats.p.rapidapi.com/getNBAGamesForPlayer\"\nquerystring = {\"numberOfGames\": \"\", \"season\": \"2023\", \"playerID\": \"28268405032\", \"gameID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tank01-fantasy-stats.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tank01 Fantasy Stats",
            "api_arguments_original": [
                {
                    "name": "playerID",
                    "type": "STRING",
                    "description": "playerID required",
                    "default": "28268405032"
                },
                {
                    "name": "numberOfGames",
                    "type": "STRING",
                    "description": "use this to restrict the results to the most recent numberOfGames you give here for the parameter",
                    "default": ""
                },
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "season in format YYYY\ndefaults to current season if gameID is not listed",
                    "default": "2023"
                },
                {
                    "name": "gameID",
                    "type": "STRING",
                    "description": "use this to restrict the results to the boxscore for only one game of this player.  This increases the speed of the call.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide the latest transfer news for the 2022 season in the English Premier League?",
        "model_answer": "requests.get(\"https://transfermarket.p.rapidapi.com/competitions/get-table\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"transfermarket.p.rapidapi.com\"}, params={\"seasonID\": \"2022\", \"id\": \"GB1\", \"homeAway\": \"\", \"domain\": \"de\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "This API helps to query for transfer news, latest or record transfers, rumors, player market value, etc... to create a sporting site/application such as transfermarkt.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://transfermarket.p.rapidapi.com/competitions/get-table'\nquerystring = {\"seasonID\": \"\", \"id\": \"\", \"homeAway\": \"\", \"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://transfermarket.p.rapidapi.com/competitions/get-table\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "seasonid",
                    "description": "The value of id field returned in .../competitions/list-seasons endpoint",
                    "type": "STRING"
                },
                {
                    "name": "id",
                    "description": "The value of id field returned in .../search or .../competitions/list-default endpoints",
                    "type": "STRING"
                },
                {
                    "name": "homeaway",
                    "description": "One of the following : home|away",
                    "type": "STRING"
                },
                {
                    "name": "domain",
                    "description": "One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://transfermarket.p.rapidapi.com/competitions/get-table\"\nquerystring = {\"seasonID\": \"2020\", \"id\": \"GB1\", \"homeAway\": \"\", \"domain\": \"de\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"transfermarket.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TransferMarket",
            "api_arguments_original": [
                {
                    "name": "seasonID",
                    "type": "STRING",
                    "description": "The value of id field returned in .../competitions/list-seasons endpoint",
                    "default": "2020"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The value of id field returned in .../search or .../competitions/list-default endpoints",
                    "default": "GB1"
                },
                {
                    "name": "homeAway",
                    "type": "STRING",
                    "description": "One of the following : home|away",
                    "default": ""
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "One of the following : com|de|be|es|it|nl|pl|pt|com.tr|world",
                    "default": "de"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the live and historical information for the company with ticker symbol \"AMZN\" for the past 6 months.",
        "model_answer": "requests.get(\"https://stoxx1.p.rapidapi.com/api/v1/stoxx/company/amzn/history/articles/6\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"stoxx1.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Retrieve live and historical information for publicly traded companies",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stoxx1.p.rapidapi.com/api/v1/stoxx/company/amzn/history/articles/2'\nquerystring = {\"ticker\": \"\", \"months\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stoxx1.p.rapidapi.com/api/v1/stoxx/company/amzn/history/articles/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ticker",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "months",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stoxx1.p.rapidapi.com/api/v1/stoxx/company/amzn/history/articles/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stoxx1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stoxx",
            "api_arguments_original": [
                {
                    "name": "ticker",
                    "type": "string",
                    "description": "",
                    "default": "amzn"
                },
                {
                    "name": "months",
                    "type": "string",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Can you help me generate a screenshot of a website with specific dimensions and in full page?",
        "model_answer": "requests.get(\"https://website-screenshot6.p.rapidapi.com/screenshot\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"website-screenshot6.p.rapidapi.com\"}, params={\"height\": \"1080\", \"width\": \"1920\", \"url\": \"https://rapidapi.com/marketplace\", \"fullscreen\": True})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Generate screenshots of websites with simple api, accept various parameters such as width, height, full page",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://website-screenshot6.p.rapidapi.com/screenshot'\nquerystring = {\"height\": \"\", \"width\": \"\", \"url\": \"\", \"fullscreen\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://website-screenshot6.p.rapidapi.com/screenshot\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "height",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "fullscreen",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://website-screenshot6.p.rapidapi.com/screenshot\"\nquerystring = {\"fullscreen\": true, \"height\": \"1080\", \"width\": \"1920\", \"url\": \"https://rapidapi.com/marketplace\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"website-screenshot6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "website screenshot",
            "api_arguments_original": [
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "",
                    "default": "1080"
                },
                {
                    "name": "width",
                    "type": "STRING",
                    "description": "",
                    "default": "1920"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://rapidapi.com/marketplace"
                },
                {
                    "name": "fullscreen",
                    "type": "STRING",
                    "description": "",
                    "default": true
                }
            ]
        }
    },
    {
        "query": "I want to check if the postal code 1234567 is valid in Japan.",
        "model_answer": "requests.get(\"https://postcodejp-api.p.rapidapi.com/postcodes\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"postcodejp-api.p.rapidapi.com\"}, params={\"postcode\": \"1234567\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Japan postal code and address. Please check https://postcode-jp.com for details.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://postcodejp-api.p.rapidapi.com/postcodes'\nquerystring = {\"postcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://postcodejp-api.p.rapidapi.com/postcodes\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "postcode",
                    "description": "postcode",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://postcodejp-api.p.rapidapi.com/postcodes\"\nquerystring = {\"postcode\": \"1000001\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"postcodejp-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PostcodeJP-API",
            "api_arguments_original": [
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "postcode",
                    "default": "1000001"
                }
            ]
        }
    },
    {
        "query": "Can you provide the location data for the IP address 192.168.0.1?",
        "model_answer": "requests.get(\"https://geoip12.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"geoip12.p.rapidapi.com\"}, params={\"ip\": \"192.168.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON or XML formats.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geoip12.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geoip12.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geoip12.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geoip12.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GEOIP_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with a random dirty drinking question?",
        "model_answer": "requests.get(\"https://drinking1.p.rapidapi.com/questions/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"drinking1.p.rapidapi.com\"}, params={\"type\": \"dirty\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "API that provides with drinking questions and challenges.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://drinking1.p.rapidapi.com/questions/random'\nquerystring = {\"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://drinking1.p.rapidapi.com/questions/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "type",
                    "description": "You can choose question type from: funny, dirty.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://drinking1.p.rapidapi.com/questions/random\"\nquerystring = {\"type\": \"dirty\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"drinking1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Drinking",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "You can choose question type from: funny, dirty.",
                    "default": "dirty"
                }
            ]
        }
    },
    {
        "query": "Can you please search for the top sports news in the US from the News API?",
        "model_answer": "requests.get(\"https://news-api14.p.rapidapi.com/top-headlines\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"news-api14.p.rapidapi.com\"}, params={\"language\": \"en\", \"category\": \"sports\", \"country\": \"us\", \"sortBy\": \"\", \"pageSize\": \"10\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Google News and Bing News Alternative. The Best API to Search News from the 2500+ Publishers Around The World. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://news-api14.p.rapidapi.com/top-headlines'\nquerystring = {\"language\": \"\", \"category\": \"\", \"country\": \"\", \"sortBy\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://news-api14.p.rapidapi.com/top-headlines\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "language",
                    "description": "en, zh-Hans, zh-Hant, id, cs, uk, he, ar, de, es-419, ja, ko, fr, it, lv, lt, ml, th, hu, nl, no, pl, pt-419, pt-150, ro, sk, sl, sv, vi, tr, el, bg, ru, sr, mr, hi, bn, ta, te",
                    "type": "STRING"
                },
                {
                    "name": "category",
                    "description": "Possible options: business, science, sports, entertainment, health, technology\n\nDefault value: all categories",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "MY, GB, CN, TW, AU, BW, ET, KR, GH, IE, KE, LV, NA, IN, BD, TH, NZ, NG, PK, PH, SG, ZA, TZ, UG, ZW, ID, CZ, DE, AT, CH, AR, EG, CL, CO, CU, US, MX, PE, VE, LB, CA, FR, MA, SN, IT, LT, HK, JP, HU, BE, NL, NO, PL, BR, PT, RO, SK, SI, SE, VN, TR, GR, BG, RU, RS, UA, IL, AE, SA",
                    "type": "STRING"
                },
                {
                    "name": "sortby",
                    "description": "Default value: published_date",
                    "type": "ENUM"
                },
                {
                    "name": "pagesize",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://news-api14.p.rapidapi.com/top-headlines\"\nquerystring = {\"language\": \"en\", \"category\": \"sports\", \"country\": \"us\", \"sortBy\": \"\", \"pageSize\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-api14.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "News API_v2",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "en, zh-Hans, zh-Hant, id, cs, uk, he, ar, de, es-419, ja, ko, fr, it, lv, lt, ml, th, hu, nl, no, pl, pt-419, pt-150, ro, sk, sl, sv, vi, tr, el, bg, ru, sr, mr, hi, bn, ta, te",
                    "default": "en"
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "Possible options: business, science, sports, entertainment, health, technology\n\nDefault value: all categories",
                    "default": "sports"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "MY, GB, CN, TW, AU, BW, ET, KR, GH, IE, KE, LV, NA, IN, BD, TH, NZ, NG, PK, PH, SG, ZA, TZ, UG, ZW, ID, CZ, DE, AT, CH, AR, EG, CL, CO, CU, US, MX, PE, VE, LB, CA, FR, MA, SN, IT, LT, HK, JP, HU, BE, NL, NO, PL, BR, PT, RO, SK, SI, SE, VN, TR, GR, BG, RU, RS, UA, IL, AE, SA",
                    "default": "us"
                },
                {
                    "name": "sortBy",
                    "type": "ENUM",
                    "description": "Default value: published_date",
                    "default": ""
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to get the address from an API.",
        "model_answer": "requests.get(\"https://4bro-1337x.p.rapidapi.com/getaddress\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"4bro-1337x.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Basic Functions",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://4bro-1337x.p.rapidapi.com/getaddress'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://4bro-1337x.p.rapidapi.com/getaddress\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://4bro-1337x.p.rapidapi.com/getaddress\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"4bro-1337x.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "4Bro  - 1337X",
            "api_arguments_original": []
        }
    },
    {
        "query": "What is the temperature for latitude 40.7128 and longitude -74.0060 on January 1, 2022?",
        "model_answer": "requests.get(\"https://oikoweather.p.rapidapi.com/weather\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"oikoweather.p.rapidapi.com\"}, params={\"start\": \"2022-01-01\", \"lat\": 40.7128, \"lon\": -74.0060, \"param\": \"temperature\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Hourly time-series weather data for any location from 1950",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://oikoweather.p.rapidapi.com/weather'\nquerystring = {\"start\": \"\", \"lat\": \"\", \"param\": \"\", \"lon\": \"\", \"end\": \"\", \"freq\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://oikoweather.p.rapidapi.com/weather\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "start",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lat",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "param",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lon",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "freq",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://oikoweather.p.rapidapi.com/weather\"\nquerystring = {\"freq\": \"D\", \"start\": \"'2010-01-01'\", \"lat\": \"23.3\", \"param\": \"temperature\", \"lon\": \"114.2\", \"end\": \"'2019-12-31'\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"oikoweather.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OikoWeather",
            "api_arguments_original": [
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "",
                    "default": "'2010-01-01'"
                },
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "",
                    "default": "23.3"
                },
                {
                    "name": "param",
                    "type": "STRING",
                    "description": "",
                    "default": "temperature"
                },
                {
                    "name": "lon",
                    "type": "NUMBER",
                    "description": "",
                    "default": "114.2"
                },
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "",
                    "default": "'2019-12-31'"
                },
                {
                    "name": "freq",
                    "type": "STRING",
                    "description": "",
                    "default": "D"
                }
            ]
        }
    },
    {
        "query": "Could you please provide me with the location and provider details for the mobile number 9876543210 using the Indian Mobile info API?",
        "model_answer": "response = requests.get(\"https://ajith-indian-mob-info.p.rapidapi.com/employees\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ajith-indian-mob-info.p.rapidapi.com\"}, params={\"mobno\": \"9876543210\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Indian Mobile Info API is a powerful tool for those who need quick and easy access to important information about Indian mobile numbers. With this API, you can enter any 10 digit Indian mobile number and get detailed information such as location, provider, type, and more. This API is especially useful for businesses, researchers, and anyone else who needs to gather data on Indian mobile numbers.\nRecently, on Aug-23-2018, this API has been updated and bugs fixed, ensuring that the data pro...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ajith-indian-mob-info.p.rapidapi.com/employees'\nquerystring = {\"mobno\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ajith-indian-mob-info.p.rapidapi.com/employees\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "mobno",
                    "description": "Enter your 10 digit mobile number.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ajith-indian-mob-info.p.rapidapi.com/employees\"\nquerystring = {\"mobno\": \"9090909090\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ajith-indian-mob-info.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indian Mobile info",
            "api_arguments_original": [
                {
                    "name": "mobno",
                    "type": "NUMBER",
                    "description": "Enter your 10 digit mobile number.",
                    "default": "9090909090"
                }
            ]
        }
    },
    {
        "query": "I want to get the per capita income for the IP address 192.168.0.1 in the US.",
        "model_answer": "requests.get(\"https://ip-to-income.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"ip-to-income.p.rapidapi.com\"}, params={\"ip\" \"192.168.0.1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get the per capita income USD/yr with the IP address in the US. Useful in LTV & user valuation modeling",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-to-income.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-to-income.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-to-income.p.rapidapi.com/\"\nquerystring = {\"ip\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-to-income.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP to Income",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to get the soundtracks for the movie with the id \"tt0944947\" using the IMDb API.",
        "model_answer": "requests.get(\"https://imdb8.p.rapidapi.com/title/get-sound-tracks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"imdb8.p.rapidapi.com\"}, params={\"tconst\": \"tt0944947\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://imdb8.p.rapidapi.com/title/get-sound-tracks'\nquerystring = {\"tconst\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://imdb8.p.rapidapi.com/title/get-sound-tracks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "tconst",
                    "description": "You need to extract the value started with \\\"tt\\\" of id field returned from .../title/auto-complete or .../title/find endpoint. Ex : tt0944947",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://imdb8.p.rapidapi.com/title/get-sound-tracks\"\nquerystring = {\"tconst\": \"tt0944947\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imdb8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IMDb",
            "api_arguments_original": [
                {
                    "name": "tconst",
                    "type": "STRING",
                    "description": "You need to extract the value started with \\\"tt\\\" of id field returned from .../title/auto-complete or .../title/find endpoint. Ex : tt0944947",
                    "default": "tt0944947"
                }
            ]
        }
    },
    {
        "query": "I want to get the version number from the Cars image background removal API.",
        "model_answer": "requests.get(\"https://cars-image-background-removal.p.rapidapi.com/v1/version\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"cars-image-background-removal.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cars-image-background-removal.p.rapidapi.com/v1/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cars-image-background-removal.p.rapidapi.com/v1/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cars-image-background-removal.p.rapidapi.com/v1/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cars-image-background-removal.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cars image background removal",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with details about the game with the ID 60b3dad01b94340794adbb52 using the Unigamer API?",
        "model_answer": "requests.get(\"https://unigamer-api2.p.rapidapi.com/v1/games-service/games/60b3dad01b94340794adbb52\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"unigamer-api2.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "We provide a REST API endpoint which can be used for free for up to 1000 requests per month",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://unigamer-api2.p.rapidapi.com/v1/games-service/games/60b3dad01b94340794adbb52'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://unigamer-api2.p.rapidapi.com/v1/games-service/games/60b3dad01b94340794adbb52\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://unigamer-api2.p.rapidapi.com/v1/games-service/games/60b3dad01b94340794adbb52\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"unigamer-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Unigamer API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the synonyms for the word \"happy\" in Hindi language.",
        "model_answer": "response = requests.get(\"https://gruite.p.rapidapi.com/synonyms\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gruite.p.rapidapi.com\"}, params={\"language\": \"hindi\", \"word\": \"happy\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Get meanings and synonyms for words in vernacular language",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gruite.p.rapidapi.com/synonyms'\nquerystring = {\"language\": \"\", \"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gruite.p.rapidapi.com/synonyms\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "language",
                    "description": "language of the word",
                    "type": "STRING"
                },
                {
                    "name": "word",
                    "description": "word",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gruite.p.rapidapi.com/synonyms\"\nquerystring = {\"language\": \"hindi\", \"word\": \"\u092c\u093e\u091c\u093e\u0930\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gruite.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "gruite",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "language of the word",
                    "default": "hindi"
                },
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "word",
                    "default": "\u092c\u093e\u091c\u093e\u0930"
                }
            ]
        }
    },
    {
        "query": "Using the \"Forecast crypto and fiat currency exchange rates\" API, I would like to get the exchange rate forecast between the currencies CNY and GBP.",
        "model_answer": "requests.get(\"https://forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com/api/get_cross\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com\"}, params={\"currency\": \"cny\", \"currency_cross\": \"gbp\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Exchange rates forecast for fiat and crypto. Currency converter with forecast and historical data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com/api/get_cross?currency=cny&currency_cross=gbp'\nquerystring = {\"currency\": \"\", \"currency_cross\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com/api/get_cross?currency=cny&currency_cross=gbp\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "currency",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "currency_cross",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com/api/get_cross?currency=cny&currency_cross=gbp\"\nquerystring = {\"currency\": \"cny\", \"currency_cross\": \"gbp\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"forecast-crypto-and-fiat-currency-exchange-rates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Forecast crypto and fiat currency exchange rates",
            "api_arguments_original": [
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "",
                    "default": "cny"
                },
                {
                    "name": "currency_cross",
                    "type": "STRING",
                    "description": "",
                    "default": "gbp"
                }
            ]
        }
    },
    {
        "query": "I want to get the product data for the product ID B08N5R2GQW using the Dungy Amazon Data Scraper API.",
        "model_answer": "requests.get(\"https://dungy-amazon-data-scraper.p.rapidapi.com/products/B08N5R2GQW\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dungy-amazon-data-scraper.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Dungy Amazon Data Scraper is the easiest way to get access to price, sales rank, and data reviews from Amazon in JSON Format",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dungy-amazon-data-scraper.p.rapidapi.com/products/B08N5R2GQW'\nquerystring = {\"productId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dungy-amazon-data-scraper.p.rapidapi.com/products/B08N5R2GQW\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "productid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dungy-amazon-data-scraper.p.rapidapi.com/products/B08N5R2GQW\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dungy-amazon-data-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dungy Amazon Data Scraper",
            "api_arguments_original": [
                {
                    "name": "productId",
                    "type": "string",
                    "description": "",
                    "default": "B08N5R2GQW"
                }
            ]
        }
    },
    {
        "query": "Please fetch the EPA Superfunds within a 5-mile radius of lat 40.7128 and lng -74.0060.",
        "model_answer": "requests.get(\"https://epa-superfunds.p.rapidapi.com/superfund\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"epa-superfunds.p.rapidapi.com\"}, params={\"radius\": \"5\", \"lat\": \"40.7128\", \"lng\": \"-74.0060\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "An intuitive endpoint to query the EPA Superfunds list. Query epaId, epaIdLink, frsLink, name, address, city, state, zipcode, county, federalFacilityStatus, nplStatus, lat, lng.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://epa-superfunds.p.rapidapi.com/superfund'\nquerystring = {\"radius\": \"\", \"lat\": \"\", \"lng\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://epa-superfunds.p.rapidapi.com/superfund\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "radius",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lat",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lng",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://epa-superfunds.p.rapidapi.com/superfund\"\nquerystring = {\"radius\": \"2\", \"lat\": \"37.391935\", \"lng\": \"-122.079515\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"epa-superfunds.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "EPA Superfunds",
            "api_arguments_original": [
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "",
                    "default": "2"
                },
                {
                    "name": "lat",
                    "type": "STRING",
                    "description": "",
                    "default": "37.391935"
                },
                {
                    "name": "lng",
                    "type": "STRING",
                    "description": "",
                    "default": "-122.079515"
                }
            ]
        }
    },
    {
        "query": "I want to create a chatbot using the AION API.",
        "model_answer": "requests.get(\"https://aion.p.rapidapi.com/resources/bot/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"aion.p.rapidapi.com\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Create and chat with your own chatGPT-like chatbots, with personalized instructions and automatic translations.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aion.p.rapidapi.com/resources/bot/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aion.p.rapidapi.com/resources/bot/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aion.p.rapidapi.com/resources/bot/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aion.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AION",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if \"example@example.com\" is a valid email address.",
        "model_answer": "response = requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@example.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "FREE 20,000 , Email Debounce , Our bounce email API is a powerful tool that helps you manage your email deliverability by detecting, monitoring, and handling bounced emails from a range of ISPs. With our API, you can ensure your messages are delivered effectively, and that your sender reputation stays in good standing. Whether you're a small business or a large enterprise, our API is designed to simplify your email management and help you achieve better email performance. Contact us today to ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://emailbounceapi.p.rapidapi.com/email/mike.2023@gmail.com'\nquerystring = {\"email_string\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://emailbounceapi.p.rapidapi.com/email/mike.2023@gmail.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email_string",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://emailbounceapi.p.rapidapi.com/email/mike.2023@gmail.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"emailbounceapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "EmailBounceAPI",
            "api_arguments_original": [
                {
                    "name": "email_string",
                    "type": "string",
                    "description": "",
                    "default": "mike.2023@gmail.com"
                }
            ]
        }
    },
    {
        "query": "I want to get live data for the item with ASIN B07WDSD7G7 on Amazon in the US marketplace.",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B07WDSD7G7\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Test purpose",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gg43.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gg43.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gg43.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gg43.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GG",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to convert 100 EUR to USD.",
        "model_answer": "requests.get(\"https://currency-converter193.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"currency-converter193.p.rapidapi.com\"}, params={\"from\": \"EUR\", \"amount\": \"100\", \"to\": \"USD\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Created from VS Code",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://currency-converter193.p.rapidapi.com/'\nquerystring = {\"from\": \"\", \"amount\": \"\", \"to\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://currency-converter193.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "from",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "amount",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://currency-converter193.p.rapidapi.com/\"\nquerystring = {\"from\": \"EUR\", \"amount\": \"100\", \"to\": \"USD\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"currency-converter193.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Currency Converter_v5",
            "api_arguments_original": [
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "",
                    "default": "EUR"
                },
                {
                    "name": "amount",
                    "type": "STRING",
                    "description": "",
                    "default": "100"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "",
                    "default": "USD"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the list of all traffic cameras using the Tsaboin Cams API?",
        "model_answer": "requests.get(\"https://tsaboin-tsaboin-cams-v1.p.rapidapi.com/listall.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tsaboin-tsaboin-cams-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "With our API, you can extend your projects (check terms and conditions for more details) by connecting to our servers for traffic details around bus-stops and for live traffic cams.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tsaboin-tsaboin-cams-v1.p.rapidapi.com/listall.json'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tsaboin-tsaboin-cams-v1.p.rapidapi.com/listall.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tsaboin-tsaboin-cams-v1.p.rapidapi.com/listall.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tsaboin-tsaboin-cams-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tsaboin Cams",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve the latest chapter of the novel with the novel ID \"567891\" from the Web - Novel API.",
        "model_answer": "requests.get(\"https://web-novel-api.p.rapidapi.com/novel/fa102782f605163ddc1b3341709fd70221b4e23b/chapter/567891\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"web-novel-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Looking for the latest and greatest in Korean, Chinese, and Japanese web novels? Look no further than Web - Novel API! Our platform offers access to thousands of titles and millions of chapters, all translated into English for your reading pleasure. We provide metadata, ratings, and other important information to help you find the perfect web novel. Our content is carefully crawled and formatted using Mozilla Readability to ensure the best reading experience possible. Join us today and discov...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://web-novel-api.p.rapidapi.com/novel/fa102782f605163ddc1b3341709fd70221b4e23b/chapter/aHR0cHM6Ly93d3cucmVhZGxpZ2h0bm92ZWwubWUvZ29ibGluLWtpbmdkb20vdm9sdW1lLTEvY2hhcHRlci1wcm9sb2d1ZQ=='\nquerystring = {\"chapter_id\": \"\", \"novel_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://web-novel-api.p.rapidapi.com/novel/fa102782f605163ddc1b3341709fd70221b4e23b/chapter/aHR0cHM6Ly93d3cucmVhZGxpZ2h0bm92ZWwubWUvZ29ibGluLWtpbmdkb20vdm9sdW1lLTEvY2hhcHRlci1wcm9sb2d1ZQ==\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "chapter_id",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "novel_id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://web-novel-api.p.rapidapi.com/novel/fa102782f605163ddc1b3341709fd70221b4e23b/chapter/aHR0cHM6Ly93d3cucmVhZGxpZ2h0bm92ZWwubWUvZ29ibGluLWtpbmdkb20vdm9sdW1lLTEvY2hhcHRlci1wcm9sb2d1ZQ==\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"web-novel-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Web - Novel API",
            "api_arguments_original": [
                {
                    "name": "chapter_id",
                    "type": "string",
                    "description": "",
                    "default": "aHR0cHM6Ly93d3cucmVhZGxpZ2h0bm92ZWwubWUvZ29ibGluLWtpbmdkb20vdm9sdW1lLTEvY2hhcHRlci1wcm9sb2d1ZQ=="
                },
                {
                    "name": "novel_id",
                    "type": "string",
                    "description": "",
                    "default": "fa102782f605163ddc1b3341709fd70221b4e23b"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with information about a specific location using the peta API?",
        "model_answer": "requests.get(\"https://peta.p.rapidapi.comhttps://skripsikampus.000webhostapp.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"peta.p.rapidapi.com\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "make a peta",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://peta.p.rapidapi.comhttps://skripsikampus.000webhostapp.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://peta.p.rapidapi.comhttps://skripsikampus.000webhostapp.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://peta.p.rapidapi.comhttps://skripsikampus.000webhostapp.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"peta.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "peta",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the Linkedin profile data for this URL - https://www.linkedin.com/in/johndoe",
        "model_answer": "requests.get(\"https://linkedin-profile-data.p.rapidapi.com/linkedin-data\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"linkedin-profile-data.p.rapidapi.com\"}, params={\"url\": \"https://www.linkedin.com/in/johndoe\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Returns a JSON Profile data from a Linkedin ID",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://linkedin-profile-data.p.rapidapi.com/linkedin-data'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://linkedin-profile-data.p.rapidapi.com/linkedin-data\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://linkedin-profile-data.p.rapidapi.com/linkedin-data\"\nquerystring = {\"url\": \"https://www.linkedin.com/in/williamhgates\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linkedin-profile-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Linkedin Profile Data",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.linkedin.com/in/williamhgates"
                }
            ]
        }
    },
    {
        "query": "I want to get live updates on the prices of Bitcoin and Ethereum.",
        "model_answer": "requests.get(\"https://crypto-update-live.p.rapidapi.com/multiplecoins/bitcoin_ethereum\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crypto-update-live.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "This API gives live updates about cryptocurrency prices and the latest news regarding it.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crypto-update-live.p.rapidapi.com/multiplecoins/bitcoin_ethereum'\nquerystring = {\"crypto1-name_crypto2-name_crypto\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crypto-update-live.p.rapidapi.com/multiplecoins/bitcoin_ethereum\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "crypto1_name_crypto2_name_crypto",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crypto-update-live.p.rapidapi.com/multiplecoins/bitcoin_ethereum\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-update-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crypto Update Live",
            "api_arguments_original": [
                {
                    "name": "crypto1-name_crypto2-name_crypto",
                    "type": "string",
                    "description": "",
                    "default": "bitcoin_ethereum"
                }
            ]
        }
    },
    {
        "query": "I want to generate a new token for the Unlimited Language API.",
        "model_answer": "requests.get(\"https://token-api.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"token-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Generate a new token for Unlimited Language API. Token is only valid for ~5 minuts, so it has to be generated frequently",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://token-api.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://token-api.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://token-api.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"token-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Token API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me the messages for email address p1amvpvxfh@bestparadize.com using the Temp Mail API?",
        "model_answer": "requests.get(\"https://temp-mail44.p.rapidapi.com/api/v3/email/p1amvpvxfh@bestparadize.com/messages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"temp-mail44.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Create a temp mail",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://temp-mail44.p.rapidapi.com/api/v3/email/p1amvpvxfh@bestparadize.com/messages'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://temp-mail44.p.rapidapi.com/api/v3/email/p1amvpvxfh@bestparadize.com/messages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://temp-mail44.p.rapidapi.com/api/v3/email/p1amvpvxfh@bestparadize.com/messages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"temp-mail44.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Temp Mail",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "",
                    "default": "p1amvpvxfh@bestparadize.com"
                }
            ]
        }
    },
    {
        "query": "I would like to search for images of dogs on Google.",
        "model_answer": "requests.get(\"https://google-search72.p.rapidapi.com/imagesearch\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"google-search72.p.rapidapi.com\"}, params={\"q\" \"dogs\"})",
        "original": {
            "domain": "Storage",
            "framework": "RapidAPI",
            "functionality": "API used to retrieve data from Google search results in real time. Support web search and image search",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://google-search72.p.rapidapi.com/imagesearch'\nquerystring = {\"q\": \"\", \"start\": \"\", \"num\": \"\", \"gl\": \"\", \"lr\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://google-search72.p.rapidapi.com/imagesearch\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "start",
                    "description": "The index of the first result to return.",
                    "type": "STRING"
                },
                {
                    "name": "num",
                    "description": "Number of search results to return.\nValid values are integers between 1 and 20, inclusive",
                    "type": "NUMBER"
                },
                {
                    "name": "gl",
                    "description": "The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value.",
                    "type": "STRING"
                },
                {
                    "name": "lr",
                    "description": "Restricts the search to documents written in a particular language",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://google-search72.p.rapidapi.com/imagesearch\"\nquerystring = {\"q\": \"Word Cup\", \"start\": \"0\", \"num\": \"10\", \"gl\": \"us\", \"lr\": \"lang_en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-search72.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google Search_v3",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "Word Cup"
                },
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "The index of the first result to return.",
                    "default": "0"
                },
                {
                    "name": "num",
                    "type": "NUMBER",
                    "description": "Number of search results to return.\nValid values are integers between 1 and 20, inclusive",
                    "default": "10"
                },
                {
                    "name": "gl",
                    "type": "STRING",
                    "description": "The gl parameter value is a two-letter country code. The gl parameter boosts search results whose country of origin matches the parameter value.",
                    "default": "us"
                },
                {
                    "name": "lr",
                    "type": "STRING",
                    "description": "Restricts the search to documents written in a particular language",
                    "default": "lang_en"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the detailed information about IATA airports, airlines, countries, and alliances using the Travel Hacking Tool API?",
        "model_answer": "requests.get(\"https://travel-hacking-tool.p.rapidapi.com/api/alliances/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"travel-hacking-tool.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Complete and up-to-date database with detailed information about IATA airports, IATA airlines, countries, alliances and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://travel-hacking-tool.p.rapidapi.com/api/alliances/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://travel-hacking-tool.p.rapidapi.com/api/alliances/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://travel-hacking-tool.p.rapidapi.com/api/alliances/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"travel-hacking-tool.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Travel Hacking Tool",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to lookup the location information for the URL 'https://example.com' using the URL Lookup by API-Ninjas API.",
        "model_answer": "requests.get(\"https://url-lookup-by-api-ninjas.p.rapidapi.com/v1/urllookup\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"url-lookup-by-api-ninjas.p.rapidapi.com\"}, params={\"url\": \"https://example.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Lookup location information for any URL domain. See more info at https://api-ninjas.com/api/urllookup.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://url-lookup-by-api-ninjas.p.rapidapi.com/v1/urllookup'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://url-lookup-by-api-ninjas.p.rapidapi.com/v1/urllookup\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "valid URL to check. It supports schemes (e.g. http://example.com) as well as schemeless (e.g. example.com) formats.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://url-lookup-by-api-ninjas.p.rapidapi.com/v1/urllookup\"\nquerystring = {\"url\": \"https://example.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"url-lookup-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "URL Lookup by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": " valid URL to check. It supports schemes (e.g. http://example.com) as well as schemeless (e.g. example.com) formats.",
                    "default": "https://example.com"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the available language codes for the Language Detection_v2 API.",
        "model_answer": "import requests\n\nrequests.get(\"https://language-detection5.p.rapidapi.com/get_language_codes\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"language-detection5.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Detection of all possible languages with probability scores.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://language-detection5.p.rapidapi.com/get_language_codes'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://language-detection5.p.rapidapi.com/get_language_codes\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://language-detection5.p.rapidapi.com/get_language_codes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"language-detection5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Language Detection_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to create a fake request with the data {\"name\"",
        "model_answer": "requests.get(\"https://request-boomerang.p.rapidapi.com/query-json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"request-boomerang.p.rapidapi.com\"}, params={\"data\": '{\"name\": \"John\", \"age\": 25}'})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Easily create fake requests with your data, and send what you need to receive.  RequestBoomerang will help you to test, prototype, and mock, with real data. Give a boost to your frontend development without waiting for the backend.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://request-boomerang.p.rapidapi.com/query-json'\nquerystring = {\"data\": \"\", \"sleep\": \"\", \"return\": \"\", \"status\": \"\", \"shuffle\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://request-boomerang.p.rapidapi.com/query-json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "data",
                    "description": "",
                    "type": "OBJECT"
                },
                {
                    "name": "sleep",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "return",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "status",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "shuffle",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://request-boomerang.p.rapidapi.com/query-json\"\nquerystring = {\"sleep\": \"\", \"return\": \"\", \"status\": \"\", \"shuffle\": \"\", \"data\": \"{\\\"a\\\":true,\\\"b\\\":[true,1,\\\"s\\\",null],\\\"o\\\":{\\\"a\\\":1}}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"request-boomerang.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Request Boomerang",
            "api_arguments_original": [
                {
                    "name": "data",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\"a\":true,\"b\":[true,1,\"s\",null],\"o\":{\"a\":1}}"
                },
                {
                    "name": "sleep",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "return",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "status",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "shuffle",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if a given Pascal code is valid and compile it using the Pascal Code Compiler API. The code is located in the file \"code.pas\" and I want to specify the version as \"fpc-3.2.2\".",
        "model_answer": "requests.post(\"https://pascal-code-compiler.p.rapidapi.com/compile/fpc-3.2.2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pascal-code-compiler.p.rapidapi.com\"}, files={\"file\": open(\"code.pas\", \"rb\")})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Pascal Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pascal-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pascal-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pascal-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pascal-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pascal Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me get a snapshot of a website?",
        "model_answer": "requests.get(\"https://pragmavantapi.p.rapidapi.com/web/snapshot\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pragmavantapi.p.rapidapi.com\"}, params={\"source\": \"https://www.msn.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Practical API for streamlined business and cloud applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pragmavantapi.p.rapidapi.com/web/snapshot'\nquerystring = {\"source\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pragmavantapi.p.rapidapi.com/web/snapshot\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "source",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pragmavantapi.p.rapidapi.com/web/snapshot\"\nquerystring = {\"source\": \"https://www.msn.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pragmavantapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PragmavantApi",
            "api_arguments_original": [
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.msn.com"
                }
            ]
        }
    },
    {
        "query": "Can you check if the following record has any details?",
        "model_answer": "requests.get(\"https://guinness-world-records-api.p.rapidapi.com/guinness/recordDetails\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"guinness-world-records-api.p.rapidapi.com\"}, params={\"href\": \"/world-records/82145-most-consecutive-vertical-push-ups\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "An API To Fetch World Records Based On A Term, Or Details For A Specific Record.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://guinness-world-records-api.p.rapidapi.com/guinness/recordDetails'\nquerystring = {\"href\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://guinness-world-records-api.p.rapidapi.com/guinness/recordDetails\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "href",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://guinness-world-records-api.p.rapidapi.com/guinness/recordDetails\"\nquerystring = {\"href\": \"/world-records/82145-most-consecutive-vertical-push-ups\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"guinness-world-records-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Guinness-World-Records-Api",
            "api_arguments_original": [
                {
                    "name": "href",
                    "type": "STRING",
                    "description": "",
                    "default": "/world-records/82145-most-consecutive-vertical-push-ups"
                }
            ]
        }
    },
    {
        "query": "Can you provide me the current status of the Address Monitor service?",
        "model_answer": "requests.get(\"https://address-monitor.p.rapidapi.com/service-status\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"address-monitor.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Monitor EVM network address transactions and get prompt and reliable webhook call with transaction details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://address-monitor.p.rapidapi.com/service-status'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://address-monitor.p.rapidapi.com/service-status\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://address-monitor.p.rapidapi.com/service-status\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"address-monitor.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Address Monitor",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the details of a pet with ID 123.",
        "model_answer": "requests.get(\"https://publicapitestinginbox.p.rapidapi.com/pet/123\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"publicapitestinginbox.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "PublicAPITestingInbox",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://publicapitestinginbox.p.rapidapi.com/pet/{petId}'\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://publicapitestinginbox.p.rapidapi.com/pet/{petId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "petid",
                    "description": "ID of pet to return",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://publicapitestinginbox.p.rapidapi.com/pet/{petId}\"\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"publicapitestinginbox.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PublicAPITestingInbox",
            "api_arguments_original": [
                {
                    "name": "petId",
                    "type": "NUMBER",
                    "description": "ID of pet to return",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get a list of movies with the genre \"action\" and a minimum rating of 8 from the YTS.am Torrent API.",
        "model_answer": "requests.get(\"https://yts-am-torrent.p.rapidapi.com/list_movies.jsonp\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yts-am-torrent.p.rapidapi.com\"}, params={\"genre\": \"action\", \"minimum_rating\": 8})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "This is a lightweight web service, (REST interface), which provides an easy way to access the YTS website.  An API (Application programming interface) is a protocol intended to be used as an interface by software components to communicate with each other.  Our API supports many methods, so there should not be a problem coding some nice applications. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yts-am-torrent.p.rapidapi.com/list_movies.jsonp'\nquerystring = {\"genre\": \"\", \"limit\": \"\", \"query_term\": \"\", \"quality\": \"\", \"minimum_rating\": \"\", \"with_rt_ratings\": \"\", \"page\": \"\", \"sort_by\": \"\", \"order_by\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yts-am-torrent.p.rapidapi.com/list_movies.jsonp\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "genre",
                    "description": "Used to filter by a given genre (See http://www.imdb.com/genre/ for full list)",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Integer between 1 - 50 (inclusive): The limit of results per page that has been set",
                    "type": "NUMBER"
                },
                {
                    "name": "query_term",
                    "description": "Used for movie search, matching on: Movie Title/IMDb Code, Actor Name/IMDb Code, Director Name/IMDb Code",
                    "type": "STRING"
                },
                {
                    "name": "quality",
                    "description": "String (720p, 1080p, 3D): \tUsed to filter by a given quality",
                    "type": "STRING"
                },
                {
                    "name": "minimum_rating",
                    "description": "Integer between 0 - 9 (inclusive): \tUsed to filter movie by a given minimum IMDb rating",
                    "type": "NUMBER"
                },
                {
                    "name": "with_rt_ratings",
                    "description": "Returns the list with the Rotten Tomatoes rating included",
                    "type": "BOOLEAN"
                },
                {
                    "name": "page",
                    "description": "Integer (Unsigned): Used to see the next page of movies, eg limit=15 and page=2 will show you movies 15-30",
                    "type": "NUMBER"
                },
                {
                    "name": "sort_by",
                    "description": "String (title, year, rating, peers, seeds, download_count, like_count, date_added): Sorts the results by choosen value",
                    "type": "STRING"
                },
                {
                    "name": "order_by",
                    "description": "String (desc, asc): Orders the results by either Ascending or Descending order",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yts-am-torrent.p.rapidapi.com/list_movies.jsonp\"\nquerystring = {\"genre\": \"\", \"limit\": \"\", \"query_term\": \"\", \"quality\": \"\", \"minimum_rating\": \"\", \"with_rt_ratings\": \"\", \"page\": \"\", \"sort_by\": \"\", \"order_by\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yts-am-torrent.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YTS.am Torrent",
            "api_arguments_original": [
                {
                    "name": "genre",
                    "type": "STRING",
                    "description": "\tUsed to filter by a given genre (See http://www.imdb.com/genre/ for full list)",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Integer between 1 - 50 (inclusive): The limit of results per page that has been set",
                    "default": ""
                },
                {
                    "name": "query_term",
                    "type": "STRING",
                    "description": "Used for movie search, matching on: Movie Title/IMDb Code, Actor Name/IMDb Code, Director Name/IMDb Code",
                    "default": ""
                },
                {
                    "name": "quality",
                    "type": "STRING",
                    "description": "String (720p, 1080p, 3D): \tUsed to filter by a given quality",
                    "default": ""
                },
                {
                    "name": "minimum_rating",
                    "type": "NUMBER",
                    "description": "\tInteger between 0 - 9 (inclusive): \tUsed to filter movie by a given minimum IMDb rating",
                    "default": ""
                },
                {
                    "name": "with_rt_ratings",
                    "type": "BOOLEAN",
                    "description": "Returns the list with the Rotten Tomatoes rating included",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Integer (Unsigned): Used to see the next page of movies, eg limit=15 and page=2 will show you movies 15-30",
                    "default": ""
                },
                {
                    "name": "sort_by",
                    "type": "STRING",
                    "description": "String (title, year, rating, peers, seeds, download_count, like_count, date_added): Sorts the results by choosen value",
                    "default": ""
                },
                {
                    "name": "order_by",
                    "type": "STRING",
                    "description": "String (desc, asc): Orders the results by either Ascending or Descending order",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me with the AI Chatbot API? I want to get a response for the message \"How are you?\".",
        "model_answer": "requests.get(\"https://ai-chatbot.p.rapidapi.com/chat/free\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ai-chatbot.p.rapidapi.com\"}, params={\"uid\": \"user1\", \"message\": \"How are you?\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "An AI Chatbot for your aplication.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ai-chatbot.p.rapidapi.com/chat/free'\nquerystring = {\"uid\": \"\", \"message\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ai-chatbot.p.rapidapi.com/chat/free\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "uid",
                    "description": "User Identification for personalised response and response continuity.",
                    "type": "STRING"
                },
                {
                    "name": "message",
                    "description": "Message that the chatbot has to respond to.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ai-chatbot.p.rapidapi.com/chat/free\"\nquerystring = {\"uid\": \"user1\", \"message\": \"What's your name?\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-chatbot.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AI Chatbot",
            "api_arguments_original": [
                {
                    "name": "uid",
                    "type": "STRING",
                    "description": "User Identification for personalised response and response continuity.",
                    "default": "user1"
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "Message that the chatbot has to respond to.",
                    "default": "What's your name?"
                }
            ]
        }
    },
    {
        "query": "I want to check if the email example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Access to quality items and classifiers in regional energy markets (Regionale Herkunftsnachweise)  in Germany.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://regionalkonzept-strom-herkunft.p.rapidapi.com/erzeugung'\nquerystring = {\"postleitzahl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://regionalkonzept-strom-herkunft.p.rapidapi.com/erzeugung\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "postleitzahl",
                    "description": "Postleitzahl der Erzeugungsanlage, f\u00fcr die eine Liste der Postleitzahlen von Verbrauchergebiete einers regionalen \u00d6kostrombezugs erstellt werden soll.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://regionalkonzept-strom-herkunft.p.rapidapi.com/erzeugung\"\nquerystring = {\"postleitzahl\": \"01609\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"regionalkonzept-strom-herkunft.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Regionalkonzept Strom Herkunft",
            "api_arguments_original": [
                {
                    "name": "postleitzahl",
                    "type": "STRING",
                    "description": "Postleitzahl der Erzeugungsanlage, f\u00fcr die eine Liste der Postleitzahlen von Verbrauchergebiete einers regionalen \u00d6kostrombezugs erstellt werden soll.",
                    "default": "01609"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the historical trading data for BTC/USDT on the Binance spot market?",
        "model_answer": "requests.get(\"https://qvantana.p.rapidapi.com/2crows\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qvantana.p.rapidapi.com\"}, params={\"symbol\": \"btcusdt\", \"exchange\": \"binance\", \"market\": \"spot\", \"interval\": \"1m\", \"from\": \"1683895800\", \"backtracks\": \"1\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Our free API provides real-time and historical crypto trading data from 4 major exchanges, enriched with over 30 customizable trading indicators. It offers up to 5000 rows of data in a single request, ensuring comprehensive market analysis. The API is user-friendly and offers improved data fetching capabilities compared to standard exchange documentation, making it an essential tool for traders and developers alike.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qvantana.p.rapidapi.com/2crows'\nquerystring = {\"symbol\": \"\", \"exchange\": \"\", \"market\": \"\", \"interval\": \"\", \"from\": \"\", \"backtracks\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qvantana.p.rapidapi.com/2crows\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "symbol",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "exchange",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "market",
                    "description": "Available markets are:\n\nspot\nusdt-perpetual\ninverse-perpetual",
                    "type": "STRING"
                },
                {
                    "name": "interval",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "from",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "backtracks",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qvantana.p.rapidapi.com/2crows\"\nquerystring = {\"symbol\": \"btcusdt\", \"exchange\": \"binance\", \"market\": \"spot\", \"interval\": \"1m\", \"from\": \"1683895800\", \"backtracks\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qvantana.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Qvantana",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "",
                    "default": "btcusdt"
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": "binance"
                },
                {
                    "name": "market",
                    "type": "STRING",
                    "description": "Available markets are:\n\nspot\nusdt-perpetual\ninverse-perpetual",
                    "default": "spot"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "",
                    "default": "1m"
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "",
                    "default": "1683895800"
                },
                {
                    "name": "backtracks",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please shorten the following URL",
        "model_answer": "requests.get(\"https://noly-url-shortener.p.rapidapi.com/shorten/www.example.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"noly-url-shortener.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Shorten a long url to tiny link",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://noly-url-shortener.p.rapidapi.com/shorten/www.google.com'\nquerystring = {\"link\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://noly-url-shortener.p.rapidapi.com/shorten/www.google.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "link",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://noly-url-shortener.p.rapidapi.com/shorten/www.google.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"noly-url-shortener.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Noly url shortener",
            "api_arguments_original": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "",
                    "default": "www.google.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide the schedule for the handball league ASOBAL?",
        "model_answer": "requests.get(\"https://handballapi.p.rapidapi.com/api/handball/search/asobal\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"handballapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "HandballAPI offers a schedule for live matches and results for top national and international leagues and tournaments. Handball World championship, handball European championship, handball Champions league, LNH Division 1, EHF European league and other leagues are all covered.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://handballapi.p.rapidapi.com/api/handball/search/asobal'\nquerystring = {\"term\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://handballapi.p.rapidapi.com/api/handball/search/asobal\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "term",
                    "description": "The search term to use when searching for players, teams, and tournaments.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://handballapi.p.rapidapi.com/api/handball/search/asobal\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"handballapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "HandballAPI",
            "api_arguments_original": [
                {
                    "name": "term",
                    "type": "STRING",
                    "description": "The search term to use when searching for players, teams, and tournaments.",
                    "default": "asobal"
                }
            ]
        }
    },
    {
        "query": "I want to get the Twitch user information for user \"samueletienne\".",
        "model_answer": "requests.get(\"https://gwyo-twitch.p.rapidapi.com/m3u8/samueletienne\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gwyo-twitch.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "This API gives access to informations about a User / Channel, and Streams on Twitch.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gwyo-twitch.p.rapidapi.com/m3u8/samueletienne'\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gwyo-twitch.p.rapidapi.com/m3u8/samueletienne\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "userid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gwyo-twitch.p.rapidapi.com/m3u8/samueletienne\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gwyo-twitch.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "gwyo-twitch",
            "api_arguments_original": [
                {
                    "name": "userId",
                    "type": "string",
                    "description": "",
                    "default": "samueletienne"
                }
            ]
        }
    },
    {
        "query": "Please shorten the following URL",
        "model_answer": "response = requests.get(\"https://uptosite-link-shortener.p.rapidapi.com/long/ntt-chrome\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"uptosite-link-shortener.p.rapidapi.com\"}, params={\"slug\": \"https://www.example.com/long-url-that-needs-to-be-shortened\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Link Shortener API for developers",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uptosite-link-shortener.p.rapidapi.com/long/ntt-chrome'\nquerystring = {\"slug\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uptosite-link-shortener.p.rapidapi.com/long/ntt-chrome\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "slug",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uptosite-link-shortener.p.rapidapi.com/long/ntt-chrome\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uptosite-link-shortener.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "UptoSite Link Shortener",
            "api_arguments_original": [
                {
                    "name": "slug",
                    "type": "string",
                    "description": "",
                    "default": "ntt-chrome"
                }
            ]
        }
    },
    {
        "query": "I want to convert Instagram user ID 177402262 to username.",
        "model_answer": "response = requests.get(\"https://instagram210.p.rapidapi.com/pk_to_username\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram210.p.rapidapi.com\"}, params={\"pk\": \"177402262\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Instagram most needed endpoints",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram210.p.rapidapi.com/pk_to_username'\nquerystring = {\"pk\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram210.p.rapidapi.com/pk_to_username\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pk",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram210.p.rapidapi.com/pk_to_username\"\nquerystring = {\"pk\": \"177402262\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram210.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram_v2",
            "api_arguments_original": [
                {
                    "name": "pk",
                    "type": "STRING",
                    "description": "",
                    "default": "177402262"
                }
            ]
        }
    },
    {
        "query": "I want to get the current planetary overview.",
        "model_answer": "response = requests.get(\"https://horostory.p.rapidapi.com/planetaryoverview\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"horostory.p.rapidapi.com\"})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://horostory.p.rapidapi.com/planetaryoverview'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://horostory.p.rapidapi.com/planetaryoverview\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://horostory.p.rapidapi.com/planetaryoverview\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"horostory.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Horostory",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get a list of philosophers from the Philosophers API.",
        "model_answer": "requests.get(\"https://list-of-philosophers.p.rapidapi.com/Philosopher\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"list-of-philosophers.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "With the Philosophers API, you can learn about philosophers such as Socrates, Plato, and Aristotle, as well as lesser-known but equally important thinkers. You can access information on the philosophies of these thinkers, as well as the historical context in which they lived.  This API is perfect for anyone looking to build applications centered around philosophy, history, or culture. Whether you're developing a website, a mobile app, or a game, the Philosophers API by Pizza API will provide ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://list-of-philosophers.p.rapidapi.com/Philosopher'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://list-of-philosophers.p.rapidapi.com/Philosopher\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://list-of-philosophers.p.rapidapi.com/Philosopher\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"list-of-philosophers.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "List oF Philosophers",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me find the zip codes for a specific area in Mexico?",
        "model_answer": "requests.get(\"https://mexico-zip-codes.p.rapidapi.com/buscar/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mexico-zip-codes.p.rapidapi.com\"}, params={\"codigo_postal\": \"12345\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mexico-zip-codes.p.rapidapi.com/buscar/'\nquerystring = {\"codigo_postal\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mexico-zip-codes.p.rapidapi.com/buscar/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "codigo_postal",
                    "description": "Part of a zip code",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mexico-zip-codes.p.rapidapi.com/buscar/\"\nquerystring = {\"codigo_postal\": \"646\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mexico-zip-codes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mexico ZIP Codes",
            "api_arguments_original": [
                {
                    "name": "codigo_postal",
                    "type": "STRING",
                    "description": "Part of a zip code",
                    "default": "646"
                }
            ]
        }
    },
    {
        "query": "I want to check if the MAC address 00:0a:95:9d:68:16 is valid.",
        "model_answer": "requests.get(\"https://mac-address-to-manufacturer.p.rapidapi.com/maclookup/00-0A-95-9D-68-16\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mac-address-to-manufacturer.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "MAC Address Lookup to find the hardware manufacturer and its postal address of a specific MAC Address",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mac-address-to-manufacturer.p.rapidapi.com/maclookup/14-AB-C5-D5-DA-F9'\nquerystring = {\"mac_number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mac-address-to-manufacturer.p.rapidapi.com/maclookup/14-AB-C5-D5-DA-F9\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "mac_number",
                    "description": "MAC Address Number to Find Manufacturer",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mac-address-to-manufacturer.p.rapidapi.com/maclookup/14-AB-C5-D5-DA-F9\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mac-address-to-manufacturer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MAC Address to Manufacturer",
            "api_arguments_original": [
                {
                    "name": "mac_number",
                    "type": "STRING",
                    "description": "MAC Address Number to Find Manufacturer",
                    "default": "14-AB-C5-D5-DA-F9"
                }
            ]
        }
    },
    {
        "query": "I want to get the loot share with sc=123ABC.",
        "model_answer": "requests.get(\"https://lootero3.p.rapidapi.com/api/v1/lootero/shared/getShare\", headers={\"X-RapidAPI-Key\": \"<API_KEY>\",\"X-RapidAPI-Host\": \"lootero3.p.rapidapi.com\"}, params={\"sc\": \"123ABC\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Endpoints for the Lootero Application",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lootero3.p.rapidapi.com/api/v1/lootero/shared/getShare'\nquerystring = {\"sc\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lootero3.p.rapidapi.com/api/v1/lootero/shared/getShare\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sc",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lootero3.p.rapidapi.com/api/v1/lootero/shared/getShare\"\nquerystring = {\"sc\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lootero3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lootero",
            "api_arguments_original": [
                {
                    "name": "sc",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the car models available in the veiculos-api?",
        "model_answer": "requests.get(\"https://veiculos-api.p.rapidapi.com/carros\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"veiculos-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Tabela FIPE - Busca por marca, modelo e vers\u00e3o.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://veiculos-api.p.rapidapi.com/carros'\nquerystring = {\"veiculo_tipo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://veiculos-api.p.rapidapi.com/carros\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "veiculo_tipo",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://veiculos-api.p.rapidapi.com/carros\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"veiculos-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "veiculos-api",
            "api_arguments_original": [
                {
                    "name": "veiculo_tipo",
                    "type": "string",
                    "description": "",
                    "default": "carros"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the top movie news sources available?",
        "model_answer": "requests.get(\"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"kubric-the-comprehensive-movie-news-api.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Stay up-to-date with Kubric, your ultimate movie news API. Access top sources, search by title or keyword, and experience visually engaging cinema updates and insights.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kubric-the-comprehensive-movie-news-api.p.rapidapi.com/news/sources\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kubric-the-comprehensive-movie-news-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Kubric: The Comprehensive Movie News API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the app with dev_id \"com.example.app\" is available on Google Play Store.",
        "model_answer": "requests.get(\"https://google-play-api2.p.rapidapi.com/apps_from_developer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"google-play-api2.p.rapidapi.com\"}, params={\"dev_id\": \"com.example.app\", \"lang\": \"en\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Detaied Google Play API. Search, Suggest, Category Search, Dev Data, App Data etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://google-play-api2.p.rapidapi.com/apps_from_developer'\nquerystring = {\"dev_id\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://google-play-api2.p.rapidapi.com/apps_from_developer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "dev_id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://google-play-api2.p.rapidapi.com/apps_from_developer\"\nquerystring = {\"dev_id\": \"QR Code Scanner.\", \"lang\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-play-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google Play API",
            "api_arguments_original": [
                {
                    "name": "dev_id",
                    "type": "STRING",
                    "description": "",
                    "default": "QR Code Scanner."
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please check the details for House1 and House2 in the Real Estate API.",
        "model_answer": "requests.get(\"https://real_estate_heroku.p.rapidapi.com/House1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"real_estate_heroku.p.rapidapi.com\"}, params={\"House1\": \"1\", \"House2\": \"1\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Real Estate",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://real_estate_heroku.p.rapidapi.com/House1'\nquerystring = {\"House1\": \"\", \"House2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://real_estate_heroku.p.rapidapi.com/House1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "house1",
                    "description": "",
                    "type": "OBJECT"
                },
                {
                    "name": "house2",
                    "description": "",
                    "type": "OBJECT"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://real_estate_heroku.p.rapidapi.com/House1\"\nquerystring = {\"House1\": \"1\", \"House2\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"real_estate_heroku.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Real_Estate_Heroku",
            "api_arguments_original": [
                {
                    "name": "House1",
                    "type": "OBJECT",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "House2",
                    "type": "OBJECT",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the test data from the Test_v14 API?",
        "model_answer": "requests.get(\"https://test804.p.rapidapi.comimage\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"test804.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "testpk",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test804.p.rapidapi.comimage'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test804.p.rapidapi.comimage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test804.p.rapidapi.comimage\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test804.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Test_v14",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the DNS propagation for example.com is complete.",
        "model_answer": "requests.get(\"https://dns-propagation-and-domain-checker.p.rapidapi.com/api/dns\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dns-propagation-and-domain-checker.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "DNS Propagation and Domain Checker  . Check Domain propagation Online and  find Name Server Propagation . Find AAA Record Propagation across different servers globally",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dns-propagation-and-domain-checker.p.rapidapi.com/api/dns'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dns-propagation-and-domain-checker.p.rapidapi.com/api/dns\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dns-propagation-and-domain-checker.p.rapidapi.com/api/dns\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dns-propagation-and-domain-checker.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DNS Propagation and Domain Checker",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please generate a QR code for the website \"https://www.example.com\" with a size of 256 pixels and transparent background color.",
        "model_answer": "requests.get(\"https://webit-qr-code.p.rapidapi.com/generate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"webit-qr-code.p.rapidapi.com\"}, params={\"format\": \"png\", \"data\": \"https://www.example.com\", \"size\": \"256\", \"background_color\": \"transparent\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Generate beautiful QR Codes with custom logo, colors, gradient effects and styles with ease.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webit-qr-code.p.rapidapi.com/generate'\nquerystring = {\"format\": \"\", \"data\": \"\", \"size\": \"\", \"error_correction\": \"\", \"image_margin\": \"\", \"image_size\": \"\", \"image_id\": \"\", \"gradient\": \"\", \"color\": \"\", \"background_gradient\": \"\", \"background_color\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webit-qr-code.p.rapidapi.com/generate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "format",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "size",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "error_correction",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "image_margin",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "image_size",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "image_id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "gradient",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "background_gradient",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "background_color",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webit-qr-code.p.rapidapi.com/generate\"\nquerystring = {\"error_correction\": \"\", \"image_margin\": \"10\", \"image_size\": \"\", \"image_id\": \"f222c8be0475292b2a23a82ff93ac496\", \"gradient\": \"024bda,8572ea\", \"color\": \"\", \"background_gradient\": \"\", \"background_color\": \"transparent\", \"format\": \"\", \"data\": \"https://your-qr-code.website/here\", \"size\": \"512\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-qr-code.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webit QR Code",
            "api_arguments_original": [
                {
                    "name": "format",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "https://your-qr-code.website/here"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "",
                    "default": "512"
                },
                {
                    "name": "error_correction",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image_margin",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                },
                {
                    "name": "image_size",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "image_id",
                    "type": "STRING",
                    "description": "",
                    "default": "f222c8be0475292b2a23a82ff93ac496"
                },
                {
                    "name": "gradient",
                    "type": "STRING",
                    "description": "",
                    "default": "024bda,8572ea"
                },
                {
                    "name": "color",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "background_gradient",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "background_color",
                    "type": "STRING",
                    "description": "",
                    "default": "transparent"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with container tracking information for tracking ID 6045e2f44e1b233199a5e77a?",
        "model_answer": "response = requests.get(\"https://create-container-tracking.p.rapidapi.com/tracking/6045e2f44e1b233199a5e77a\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"create-container-tracking.p.rapidapi.com\"})",
        "original": {
            "domain": "Logistics",
            "framework": "RapidAPI",
            "functionality": "User will be able to initiate the container tracking using this API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://create-container-tracking.p.rapidapi.com/tracking/6045e2f44e1b233199a5e77a'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://create-container-tracking.p.rapidapi.com/tracking/6045e2f44e1b233199a5e77a\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://create-container-tracking.p.rapidapi.com/tracking/6045e2f44e1b233199a5e77a\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"create-container-tracking.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Create Container Tracking",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "6045e2f44e1b233199a5e77a"
                }
            ]
        }
    },
    {
        "query": "Can you search for players with the name \"Messi\" in the TransferMarkt DB API?",
        "model_answer": "requests.get(\"https://transfermarkt-db.p.rapidapi.com/v1/search/quick-search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"transfermarkt-db.p.rapidapi.com\"}, params={\"locale\": \"DE\", \"query\": \"Messi\", \"page_number\": 0})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Transfermarkt / Transfermarket - The football website for transfers, market values, rumours, stats, scores, results, news and fixtures.  https://www.transfermarkt.com/ **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://transfermarkt-db.p.rapidapi.com/v1/search/quick-search'\nquerystring = {\"locale\": \"\", \"query\": \"\", \"page_number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://transfermarkt-db.p.rapidapi.com/v1/search/quick-search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "locale",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "query",
                    "description": "Query",
                    "type": "STRING"
                },
                {
                    "name": "page_number",
                    "description": "Page number",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://transfermarkt-db.p.rapidapi.com/v1/search/quick-search\"\nquerystring = {\"page_number\": \"0\", \"locale\": \"DE\", \"query\": \"mess\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"transfermarkt-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TransferMarkt DB",
            "api_arguments_original": [
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": "DE"
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Query",
                    "default": "mess"
                },
                {
                    "name": "page_number",
                    "type": "NUMBER",
                    "description": "Page number",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to get comments for the TikTok video with video ID 7137423965982592302, limit 50, and fresh data.",
        "model_answer": "requests.get(\"https://tiktok-data1.p.rapidapi.com/live/post/comments/v2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tiktok-data1.p.rapidapi.com\"}, params={\"video_id\": \"7137423965982592302\", \"fresh\": \"1\", \"limit\": \"50\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Social Media Data API in Real-Time.   -Get very useful and unique information.  -I'm on Telegram https://t.me/logicBuilder News and announcements Telegram Channel https://t.me/logicApi",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-data1.p.rapidapi.com/live/post/comments/v2'\nquerystring = {\"video_id\": \"\", \"fresh\": \"\", \"limit\": \"\", \"max_cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-data1.p.rapidapi.com/live/post/comments/v2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "video_id",
                    "description": "Where to get vide id value?\n\nFor example in this video /@INFLUENCER/video/6818009093052189958 the id will be **6818009093052189958**",
                    "type": "STRING"
                },
                {
                    "name": "fresh",
                    "description": "By setting this query value to **1** you can force the API to return fresh data(not cached)",
                    "type": "NUMBER"
                },
                {
                    "name": "limit",
                    "description": "Number of records to return:\n\n- Default is 50\n- Maximum is 150",
                    "type": "NUMBER"
                },
                {
                    "name": "max_cursor",
                    "description": "Pagination cursor",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-data1.p.rapidapi.com/live/post/comments/v2\"\nquerystring = {\"fresh\": \"0\", \"limit\": \"50\", \"max_cursor\": \"0\", \"video_id\": \"7137423965982592302\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok Data",
            "api_arguments_original": [
                {
                    "name": "video_id",
                    "type": "STRING",
                    "description": "Where to get vide id value?\n\nFor example in this video /@INFLUENCER/video/6818009093052189958 the id will be **6818009093052189958**",
                    "default": "7137423965982592302"
                },
                {
                    "name": "fresh",
                    "type": "NUMBER",
                    "description": "By setting this query value to **1** you can force the API to return fresh data(not cached)",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of records to return:\n\n- Default is 50\n- Maximum is 150\n",
                    "default": "50"
                },
                {
                    "name": "max_cursor",
                    "type": "NUMBER",
                    "description": "Pagination cursor",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to check if the domain example.com is available.",
        "model_answer": "requests.get(url=\"https://community-viewdns.p.rapidapi.com/whois\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"community-viewdns.p.rapidapi.com\"}, params={\"domain\": \"example.com\", \"output\": \"json\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Your one source for DNS related tools! dns, info, reverse ip, pagerank, portscan, port scan, lookup, records, whois, ipwhois, dnstools, web hosting, hosting, traceroute, dns report, dnsreport, ip location, ip location finder, spam, spam database, dnsbl, propagation, dns propagation checker, checker, china, chinese, firewall, great firewall, is my site down, is site down, site down, down, dns propagate",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-viewdns.p.rapidapi.com/whois'\nquerystring = {\"domain\": \"\", \"output\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-viewdns.p.rapidapi.com/whois\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "the domain to perform a whois lookup on",
                    "type": "STRING"
                },
                {
                    "name": "output",
                    "description": "the output format required ('xml' or 'json')",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-viewdns.p.rapidapi.com/whois\"\nquerystring = {\"domain\": \"\", \"output\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-viewdns.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ViewDNS",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "the domain to perform a whois lookup on",
                    "default": ""
                },
                {
                    "name": "output",
                    "type": "STRING",
                    "description": "the output format required ('xml' or 'json')",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get data for a product with the ID \"12345\" using the AmazonAPI.",
        "model_answer": "requests.get(\"https://amazonapi2.p.rapidapi.com/products/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazonapi2.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "ef",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazonapi2.p.rapidapi.com/products/{productId}'\nquerystring = {\"productId\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazonapi2.p.rapidapi.com/products/{productId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "productid",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "api_key",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazonapi2.p.rapidapi.com/products/{productId}\"\nquerystring = {\"productId\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazonapi2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AmazonAPI",
            "api_arguments_original": [
                {
                    "name": "productId",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to fetch car data for cars with page number 3, limit 20, type \"sedan\", make \"Toyota\", and year \"2022\".",
        "model_answer": "requests.get(\"https://car-data1.p.rapidapi.com/cars\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"car-data1.p.rapidapi.com\"}, params={\"page\": \"3\", \"limit\": \"20\", \"type\": \"sedan\", \"make\": \"Toyota\", \"year\": \"2022\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Use this API to pull relevant automobile data such as the car make, model, type, and year.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://car-data1.p.rapidapi.com/cars'\nquerystring = {\"page\": \"\", \"limit\": \"\", \"type\": \"\", \"model\": \"\", \"make\": \"\", \"year\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://car-data1.p.rapidapi.com/cars\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "model",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "make",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "year",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://car-data1.p.rapidapi.com/cars\"\nquerystring = {\"page\": \"0\", \"type\": \"\", \"model\": \"\", \"make\": \"\", \"year\": \"\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-data1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Car Data_v2",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "10"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "make",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the details of all the employees from the database?",
        "model_answer": "requests.get(\"https://testapi217.p.rapidapi.com/employees/all\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"testapi217.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "test api2",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testapi217.p.rapidapi.com/employees/all'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testapi217.p.rapidapi.com/employees/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testapi217.p.rapidapi.com/employees/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testapi217.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "testapi2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the inventory of films.",
        "model_answer": "requests.get(\"https://films2.p.rapidapi.com/inventory\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"films2.p.rapidapi.com\"}, params={\"searchString\": \"\", \"limit\": 0, \"skip\": 0})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "Films",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://films2.p.rapidapi.com/inventory'\nquerystring = {\"searchString\": \"\", \"limit\": \"\", \"skip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://films2.p.rapidapi.com/inventory\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchstring",
                    "description": "pass an optional search string for looking up inventory",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "maximum number of records to return",
                    "type": "NUMBER"
                },
                {
                    "name": "skip",
                    "description": "number of records to skip for pagination",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://films2.p.rapidapi.com/inventory\"\nquerystring = {\"searchString\": \"string\", \"limit\": 0, \"skip\": 0}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"films2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Films",
            "api_arguments_original": [
                {
                    "name": "searchString",
                    "type": "STRING",
                    "description": "pass an optional search string for looking up inventory",
                    "default": "string"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "maximum number of records to return",
                    "default": 0
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "number of records to skip for pagination",
                    "default": 0
                }
            ]
        }
    },
    {
        "query": "Can you check the registration details of my vehicle with the South Australia Rego Check API? The registration number is CC831Y.",
        "model_answer": "requests.get(\"https://sa-rego-check.p.rapidapi.com/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"sa-rego-check.p.rapidapi.com\"}, params={\"rego\": \"CC831Y\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "returns the registration details of your South Australia-registered vehicle or boat.\nInformation returned from this check includes:\nMake\nPrimary Colour\nExpiry Date\u00a0\nbody or hull type\ncompulsory third-party (CTP) insurer (vehicles only)\nheavy vehicle details (gross vehicle, combination, or trailer mass).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sa-rego-check.p.rapidapi.com/check'\nquerystring = {\"rego\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sa-rego-check.p.rapidapi.com/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "rego",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sa-rego-check.p.rapidapi.com/check\"\nquerystring = {\"rego\": \"CC831Y\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sa-rego-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SA Rego Check",
            "api_arguments_original": [
                {
                    "name": "rego",
                    "type": "STRING",
                    "description": "",
                    "default": "CC831Y"
                }
            ]
        }
    },
    {
        "query": "I want to search for YouTube videos related to \"interview preparation\".",
        "model_answer": "response = requests.get(\"https://youtube-search-unlimited.p.rapidapi.com/ytsearch/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-search-unlimited.p.rapidapi.com\"}, params={\"query\": \"interview preparation\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get YouTube Search Results Without API Key or Quota Restrictions",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-search-unlimited.p.rapidapi.com/ytsearch/'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-search-unlimited.p.rapidapi.com/ytsearch/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-search-unlimited.p.rapidapi.com/ytsearch/\"\nquerystring = {\"query\": \"interview preparation\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-search-unlimited.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube Search (Unlimited)",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "interview preparation"
                }
            ]
        }
    },
    {
        "query": "Can you help me find the real-time price comparison of iPhones using the Pricer API?",
        "model_answer": "requests.get(\"https://pricer.p.rapidapi.com/str\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pricer.p.rapidapi.com\"}, params={\"q\": \"iPhone\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "real time price comparison api ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pricer.p.rapidapi.com/str'\nquerystring = {\"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pricer.p.rapidapi.com/str\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pricer.p.rapidapi.com/str\"\nquerystring = {\"q\": \"iphone\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pricer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pricer",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "iphone"
                }
            ]
        }
    },
    {
        "query": "Can you give me the monthly search volume, keyword difficulty, and competition details for the keyword \"digital marketing\" on YouTube?",
        "model_answer": "requests.get(\"https://keyword-research-for-youtube.p.rapidapi.com/yttags.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"keyword-research-for-youtube.p.rapidapi.com\"}, params={\"keyword\": \"digital marketing\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Unlock the Power of Youtube Keyword Research for Your Youtube Channel with our API. Get Accurate Monthly Search Volume, Keyword Difficulty, and Competition Details to Drive Traffic and Boost Views!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://keyword-research-for-youtube.p.rapidapi.com/yttags.php'\nquerystring = {\"keyword\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://keyword-research-for-youtube.p.rapidapi.com/yttags.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "keyword",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://keyword-research-for-youtube.p.rapidapi.com/yttags.php\"\nquerystring = {\"keyword\": \"Email Marketing\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"keyword-research-for-youtube.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Keyword Research for Youtube",
            "api_arguments_original": [
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": "Email Marketing"
                }
            ]
        }
    },
    {
        "query": "How do I use the Backlink Checker API to analyze the backlinks of my website?",
        "model_answer": "requests.get(\"https://seo-api-get-backlinks.p.rapidapi.com/backlinks.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"seo-api-get-backlinks.p.rapidapi.com\"}, params={\"domain\": \"example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": " Backlink Checker API, is the ultimate tool for analyzing your website's backlinks, as well as those of your competitors. With our API, you can easily check the quality of your backlinks, identify any issues that may be impacting your SEO efforts, and even discover new backlink opportunities",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://seo-api-get-backlinks.p.rapidapi.com/backlinks.php'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://seo-api-get-backlinks.p.rapidapi.com/backlinks.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://seo-api-get-backlinks.p.rapidapi.com/backlinks.php\"\nquerystring = {\"domain\": \"fesh.store\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"seo-api-get-backlinks.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SEO API - Get Backlinks",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "fesh.store"
                }
            ]
        }
    },
    {
        "query": "How can I perform a bulk WHOIS lookup for a list of domains using the Bulk WHOIS API?",
        "model_answer": "requests.get(\"https://pointsdb-bulk-whois-v1.p.rapidapi.com/batch/{batch_id}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pointsdb-bulk-whois-v1.p.rapidapi.com\"}, params={\"batch_id\": \"example_batch_id\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Bulk WHOIS API. Parsed to JSON. All TLDs supported.   Online since 2016.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pointsdb-bulk-whois-v1.p.rapidapi.com/batch/{batch_id}'\nquerystring = {\"batch_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pointsdb-bulk-whois-v1.p.rapidapi.com/batch/{batch_id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "batch_id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pointsdb-bulk-whois-v1.p.rapidapi.com/batch/{batch_id}\"\nquerystring = {\"batch_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pointsdb-bulk-whois-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bulk WHOIS",
            "api_arguments_original": [
                {
                    "name": "batch_id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the list of available Perl code compiler versions.",
        "model_answer": "requests.get(\"https://perl-code-compiler.p.rapidapi.com/versions/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"perl-code-compiler.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Perl Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://perl-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://perl-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://perl-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"perl-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Perl Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Could you please give me a list of all food products available using the \"pizzaallapala\" API?",
        "model_answer": "response = requests.get(\"https://pizzaallapala.p.rapidapi.com/productos\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pizzaallapala.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "api fake to test frontend",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pizzaallapala.p.rapidapi.com/productos'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pizzaallapala.p.rapidapi.com/productos\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pizzaallapala.p.rapidapi.com/productos\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pizzaallapala.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "pizzaallapala",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the user data for page 2 from the Reqres API.",
        "model_answer": "requests.get(\"https://reqres4.p.rapidapi.com/api/users\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"reqres4.p.rapidapi.com\"}, params={\"page\": \"2\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Reqres",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reqres4.p.rapidapi.com/api/users'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reqres4.p.rapidapi.com/api/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reqres4.p.rapidapi.com/api/users\"\nquerystring = {\"page\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reqres4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Reqres",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "I want to get information about a vehicle with the license plate \"AA-123-BC\" using the \"Api plaque immatriculation SIV\" API.",
        "model_answer": "requests.get(\"https://api-plaque-immatriculation-siv.p.rapidapi.com/get-vehicule-info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"api-plaque-immatriculation-siv.p.rapidapi.com\"}, params={\"immatriculation\": \"AA-123-BC\", \"token\": \"TokenDemoRapidapi\", \"host_name\": \"https://apiplaqueimmatriculation.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Immatriculation API (France) \n\nNotre service Web permettra \u00e0 votre site Internet ou \u00e0 vos applications d\u2019identifier les motos et les scooters en utilisant leur plaque d\u2019immatriculation. Cette m\u00e9thode est largement utilis\u00e9e par la plupart des boutiques en ligne de pi\u00e8ces d\u00e9tach\u00e9es pour identifier les v\u00e9hicules de leurs clients, afin d\u2019\u00e9viter les erreurs d\u2019identification, les insatisfactions clients et les retours de marchandise.\n\n\u00cates-vous \u00e0 la recherche de plaques d\u2019immatriculation fran\u00e7aises...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://api-plaque-immatriculation-siv.p.rapidapi.com/get-vehicule-info'\nquerystring = {\"immatriculation\": \"\", \"token\": \"\", \"host_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://api-plaque-immatriculation-siv.p.rapidapi.com/get-vehicule-info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "immatriculation",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "token",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "host_name",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://api-plaque-immatriculation-siv.p.rapidapi.com/get-vehicule-info\"\nquerystring = {\"immatriculation\": \"AA-123-BC\", \"token\": \"TokenDemoRapidapi\", \"host_name\": \"https://apiplaqueimmatriculation.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"api-plaque-immatriculation-siv.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Api plaque immatriculation SIV",
            "api_arguments_original": [
                {
                    "name": "immatriculation",
                    "type": "STRING",
                    "description": "",
                    "default": "AA-123-BC"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": "TokenDemoRapidapi"
                },
                {
                    "name": "host_name",
                    "type": "STRING",
                    "description": "",
                    "default": "https://apiplaqueimmatriculation.com"
                }
            ]
        }
    },
    {
        "query": "Can you check if this text contains any profanity or offensive word",
        "model_answer": "requests.get(\"https://profanity-filter.p.rapidapi.com/api/v1/filter\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"profanity-filter.p.rapidapi.com\"}, params={\"check_word\": \"Hey, you idiot!\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Filter inputted text content for profanity, offensive and obscenity word base on an internal profanity list. It can also recognize character alternates or special characters often used in place of standard alphabetic characters.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://profanity-filter.p.rapidapi.com/api/v1/filter'\nquerystring = {\"check_word\": \"\", \"add\": \"\", \"range\": \"\", \"r\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://profanity-filter.p.rapidapi.com/api/v1/filter\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "check_word",
                    "description": "Use this parameter to filter text for profanity / offensive word. MAX_LENGTH = `[ 2 .. 700 ] characters`",
                    "type": "STRING"
                },
                {
                    "name": "add",
                    "description": "You can use the optional `add` parameter with a comma separated list of words to be added to the selected `range` profanity list. Accepts `[ 2 .. 250 ] characters` in length).\nThe `add` parameter is case-insensitive, so the case of you entry is not important.",
                    "type": "STRING"
                },
                {
                    "name": "range",
                    "description": "You can use the optional `range` parameter to set the level of filtering range. Default: '`low`'\n`'low'` :  mild database\n`'mid'` : includes all database words in `'low'` database but does not include all `'high'` database of words\n`'high'`: strict large database words which also includes `'low'` and `'mid'` database",
                    "type": "ENUM"
                },
                {
                    "name": "r",
                    "description": "Censor replacement string - You can use the optional `r` parameter to get output of censor words in `word_filtered` response data. Must be a valid punctuation. MAX_LENGTH `<= 1 character`",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://profanity-filter.p.rapidapi.com/api/v1/filter\"\nquerystring = {\"add\": \"\", \"range\": \"\", \"r\": \"*\", \"check_word\": \"This example text contains no profanity / offensive word.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"profanity-filter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Profanity Filter",
            "api_arguments_original": [
                {
                    "name": "check_word",
                    "type": "STRING",
                    "description": "Use this parameter to filter text for profanity / offensive word. MAX_LENGTH = `[ 2 .. 700 ] characters`",
                    "default": "This example text contains no profanity / offensive word."
                },
                {
                    "name": "add",
                    "type": "STRING",
                    "description": "You can use the optional `add` parameter with a comma separated list of words to be added to the selected `range` profanity list. Accepts `[ 2 .. 250 ] characters` in length).\nThe `add` parameter is case-insensitive, so the case of you entry is not important.",
                    "default": ""
                },
                {
                    "name": "range",
                    "type": "ENUM",
                    "description": "You can use the optional `range` parameter to set the level of filtering range. Default: '`low`'\n`'low'` :  mild database\n`'mid'` : includes all database words in `'low'` database but does not include all `'high'` database of words\n`'high'`: strict large database words which also includes `'low'` and `'mid'` database",
                    "default": ""
                },
                {
                    "name": "r",
                    "type": "STRING",
                    "description": "Censor replacement string - You can use the optional `r` parameter to get output of censor words in `word_filtered` response data. Must be a valid punctuation. MAX_LENGTH `<= 1 character`",
                    "default": "*"
                }
            ]
        }
    },
    {
        "query": "Can you check the cell coverage for zip code 92101 on all US networks?",
        "model_answer": "requests.get(\"https://us-cell-coverage-by-zip-code.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"us-cell-coverage-by-zip-code.p.rapidapi.com\"}, params={\"postcode\": \"92101\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Check Cell Coverage by zip code for all US networks",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://us-cell-coverage-by-zip-code.p.rapidapi.com/'\nquerystring = {\"postcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://us-cell-coverage-by-zip-code.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "postcode",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://us-cell-coverage-by-zip-code.p.rapidapi.com/\"\nquerystring = {\"postcode\": \"92101\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"us-cell-coverage-by-zip-code.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "US Cell Coverage by Zip Code",
            "api_arguments_original": [
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "",
                    "default": "92101"
                }
            ]
        }
    },
    {
        "query": "I want to get the next 10 crypto events from the Crypto Events Calendar API.",
        "model_answer": "requests.get(\"https://crypto-events-calendar.p.rapidapi.com/index\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crypto-events-calendar.p.rapidapi.com\"}, params={\"pageSize\": \"10\", \"page\": \"1\"})",
        "original": {
            "domain": "Monitoring",
            "framework": "RapidAPI",
            "functionality": "Get crypto events like listing, airdrops, release, tokenomics, partnershiop, other.\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crypto-events-calendar.p.rapidapi.com/index'\nquerystring = {\"pageSize\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crypto-events-calendar.p.rapidapi.com/index\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pagesize",
                    "description": "Max pageSize = 10",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crypto-events-calendar.p.rapidapi.com/index\"\nquerystring = {\"pageSize\": \"10\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-events-calendar.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\ud83d\udcc5 Crypto Events Calendar \ud83d\ude80",
            "api_arguments_original": [
                {
                    "name": "pageSize",
                    "type": "STRING",
                    "description": "Max pageSize = 10",
                    "default": "10"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to get the reviews for the business with ID \"0x89c259b5a9bd152b:0x31453e62a3be9f76\" in the United States region using the Local Business Data API.",
        "model_answer": "requests.get(url=\"https://local-business-data.p.rapidapi.com/business-reviews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"local-business-data.p.rapidapi.com\"}, params={\"business_id\": \"0x89c259b5a9bd152b:0x31453e62a3be9f76\", \"sort_by\": \"most_relevant\", \"region\": \"us\", \"language\": \"en\", \"offset\": \"0\", \"fields\": \"\", \"query\": \"\", \"limit\": \"5\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Extremely comprehensive and up-to-date local business search - get business reviews and rating, photos, phone, address / location, website, emails / social profiles and 30+ other fields.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://local-business-data.p.rapidapi.com/business-reviews'\nquerystring = {\"business_id\": \"\", \"sort_by\": \"\", \"region\": \"\", \"language\": \"\", \"offset\": \"\", \"fields\": \"\", \"query\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://local-business-data.p.rapidapi.com/business-reviews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "business_id",
                    "description": "Unique Business Id of the business for which to get reviews.",
                    "type": "STRING"
                },
                {
                    "name": "sort_by",
                    "description": "How to sort the reviews in the results.\n\n**Allowed values**: *`most_relevant, newest, highest_ranking, lowest_ranking`*.\n\n**Default**: *`most_relevant`*",
                    "type": "ENUM"
                },
                {
                    "name": "region",
                    "description": "Query Google Maps from a particular region or country. For a list of supported region/country codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes (Alpha-2 code).\n\n**Default:** *`us`*",
                    "type": "STRING"
                },
                {
                    "name": "language",
                    "description": "Set the language of the results. For a list of supported language codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes .\n\n**Default**: *`en`*",
                    "type": "STRING"
                },
                {
                    "name": "offset",
                    "description": "Number of business reviews to skip (for pagination/scrolling).\n\n**Default**: *`0`*",
                    "type": "NUMBER"
                },
                {
                    "name": "fields",
                    "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.\n\n**e.g.** `review_id,review_text,rating`",
                    "type": "STRING"
                },
                {
                    "name": "query",
                    "description": "Return reviews matching a text query.",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Maximum number of business reviews to return (1-150).\n\n**Default**: *`20`*",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://local-business-data.p.rapidapi.com/business-reviews\"\nquerystring = {\"sort_by\": \"\", \"region\": \"us\", \"business_id\": \"0x89c259b5a9bd152b:0x31453e62a3be9f76\", \"language\": \"en\", \"offset\": \"\", \"fields\": \"\", \"query\": \"\", \"limit\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"local-business-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Local Business Data",
            "api_arguments_original": [
                {
                    "name": "business_id",
                    "type": "STRING",
                    "description": "Unique Business Id of the business for which to get reviews.",
                    "default": "0x89c259b5a9bd152b:0x31453e62a3be9f76"
                },
                {
                    "name": "sort_by",
                    "type": "ENUM",
                    "description": "How to sort the reviews in the results.\n\n**Allowed values**: *`most_relevant, newest, highest_ranking, lowest_ranking`*.\n\n**Default**: *`most_relevant`*",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "Query Google Maps from a particular region or country. For a list of supported region/country codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes (Alpha-2 code).\n\n**Default:** *`us`*",
                    "default": "us"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Set the language of the results. For a list of supported language codes see https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes .\n\n**Default**: *`en`*",
                    "default": "en"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Number of business reviews to skip (for pagination/scrolling).\n\n**Default**: *`0`*",
                    "default": ""
                },
                {
                    "name": "fields",
                    "type": "STRING",
                    "description": "A comma separated list of review fields to include in the response (field projection). By default all fields are returned.\n\n**e.g.** `review_id,review_text,rating`",
                    "default": ""
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Return reviews matching a text query.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Maximum number of business reviews to return (1-150).\n\n**Default**: *`20`*",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "call_api()",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Real-Time Performance Monitoring API for TI Systems",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://perf-monitor-metrics.p.rapidapi.com/api/system/performance'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://perf-monitor-metrics.p.rapidapi.com/api/system/performance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://perf-monitor-metrics.p.rapidapi.com/api/system/performance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"perf-monitor-metrics.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Perf monitor metrics",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please check if there is a homeless shelter in zip code 90210?",
        "model_answer": "requests.get(\"https://homeless-shelter.p.rapidapi.com/zipcode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"homeless-shelter.p.rapidapi.com\"}, params={\"zipcode\": \"90210\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Introducing our National Registered Homeless Shelters API for the United States, featuring an extensive and up-to-date database.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://homeless-shelter.p.rapidapi.com/zipcode'\nquerystring = {\"zipcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://homeless-shelter.p.rapidapi.com/zipcode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "zipcode",
                    "description": "Zip code",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://homeless-shelter.p.rapidapi.com/zipcode\"\nquerystring = {\"zipcode\": \"98004\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"homeless-shelter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Homeless Shelter",
            "api_arguments_original": [
                {
                    "name": "zipcode",
                    "type": "STRING",
                    "description": "Zip code",
                    "default": "98004"
                }
            ]
        }
    },
    {
        "query": "What is the current status of the scan with scan_id \"e04d3e18-bda7-420b-b240-894fd3d4992d\" in WebLasso API?",
        "model_answer": "requests.get(\"https://weblasso.p.rapidapi.com/scan-status\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weblasso.p.rapidapi.com\"}, params={\"scan_id\": \"e04d3e18-bda7-420b-b240-894fd3d4992d\"})",
        "original": {
            "domain": "Cybersecurity",
            "framework": "RapidAPI",
            "functionality": "Scan the web for a diverse range of data including subdomains, IP Addresses, web technologies and emails!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weblasso.p.rapidapi.com/scan-status'\nquerystring = {\"scan_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weblasso.p.rapidapi.com/scan-status\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "scan_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weblasso.p.rapidapi.com/scan-status\"\nquerystring = {\"scan_id\": \"e04d3e18-bda7-420b-b240-894fd3d4992d\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weblasso.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WebLasso",
            "api_arguments_original": [
                {
                    "name": "scan_id",
                    "type": "STRING",
                    "description": "",
                    "default": "e04d3e18-bda7-420b-b240-894fd3d4992d"
                }
            ]
        }
    },
    {
        "query": "I want to check if my package with tracking number 123456789 is shipped or not.",
        "model_answer": "requests.get(\"https://soti-sync.p.rapidapi.com/123456789\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"soti-sync.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Application to receive SOTI Sync Event Registration",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://soti-sync.p.rapidapi.com/{PNumber}'\nquerystring = {\"PNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://soti-sync.p.rapidapi.com/{PNumber}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pnumber",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://soti-sync.p.rapidapi.com/{PNumber}\"\nquerystring = {\"PNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"soti-sync.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SOTI Sync",
            "api_arguments_original": [
                {
                    "name": "PNumber",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please check if the coordinates (longitude",
        "model_answer": "requests.get(url=\"https://isitwater-com.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"isitwater-com.p.rapidapi.com\"}, params={\"longitude\": -118.2437, \"latitude\": 34.0522})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "An API to determine if a coordinate is water or land.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://isitwater-com.p.rapidapi.com/'\nquerystring = {\"longitude\": \"\", \"latitude\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://isitwater-com.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "longitude",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "latitude",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://isitwater-com.p.rapidapi.com/\"\nquerystring = {\"longitude\": \"-70.2652276\", \"latitude\": \"41.9029192\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"isitwater-com.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IsItWater.com",
            "api_arguments_original": [
                {
                    "name": "longitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "-70.2652276"
                },
                {
                    "name": "latitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "41.9029192"
                }
            ]
        }
    },
    {
        "query": "I want to extract text from the image \"image.jpg\" using the OCR API.",
        "model_answer": "requests.get(\"https://ocr43.p.rapidapi.com/v1/algos\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ocr43.p.rapidapi.com\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "This API processes images and performs Optical Character Recognition. [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/ocr) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/ocr?utm_source=ocr_rapidapi&utm_medium=endpoints&utm_campaign=rapidapi) [![Telegram](https://img.shields.io/badge/-Telegram%20demo-white?logo=telegram&style=flat)](https://t.me/...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ocr43.p.rapidapi.com/v1/algos'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ocr43.p.rapidapi.com/v1/algos\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ocr43.p.rapidapi.com/v1/algos\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocr43.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OCR",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to fetch the bank card details from the Human Resources API.",
        "model_answer": "requests.get(\"https://human-resources-api.p.rapidapi.com/api/cards\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"human-resources-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API for supplying demo human resources data of employees and their bank cards.\nUp to 900 samples per table. You can query the employees' table or bank cards' table.\nWith Fast Response. and also paginate through each table, metadata for pagination is included in the response of the pagination route.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://human-resources-api.p.rapidapi.com/api/cards'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://human-resources-api.p.rapidapi.com/api/cards\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://human-resources-api.p.rapidapi.com/api/cards\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"human-resources-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Human Resources API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Could you please provide me with the cryptocurrency exchange details for ID 5?",
        "model_answer": "requests.get(\"https://coinlore-cryptocurrency.p.rapidapi.com/api/exchange/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"coinlore-cryptocurrency.p.rapidapi.com\"}, params={\"id\": \"5\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Provides cryptocurrency prices,exchanges,markets api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://coinlore-cryptocurrency.p.rapidapi.com/api/exchange/'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://coinlore-cryptocurrency.p.rapidapi.com/api/exchange/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://coinlore-cryptocurrency.p.rapidapi.com/api/exchange/\"\nquerystring = {\"id\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"coinlore-cryptocurrency.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CoinLore Cryptocurrency",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to get information about a product using the provided API.",
        "model_answer": "response = requests.get(\"https://product39.p.rapidapi.com/products\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"product39.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "For Training",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://product39.p.rapidapi.com/products'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://product39.p.rapidapi.com/products\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://product39.p.rapidapi.com/products\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"product39.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Product",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please download the YouTube video with the ID \"UxxajLWwzqY\" in the US region.",
        "model_answer": "response = requests.get(\"https://ytstream-download-youtube-videos.p.rapidapi.com/dl\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ytstream-download-youtube-videos.p.rapidapi.com\"}, params={\"id\": \"UxxajLWwzqY\", \"cgeo\": \"US\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Download or stream YouTube Videos/MP4.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ytstream-download-youtube-videos.p.rapidapi.com/dl'\nquerystring = {\"id\": \"\", \"cgeo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ytstream-download-youtube-videos.p.rapidapi.com/dl\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "Youtube Video Id.",
                    "type": "STRING"
                },
                {
                    "name": "cgeo",
                    "description": "Country code in ISO 3166 format of the end user.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ytstream-download-youtube-videos.p.rapidapi.com/dl\"\nquerystring = {\"cgeo\": \"\", \"id\": \"UxxajLWwzqY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ytstream-download-youtube-videos.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YTStream - Download YouTube Videos",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Youtube Video Id.",
                    "default": "UxxajLWwzqY"
                },
                {
                    "name": "cgeo",
                    "type": "STRING",
                    "description": "Country code in ISO 3166 format of the end user.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the lowest bins data from the Hypixel Lowest Bins API.",
        "model_answer": "requests.get(\"https://lowest-bins-api.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"lowest-bins-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Hypixel Lowest bins api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lowest-bins-api.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lowest-bins-api.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lowest-bins-api.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lowest-bins-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lowest Bins Api",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me check the geolocation of '1600 Pennsylvania Avenue, Washington DC'?",
        "model_answer": "response = requests.get(\"https://address-normalization-and-geocoding.p.rapidapi.com/geocode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"address-normalization-and-geocoding.p.rapidapi.com\"}, params={\"address\": \"1600 Pennsylvania Avenue, Washington DC\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Takes free text address input, standardizes and outputs rooftop latitude/longitude geocode coordinates.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://address-normalization-and-geocoding.p.rapidapi.com/geocode'\nquerystring = {\"address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://address-normalization-and-geocoding.p.rapidapi.com/geocode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "address",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://address-normalization-and-geocoding.p.rapidapi.com/geocode\"\nquerystring = {\"address\": \"1600 pennsylvania ave washington dc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"address-normalization-and-geocoding.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Address Normalization and Geocoding",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "1600 pennsylvania ave washington dc"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the options prices for the stock ticker AAPL?",
        "model_answer": "requests.get(\"https://stock-and-options.p.rapidapi.com/options/aapl\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"stock-and-options.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "No. 1 rated U.S listed stock and options data provider with the lowest cost. The cloud based API has a simple interface and return easy to consume data in JSON format for options prices.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stock-and-options.p.rapidapi.com/options/aapl'\nquerystring = {\"ticker\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stock-and-options.p.rapidapi.com/options/aapl\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ticker",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stock-and-options.p.rapidapi.com/options/aapl\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stock-and-options.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stock And Options",
            "api_arguments_original": [
                {
                    "name": "ticker",
                    "type": "string",
                    "description": "",
                    "default": "aapl"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the list of matches in the USA for the Surebets 2 API?",
        "model_answer": "requests.get(\"https://surebets-2.p.rapidapi.com/matches/usa\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"surebets-2.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "#1 Most Hated API by Bookmakers: Leagues, Games, Odds & Arbitrage Bets for 90+ bookmakers",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://surebets-2.p.rapidapi.com/matches/usa'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://surebets-2.p.rapidapi.com/matches/usa\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://surebets-2.p.rapidapi.com/matches/usa\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"surebets-2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Surebets 2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you retrieve a list of FM radio stations from around the world?",
        "model_answer": "requests.get(\"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_quotes.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com\"}, params={\"limit\": \"10\", \"page\": \"1\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "This is one of the largest collection of FM Radios API from around the world. Listen Updated 79,000+ Radio stations. All the Stations are Updating Daily & Weekly basis, New stations are Adding As soon as possible. At least 100+ Stations Are adding and 1000+ Stations are fixing to this API Weekly (This is minium ratio).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_quotes.php'\nquerystring = {\"limit\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_quotes.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "description": "Item limitations per page. (default: 10)",
                    "type": "NUMBER"
                },
                {
                    "name": "page",
                    "description": "Page number to be displayed. (default: 1)",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com/get_quotes.php\"\nquerystring = {\"limit\": \"10\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"radio-world-75-000-worldwide-fm-radio-stations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Radio World - 75,000+ Worldwide FM Radio stations..",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Item limitations per page. (default: 10)",
                    "default": "10"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number to be displayed. (default: 1)",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you check the ESG risk rating for the stock ticker AAPL?",
        "model_answer": "requests.get(\"https://esg-risk-ratings-for-stocks.p.rapidapi.com/api/v1/resources/esg\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"esg-risk-ratings-for-stocks.p.rapidapi.com\"}, params={\"ticker\": \"AAPL\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "ESG Risk Ratings assess the degree to which a company's enterprise business value is at risk driven by environmental, social and governance issues.  Rating companies along ESG dimensions allows socially conscious investors to screen potential investments to fit with their investment goals and values.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://esg-risk-ratings-for-stocks.p.rapidapi.com/api/v1/resources/esg'\nquerystring = {\"ticker\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://esg-risk-ratings-for-stocks.p.rapidapi.com/api/v1/resources/esg\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ticker",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://esg-risk-ratings-for-stocks.p.rapidapi.com/api/v1/resources/esg\"\nquerystring = {\"ticker\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"esg-risk-ratings-for-stocks.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ESG Risk Ratings for Stocks",
            "api_arguments_original": [
                {
                    "name": "ticker",
                    "type": "STRING",
                    "description": "",
                    "default": "AAPL"
                }
            ]
        }
    },
    {
        "query": "I want to extract topics from the text \"I love reading books and playing video games\" using the Walnut Topic API.",
        "model_answer": "requests.get(\"https://walnut-topic.p.rapidapi.com/wrt_transformer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"walnut-topic.p.rapidapi.com\"}, params={\"text\": \"I love reading books and playing video games\", \"topics\": \"furniture,eletronics,books,billing,promotion,urgent,design\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "AI powered topic extraction from texts.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://walnut-topic.p.rapidapi.com/wrt_transformer'\nquerystring = {\"text\": \"\", \"topics\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://walnut-topic.p.rapidapi.com/wrt_transformer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "topics",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://walnut-topic.p.rapidapi.com/wrt_transformer\"\nquerystring = {\"text\": \"My tablet is not working and I want a refund as soon as possible!\", \"topics\": \"furniture,eletronics,books,billing,promotion,urgent,design\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"walnut-topic.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Walnut Topic",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "My tablet is not working and I want a refund as soon as possible!"
                },
                {
                    "name": "topics",
                    "type": "STRING",
                    "description": "",
                    "default": "furniture,eletronics,books,billing,promotion,urgent,design"
                }
            ]
        }
    },
    {
        "query": "Can you check the K\u00f6ppen climate classification for a location with latitude -60.069 and longitude -3.198?",
        "model_answer": "requests.get(\"https://koppen-climate-classification.p.rapidapi.com/classification\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"koppen-climate-classification.p.rapidapi.com\"}, params={\"lon\": \"-60.069\", \"lat\": \"-3.198\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Get the K\u00f6ppen climate classificatin for any location in the world using latitude and longitude.  Results in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://koppen-climate-classification.p.rapidapi.com/classification'\nquerystring = {\"lon\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://koppen-climate-classification.p.rapidapi.com/classification\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lon",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lat",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://koppen-climate-classification.p.rapidapi.com/classification\"\nquerystring = {\"lon\": \"-60.069\", \"lat\": \"-3.198\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"koppen-climate-classification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Koppen Climate Classification",
            "api_arguments_original": [
                {
                    "name": "lon",
                    "type": "STRING",
                    "description": "",
                    "default": "-60.069"
                },
                {
                    "name": "lat",
                    "type": "STRING",
                    "description": "",
                    "default": "-3.198"
                }
            ]
        }
    },
    {
        "query": "I want to get the general product description for the Amazon product with ID B08L5NP6NG using the Abiola Amazon Data Scraper API.",
        "model_answer": "requests.get(\"https://abiola-amazon-data-scraper.p.rapidapi.com/products/B08L5NP6NG\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"abiola-amazon-data-scraper.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Amazon Data Scrapper makes it easy and fast to access products, price and review data from Amazon in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://abiola-amazon-data-scraper.p.rapidapi.com/products/B08L5NP6NG'\nquerystring = {\"productId\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://abiola-amazon-data-scraper.p.rapidapi.com/products/B08L5NP6NG\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "productid",
                    "description": "This endpoint get the general product description of any amazon product.",
                    "type": "STRING"
                },
                {
                    "name": "api_key",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://abiola-amazon-data-scraper.p.rapidapi.com/products/B08L5NP6NG\"\nquerystring = {\"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"abiola-amazon-data-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Abiola Amazon Data Scraper",
            "api_arguments_original": [
                {
                    "name": "productId",
                    "type": "STRING",
                    "description": "This endpoint get the general product description of any amazon product.",
                    "default": "B08L5NP6NG"
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide the current fear and greed index.",
        "model_answer": "requests.get(\"https://fear-and-greed-index.p.rapidapi.com/v1/fgi\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"fear-and-greed-index.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Index calculated by https://money.cnn.com/data/fear-and-greed/ ![](https://tip.ep-proxy.net/t/ra-fgi)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fear-and-greed-index.p.rapidapi.com/v1/fgi'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fear-and-greed-index.p.rapidapi.com/v1/fgi\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fear-and-greed-index.p.rapidapi.com/v1/fgi\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fear-and-greed-index.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fear and greed index",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the city Jakarta is experiencing rain right now.",
        "model_answer": "requests.get(\"https://indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com/weather/jakarta\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Provide most accurate data of Indonesian cities weather and forecast plus latest earthquake alert.\n\nPrakiraan cuaca, suhu udara, kelembapan udara, kecepatan angin, dan arah angin untuk kota-kota besar di 34 provinsi di Indonesia dalam waktu 3 harian dan gempa terbaru dengan format JSON yang lebih ramah.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com/weather/jawa-timur/surabaya'\nquerystring = {\"province\": \"\", \"city\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com/weather/jawa-timur/surabaya\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "province",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "city",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com/weather/jawa-timur/surabaya\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indonesia-most-accurate-weather-and-earthquake.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indonesia Most Accurate Weather and Earthquake",
            "api_arguments_original": [
                {
                    "name": "province",
                    "type": "string",
                    "description": "",
                    "default": "jawa-timur"
                },
                {
                    "name": "city",
                    "type": "string",
                    "description": "",
                    "default": "surabaya"
                }
            ]
        }
    },
    {
        "query": "What are the latest economical events?",
        "model_answer": "requests.get(\"https://palmy-investing-api.p.rapidapi.com/api/economical/events/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"palmy-investing-api.p.rapidapi.com\"}, params={\"page\": \"\", \"page_size\": \"\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "The best fit for quantitative stock research. It's free and without data restrictions. 35+ endpoints.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://palmy-investing-api.p.rapidapi.com/api/economical/events/'\nquerystring = {\"page\": \"\", \"page_size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://palmy-investing-api.p.rapidapi.com/api/economical/events/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "A page number within the paginated result set.",
                    "type": "NUMBER"
                },
                {
                    "name": "page_size",
                    "description": "Number of results to return per page.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://palmy-investing-api.p.rapidapi.com/api/economical/events/\"\nquerystring = {\"page\": \"\", \"page_size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"palmy-investing-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Palmy Investing API",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "A page number within the paginated result set.",
                    "default": ""
                },
                {
                    "name": "page_size",
                    "type": "NUMBER",
                    "description": "Number of results to return per page.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "How can I check my Viber balance using the D7 Viber API?",
        "model_answer": "requests.get(\"https://d7-viber.p.rapidapi.com/messages/v1/balance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"d7-viber.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Experience boundless connectivity with the D7API Gateway, connecting you to a vast messaging network. Now with Viber integration, enjoy seamless communication and stay connected like never before.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://d7-viber.p.rapidapi.com/messages/v1/balance'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://d7-viber.p.rapidapi.com/messages/v1/balance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://d7-viber.p.rapidapi.com/messages/v1/balance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"d7-viber.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "D7 Viber",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get real-time pricing and market activity for Binance exchange.",
        "model_answer": "requests.get(\"https://crypto-exchanges1.p.rapidapi.com/exchanges/binance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crypto-exchanges1.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Useful tool for real-time pricing and market activity for over 1,000 cryptocurrencies. By collecting exchange data from thousands of markets, we are able to offer transparent and accurate data on asset price and availability.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crypto-exchanges1.p.rapidapi.com/exchanges/binance'\nquerystring = {\"exchangeId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crypto-exchanges1.p.rapidapi.com/exchanges/binance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "exchangeid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crypto-exchanges1.p.rapidapi.com/exchanges/binance\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-exchanges1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crypto Exchanges",
            "api_arguments_original": [
                {
                    "name": "exchangeId",
                    "type": "string",
                    "description": "",
                    "default": "binance"
                }
            ]
        }
    },
    {
        "query": "Please provide me the car data by calling the Car Specs API.",
        "model_answer": "requests.get(\"https://car-specs.p.rapidapi.com/v2/cars/download-database\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"car-specs.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Fast, simple and reliable API to retrieve car data. Contains data on almost all car manufacturers and models, updated regularly.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://car-specs.p.rapidapi.com/v2/cars/download-database'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://car-specs.p.rapidapi.com/v2/cars/download-database\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://car-specs.p.rapidapi.com/v2/cars/download-database\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"car-specs.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Car Specs",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the activity details for this TripIt object ID",
        "model_answer": "requests.get(\"https://community-tripit.p.rapidapi.com/get/activity/id/abc123/format/json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"community-tripit.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "TripIt organizes travel plans into an itinerary that has all of your trip details in one place. Simply forward confirmation emails to plans@tripit.com and TripIt will automatically build an itinerary for your trip that you can access anytime, either online or from a mobile device. With the TripIt API, you can...\r\n\r\nAdd travel information to a TripIt account, enabling:\r\nInstant availability of clean, professional looking itineraries accessible on the web or via mobile device\r\nSeamless calendar integration via TripIt\u2019s iCal feeds feature\r\nAccess to many third party productivity applications that use the TripIt API\r\n\r\nImport travel information from a TripIt traveler\u2019s account, enabling:\r\nSeamless email import technology for your customers to add travel plans to your application\r\nInsight into a traveler\u2019s entire trip (air, hotel, car, restaurants, meetings, etc.)\r\nOutputting travel data to social network applications such as Facebook and LinkedIn",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-tripit.p.rapidapi.com/get/{object_type}/id/{TripIt_Object_ID}/format/json'\nquerystring = {\"object_type\": \"\", \"tripit_object_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-tripit.p.rapidapi.com/get/{object_type}/id/{TripIt_Object_ID}/format/json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "object_type",
                    "description": "is one of the following strings:  air activity car cruise directions lodging map note points_program profile rail restaurant transport trip weather",
                    "type": "STRING"
                },
                {
                    "name": "tripit_object_id",
                    "description": "is the object ID of the TripIt object being requested.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-tripit.p.rapidapi.com/get/{object_type}/id/{TripIt_Object_ID}/format/json\"\nquerystring = {\"object_type\": \"\", \"tripit_object_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-tripit.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tripit",
            "api_arguments_original": [
                {
                    "name": "object_type",
                    "type": "STRING",
                    "description": "is one of the following strings:  air activity car cruise directions lodging map note points_program profile rail restaurant transport trip weather",
                    "default": ""
                },
                {
                    "name": "tripit_object_id",
                    "type": "STRING",
                    "description": "is the object ID of the TripIt object being requested.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the top 100 greatest movies of all time according to IMDb?",
        "model_answer": "requests.get(\"https://imdb-top-100-movies.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"imdb-top-100-movies.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Top 100 Greatest Movies of All Time. Easy to use. It also includes the YouTube trailers.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://imdb-top-100-movies.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://imdb-top-100-movies.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://imdb-top-100-movies.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"imdb-top-100-movies.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IMDb Top 100 Movies",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you convert the number 1234 to spelled-out format in English?",
        "model_answer": "requests.get(\"https://spellout.p.rapidapi.com/v1/languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"spellout.p.rapidapi.com\"}, params={\"nameFilter\": \"\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "This API allows converting numbers to spelled-out format in any language, e.g.: 1234 -> \u201cone thousand two hundred thirty-four\u201d.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://spellout.p.rapidapi.com/v1/languages'\nquerystring = {\"nameFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://spellout.p.rapidapi.com/v1/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "namefilter",
                    "description": "Filter as \"contains\" by language name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://spellout.p.rapidapi.com/v1/languages\"\nquerystring = {\"nameFilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spellout.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Spellout",
            "api_arguments_original": [
                {
                    "name": "nameFilter",
                    "type": "STRING",
                    "description": "Filter as \"contains\" by language name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to scan block 456 on the Optimism blockchain network.",
        "model_answer": "requests.get(\"https://optimism.p.rapidapi.com/blockchain_block\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"optimism.p.rapidapi.com\"}, params={\"block\": \"456\", \"network\": \"\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "All-In-One access to the Optimism blockchain data!\n\nMore features are coming soon!\n\nFeedback and feature requests should be sent to:\nangleitnerchristoph123@gmail.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://optimism.p.rapidapi.com/blockchain_block'\nquerystring = {\"block\": \"\", \"network\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://optimism.p.rapidapi.com/blockchain_block\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "block",
                    "description": "Block you want to scan!",
                    "type": "STRING"
                },
                {
                    "name": "network",
                    "description": "Specify wich network you wanna use! (mainnet/testnet)",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://optimism.p.rapidapi.com/blockchain_block\"\nquerystring = {\"block\": \"123\", \"network\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"optimism.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Optimism",
            "api_arguments_original": [
                {
                    "name": "block",
                    "type": "STRING",
                    "description": "Block you want to scan!",
                    "default": "123"
                },
                {
                    "name": "network",
                    "type": "STRING",
                    "description": "Specify wich network you wanna use! (mainnet/testnet)",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please fetch the order details with orderId=12345 from the platformbil API.",
        "model_answer": "requests.get(\"https://platformbil.p.rapidapi.com/store/order/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"platformbil.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": null,
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://platformbil.p.rapidapi.com/store/order/{orderId}'\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://platformbil.p.rapidapi.com/store/order/{orderId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "orderid",
                    "description": "ID of pet that needs to be fetched",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://platformbil.p.rapidapi.com/store/order/{orderId}\"\nquerystring = {\"orderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"platformbil.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "platformbil",
            "api_arguments_original": [
                {
                    "name": "orderId",
                    "type": "NUMBER",
                    "description": "ID of pet that needs to be fetched",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve energy emission data from the CAISO API for the interval between September 1, 2022 and September 30, 2022.",
        "model_answer": "requests.get(\"https://caiso.p.rapidapi.com/caiso\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"caiso.p.rapidapi.com\"}, params={\"type\": \"co2\", \"enddate\": \"20220930\", \"interval\": \"30\", \"startdate\": \"20220901\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "API for California Independent System Operator data provided from caiso.com. It includes data on energy emissions, demand, supply, and prices. Updated daily.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://caiso.p.rapidapi.com/caiso'\nquerystring = {\"type\": \"\", \"enddate\": \"\", \"interval\": \"\", \"startdate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://caiso.p.rapidapi.com/caiso\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "type",
                    "description": "Type needs to be one of \\\\\\\\\\\\\\\"co2\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"fuelsource\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"netdemand\\\\\\\\\\\\\\\", or \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\". The \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" value will combine the results for the three other tables into a single CSV file with all the columns you requested.",
                    "type": "STRING"
                },
                {
                    "name": "enddate",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "interval",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "startdate",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://caiso.p.rapidapi.com/caiso\"\nquerystring = {\"enddate\": \"20220901\", \"interval\": \"30\", \"type\": \"co2\", \"startdate\": \"20220101\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"caiso.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CAISO",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Type needs to be one of \\\\\\\\\\\\\\\"co2\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"fuelsource\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"netdemand\\\\\\\\\\\\\\\", or \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\". The \\\\\\\\\\\\\\\"all\\\\\\\\\\\\\\\" value will combine the results for the three other tables into a single CSV file with all the columns you requested.",
                    "default": "co2"
                },
                {
                    "name": "enddate",
                    "type": "STRING",
                    "description": "",
                    "default": "20220901"
                },
                {
                    "name": "interval",
                    "type": "STRING",
                    "description": "",
                    "default": "30"
                },
                {
                    "name": "startdate",
                    "type": "STRING",
                    "description": "",
                    "default": "20220101"
                }
            ]
        }
    },
    {
        "query": "I want to check if example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"check-disposable-email.p.rapidapi.com\"}, params={\"email\" \"example@gmail.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "APISOLUTION services provide a comprehensive API for fast email validation and verification for any developer to use on start-ups and staff projects.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fast-email-verifier.p.rapidapi.com/IsRoleAccount'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fast-email-verifier.p.rapidapi.com/IsRoleAccount\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fast-email-verifier.p.rapidapi.com/IsRoleAccount\"\nquerystring = {\"domain\": \"domain.org\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fast-email-verifier.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "fast Email verifier",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "domain.org"
                }
            ]
        }
    },
    {
        "query": "Can you extract the entities, full matches URLs, partial matches URLs, visual matches URLs, pages, locale, and dimensions from this image",
        "model_answer": "requests.get(\"https://web-detection.p.rapidapi.com/web-detection\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"web-detection.p.rapidapi.com\"}, params={\"image\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Extract list of entities, full matches urls, partial matches urls, visual matches urls, pages, locale and dimensions from image using (google vision web detection)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://web-detection.p.rapidapi.com/web-detection'\nquerystring = {\"image\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://web-detection.p.rapidapi.com/web-detection\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "image",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://web-detection.p.rapidapi.com/web-detection\"\nquerystring = {\"image\": \"https://avatars.mds.yandex.net/get-mpic/5215925/img_id4862938180215999126.jpeg/orig\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"web-detection.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Web Detection",
            "api_arguments_original": [
                {
                    "name": "image",
                    "type": "STRING",
                    "description": "",
                    "default": "https://avatars.mds.yandex.net/get-mpic/5215925/img_id4862938180215999126.jpeg/orig"
                }
            ]
        }
    },
    {
        "query": "Can you please fetch the real estate property details for property_id 12345?",
        "model_answer": "requests.get(\"https://realtor16.p.rapidapi.com/property\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"realtor16.p.rapidapi.com\"}, params={\"property_id\": \"12345\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Query real time data of US real estate properties and agents",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://realtor16.p.rapidapi.com/property'\nquerystring = {\"property_id\": \"\", \"address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://realtor16.p.rapidapi.com/property\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "property_id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "address",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://realtor16.p.rapidapi.com/property\"\nquerystring = {\"property_id\": \"1497548641\", \"address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"realtor16.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Realtor",
            "api_arguments_original": [
                {
                    "name": "property_id",
                    "type": "STRING",
                    "description": "",
                    "default": "1497548641"
                },
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get live match updates for football in real-time.",
        "model_answer": "requests.get(\"https://allscores.p.rapidapi.com/api/allscores/news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"allscores.p.rapidapi.com\"}, params={\"sport\": 1, \"timezone\": \"America/Chicago\", \"langId\": 1})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Beware! Our live match updates may be faster than other API's.\nEnjoy our 24/7 wide coverage of real time scores data for 10 different sports and over 2,000 competitions worldwide, including Real-time Stats, Breaking News, In-Play Insights, Lineups, Live Tables, Fixtures, Social Buzz, Odds and much more.\nSupported 10 Sports Types: Football, Rugby, Tennis, Basketball, Cricket, Ice Hockey, Baseball, Volleyball, American football and Handball.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://allscores.p.rapidapi.com/api/allscores/news'\nquerystring = {\"sport\": \"\", \"timezone\": \"\", \"langId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://allscores.p.rapidapi.com/api/allscores/news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sport",
                    "description": "The sport.",
                    "type": "NUMBER"
                },
                {
                    "name": "timezone",
                    "description": "The timezone name. Check the tutorials.",
                    "type": "STRING"
                },
                {
                    "name": "langid",
                    "description": "The language id. Check the tutorials.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://allscores.p.rapidapi.com/api/allscores/news\"\nquerystring = {\"sport\": 1, \"timezone\": \"America/Chicago\", \"langId\": 1}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"allscores.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AllScores",
            "api_arguments_original": [
                {
                    "name": "sport",
                    "type": "NUMBER",
                    "description": "The sport.",
                    "default": 1
                },
                {
                    "name": "timezone",
                    "type": "STRING",
                    "description": "The timezone name. Check the tutorials.",
                    "default": "America/Chicago"
                },
                {
                    "name": "langId",
                    "type": "NUMBER",
                    "description": "The language id. Check the tutorials.",
                    "default": 1
                }
            ]
        }
    },
    {
        "query": "Could you please generate random user data with AI? I need 3 results with nationality as \"fr\" and gender as \"male\".",
        "model_answer": "response = requests.get(\"https://ai-random-user-generator.p.rapidapi.com/random-user\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ai-random-user-generator.p.rapidapi.com\"}, params={\"results\": \"3\", \"nation\": \"fr\", \"gender\": \"male\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "AI-based freemium API for generating random user data with AI. Like Lorem Ipsum, but for people.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ai-random-user-generator.p.rapidapi.com/random-user'\nquerystring = {\"results\": \"\", \"nation\": \"\", \"gender\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ai-random-user-generator.p.rapidapi.com/random-user\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "results",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "nation",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "gender",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ai-random-user-generator.p.rapidapi.com/random-user\"\nquerystring = {\"results\": \"7\", \"nation\": \"en_US\", \"gender\": \"female\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-random-user-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AI Random User Generator",
            "api_arguments_original": [
                {
                    "name": "results",
                    "type": "STRING",
                    "description": "",
                    "default": "7"
                },
                {
                    "name": "nation",
                    "type": "STRING",
                    "description": "",
                    "default": "en_US"
                },
                {
                    "name": "gender",
                    "type": "STRING",
                    "description": "",
                    "default": "female"
                }
            ]
        }
    },
    {
        "query": "I want to get user information from the testing API.",
        "model_answer": "requests.get(\"https://testing144.p.rapidapi.com/test/instore/wechat/getUserInformation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"testing144.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "test api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testing144.p.rapidapi.com/test/instore/wechat/getUserInformation'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testing144.p.rapidapi.com/test/instore/wechat/getUserInformation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testing144.p.rapidapi.com/test/instore/wechat/getUserInformation\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testing144.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Testing_v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please check the definition of the word \"cat\" using the Dicolink API?",
        "model_answer": "requests.get(\"https://dicolink.p.rapidapi.com/mot/cat/definitions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dicolink.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Dicolink API lets you retrieve information about French words, including definitions, synonyms, antonyms, quotes, expressions, lexical field, scrabble score, and much more...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dicolink.p.rapidapi.com/mot/cheval/definitions'\nquerystring = {\"mot\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dicolink.p.rapidapi.com/mot/cheval/definitions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "mot",
                    "description": "Set the word you want to search",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dicolink.p.rapidapi.com/mot/cheval/definitions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dicolink.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dicolink",
            "api_arguments_original": [
                {
                    "name": "mot",
                    "type": "string",
                    "description": "Set the word you want to search",
                    "default": "cheval"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a list of mineable coins?",
        "model_answer": "requests.get(\"https://mineable-coins.p.rapidapi.com/coins\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mineable-coins.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Access coin rewards, mining difficulty, algorithms, and other useful data for hundreds of coins and multi pools.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mineable-coins.p.rapidapi.com/coins'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mineable-coins.p.rapidapi.com/coins\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mineable-coins.p.rapidapi.com/coins\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mineable-coins.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mineable coins",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get hotel reviews for a hotel with ID 1178275040, in English language (en_US) and on the first page.",
        "model_answer": "requests.get(\"https://hotels4.p.rapidapi.com/reviews/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hotels4.p.rapidapi.com\"}, params={\"id\": \"1178275040\", \"loc\": \"en_US\", \"page\": 1})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "This API helps to query rooms, price, facilities, policities, etc information from many hotels around the world to create a travelling site/application, such as : hotels.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hotels4.p.rapidapi.com/reviews/list'\nquerystring = {\"id\": \"\", \"loc\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hotels4.p.rapidapi.com/reviews/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "The value of id field that received from .../properties/list endpoint",
                    "type": "NUMBER"
                },
                {
                    "name": "loc",
                    "description": "The language code",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "For paging purpose",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hotels4.p.rapidapi.com/reviews/list\"\nquerystring = {\"id\": \"1178275040\", \"loc\": \"en_US\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hotels4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hotels",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "The value of id field that received from .../properties/list endpoint",
                    "default": "1178275040"
                },
                {
                    "name": "loc",
                    "type": "STRING",
                    "description": "The language code",
                    "default": "en_US"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "For paging purpose",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest information about the product with ASIN B09DKV849B on Amazon's U.S. marketplace?",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "clickbank",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://clickbankuniversity.p.rapidapi.comemail'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://clickbankuniversity.p.rapidapi.comemail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://clickbankuniversity.p.rapidapi.comemail\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"clickbankuniversity.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ClickbankUniversity",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get information about the user's web browser using the BrowserObject API?",
        "model_answer": "requests.get(\"https://fraudlabs-browserobject-v1.p.rapidapi.com/browserobjectwebservice.asmx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fraudlabs-browserobject-v1.p.rapidapi.com\"}, params={\"USERAGENTSTRING\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3\", \"LICENSE\": \"YOUR-API-LICENSE-KEY\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "The BrowserObject Browser Detection Web Service allows instant detection of online visitor's Web Browser information.\r\n\r\nSign up for free license key at http://www.fraudlabs.com/freelicense.aspx?PackageID=8 which allows up to 90 queries a month.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fraudlabs-browserobject-v1.p.rapidapi.com/browserobjectwebservice.asmx'\nquerystring = {\"USERAGENTSTRING\": \"\", \"LICENSE\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fraudlabs-browserobject-v1.p.rapidapi.com/browserobjectwebservice.asmx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "useragentstring",
                    "description": "The browser user agent string.",
                    "type": "STRING"
                },
                {
                    "name": "license",
                    "description": "API license key.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fraudlabs-browserobject-v1.p.rapidapi.com/browserobjectwebservice.asmx\"\nquerystring = {\"USERAGENTSTRING\": \"\", \"LICENSE\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fraudlabs-browserobject-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BrowserObject",
            "api_arguments_original": [
                {
                    "name": "USERAGENTSTRING",
                    "type": "STRING",
                    "description": "The browser user agent string.",
                    "default": ""
                },
                {
                    "name": "LICENSE",
                    "type": "STRING",
                    "description": "API license key.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me find all missing letters for the word \"unbelievable\"?",
        "model_answer": "requests.get(\"https://crossword-solver.p.rapidapi.com/cross\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crossword-solver.p.rapidapi.com\"}, params={\"word\": \"u_n_b_e_l_i_e_v_a_b_l_e\", \"lang\": \"\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Find all missing letters! 6.7 million words in English, Spanish and German. High performance algorithms. Brute-force assisted.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crossword-solver.p.rapidapi.com/cross'\nquerystring = {\"word\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crossword-solver.p.rapidapi.com/cross\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "word",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crossword-solver.p.rapidapi.com/cross\"\nquerystring = {\"lang\": \"\", \"word\": \"u_b_l_e_a_l_\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crossword-solver.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CROSSWORD Solver",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "u_b_l_e_a_l_"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to convert my image.jpg file to a PDF using the All in One File Converter API.",
        "model_answer": "requests.get(\"https://all-in-one-file-converter.p.rapidapi.com/api/supported-file\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"all-in-one-file-converter.p.rapidapi.com\"}, params={\"input\": \"jpg\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "All in one file converter can convert different types of files. It can convert audio, video, images, documents, and archive files.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-in-one-file-converter.p.rapidapi.com/api/supported-file'\nquerystring = {\"input\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-in-one-file-converter.p.rapidapi.com/api/supported-file\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "input",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-in-one-file-converter.p.rapidapi.com/api/supported-file\"\nquerystring = {\"input\": \"jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-in-one-file-converter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "All in One FIle Converter",
            "api_arguments_original": [
                {
                    "name": "input",
                    "type": "STRING",
                    "description": "",
                    "default": "jpg"
                }
            ]
        }
    },
    {
        "query": "How can I use the TestAPI_v3 to get the hello message?",
        "model_answer": "requests.get(\"https://testapi708.p.rapidapi.com/admin-api/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"testapi708.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "returns hello",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testapi708.p.rapidapi.com/admin-api/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testapi708.p.rapidapi.com/admin-api/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testapi708.p.rapidapi.com/admin-api/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testapi708.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TestAPI_v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to use the Code For You API to run a program with the following inputs",
        "model_answer": "requests.get(\"https://code-for-you.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"code-for-you.p.rapidapi.com\"}, params={\"CodeIsFun\": \"print('Hello, World!')\", \"CodeForYou\": \"Python program\", \"CodeWithMe\": \"{\\\"P1\\\": \\\"Python\\\", \\\"P2\\\": \\\"Computer\\\"}\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "CodeIsFun",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://code-for-you.p.rapidapi.com/'\nquerystring = {\"CodeIsFun\": \"\", \"CodeForYou\": \"\", \"CodeWithMe\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://code-for-you.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "codeisfun",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "codeforyou",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "codewithme",
                    "description": "",
                    "type": "OBJECT"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://code-for-you.p.rapidapi.com/\"\nquerystring = {\"CodeIsFun\": \"CodeIsFun\", \"CodeForYou\": \"hello what are you coding today\", \"CodeWithMe\": \"{\\\"P1\\\":\\\"Python\\\", \\\"P2\\\":\\\"Computer\\\"}\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"code-for-you.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Code For You",
            "api_arguments_original": [
                {
                    "name": "CodeIsFun",
                    "type": "STRING",
                    "description": "",
                    "default": "CodeIsFun"
                },
                {
                    "name": "CodeForYou",
                    "type": "STRING",
                    "description": "",
                    "default": "hello what are you coding today"
                },
                {
                    "name": "CodeWithMe",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{\"P1\":\"Python\", \"P2\":\"Computer\"}"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with today's Wordle answers?",
        "model_answer": "requests.get(\"https://wordle-answers-solutions.p.rapidapi.com/today\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"wordle-answers-solutions.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Wordle Answers is an api where you can get all the answers of the popular word game Wordle.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wordle-answers-solutions.p.rapidapi.com/today'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wordle-answers-solutions.p.rapidapi.com/today\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wordle-answers-solutions.p.rapidapi.com/today\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wordle-answers-solutions.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wordle Answers Solutions",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get a list of countries using the Global Data API.",
        "model_answer": "requests.get(\"https://global-data.p.rapidapi.com/country/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"global-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "General API to be used for together with other APIs that based on various sports",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://global-data.p.rapidapi.com/country/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://global-data.p.rapidapi.com/country/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://global-data.p.rapidapi.com/country/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"global-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Global Data",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check the VIN number \"1HGCM82633A123456\" for me?",
        "model_answer": "requests.get(\"https://license-plate-lookup2.p.rapidapi.com/license_plate_lookup\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"license-plate-lookup2.p.rapidapi.com\"}, params={\"state_code\": \"AL\", \"license_plate\": \"1HGCM82633A123456\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Check VIN by US license plate and state. \nVIN decoder from [VIN decoder](https://rapidapi.com/dominonet-lTpEE6zONeS/api/vin-decoder19).\n[View documents](https://rapidapi.com/dominonet-lTpEE6zONeS/api/vin-decoder19/details)\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://license-plate-lookup2.p.rapidapi.com/license_plate_lookup'\nquerystring = {\"state_code\": \"\", \"license_plate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://license-plate-lookup2.p.rapidapi.com/license_plate_lookup\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "state_code",
                    "description": "**Run a License Plate Search By State**\nAL,AK,AZ,AR,CA,CO,CT,DE,DC,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY",
                    "type": "STRING"
                },
                {
                    "name": "license_plate",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://license-plate-lookup2.p.rapidapi.com/license_plate_lookup\"\nquerystring = {\"state_code\": \"AL\", \"license_plate\": \"S8TAN\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"license-plate-lookup2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "License Plate Lookup",
            "api_arguments_original": [
                {
                    "name": "state_code",
                    "type": "STRING",
                    "description": "**Run a License Plate Search By State**\nAL,AK,AZ,AR,CA,CO,CT,DE,DC,FL,GA,HI,ID,IL,IN,IA,KS,KY,LA,ME,MD,MA,MI,MN,MS,MO,MT,NE,NV,NH,NJ,NM,NY,NC,ND,OH,OK,OR,PA,RI,SC,SD,TN,TX,UT,VT,VA,WA,WV,WI,WY",
                    "default": "AL"
                },
                {
                    "name": "license_plate",
                    "type": "STRING",
                    "description": "",
                    "default": "S8TAN"
                }
            ]
        }
    },
    {
        "query": "I want to search for information about Elon Musk in the B2BHint API.",
        "model_answer": "requests.get(\"https://b2bhint.p.rapidapi.com/api/v1/rapidapi/person/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"b2bhint.p.rapidapi.com\"}, params={\"q\": \"Elon Musk\", \"countryCode\": \"us\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "B2BHint is a business tool that provides access to official registry data on companies and the people associated with them. With B2BHint, everyone can easily search and explore information on companies, making informed decisions and growing their business.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://b2bhint.p.rapidapi.com/api/v1/rapidapi/person/search'\nquerystring = {\"q\": \"\", \"countryCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://b2bhint.p.rapidapi.com/api/v1/rapidapi/person/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "countrycode",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://b2bhint.p.rapidapi.com/api/v1/rapidapi/person/search\"\nquerystring = {\"q\": \"Elon Musk\", \"countryCode\": \"us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"b2bhint.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "B2BHint",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "Elon Musk"
                },
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "",
                    "default": "us"
                }
            ]
        }
    },
    {
        "query": "Please show me currently trending cryptocurrencies.",
        "model_answer": "requests.get(\"https://crypto-gem-finder.p.rapidapi.com/trending\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crypto-gem-finder.p.rapidapi.com\"}, params={\"page\": \"1\", \"limit\": \"10\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Find your next gem crypto! Browse popular today, trending and recently added coins",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crypto-gem-finder.p.rapidapi.com/trending'\nquerystring = {\"page\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crypto-gem-finder.p.rapidapi.com/trending\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crypto-gem-finder.p.rapidapi.com/trending\"\nquerystring = {\"page\": \"1\", \"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-gem-finder.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crypto Gem Finder",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://validect-email-verification-v1.p.rapidapi.com/v1/verify\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"validect-email-verification-v1.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Email address validation API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://validect-email-verification-v1.p.rapidapi.com/v1/verify'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://validect-email-verification-v1.p.rapidapi.com/v1/verify\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "Email address to validate",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://validect-email-verification-v1.p.rapidapi.com/v1/verify\"\nquerystring = {\"email\": \"example@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"validect-email-verification-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Validect - Email Verification",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email address to validate",
                    "default": "example@gmail.com"
                }
            ]
        }
    },
    {
        "query": "I want to get the earnings per share for the stock symbol AAPL in the US region.",
        "model_answer": "requests.get(\"https://yh-finance8.p.rapidapi.com/stock/get_earnings_per_share\",headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"yh-finance8.p.rapidapi.com\"}, params={\"symbol\": \"AAPL\", \"region\":\"US\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yh-finance8.p.rapidapi.com/stock/get_earnings_per_share'\nquerystring = {\"symbol\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yh-finance8.p.rapidapi.com/stock/get_earnings_per_share\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "symbol",
                    "description": "Ticker Symbol ( Ex. \\\\\"AAPL\\\\\" is Ticker symbol for Apple Inc. on the stock market )",
                    "type": "STRING"
                },
                {
                    "name": "region",
                    "description": "One of the following is allowed\nUS|BR|AU|CA|FR|DE|HK|IN|IT|ES|GB|S",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yh-finance8.p.rapidapi.com/stock/get_earnings_per_share\"\nquerystring = {\"symbol\": \"AAPL\", \"region\": \"US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yh-finance8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YH Finance_v2",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Ticker Symbol ( Ex. \\\\\"AAPL\\\\\" is Ticker symbol for Apple Inc. on the stock market )",
                    "default": "AAPL"
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "One of the following is allowed\nUS|BR|AU|CA|FR|DE|HK|IN|IT|ES|GB|S",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "How can I get data from the FastAPI Project API for the country \"US\" and with another interest \"technology\"?",
        "model_answer": "requests.get(\"https://fastapi-project.p.rapidapi.com/api/v2/explore\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fastapi-project.p.rapidapi.com\"}, params={\"country\": \"US\", \"another_interest\": \"technology\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Python FastAPI Test Project",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fastapi-project.p.rapidapi.com/api/v2/explore'\nquerystring = {\"country\": \"\", \"another_interest\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fastapi-project.p.rapidapi.com/api/v2/explore\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "country",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "another_interest",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fastapi-project.p.rapidapi.com/api/v2/explore\"\nquerystring = {\"country\": \"\", \"another_interest\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fastapi-project.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FastAPI Project",
            "api_arguments_original": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "another_interest",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can I get the information of the upcoming events at mbar club?",
        "model_answer": "requests.get(\"https://mikaraunio-mbar.p.rapidapi.com/event/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mikaraunio-mbar.p.rapidapi.com\"}, params={\"datefilter\": \"upcoming\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "mbar offers a free, read only REST API for access to its programme data, including event, artist and club series information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mikaraunio-mbar.p.rapidapi.com/event/'\nquerystring = {\"name\": \"\", \"club\": \"\", \"club__name\": \"\", \"start_time\": \"\", \"end_time\": \"\", \"time_modified\": \"\", \"datefilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mikaraunio-mbar.p.rapidapi.com/event/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "the name of the event",
                    "type": "STRING"
                },
                {
                    "name": "club",
                    "description": "the id of the club series the event belongs to.",
                    "type": "STRING"
                },
                {
                    "name": "club__name",
                    "description": "the name of the club series the event belongs to.",
                    "type": "STRING"
                },
                {
                    "name": "start_time",
                    "description": "the event's start time, in YYYY-MM-DD HH:MM[:ss[.uuuuuu]] format.",
                    "type": "STRING"
                },
                {
                    "name": "end_time",
                    "description": "the event's end time, in YYYY-MM-DD HH:MM[:ss[.uuuuuu]] format.",
                    "type": "STRING"
                },
                {
                    "name": "time_modified",
                    "description": "the timestamp of the last modification, in YYYY-MM-DD HH:MM[:ss[.uuuuuu]] format.",
                    "type": "STRING"
                },
                {
                    "name": "datefilter",
                    "description": "ongoing \u2014 ongoing events, next \u2014 next events, including any ongoing ones., upcoming \u2014 upcoming events, excluding any ongoing ones.today \u2014 all events happening today (day changes at 4 in the morning).tomorrow \u2014 all events happening tomorrow (day changes at 4 in the morning).",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mikaraunio-mbar.p.rapidapi.com/event/\"\nquerystring = {\"name\": \"\", \"club\": \"\", \"club__name\": \"\", \"start_time\": \"\", \"end_time\": \"\", \"time_modified\": \"\", \"datefilter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mikaraunio-mbar.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "mbar",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "the name of the event",
                    "default": ""
                },
                {
                    "name": "club",
                    "type": "STRING",
                    "description": "the id of the club series the event belongs to.",
                    "default": ""
                },
                {
                    "name": "club__name",
                    "type": "STRING",
                    "description": "the name of the club series the event belongs to.",
                    "default": ""
                },
                {
                    "name": "start_time",
                    "type": "STRING",
                    "description": "the event's start time, in YYYY-MM-DD HH:MM[:ss[.uuuuuu]] format.",
                    "default": ""
                },
                {
                    "name": "end_time",
                    "type": "STRING",
                    "description": "the event's end time, in YYYY-MM-DD HH:MM[:ss[.uuuuuu]] format.",
                    "default": ""
                },
                {
                    "name": "time_modified",
                    "type": "STRING",
                    "description": "the timestamp of the last modification, in YYYY-MM-DD HH:MM[:ss[.uuuuuu]] format.",
                    "default": ""
                },
                {
                    "name": "datefilter",
                    "type": "STRING",
                    "description": "ongoing \u2014 ongoing events, next \u2014 next events, including any ongoing ones., upcoming \u2014 upcoming events, excluding any ongoing ones.today \u2014 all events happening today (day changes at 4 in the morning).tomorrow \u2014 all events happening tomorrow (day changes at 4 in the morning).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to search for the zip code of New York in the United States.",
        "model_answer": "requests.get(\"https://zipcodebase-zip-code-search.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"zipcodebase-zip-code-search.p.rapidapi.com\"}, params={\"codes\": \"New York\", \"country\": \"United States\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Zip Code API - Free Access to Worldwide Postal Code Data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://zipcodebase-zip-code-search.p.rapidapi.com/search'\nquerystring = {\"codes\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://zipcodebase-zip-code-search.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "codes",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://zipcodebase-zip-code-search.p.rapidapi.com/search\"\nquerystring = {\"codes\": \"10005\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"zipcodebase-zip-code-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Zipcodebase Zip Code Search",
            "api_arguments_original": [
                {
                    "name": "codes",
                    "type": "STRING",
                    "description": "",
                    "default": "10005"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest earthquake data in Indonesia?",
        "model_answer": "response = requests.get(\"https://indonesia-latest-weather-and-earthquake.p.rapidapi.com/feelbylocal_top15_earthquake\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indonesia-latest-weather-and-earthquake.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "This API provides Weather forecast data for districts and cities in Indonesia within 3 days and data on earthquake events that occur throughout Indonesia.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indonesia-latest-weather-and-earthquake.p.rapidapi.com/feelbylocal_top15_earthquake'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indonesia-latest-weather-and-earthquake.p.rapidapi.com/feelbylocal_top15_earthquake\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indonesia-latest-weather-and-earthquake.p.rapidapi.com/feelbylocal_top15_earthquake\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indonesia-latest-weather-and-earthquake.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indonesia Latest Weather and Earthquake",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get a screenshot of www.example.com using the Images Infos - API1.",
        "model_answer": "requests.get(\"https://images-infos-api1.p.rapidapi.com/getWebsitesScreenshot\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"images-infos-api1.p.rapidapi.com\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Get screenshot or PDF from a website",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://images-infos-api1.p.rapidapi.com/getWebsitesScreenshot'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://images-infos-api1.p.rapidapi.com/getWebsitesScreenshot\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://images-infos-api1.p.rapidapi.com/getWebsitesScreenshot\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"images-infos-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Images Infos - API1",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you search for email addresses containing \"test\"?",
        "model_answer": "requests.get(\"https://email-address-search.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-address-search.p.rapidapi.com\"}, params={\"q\": \"test\", \"type\": \"EMAIL\", \"pagenum\": \"1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Search our database of email addresses by partial match",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-address-search.p.rapidapi.com/'\nquerystring = {\"q\": \"\", \"type\": \"\", \"pagenum\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-address-search.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "pagenum",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-address-search.p.rapidapi.com/\"\nquerystring = {\"pagenum\": \"1\", \"q\": \"craig\", \"type\": \"EMAIL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-address-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email address search",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "craig"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "EMAIL"
                },
                {
                    "name": "pagenum",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the latest news in Cameroon?",
        "model_answer": "requests.get(\"https://instant-cameroon-news.p.rapidapi.com/camerounnews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"instant-cameroon-news.p.rapidapi.com\"}, params={\"rank\": \"\", \"page\": \"\", \"search\": \"\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Instantly provide the latest news and the latest information on Cameroon. It is the easier way to  get latest news about Cameroon.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instant-cameroon-news.p.rapidapi.com/camerounnews'\nquerystring = {\"rank\": \"\", \"page\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instant-cameroon-news.p.rapidapi.com/camerounnews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "rank",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "search",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instant-cameroon-news.p.rapidapi.com/camerounnews\"\nquerystring = {\"rank\": \"\", \"page\": \"\", \"search\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instant-cameroon-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instant Cameroon News",
            "api_arguments_original": [
                {
                    "name": "rank",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "search",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check john.doe@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://metropolis-api-email.p.rapidapi.com/analysis\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"metropolis-api-email.p.rapidapi.com\"}, params={\"email\": \"john.doe@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Analyse the content of an Email Address and check if it is valid or not. Email API can recode the Email Address if any common error or misspelling is found. The API can also check for invalid or fake DNS. [This API is under maintenance and is not working properly] ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://metropolis-api-email.p.rapidapi.com/analysis'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://metropolis-api-email.p.rapidapi.com/analysis\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "Email Address",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://metropolis-api-email.p.rapidapi.com/analysis\"\nquerystring = {\"email\": \"support@acme,com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"metropolis-api-email.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email Address",
                    "default": "support@acme,com"
                }
            ]
        }
    },
    {
        "query": "Can you help me extract text from a PDF using the Reword PDF API? Here is the file path",
        "model_answer": "response = requests.get(\"https://reword-pdf1.p.rapidapi.com/v1/pdfs/{pdfId}/download\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"reword-pdf1.p.rapidapi.com\"}, params={\"pdfId\": \"/path/to/file.pdf\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Reword PDF is a pdf editor tool. \nCapabilities:\n- Extract text in a pdf\n- Replace any of these given texts in the pdf.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reword-pdf1.p.rapidapi.com/v1/pdfs/{pdfId}/download'\nquerystring = {\"pdfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reword-pdf1.p.rapidapi.com/v1/pdfs/{pdfId}/download\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pdfid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reword-pdf1.p.rapidapi.com/v1/pdfs/{pdfId}/download\"\nquerystring = {\"pdfId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reword-pdf1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Reword PDF",
            "api_arguments_original": [
                {
                    "name": "pdfId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me calculate the age of a person born on July 5, 1990 in US/Eastern timezone?",
        "model_answer": "requests.get(\"https://age-calculator.p.rapidapi.com/age\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"age-calculator.p.rapidapi.com\"}, params={\"date\": \"19900705\", \"timezone\": \"US/Eastern\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Returns Age calculation based on requested date. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://age-calculator.p.rapidapi.com/age'\nquerystring = {\"date\": \"\", \"timezone\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://age-calculator.p.rapidapi.com/age\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "date",
                    "description": "This endpoint will accept to following parameters formats:\nYYYYMMDD\nYYY-MM-DD\nMMDDYYYY\nMM-DD-YYYY",
                    "type": "STRING"
                },
                {
                    "name": "timezone",
                    "description": "Optional: Default time zone is US/Eastern. To get the correct age based on your local time you can select your timezone. Use the /timezone service to see all available time zones. \nExample: US/Eastern, US/Pacific, Europe/London",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://age-calculator.p.rapidapi.com/age\"\nquerystring = {\"timezone\": \"US/Eastern\", \"date\": \"19870630\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"age-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Age Calculator",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "This endpoint will accept to following parameters formats:\nYYYYMMDD\nYYY-MM-DD\nMMDDYYYY\nMM-DD-YYYY",
                    "default": "19870630"
                },
                {
                    "name": "timezone",
                    "type": "STRING",
                    "description": "Optional: Default time zone is US/Eastern. To get the correct age based on your local time you can select your timezone. Use the /timezone service to see all available time zones. \nExample: US/Eastern, US/Pacific, Europe/London",
                    "default": "US/Eastern"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a collection of Sahih Bukhari hadiths?",
        "model_answer": "requests.get(\"https://hadiths-api.p.rapidapi.com/collections/639caf9a9ba6cf29e8b8c221\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hadiths-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "A collection of hadiths API in one place, Sahih Bukhari, Sahih muslim, Ibn majah, Abu Dawud. working on compiling timidhi and nezai insha Allah.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hadiths-api.p.rapidapi.com/collections/639caf9a9ba6cf29e8b8c221'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hadiths-api.p.rapidapi.com/collections/639caf9a9ba6cf29e8b8c221\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hadiths-api.p.rapidapi.com/collections/639caf9a9ba6cf29e8b8c221\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hadiths-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hadiths API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the Ethereum ERC20 token with the contract address 0xdAC17F958D2ee523a2206206994597C13D831ec7 has any large buy or sell orders.",
        "model_answer": "response = requests.get(\"https://ethereum-large-buy-sell-orders.p.rapidapi.com/large-orders/0xdAC17F958D2ee523a2206206994597C13D831ec7\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ethereum-large-buy-sell-orders.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "A Flask API that scrapes large buy and sell orders of Ethereum ERC20 tokens could be a useful tool for cryptocurrency traders and investors. The API would use web scraping techniques to gather data on the largest buy and sell orders for a specific ERC20 token on a decentralized exchange. This information could then be accessed by users through the API's endpoint, allowing them to make informed trading decisions based on real-time market data. Additionally, the API could be set up to automatic...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ethereum-large-buy-sell-orders.p.rapidapi.com/large-orders/0xdAC17F958D2ee523a2206206994597C13D831ec7'\nquerystring = {\"contract_address\": \"\", \"contract_address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ethereum-large-buy-sell-orders.p.rapidapi.com/large-orders/0xdAC17F958D2ee523a2206206994597C13D831ec7\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "contract_address",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "contract_address",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ethereum-large-buy-sell-orders.p.rapidapi.com/large-orders/0xdAC17F958D2ee523a2206206994597C13D831ec7\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ethereum-large-buy-sell-orders.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ethereum-large-buy/sell-orders",
            "api_arguments_original": [
                {
                    "name": "contract_address",
                    "type": "string",
                    "description": "",
                    "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
                },
                {
                    "name": "contract_address",
                    "type": "STRING",
                    "description": "",
                    "default": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the history and tourism information for the street \"Times Square\" in New York City.",
        "model_answer": "requests.get(\"https://streetnarrator.p.rapidapi.com/prod/street\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"streetnarrator.p.rapidapi.com\"}, params={\"topics\": \"history:1,tourism:1\", \"temperature\": \"0\", \"style\": \"audioguide\", \"language\": \"en\", \"street\": \"Times Square, New York City\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Give us a Street name! Our artificial intelligence will search for information and writes a paragraph according to your options.  StreetNarrator API provides a unique history/touristic AI text for any street around the world.\nThe Stories behind Streets API & From a Street name to the behind story",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://streetnarrator.p.rapidapi.com/prod/street'\nquerystring = {\"street\": \"\", \"topics\": \"\", \"temperature\": \"\", \"style\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://streetnarrator.p.rapidapi.com/prod/street\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "street",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "topics",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "temperature",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "style",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "language",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://streetnarrator.p.rapidapi.com/prod/street\"\nquerystring = {\"topics\": \"history:1,tourism:1\", \"temperature\": \"0\", \"style\": \"audioguide\", \"language\": \"en\", \"street\": \"1600 Broadway, New York, NY 10019, United States\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"streetnarrator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "StreetNarrator",
            "api_arguments_original": [
                {
                    "name": "street",
                    "type": "STRING",
                    "description": "",
                    "default": "1600 Broadway, New York, NY 10019, United States"
                },
                {
                    "name": "topics",
                    "type": "STRING",
                    "description": "",
                    "default": "history:1,tourism:1"
                },
                {
                    "name": "temperature",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "style",
                    "type": "STRING",
                    "description": "",
                    "default": "audioguide"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "I want to find the distance between postcodeA CF103NP and postcodeB CF103RB using the Dargan API.",
        "model_answer": "requests.get(\"https://dargan.p.rapidapi.com/distance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dargan.p.rapidapi.com\"}, params={\"postcodeA\": \"CF103NP\", \"postcodeB\": \"CF103RB\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Limitless radial search from UK postcodes with distance and coordinate information returned",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dargan.p.rapidapi.com/distance'\nquerystring = {\"postcodeA\": \"\", \"postcodeB\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dargan.p.rapidapi.com/distance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "postcodea",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "postcodeb",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dargan.p.rapidapi.com/distance\"\nquerystring = {\"postcodeA\": \"CF103NP\", \"postcodeB\": \"CF103RB\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dargan.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dargan",
            "api_arguments_original": [
                {
                    "name": "postcodeA",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103NP"
                },
                {
                    "name": "postcodeB",
                    "type": "STRING",
                    "description": "",
                    "default": "CF103RB"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the sign hexagram for category 5.",
        "model_answer": "requests.get(\"https://sign-hexagram.p.rapidapi.com/get_sign/5\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"sign-hexagram.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "\u63d0\u4f9b\u7075\u7b7e\u5728\u7ebf\u62bd\u7b7e\u89e3\u7b7e\u3001\u7075\u7b7e\u795e\u5366\u5360\u535c\u3002",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sign-hexagram.p.rapidapi.com/get_sign/{category}'\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sign-hexagram.p.rapidapi.com/get_sign/{category}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "category",
                    "description": "Category ID",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sign-hexagram.p.rapidapi.com/get_sign/{category}\"\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sign-hexagram.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sign Hexagram",
            "api_arguments_original": [
                {
                    "name": "category",
                    "type": "ENUM",
                    "description": "Category ID",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me the fuel rate for Delhi city in India?",
        "model_answer": "requests.get(\"https://indian-fuel.p.rapidapi.com/fuel/data\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"indian-fuel.p.rapidapi.com\"}, params={\"city\" \"Delhi\", \"country\" \"India\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "This API contains the fuel rate of every city in India. The fuel price of a particular city can also be viewed.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indian-fuel.p.rapidapi.com/fuel/data'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indian-fuel.p.rapidapi.com/fuel/data\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indian-fuel.p.rapidapi.com/fuel/data\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indian-fuel.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "INDIAN FUEL",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please retrieve the latest results of the Aviator game on the Vai de Bob platform?",
        "model_answer": "requests.get(\"https://vai-de-bob-aviator-api.p.rapidapi.com/vaidebob-aviator-latest\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"vai-de-bob-aviator-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "This endpoint allows you to retrieve the latest results of the Aviator game on the Vai de Bob ( vaidebob.com )  platform.  \n\nYou can access the array containing the most recent results of the Aviator game. \n\nEach element of the array represents the numerical value of the result obtained in the game, with the first element being the most recent and the last being the oldest.   \n\nThis endpoint can be integrated into other applications to provide up-to-date information on the results of the Avia...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vai-de-bob-aviator-api.p.rapidapi.com/vaidebob-aviator-latest'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vai-de-bob-aviator-api.p.rapidapi.com/vaidebob-aviator-latest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vai-de-bob-aviator-api.p.rapidapi.com/vaidebob-aviator-latest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vai-de-bob-aviator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vai de Bob Aviator API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check the exchange rate for USD on a specific date.",
        "model_answer": "requests.get(\"https://words-world.p.rapidapi.com/checkkurs\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"words-world.p.rapidapi.com\"}, params={\"date\": \"2022-10-15\", \"valuta\": \"USD\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Quote from world people",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://words-world.p.rapidapi.com/checkkurs'\nquerystring = {\"date\": \"\", \"valuta\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://words-world.p.rapidapi.com/checkkurs\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "date",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "valuta",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://words-world.p.rapidapi.com/checkkurs\"\nquerystring = {\"date\": \"\", \"valuta\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"words-world.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Words World",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "valuta",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a list of scuba diving sites in Thailand?",
        "model_answer": "requests.get(\"https://world-scuba-diving-sites-api.p.rapidapi.com/api/divesite\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"world-scuba-diving-sites-api.p.rapidapi.com\"}, params={\"country\": \"Thailand\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Are you a scuba diver looking for interesting dive sites around the world? You can now easily search for them using a text query to the endpoint based on a location or region. With our list of GPS coordinates for scuba diving sites, you can quickly find the coordinates of the places you want to explore and add them to your diving itinerary. Simply enter the name of the location or region you are interested in, and our system will provide you with a list of relevant coordinates for you to use ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-scuba-diving-sites-api.p.rapidapi.com/api/divesite'\nquerystring = {\"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-scuba-diving-sites-api.p.rapidapi.com/api/divesite\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "country",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-scuba-diving-sites-api.p.rapidapi.com/api/divesite\"\nquerystring = {\"country\": \"thailand\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-scuba-diving-sites-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Scuba Diving Sites Api",
            "api_arguments_original": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": "thailand"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the definition of the word \"abundant\"?",
        "model_answer": "requests.get(\"https://master-dictionary.p.rapidapi.com/hello\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"master-dictionary.p.rapidapi.com\"}, params={\"word\": \"abundant\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "A dictionary rich information for a word with definitions, meanings, phonetics, synonyms and much more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://master-dictionary.p.rapidapi.com/hello'\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://master-dictionary.p.rapidapi.com/hello\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "word",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://master-dictionary.p.rapidapi.com/hello\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"master-dictionary.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Master Dictionary",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "string",
                    "description": "",
                    "default": "hello"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a question from ASE's Quiz API?",
        "model_answer": "requests.get(\"https://ases-quiz-api1.p.rapidapi.com/difficulties/63343ba898b44503fecc49e9\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"ases-quiz-api1.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Question API with 500+ questions, 8 categories and 3 difficulties for your apps.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ases-quiz-api1.p.rapidapi.com/difficulties/63343ba898b44503fecc49e9'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ases-quiz-api1.p.rapidapi.com/difficulties/63343ba898b44503fecc49e9\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ases-quiz-api1.p.rapidapi.com/difficulties/63343ba898b44503fecc49e9\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ases-quiz-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ASE's Quiz API",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "63343ba898b44503fecc49e9"
                }
            ]
        }
    },
    {
        "query": "How do I get the description, title, and image of a URL using the Unfurl API written in go?",
        "model_answer": "requests.get(\"https://unfurl-api-written-in-go.p.rapidapi.com/unfurl\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"unfurl-api-written-in-go.p.rapidapi.com\"}, params={\"url\": \"https://example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Simplest API to unfurl URL descriptions, titles, images, and products, from all sites without being blocked. Fast and reliable.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://unfurl-api-written-in-go.p.rapidapi.com/unfurl'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://unfurl-api-written-in-go.p.rapidapi.com/unfurl\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://unfurl-api-written-in-go.p.rapidapi.com/unfurl\"\nquerystring = {\"url\": \"youtube.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"unfurl-api-written-in-go.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Unfurl API written in go",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "youtube.com"
                }
            ]
        }
    },
    {
        "query": "What are the standings for the Primeira Liga?",
        "model_answer": "requests.get(\"https://primeira-liga-standings.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"primeira-liga-standings.p.rapidapi.com\"}, params={\"season\": \"2022\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Portuguese Primeira Liga Standings & Table",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://primeira-liga-standings.p.rapidapi.com/'\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://primeira-liga-standings.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "season",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://primeira-liga-standings.p.rapidapi.com/\"\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"primeira-liga-standings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Primeira Liga Standings",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me find the gasoline and diesel prices in different fuel stations in different cities?",
        "model_answer": "requests.get(\"https://gas-price.p.rapidapi.com/europeanCountries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Reach gasoline and diesel prices in different fuel stations in different cities.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gas-price.p.rapidapi.com/europeanCountries'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gas-price.p.rapidapi.com/europeanCountries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gas-price.p.rapidapi.com/europeanCountries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gas-price.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Gas Price",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you detect the language of this text",
        "model_answer": "requests.get(\"https://text-language-by-api-ninjas.p.rapidapi.com/v1/textlanguage\",                            headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",                                     \"X-RapidAPI-Host\": \"text-language-by-api-ninjas.p.rapidapi.com\"},                            params={\"text\": \"Bonjour tout le monde\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Detect the language from any input text. See more info at https://api-ninjas.com/api/textlanguage.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://text-language-by-api-ninjas.p.rapidapi.com/v1/textlanguage'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://text-language-by-api-ninjas.p.rapidapi.com/v1/textlanguage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://text-language-by-api-ninjas.p.rapidapi.com/v1/textlanguage\"\nquerystring = {\"text\": \"hello world!\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"text-language-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Text Language by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "hello world!"
                }
            ]
        }
    },
    {
        "query": "I want to get the roster and schedule results for the Los Angeles Lakers.",
        "model_answer": "requests.get(\"https://1977-2022-nba-team-rosters-and-schedules.p.rapidapi.com/elements\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"1977-2022-nba-team-rosters-and-schedules.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "An API with Roster and Schedule Results for each NBA Franchise from 1977",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://1977-2022-nba-team-rosters-and-schedules.p.rapidapi.com/elements'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://1977-2022-nba-team-rosters-and-schedules.p.rapidapi.com/elements\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://1977-2022-nba-team-rosters-and-schedules.p.rapidapi.com/elements\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"1977-2022-nba-team-rosters-and-schedules.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "1977-2022 NBA Team Rosters and Schedules",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please convert the number 5000 into a human-readable form.",
        "model_answer": "requests.get(\"https://refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com/1000\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com\"}, params={\"number\": \"5000\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "By this API, you can refactor any number into human-readable form like 1000 can be read as 1K, or 1000000 can be read as 1M.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com/1000'\nquerystring = {\"number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com/1000\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "number",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com/1000\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"refactor-numbers-in-human-readable-form-like-1k-or-1m.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Refactor numbers in human readable form like 1K or 1M",
            "api_arguments_original": [
                {
                    "name": "number",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1000"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the available versions for C# Code Compiler?",
        "model_answer": "requests.get(\"https://c-sharp-code-compiler.p.rapidapi.com/versions/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"c-sharp-code-compiler.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "C# Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://c-sharp-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://c-sharp-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://c-sharp-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"c-sharp-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "C Sharp Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please generate all the words that can be produced by adding at least one additional letter to the input \"cat\".",
        "model_answer": "requests.get(\"https://word-tree.p.rapidapi.com/CSW21/ANAGRAMS\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"word-tree.p.rapidapi.com\"}, params={\"input\": \"cat\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Given a set of letters, generate all the words that can be produced by adding at least one additional letter, arranged hierarchically.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://word-tree.p.rapidapi.com/CSW21/ANAGRAMS'\nquerystring = {\"input\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://word-tree.p.rapidapi.com/CSW21/ANAGRAMS\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "input",
                    "description": "A series of at least 4 letters (a-z, case-insensitive). No other characters should be included or no meaningful results will be returned.",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://word-tree.p.rapidapi.com/CSW21/ANAGRAMS\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"word-tree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Word Tree",
            "api_arguments_original": [
                {
                    "name": "input",
                    "type": "string",
                    "description": "A series of at least 4 letters (a-z, case-insensitive). No other characters should be included or no meaningful results will be returned.",
                    "default": "ANAGRAMS"
                }
            ]
        }
    },
    {
        "query": "Can you help me extract text from a national ID card image using the National ID Vietnam OCR API?",
        "model_answer": "requests.get(\"https://national-id-vietnam-ocr.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"national-id-vietnam-ocr.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Vietnam NID OCR API allows you to onboard your customers with speed and precision.\n\nEnable them to pre-fill their onboarding forms instantly, by just uploading or scanning their NID card \u2013 IDfy will digitize the document for you!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://national-id-vietnam-ocr.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://national-id-vietnam-ocr.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://national-id-vietnam-ocr.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"national-id-vietnam-ocr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "National ID Vietnam OCR",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you find the gender of the name \"John\" using the Gender From Name API?",
        "model_answer": "requests.get(\"https://gender-from-name.p.rapidapi.com/gender/John\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\" \"gender-from-name.p.rapidapi.com\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Find the gender by just using a name.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gender-from-name.p.rapidapi.com/gender/Jane'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gender-from-name.p.rapidapi.com/gender/Jane\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gender-from-name.p.rapidapi.com/gender/Jane\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gender-from-name.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Gender From Name",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "",
                    "default": "Jane"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me details and statistics about the TV show with the Season IDs 12345 and 67890 from the Netflix Data API?",
        "model_answer": "requests.get(\"https://netflix-data.p.rapidapi.com/season/episodes/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"netflix-data.p.rapidapi.com\"}, params={\"ids\": \"12345, 67890\", \"limit\": \"25\", \"offset\": \"0\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://netflix-data.p.rapidapi.com/season/episodes/'\nquerystring = {\"ids\": \"\", \"limit\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://netflix-data.p.rapidapi.com/season/episodes/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ids",
                    "description": "Season IDs (you can separate with commas)",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Episode Limit",
                    "type": "STRING"
                },
                {
                    "name": "offset",
                    "description": "Offset",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://netflix-data.p.rapidapi.com/season/episodes/\"\nquerystring = {\"limit\": \"25\", \"offset\": \"0\", \"ids\": \"80077209,80117715\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"netflix-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Netflix Data",
            "api_arguments_original": [
                {
                    "name": "ids",
                    "type": "STRING",
                    "description": "Season IDs (you can separate with commas)",
                    "default": "80077209,80117715"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Episode Limit",
                    "default": "25"
                },
                {
                    "name": "offset",
                    "type": "STRING",
                    "description": "Offset",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to geolocate the IP address 123.45.67.89.",
        "model_answer": "requests.get(\"https://ip-geolocalization-api.p.rapidapi.com/ip\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"ip-geolocalization-api.p.rapidapi.com\"}, params={\"ip\" \"123.45.67.89\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "IP Geolocalization API is a powerful tool for determining the location of an IP address. It offers accurate and up-to-date information, including the country, region, city, and latitude/longitude coordinates of the IP. It is perfect for businesses, researchers, and developers looking to understand the location of their website visitors or users.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-geolocalization-api.p.rapidapi.com/ip'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-geolocalization-api.p.rapidapi.com/ip\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "IP to look up",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-geolocalization-api.p.rapidapi.com/ip\"\nquerystring = {\"ip\": \"98.207.254.136\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-geolocalization-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Geolocalization API",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "IP to look up",
                    "default": "98.207.254.136"
                }
            ]
        }
    },
    {
        "query": "How can I search for an entity with the uid 7178 in OFAC Service API?",
        "model_answer": "requests.get(\"https://ofac-service.p.rapidapi.com/data/entity/7178\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ofac-service.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Searches an entity from OFAC's Sanctions List with fuzzy logic on its name search field to look for potential matches on the Specially Designated Nationals (SDN) List and on its Non-SDN Consolidated Sanctions List.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ofac-service.p.rapidapi.com/data/entity/7178'\nquerystring = {\"uid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ofac-service.p.rapidapi.com/data/entity/7178\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "uid",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ofac-service.p.rapidapi.com/data/entity/7178\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ofac-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OFAC Service",
            "api_arguments_original": [
                {
                    "name": "uid",
                    "type": "NUMBER",
                    "description": "",
                    "default": "7178"
                }
            ]
        }
    },
    {
        "query": "I want to search the property report using the AppId",
        "model_answer": "requests.get(\"https://property-report.p.rapidapi.com/GetArchiveReport\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"property-report.p.rapidapi.com\"}, params={\"AppId\": \"123456\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "This API searches tax assessment, deed, mortgage and notice of default records filed in over 3,100 counties with Tax Assessors and County Recorder of Deeds offices. Results may include information as available about property owners, physical site and mailing addresses, land and building property details, and financial information. Searches may be conducted using an address only, or a name and address.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://property-report.p.rapidapi.com/GetArchiveReport'\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://property-report.p.rapidapi.com/GetArchiveReport\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "appid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://property-report.p.rapidapi.com/GetArchiveReport\"\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"property-report.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Property Report",
            "api_arguments_original": [
                {
                    "name": "AppId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check the number of working days in the US from 2022-01-01 to 2022-12-31.",
        "model_answer": "requests.get(\"https://working-days.p.rapidapi.com/1.3/get_info_day\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"working-days.p.rapidapi.com\"}, params={\"country_code\": \"US\", \"date\": \"2022-01-01\", \"configuration\": \"\", \"profile_id\": \"\"})",
        "original": {
            "domain": "Events",
            "framework": "RapidAPI",
            "functionality": "The API returns the number of days,  hours, working days, working hours, wages, weekend days, and the list of public holidays of the requested date period and country. You can also add any number of working days or working hours to a given date. 50 countries and over 230 regional calendars are supported and we work hard to keep our database up to date by following government announcements regarding public holidays changes. All the calendars can be fully customized from our friendly working da...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://working-days.p.rapidapi.com/1.3/get_info_day'\nquerystring = {\"country_code\": \"\", \"date\": \"\", \"configuration\": \"\", \"profile_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://working-days.p.rapidapi.com/1.3/get_info_day\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "country_code",
                    "description": "The ISO country code (2 letters).  See <a href=https://api.workingdays.org/1.2/api-countries.php>available countries & configurations</a>",
                    "type": "STRING"
                },
                {
                    "name": "date",
                    "description": "The date to analyze (YYYY-MM-DD)",
                    "type": "STRING"
                },
                {
                    "name": "configuration",
                    "description": "The name of the preset configuration to be used. See <a href=https://api.workingdays.org/1.2/api-countries.php>available countries & configurations</a>",
                    "type": "STRING"
                },
                {
                    "name": "profile_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://working-days.p.rapidapi.com/1.3/get_info_day\"\nquerystring = {\"configuration\": \"Federal holidays\", \"country_code\": \"US\", \"profile_id\": \"\", \"date\": \"2013-12-31\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"working-days.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Working days",
            "api_arguments_original": [
                {
                    "name": "country_code",
                    "type": "STRING",
                    "description": "The ISO country code (2 letters).  See <a href=https://api.workingdays.org/1.2/api-countries.php>available countries & configurations</a>",
                    "default": "US"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "The date to analyze (YYYY-MM-DD)",
                    "default": "2013-12-31"
                },
                {
                    "name": "configuration",
                    "type": "STRING",
                    "description": "The name of the preset configuration to be used. See <a href=https://api.workingdays.org/1.2/api-countries.php>available countries & configurations</a>",
                    "default": "Federal holidays"
                },
                {
                    "name": "profile_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you show me a random collection of shoes?",
        "model_answer": "requests.get(\"https://shoes-collections.p.rapidapi.com/shoes/3\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shoes-collections.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "This api provides you 30 random shoes ..",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shoes-collections.p.rapidapi.com/shoes/3'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shoes-collections.p.rapidapi.com/shoes/3\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shoes-collections.p.rapidapi.com/shoes/3\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shoes-collections.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shoes collections",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the city and country data for placeId \"123\" in km distance unit and distance to placeId \"456\".",
        "model_answer": "requests.get(\"https://wft-geo-db.p.rapidapi.com/v1/geo/places/123/distance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"}, params={\"placeId\": \"123\", \"distanceUnit\": \"KM\", \"toPlaceId\": \"456\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get global city, region, and country data. Filter and display results in multiple languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/distance'\nquerystring = {\"placeId\": \"\", \"distanceUnit\": \"\", \"toPlaceId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/distance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "placeid",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "distanceunit",
                    "description": "The unit of distance: KM | MI [default]",
                    "type": "STRING"
                },
                {
                    "name": "toplaceid",
                    "description": "The distance to this place",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wft-geo-db.p.rapidapi.com/v1/geo/places/{placeId}/distance\"\nquerystring = {\"placeId\": \"\", \"distanceUnit\": \"\", \"toPlaceId\": \"Q60\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wft-geo-db.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GeoDB Cities",
            "api_arguments_original": [
                {
                    "name": "placeId",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "distanceUnit",
                    "type": "STRING",
                    "description": "The unit of distance: KM | MI [default]",
                    "default": ""
                },
                {
                    "name": "toPlaceId",
                    "type": "STRING",
                    "description": "The distance to this place",
                    "default": "Q60"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a short URL using the SMSAPI.com API?",
        "model_answer": "requests.get(\"https://smsapi-com3.p.rapidapi.com/short_url/links\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"smsapi-com3.p.rapidapi.com\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Powerful and easy SMS communication at your fingertips!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://smsapi-com3.p.rapidapi.com/short_url/links'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://smsapi-com3.p.rapidapi.com/short_url/links\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://smsapi-com3.p.rapidapi.com/short_url/links\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsapi-com3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SMSAPI.com",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the list of phones for a given product_id using the WhatsApp API.",
        "model_answer": "response = requests.get(\"https://whatsapp_api1.p.rapidapi.com/api/product_id/listPhones\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"whatsapp_api1.p.rapidapi.com\"}, params={\"product_id\": \"your_product_id_here\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "To Send Messages From WhatsApp",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://whatsapp_api1.p.rapidapi.com/api/product_id/listPhones'\nquerystring = {\"product_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://whatsapp_api1.p.rapidapi.com/api/product_id/listPhones\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "product_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://whatsapp_api1.p.rapidapi.com/api/product_id/listPhones\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whatsapp_api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WhatsApp_Api",
            "api_arguments_original": [
                {
                    "name": "product_id",
                    "type": "STRING",
                    "description": "",
                    "default": "product_id"
                }
            ]
        }
    },
    {
        "query": "Can you help me get the download URLs for a song on ReverbNation with the URL \"https://www.reverbnation.com/artist/song/12345\"?",
        "model_answer": "requests.get(\"https://reverbnation-song-downloader.p.rapidapi.com/reverbnation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"reverbnation-song-downloader.p.rapidapi.com\"}, params={\"url\": \"https://www.reverbnation.com/artist/song/12345\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Get ReverbNation data of any paid song(s) with download URLs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reverbnation-song-downloader.p.rapidapi.com/reverbnation'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reverbnation-song-downloader.p.rapidapi.com/reverbnation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reverbnation-song-downloader.p.rapidapi.com/reverbnation\"\nquerystring = {\"url\": \"https://www.reverbnation.com/lenafayre/song/22754745-this-world\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reverbnation-song-downloader.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ReverbNation Song Downloader",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.reverbnation.com/lenafayre/song/22754745-this-world"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the news, learning resources, events, samples, and other information from Microsoft Power BI API.",
        "model_answer": "response = requests.get(\"https://powerbi.p.rapidapi.com/sponsorships/today/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"powerbi.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://powerbi.p.rapidapi.com/sponsorships/today/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://powerbi.p.rapidapi.com/sponsorships/today/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://powerbi.p.rapidapi.com/sponsorships/today/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"powerbi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PowerBI",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I use the MyNewTestApi to get data?",
        "model_answer": "requests.get(\"https://mynewtestapi.p.rapidapi.com/my-new-test-endpoint\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"mynewtestapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "My new test API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mynewtestapi.p.rapidapi.com/my-new-test-endpoint'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mynewtestapi.p.rapidapi.com/my-new-test-endpoint\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mynewtestapi.p.rapidapi.com/my-new-test-endpoint\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mynewtestapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MyNewTestApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the available versions of Haskell Code Compiler.",
        "model_answer": "requests.get(\"https://haskell-code-compiler.p.rapidapi.com/versions/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\" \"haskell-code-compiler.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Haskell Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://haskell-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://haskell-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://haskell-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"haskell-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Haskell Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Could you generate a random username for a website with a minimum age of 21 and a maximum age of 40, in the en_US locale and the domain ugener.com?",
        "model_answer": "requests.get(\"https://random-username-generate.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"random-username-generate.p.rapidapi.com\"}, params={\"minAge\": 21, \"maxAge\": 40, \"locale\": \"en_US\", \"domain\": \"ugener.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "If you need a random username for a website or application, then Ugener is the perfect choice for millions of random ideas.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-username-generate.p.rapidapi.com/'\nquerystring = {\"minAge\": \"\", \"locale\": \"\", \"maxAge\": \"\", \"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-username-generate.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "minage",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "locale",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "maxage",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-username-generate.p.rapidapi.com/\"\nquerystring = {\"domain\": \"ugener.com\", \"minAge\": \"18\", \"locale\": \"en_US\", \"maxAge\": \"50\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-username-generate.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Username Generate",
            "api_arguments_original": [
                {
                    "name": "minAge",
                    "type": "NUMBER",
                    "description": "",
                    "default": "18"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": "en_US"
                },
                {
                    "name": "maxAge",
                    "type": "NUMBER",
                    "description": "",
                    "default": "50"
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "ugener.com"
                }
            ]
        }
    },
    {
        "query": "I want to check if the bank card with the bin number 536678 is valid.",
        "model_answer": "requests.get(\"https://bank-card-bin-num-check.p.rapidapi.com/api/v1/bins/b/535177\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bank-card-bin-num-check.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "A bank card bin number verification service is a system that can help verify the authenticity of a bank card by validating the first six digits, known as the Bank Identification Number (BIN) of the card. The BIN number, also known as the issuer identification number (IIN), is used to identify the institution that issued the card and can provide important information such as the card type, country of issuance, and card network.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bank-card-bin-num-check.p.rapidapi.com/api/v1/bins/b/535177'\nquerystring = {\"binnum\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bank-card-bin-num-check.p.rapidapi.com/api/v1/bins/b/535177\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "binnum",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bank-card-bin-num-check.p.rapidapi.com/api/v1/bins/b/535177\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bank-card-bin-num-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bank Card Bin Num Check",
            "api_arguments_original": [
                {
                    "name": "binnum",
                    "type": "NUMBER",
                    "description": "",
                    "default": 535177
                }
            ]
        }
    },
    {
        "query": "Can you please provide the latest news for tickers AMD, NVDA, and TSLA using the Webull API?",
        "model_answer": "requests.get(\"https://webull.p.rapidapi.com/news/list-by-portfolio\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"webull.p.rapidapi.com\"}, params={\"tickerIds\": \"AMD,NVDA,TSLA\", \"currentNewsId\": \"0\", \"pageSize\": \"20\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Query public data for investment products including stocks, fractional shares, options, ETFs, and ADRs as on webull.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webull.p.rapidapi.com/news/list-by-portfolio'\nquerystring = {\"tickerIds\": \"\", \"currentNewsId\": \"\", \"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webull.p.rapidapi.com/news/list-by-portfolio\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "tickerids",
                    "description": "The value of tickerId field returned in other endpoints, such as .../stock/search or .../market/get-common-ranking or .../market/get-top-active or .../market/get-top-gainers or etc...Separated by comma for multiple tickers",
                    "type": "STRING"
                },
                {
                    "name": "currentnewsid",
                    "description": "For paging purpose, the last news id returned right in this endpoint, pass 0 for the first query",
                    "type": "NUMBER"
                },
                {
                    "name": "pagesize",
                    "description": "For paging purpose, maximum is 20",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webull.p.rapidapi.com/news/list-by-portfolio\"\nquerystring = {\"currentNewsId\": \"0\", \"pageSize\": \"20\", \"tickerIds\": \"913353822,913354090,913256135,913303964\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webull.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webull",
            "api_arguments_original": [
                {
                    "name": "tickerIds",
                    "type": "STRING",
                    "description": "The value of tickerId field returned in other endpoints, such as .../stock/search or .../market/get-common-ranking or .../market/get-top-active or .../market/get-top-gainers or etc...Separated by comma for multiple tickers",
                    "default": "913353822,913354090,913256135,913303964"
                },
                {
                    "name": "currentNewsId",
                    "type": "NUMBER",
                    "description": "For paging purpose, the last news id returned right in this endpoint, pass 0 for the first query",
                    "default": "0"
                },
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "For paging purpose, maximum is 20",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the leaderboard for the Binance Futures Exchange for the encrypted user with ID \"abc123\" and trade type \"PERPETUAL\".",
        "model_answer": "requests.get(\"https://binance-futures-leaderboard1.p.rapidapi.com/v1/getOtherPerformance\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"binance-futures-leaderboard1.p.rapidapi.com\"}, params={\"encryptedUid\" \"abc123\", \"tradeType\" \"PERPETUAL\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Binance Futures Leaderboard API is an API for querying the leaderboard of the Binance Futures Exchange.\n\nAny questions or issues please contact me on Telegram:  [@DevNullZer0](https://t.me/devnullzer0) or via [devnullzer0@proton.me](mailto:devnullzer0@proton.me)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://binance-futures-leaderboard1.p.rapidapi.com/v1/getOtherPerformance'\nquerystring = {\"encryptedUid\": \"\", \"tradeType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://binance-futures-leaderboard1.p.rapidapi.com/v1/getOtherPerformance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "encrypteduid",
                    "description": "The encrypted UID of the trader",
                    "type": "STRING"
                },
                {
                    "name": "tradetype",
                    "description": "The trade type to search. PERPETUAL is USD\u24c8-M and DELIVERY is COIN-M",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://binance-futures-leaderboard1.p.rapidapi.com/v1/getOtherPerformance\"\nquerystring = {\"encryptedUid\": \"\", \"tradeType\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"binance-futures-leaderboard1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Binance Futures Leaderboard",
            "api_arguments_original": [
                {
                    "name": "encryptedUid",
                    "type": "STRING",
                    "description": "The encrypted UID of the trader",
                    "default": ""
                },
                {
                    "name": "tradeType",
                    "type": "ENUM",
                    "description": "The trade type to search. PERPETUAL is USD\u24c8-M and DELIVERY is COIN-M",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if the scooter rental is available in Athens.",
        "model_answer": "requests.get(\"https://sigma-scooters.p.rapidapi.comhttps://sigma-scooters-offers.weebly.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sigma-scooters.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Electric Scooter rental in Athens",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sigma-scooters.p.rapidapi.comhttps://sigma-scooters-offers.weebly.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sigma-scooters.p.rapidapi.comhttps://sigma-scooters-offers.weebly.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sigma-scooters.p.rapidapi.comhttps://sigma-scooters-offers.weebly.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sigma-scooters.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sigma Scooters",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if \"example@gmail.com\" is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Test api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://currencyconverter4.p.rapidapi.comvk.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://currencyconverter4.p.rapidapi.comvk.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://currencyconverter4.p.rapidapi.comvk.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"currencyconverter4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CurrencyConverter",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check the DNS information for the IP address 192.168.1.1?",
        "model_answer": "requests.get(\"https://dns-lookup11.p.rapidapi.com/reverse\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"dns-lookup11.p.rapidapi.com\"}, params={\"ip\" \"192.168.1.1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "NsLookup queries the specified DNS server and retrieves records associated with the domain name you provided.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dns-lookup11.p.rapidapi.com/reverse'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dns-lookup11.p.rapidapi.com/reverse\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dns-lookup11.p.rapidapi.com/reverse\"\nquerystring = {\"ip\": \"8.8.8.8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dns-lookup11.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DNS Lookup",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "8.8.8.8"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the worldwide flight schedules with connection building?",
        "model_answer": "requests.get(\"https://timetable-lookup.p.rapidapi.com/codes/entertainment/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"timetable-lookup.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Access Worldwide Flight Schedules with connection building.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://timetable-lookup.p.rapidapi.com/codes/entertainment/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://timetable-lookup.p.rapidapi.com/codes/entertainment/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://timetable-lookup.p.rapidapi.com/codes/entertainment/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"timetable-lookup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TimeTable Lookup ",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please test the API \"Testing\".",
        "model_answer": "requests.get(\"https://testing893.p.rapidapi.com/Test/api/values\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"testing893.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Testing",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testing893.p.rapidapi.com/Test/api/values'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testing893.p.rapidapi.com/Test/api/values\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testing893.p.rapidapi.com/Test/api/values\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testing893.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Testing",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me access more than 24000 groceries data using the Caterer Groceries Intel API to search for items related to apples?",
        "model_answer": "requests.get(\"https://caterer-groceries-intel.p.rapidapi.com/search/apple\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"caterer-groceries-intel.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Access more than 24000 groceries data, suitable for caterers",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://caterer-groceries-intel.p.rapidapi.com/search/apple'\nquerystring = {\"searchQuery\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://caterer-groceries-intel.p.rapidapi.com/search/apple\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchquery",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://caterer-groceries-intel.p.rapidapi.com/search/apple\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"caterer-groceries-intel.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Caterer Groceries Intel",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "apple"
                }
            ]
        }
    },
    {
        "query": "Can you help me find the emails of car dealers in California, USA using the Email Search API?",
        "model_answer": "requests.get(url=\"https://email-search16.p.rapidapi.com/search-emails\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-search16.p.rapidapi.com\"}, params={\"email_domain\": \"gmail.com\", \"query\": \"car dealer california usa\", \"limit\": 100})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Simple and Powerful web search for emails - get emails found on the web given a query and an email domain in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-search16.p.rapidapi.com/search-emails'\nquerystring = {\"email_domain\": \"\", \"query\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-search16.p.rapidapi.com/search-emails\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email_domain",
                    "description": "Email domain - typically a company domain (e.g. wsgr.com) or an email provider domain (e.g. gmail.com).",
                    "type": "STRING"
                },
                {
                    "name": "query",
                    "description": "Search query.\n\n`e.g.` *`steve smith san francisco ca usa`*\n`e.g.` *`facebook ceo`*\n`e.g.` *`jack blogger new york`*\n`e.g.` *`car dealer california usa`*",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Maximum number of emails to return. Accepts values from 1-5000.\n**Default:** 5000",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-search16.p.rapidapi.com/search-emails\"\nquerystring = {\"limit\": \"100\", \"email_domain\": \"gmail.com\", \"query\": \"car dealer california usa\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-search16.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Search",
            "api_arguments_original": [
                {
                    "name": "email_domain",
                    "type": "STRING",
                    "description": "Email domain - typically a company domain (e.g. wsgr.com) or an email provider domain (e.g. gmail.com).",
                    "default": "gmail.com"
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "Search query.\n\n`e.g.` *`steve smith san francisco ca usa`*\n`e.g.` *`facebook ceo`*\n`e.g.` *`jack blogger new york`*\n`e.g.` *`car dealer california usa`*",
                    "default": "car dealer california usa"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Maximum number of emails to return. Accepts values from 1-5000.\n**Default:** 5000",
                    "default": "100"
                }
            ]
        }
    },
    {
        "query": "How can I translate the word \"hello\" from English to French?",
        "model_answer": "requests.get(\"https://hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com/languages/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "FREE Dictionary Translation API Hablaa. Use it to translate words from and into more than 160 languages. The API use is free and requires no authentication. Have fun!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com/languages/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com/languages/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com/languages/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hablaa-dictionary-translation-hablaa-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dictionary Translation Hablaa",
            "api_arguments_original": []
        }
    },
    {
        "query": "Check the latest results of the Aviator game on Estrelabet platform.",
        "model_answer": "requests.get(\"https://estrelabet-aviator-api.p.rapidapi.com/estrelabet-aviator-latest\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"estrelabet-aviator-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "This endpoint allows you to retrieve the latest results of the Aviator game on the Estrelabet ( \nestrelabet.com )platform.  \n\nYou can access the array containing the most recent results of the Aviator game. \n\nEach element of the array represents the numerical value of the result obtained in the game, with the first element being the most recent and the last being the oldest.   \n\nThis endpoint can be integrated into other applications to provide up-to-date information on the results of the Avi...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://estrelabet-aviator-api.p.rapidapi.com/estrelabet-aviator-latest'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://estrelabet-aviator-api.p.rapidapi.com/estrelabet-aviator-latest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://estrelabet-aviator-api.p.rapidapi.com/estrelabet-aviator-latest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"estrelabet-aviator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Estrelabet Aviator API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me with the historical data for the domain example.com using the SimilarWeb API?",
        "model_answer": "requests.get(\"https://similarweb-historical-data.p.rapidapi.com/api/getCountries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"similarweb-historical-data.p.rapidapi.com\"}, params={\"domain\": \"example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "More than 36 month visits and countries share SimilarWeb data ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://similarweb-historical-data.p.rapidapi.com/api/getCountries'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://similarweb-historical-data.p.rapidapi.com/api/getCountries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "Domain name (like google.com)",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://similarweb-historical-data.p.rapidapi.com/api/getCountries\"\nquerystring = {\"domain\": \"google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"similarweb-historical-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SimilarWeb (historical data)",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "Domain name (like google.com)",
                    "default": "google.com"
                }
            ]
        }
    },
    {
        "query": "requests.get(\"https://spott.p.rapidapi.com/places/autocomplete\", headers={\"X-RapidAPI-Key\"",
        "model_answer": "requests.get(\"https://spott.p.rapidapi.com/places/autocomplete\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"spott.p.rapidapi.com\"}, params={\"limit\": 10, \"skip\": 0, \"language\": \"\", \"country\": \"US,CA\", \"adminDivision1\": \"\", \"accuracyRadiusKm\": \"\", \"latitude\": \"\", \"adminDivision2\": \"\", \"q\": \"Sea\", \"longitude\": \"\", \"type\": \"CITY\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Search cities, countries and administrative divisions by name, autocompletion or IP.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://spott.p.rapidapi.com/places/autocomplete'\nquerystring = {\"limit\": \"\", \"skip\": \"\", \"language\": \"\", \"country\": \"\", \"adminDivision1\": \"\", \"accuracyRadiusKm\": \"\", \"latitude\": \"\", \"adminDivision2\": \"\", \"q\": \"\", \"longitude\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://spott.p.rapidapi.com/places/autocomplete\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                    "type": "NUMBER"
                },
                {
                    "name": "skip",
                    "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                    "type": "NUMBER"
                },
                {
                    "name": "language",
                    "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                    "type": "ENUM"
                },
                {
                    "name": "country",
                    "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                    "type": "STRING"
                },
                {
                    "name": "admindivision1",
                    "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                    "type": "STRING"
                },
                {
                    "name": "accuracyradiuskm",
                    "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                    "type": "NUMBER"
                },
                {
                    "name": "latitude",
                    "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                    "type": "NUMBER"
                },
                {
                    "name": "admindivision2",
                    "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                    "type": "STRING"
                },
                {
                    "name": "q",
                    "description": "Query string to find places which name starts with this prefix.",
                    "type": "STRING"
                },
                {
                    "name": "longitude",
                    "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                    "type": "NUMBER"
                },
                {
                    "name": "type",
                    "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://spott.p.rapidapi.com/places/autocomplete\"\nquerystring = {\"limit\": \"10\", \"skip\": \"0\", \"language\": \"\", \"country\": \"US,CA\", \"adminDivision1\": \"\", \"accuracyRadiusKm\": \"\", \"latitude\": \"\", \"adminDivision2\": \"\", \"q\": \"Sea\", \"longitude\": \"\", \"type\": \"CITY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spott.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Spott",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Maximum number of places to return. Used together with \\\"skip\\\" to paginate results. Defaults to 10, maximum is 100.",
                    "default": "10"
                },
                {
                    "name": "skip",
                    "type": "NUMBER",
                    "description": "Amount of places to ignore before beginning to return results. Used together with \\\"limit\\\" to paginate results. Defaults to 0.",
                    "default": "0"
                },
                {
                    "name": "language",
                    "type": "ENUM",
                    "description": "Specifies a language (ISO 639-1) to get the localized name of the place. If translation is not available, \\\"localizedName\\\" property will be null.",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Filters places by their country \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US,CA,MX).",
                    "default": "US,CA"
                },
                {
                    "name": "adminDivision1",
                    "type": "STRING",
                    "description": "Filters places by their adminDivision1 \\\"id\\\". It's possible to specify multiple values separating them with commas (Ex. ?country=US.CA,US.DE).",
                    "default": ""
                },
                {
                    "name": "accuracyRadiusKm",
                    "type": "NUMBER",
                    "description": "Maximum radius from the point specified by \\\"latitude\\\" and \\\"longitude\\\" to filter places located within the area. The value must be expressed in Kilometers. Defaults to 100km.",
                    "default": ""
                },
                {
                    "name": "latitude",
                    "type": "NUMBER",
                    "description": "Latitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"longitude\\\" is not specified.",
                    "default": ""
                },
                {
                    "name": "adminDivision2",
                    "type": "STRING",
                    "description": "Filters places by their adminDivision2 \\\"id\\\". It's possible to specify multiple values separating them with commas.",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Query string to find places which name starts with this prefix.",
                    "default": "Sea"
                },
                {
                    "name": "longitude",
                    "type": "NUMBER",
                    "description": "Longitude component of a coordinates set to filter places by their location. This parameter is ignored if \\\"latitude\\\" is not specified.",
                    "default": ""
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Filters places by their \\\"type\\\". It's possible to specify multiple values separating them with commas. Valid types are CITY, ADMIN_DIVISION_1, ADMIN_DIVISION_2 and COUNTRY.",
                    "default": "CITY"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the metadata of the collection values from The Cancer Imaging Archive API in CSV format?",
        "model_answer": "requests.get(\"https://tcia.p.rapidapi.com/getCollectionValues\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"tcia.p.rapidapi.com\"}, params={\"format\":\"CSV\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "NOTE: You need an API-Key to use this API. See README for more details.\r\nThe Cancer Imaging Archive (TCIA) is a public repository of cancer images and related clinical data for the express purpose of enabling open science research. Currently over 26 million radiologic images of cancer are contained in this repository. The API allows you to query metadata and download images from the various public collections available on TCIA",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tcia.p.rapidapi.com/getCollectionValues'\nquerystring = {\"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tcia.p.rapidapi.com/getCollectionValues\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "format",
                    "description": "Specify output type. Allowed values CSV/HTML/XML/JSON",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tcia.p.rapidapi.com/getCollectionValues\"\nquerystring = {\"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tcia.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Cancer Imaging Archive",
            "api_arguments_original": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Specify output type. Allowed values CSV/HTML/XML/JSON",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please extract the main article content from the following URL",
        "model_answer": "requests.get(\"https://article-content-extractor1.p.rapidapi.com/extract\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"article-content-extractor1.p.rapidapi.com\"}, params={\"url\": \"https://rapidapi.com/blog/api-glossary/api/\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Provide a URL and get main article content from news articles or blog",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://article-content-extractor1.p.rapidapi.com/extract'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://article-content-extractor1.p.rapidapi.com/extract\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://article-content-extractor1.p.rapidapi.com/extract\"\nquerystring = {\"url\": \"https://rapidapi.com/blog/api-glossary/api/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"article-content-extractor1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Article Content Extractor",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://rapidapi.com/blog/api-glossary/api/"
                }
            ]
        }
    },
    {
        "query": "Can you please retrieve the annotation details for the file \"/documents/myfile.docx\" in the storage \"myStorage\"?",
        "model_answer": "requests.get(\"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/documents/myfile.docx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"}, params={\"storageName\": \"myStorage\", \"versionId\": \"\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "The GroupDocs.Annotation Cloud is a REST API that helps you apply text & figure annotations to the documents in the cloud.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/{path}'\nquerystring = {\"path\": \"\", \"storageName\": \"\", \"versionId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/{path}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "path",
                    "description": "File path e.g. '/folder/file.ext'",
                    "type": "STRING"
                },
                {
                    "name": "storagename",
                    "description": "Storage name",
                    "type": "STRING"
                },
                {
                    "name": "versionid",
                    "description": "File version ID to download",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://groupdocs-annotation-cloud.p.rapidapi.com/annotation/storage/file/{path}\"\nquerystring = {\"storageName\": \"\", \"versionId\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-annotation-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GroupDocs.Annotation Cloud",
            "api_arguments_original": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/folder/file.ext'",
                    "default": ""
                },
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                },
                {
                    "name": "versionId",
                    "type": "STRING",
                    "description": "File version ID to download",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "How can I translate the text \"Hello world\" into Spanish?",
        "model_answer": "requests.get(\"https://text-translator2.p.rapidapi.com/getLanguages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"text-translator2.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Translate text to 100+ languages \u200b. Fast processing, cost saving. Free up to 100,000 characters per month",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://text-translator2.p.rapidapi.com/getLanguages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://text-translator2.p.rapidapi.com/getLanguages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://text-translator2.p.rapidapi.com/getLanguages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"text-translator2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Text Translator_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Get information about the company \"Acme Corporation\" from the Uganda Company Data API.",
        "model_answer": "requests.get(\"https://uganda-company-data.p.rapidapi.com/namesearch/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"uganda-company-data.p.rapidapi.com\"}, params={\"name\": \"Acme Corporation\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Access the official Uganda Governmnent company register, ideal for KYB purposes",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uganda-company-data.p.rapidapi.com/namesearch/search'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uganda-company-data.p.rapidapi.com/namesearch/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uganda-company-data.p.rapidapi.com/namesearch/search\"\nquerystring = {\"name\": \"Uganda Airlines\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uganda-company-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Uganda Company Data",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Uganda Airlines"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://email-utilities.p.rapidapi.com/normalize\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-utilities.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "API to validate email and normalize email",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-utilities.p.rapidapi.com/normalize'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-utilities.p.rapidapi.com/normalize\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "email id",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-utilities.p.rapidapi.com/normalize\"\nquerystring = {\"email\": \"cognitive.camp@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-utilities.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Utilities",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "email id",
                    "default": "cognitive.camp@gmail.com"
                }
            ]
        }
    },
    {
        "query": "I want to get the top 5 tracks for the artist with artist_id 40543550.",
        "model_answer": "requests.get(\"https://shazam8.p.rapidapi.com/artist/top_track\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shazam8.p.rapidapi.com\"}, params={\"limit\": \"5\", \"artist_id\": \"40543550\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Shazam API helps you to recognize any song from a music file, can fetch data from https://www.shazam.com/, extract information related to artist, track or give top songs by country.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shazam8.p.rapidapi.com/artist/top_track'\nquerystring = {\"limit\": \"\", \"artist_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shazam8.p.rapidapi.com/artist/top_track\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "artist_id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shazam8.p.rapidapi.com/artist/top_track\"\nquerystring = {\"limit\": \"5\", \"artist_id\": \"40543550\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shazam8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shazam",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": "5"
                },
                {
                    "name": "artist_id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "40543550"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest Climate Change news from The Guardian.",
        "model_answer": "response = requests.get(\"https://climate-change-api-tutorial.p.rapidapi.com/news/guardian\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"climate-change-api-tutorial.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API showing all the latest Climate Change News around the world",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-change-api-tutorial.p.rapidapi.com/news/guardian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-change-api-tutorial.p.rapidapi.com/news/guardian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaperid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-change-api-tutorial.p.rapidapi.com/news/guardian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-change-api-tutorial.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate Change API Tutorial",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "guardian"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the API key for Gigopost using the email yardilloapi@gmail.com?",
        "model_answer": "requests.get(\"https://gigopost.p.rapidapi.com/get_api_key\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gigopost.p.rapidapi.com\"}, params={\"email\": \"yardilloapi@gmail.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "The simplest way to involve your teams to share company brand content",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gigopost.p.rapidapi.com/get_api_key'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gigopost.p.rapidapi.com/get_api_key\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gigopost.p.rapidapi.com/get_api_key\"\nquerystring = {\"email\": \"yardilloapi@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gigopost.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Gigopost",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "yardilloapi@gmail.com"
                }
            ]
        }
    },
    {
        "query": "Can you help me search for the price of a Macbook Air on Amazon?",
        "model_answer": "requests.get(\"https://ag-amazon-data-web-scraper.p.rapidapi.com/search/Macbook Air\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ag-amazon-data-web-scraper.p.rapidapi.com\"}, params={\"searchQuery\": \"Macbook Air\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "AG Amazon Data Web Scraper Is The Easiest Way To Get Access To Any Of The Products Including Prices, Offers, Sales Rank, Reviews And Other Information Regarding The Products On Amazon In JSON Format. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ag-amazon-data-web-scraper.p.rapidapi.com/search/Macbook Air'\nquerystring = {\"searchQuery\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ag-amazon-data-web-scraper.p.rapidapi.com/search/Macbook Air\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchquery",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ag-amazon-data-web-scraper.p.rapidapi.com/search/Macbook Air\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ag-amazon-data-web-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AG Amazon Data Web Scraper",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "Macbook Air"
                }
            ]
        }
    },
    {
        "query": "Could you please provide me with some fake users?",
        "model_answer": "requests.get(\"https://fake-users6.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"fake-users6.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "fake users is a Api that give you fake users",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fake-users6.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fake-users6.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fake-users6.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fake-users6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "fake users",
            "api_arguments_original": []
        }
    },
    {
        "query": "Is there an API to check whether a given phone number is valid?",
        "model_answer": "requests.get(\"https://phone-validator.p.rapidapi.com/validate/phone-number\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"phone-validator.p.rapidapi.com\"}, params={\"phoneNumber\" \"1234567890\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Fodase fodase",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fodase1.p.rapidapi.com/users'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fodase1.p.rapidapi.com/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fodase1.p.rapidapi.com/users\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fodase1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fodase",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the current gas prices in the USA.",
        "model_answer": "response = requests.get(\"https://canadian-gas-prices.p.rapidapi.com/usa\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"canadian-gas-prices.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Provides current gas prices in Canada. Try the `/locations-list` endpoint to view all supported locations.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://canadian-gas-prices.p.rapidapi.com/usa'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://canadian-gas-prices.p.rapidapi.com/usa\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://canadian-gas-prices.p.rapidapi.com/usa\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"canadian-gas-prices.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Canadian Gas Prices",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if this file \"path/to/file.pdf\" is a valid pdf file?",
        "model_answer": "stampr.validate(\"path/to/file.pdf\")",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Postal mail has finally moved to the cloud. Mail letters online; Free Account; Fast & Secure; Support from Humans.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-stampr.p.rapidapi.com/health'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-stampr.p.rapidapi.com/health\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-stampr.p.rapidapi.com/health\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-stampr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stampr",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if this URL \"http://example.com\" is a phishing attempt?",
        "model_answer": "response = requests.get(\"https://exerra-phishing-check.p.rapidapi.com/stats\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"exerra-phishing-check.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This API checks URLs to see whether they are known phishing attempts. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://exerra-phishing-check.p.rapidapi.com/stats'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://exerra-phishing-check.p.rapidapi.com/stats\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://exerra-phishing-check.p.rapidapi.com/stats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"exerra-phishing-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Exerra phishing check",
            "api_arguments_original": []
        }
    },
    {
        "query": "I have a PDF file called \"QRCodeFieldExamples.pdf\" and I want to decode the QR codes from this PDF file.",
        "model_answer": "requests.get(\"https://qr-decoder.p.rapidapi.com/getQRCodesFromPDForImage\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"qr-decoder.p.rapidapi.com\"}, params={\"src\": \"https://www.pdfscripting.com/public/FreeStuff/PDFSamples/QRCodeFieldExamples.pdf\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Decode QRCodes from an image or PDF.\nReturns an array of decoded messages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-decoder.p.rapidapi.com/getQRCodesFromPDForImage'\nquerystring = {\"src\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-decoder.p.rapidapi.com/getQRCodesFromPDForImage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "src",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-decoder.p.rapidapi.com/getQRCodesFromPDForImage\"\nquerystring = {\"src\": \"https://www.pdfscripting.com/public/FreeStuff/PDFSamples/QRCodeFieldExamples.pdf\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-decoder.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR Decoder",
            "api_arguments_original": [
                {
                    "name": "src",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.pdfscripting.com/public/FreeStuff/PDFSamples/QRCodeFieldExamples.pdf"
                }
            ]
        }
    },
    {
        "query": "I want to generate a QR code for the URL \"www.example.com\".",
        "model_answer": "requests.get(\"https://qr-code-api137.p.rapidapi.com/qr\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\" \"qr-code-api137.p.rapidapi.com\"}, params={\"url\" \"www.example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": " This Api takes URL, or string and returns the QR code image",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-code-api137.p.rapidapi.com/qr'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-code-api137.p.rapidapi.com/qr\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-code-api137.p.rapidapi.com/qr\"\nquerystring = {\"url\": \"www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-api137.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR Code API_v33",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "www.google.com"
                }
            ]
        }
    },
    {
        "query": "I want to download the display picture and basic details of the Instagram profile with the username \"johnsmith\".",
        "model_answer": "response = requests.get(\"https://instagram-dp-download1.p.rapidapi.com/api/id1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram-dp-download1.p.rapidapi.com\"}, params={\"id\": \"johnsmith\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Download Instagram profile dp and basic details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-dp-download1.p.rapidapi.com/api/id1'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-dp-download1.p.rapidapi.com/api/id1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "Enter your username or profile link",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-dp-download1.p.rapidapi.com/api/id1\"\nquerystring = {\"id\": \"deepikapadukone\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-dp-download1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram DP Download",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "Enter your username or profile link",
                    "default": "deepikapadukone"
                }
            ]
        }
    },
    {
        "query": "I want to search for Python developer jobs in Helsinki with an offset of 10.",
        "model_answer": "requests.get(\"https://indeed-jobs-api-finland.p.rapidapi.com/indeed-fi/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"indeed-jobs-api-finland.p.rapidapi.com\"}, params={\"location\" \"Helsinki\", \"keyword\" \"Python developer\", \"offset\" \"10\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Indeed Jobs Search API - Finland\nGet the Jobs List as JSON by giving Keyword, Location (Finland Only) and offset value.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indeed-jobs-api-finland.p.rapidapi.com/indeed-fi/'\nquerystring = {\"location\": \"\", \"keyword\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indeed-jobs-api-finland.p.rapidapi.com/indeed-fi/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "location",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "keyword",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indeed-jobs-api-finland.p.rapidapi.com/indeed-fi/\"\nquerystring = {\"location\": \"Helsinki\", \"keyword\": \"python developer\", \"offset\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indeed-jobs-api-finland.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indeed Jobs API - Finland",
            "api_arguments_original": [
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "",
                    "default": "Helsinki"
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": "python developer"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Can you provide the latest testing data using the API?",
        "model_answer": "requests.get(\"https://testing-out-sharing-w-rachael.p.rapidapi.com/{input}\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"https://testing-out-sharing-w-rachael.p.rapidapi.com/{input}\"}, params={\"testing\": \"\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Rachael is awesome!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testing-out-sharing-w-rachael.p.rapidapi.com/{input}'\nquerystring = {\"testing\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testing-out-sharing-w-rachael.p.rapidapi.com/{input}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "testing",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testing-out-sharing-w-rachael.p.rapidapi.com/{input}\"\nquerystring = {\"testing\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testing-out-sharing-w-rachael.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Testing out Sharing w/ Rachael",
            "api_arguments_original": [
                {
                    "name": "testing",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me scan the QR code from this image URL",
        "model_answer": "requests.get(\"https://qr-scanner-api.p.rapidapi.com/api/QR/scanimageurl\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qr-scanner-api.p.rapidapi.com\"}, params={\"imageUrl\": \"https://example.com/image.png\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Scan QR & Barcode images from files or URLs and return the equivalent QR-Text or Barcode-Number plus code format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-scanner-api.p.rapidapi.com/api/QR/scanimageurl'\nquerystring = {\"imageUrl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-scanner-api.p.rapidapi.com/api/QR/scanimageurl\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "imageurl",
                    "description": "Image URL which you want to scan",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-scanner-api.p.rapidapi.com/api/QR/scanimageurl\"\nquerystring = {\"imageUrl\": \"set-your-image-URL-here\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-scanner-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR-Scanner-Api",
            "api_arguments_original": [
                {
                    "name": "imageUrl",
                    "type": "STRING",
                    "description": "Image URL which you want to scan",
                    "default": "set-your-image-URL-here"
                }
            ]
        }
    },
    {
        "query": "Can you help me preview the link https://www.example.com?",
        "model_answer": "requests.get(\"https://og-link-preview.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"og-link-preview.p.rapidapi.com\"}, params={\"url\": \"https://www.example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Link preview uses Open Graph protocol to get metadata from a website such as a title, description, images, favicon and raw data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://og-link-preview.p.rapidapi.com/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://og-link-preview.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://og-link-preview.p.rapidapi.com/\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"og-link-preview.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OG Link preview",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the details of the movie \"Pulp Fiction\"?",
        "model_answer": "requests.get(\"https://movies-details1.p.rapidapi.com/title/find\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"movies-details1.p.rapidapi.com\"}, params={\"q\": \"Pulp Fiction\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "we will provide movies details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://movies-details1.p.rapidapi.com/title/find'\nquerystring = {\"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://movies-details1.p.rapidapi.com/title/find\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://movies-details1.p.rapidapi.com/title/find\"\nquerystring = {\"q\": \"game of thr\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"movies-details1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Movies details",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "game of thr"
                }
            ]
        }
    },
    {
        "query": "How can I get the geolocation data for IP address 45.56.97.175 using the Mocking Rock API?",
        "model_answer": "requests.get(\"https://mocking-rock.p.rapidapi.com/country/getipgeodata\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"mocking-rock.p.rapidapi.com\"}, params={\"ip\": \"45.56.97.175\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "An APIs collection for getting sample profiles and city Data for testings for frontend or mock testings.    ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mocking-rock.p.rapidapi.com/country/getipgeodata'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mocking-rock.p.rapidapi.com/country/getipgeodata\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "Send a proper IPV4 .If valid IP will return result.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mocking-rock.p.rapidapi.com/country/getipgeodata\"\nquerystring = {\"ip\": \"34.89.89.28\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mocking-rock.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mocking Rock ",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "Send a proper IPV4 .If valid IP will return result.",
                    "default": "34.89.89.28"
                }
            ]
        }
    },
    {
        "query": "Can you generate 5 Bingo cards using the BingoAPI?",
        "model_answer": "requests.get(\"https://bingoapi.p.rapidapi.com/us\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bingoapi.p.rapidapi.com\"}, params={\"cards\": \"5\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Offload your server resources with Bingo API! It is a straightforward API that generates  Bingo cards in US and EU  game standards (75 or 90 numbers). Feel free to play with it with the free Basic Plan. If you have suggestions or requests just drop me a line.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bingoapi.p.rapidapi.com/us'\nquerystring = {\"cards\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bingoapi.p.rapidapi.com/us\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cards",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bingoapi.p.rapidapi.com/us\"\nquerystring = {\"cards\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bingoapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BingoAPI",
            "api_arguments_original": [
                {
                    "name": "cards",
                    "type": "STRING",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Can you help me find real estate listings in San Francisco?",
        "model_answer": "requests.get(\"https://zillow-base1.p.rapidapi.com/WebAPIs/zillow/locationSuggestions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"zillow-base1.p.rapidapi.com\"}, params={\"location\": \"San Francisco\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "[IMPROVED SEARCH API] These APIs provide a powerful and user-friendly real estate search feature. Users can enter an address, city, state, or ZIP code to search for apartments, houses, land, and homes for rent or sale in the United States. Additionally, they can customize their search results by using filters to specify price, square footage, property type, number of bedrooms and bathrooms, construction year, and various other criteria. Furthermore, users can view detailed information about e...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://zillow-base1.p.rapidapi.com/WebAPIs/zillow/locationSuggestions'\nquerystring = {\"location\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://zillow-base1.p.rapidapi.com/WebAPIs/zillow/locationSuggestions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "location",
                    "description": "State, county, neighborhood, city, street name, zip code",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://zillow-base1.p.rapidapi.com/WebAPIs/zillow/locationSuggestions\"\nquerystring = {\"location\": \"Brownsville, TX\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"zillow-base1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Zillow Base",
            "api_arguments_original": [
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "State, county, neighborhood, city, street name, zip code",
                    "default": "Brownsville, TX"
                }
            ]
        }
    },
    {
        "query": "Please provide me with details and stats of the TV show with Season IDs 80077209 and 80117715 on Netflix.",
        "model_answer": "requests.get(\"https://netflix54.p.rapidapi.com/season/episodes/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"netflix54.p.rapidapi.com\"}, params={\"ids\": \"80077209,80117715\", \"lang\": \"en\", \"limit\": 25, \"offset\": 0})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "Netflix data API provides details, stats and information of TV shows, movies, series, documentaries and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://netflix54.p.rapidapi.com/season/episodes/'\nquerystring = {\"ids\": \"\", \"lang\": \"\", \"limit\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://netflix54.p.rapidapi.com/season/episodes/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ids",
                    "description": "Season IDs (you can separate with commas)",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Episode Limit",
                    "type": "NUMBER"
                },
                {
                    "name": "offset",
                    "description": "Offset",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://netflix54.p.rapidapi.com/season/episodes/\"\nquerystring = {\"lang\": \"en\", \"limit\": \"25\", \"ids\": \"80077209,80117715\", \"offset\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"netflix54.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Netflix_v2",
            "api_arguments_original": [
                {
                    "name": "ids",
                    "type": "STRING",
                    "description": "Season IDs (you can separate with commas)",
                    "default": "80077209,80117715"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Episode Limit",
                    "default": "25"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Offset",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Can you convert the DNA sequence \"TACAAAGGCTAACGTCCTAGAGCTATT\" into its corresponding mRNA sequence using the DNA2mRNA API?",
        "model_answer": "requests.get(\"https://dna2protein.p.rapidapi.com/DNA2mRNA\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dna2protein.p.rapidapi.com\"}, params={\"dna\": \"TACAAAGGCTAACGTCCTAGAGCTATT\"})",
        "original": {
            "domain": "Science",
            "framework": "RapidAPI",
            "functionality": "A set of simple end-points to convert DNA and mRNA sequences to amino-acids",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dna2protein.p.rapidapi.com/DNA2mRNA'\nquerystring = {\"dna\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dna2protein.p.rapidapi.com/DNA2mRNA\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "dna",
                    "description": "The DNA sequence to transform into an mRNA sequence.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dna2protein.p.rapidapi.com/DNA2mRNA\"\nquerystring = {\"dna\": \"TACAAAGGCTAACGTCCTAGAGCTATT\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dna2protein.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dna2protein",
            "api_arguments_original": [
                {
                    "name": "dna",
                    "type": "STRING",
                    "description": "The DNA sequence to transform into an mRNA sequence.",
                    "default": "TACAAAGGCTAACGTCCTAGAGCTATT"
                }
            ]
        }
    },
    {
        "query": "Could you please check the details of this vehicle with the VIN number VF3CA5FU8DW062146?",
        "model_answer": "requests.get(\"https://vin-decoder-api-europe.p.rapidapi.com/vin\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"vin-decoder-api-europe.p.rapidapi.com\"}, params={\"vin\": \"VF3CA5FU8DW062146\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The VIN Decoder API - Europe retrieves information about a vehicle by decoding its Vehicle Identification Number (VIN). It returns details like make, model, year, and engine size for vehicles registered in Europe.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vin-decoder-api-europe.p.rapidapi.com/vin'\nquerystring = {\"vin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vin-decoder-api-europe.p.rapidapi.com/vin\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "vin",
                    "description": "VIN Number to lookup.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vin-decoder-api-europe.p.rapidapi.com/vin\"\nquerystring = {\"vin\": \"VF3CA5FU8DW062146\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vin-decoder-api-europe.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "VIN Decoder API - Europe",
            "api_arguments_original": [
                {
                    "name": "vin",
                    "type": "STRING",
                    "description": "VIN Number to lookup.",
                    "default": "VF3CA5FU8DW062146"
                }
            ]
        }
    },
    {
        "query": "What are the items in the Yardillo vault that match the filter \"vegetables\"?",
        "model_answer": "requests.get(\"https://yardillo.p.rapidapi.com/vault/all\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yardillo.p.rapidapi.com\"}, params={\"filter\": \"vegetables\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "No code API orchestration workflow",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yardillo.p.rapidapi.com/vault/all'\nquerystring = {\"filter\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yardillo.p.rapidapi.com/vault/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "filter",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yardillo.p.rapidapi.com/vault/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yardillo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yardillo",
            "api_arguments_original": [
                {
                    "name": "filter",
                    "type": "string",
                    "description": "",
                    "default": "all"
                }
            ]
        }
    },
    {
        "query": "I want to check the country of the IP address 192.168.0.1.",
        "model_answer": "requests.get(\"https://hajana1-ip-to-country-name-v1.p.rapidapi.com/free-ip-country-api.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hajana1-ip-to-country-name-v1.p.rapidapi.com\"}, params={\"ip\": \"192.168.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Using This free API developers can check Country of any IP, and this API can be used absolutly free in any application. or website.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hajana1-ip-to-country-name-v1.p.rapidapi.com/free-ip-country-api.php'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hajana1-ip-to-country-name-v1.p.rapidapi.com/free-ip-country-api.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "You Can Change IP address.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hajana1-ip-to-country-name-v1.p.rapidapi.com/free-ip-country-api.php\"\nquerystring = {\"ip\": \"103.255.5.26\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hajana1-ip-to-country-name-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP to Country Name",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "You Can Change IP address.",
                    "default": "103.255.5.26"
                }
            ]
        }
    },
    {
        "query": "I want to check if \"example@gmail.com\" is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Welcome to our e-commerce API! Our API is designed to make it easy for you to build and manage your online store and also build projects you can show on your porfolio. With our API, you can create products, manage orders, track shipments, and more. Our API is built on modern technologies and is easy to integrate with your existing systems.  Our API provides a secure and reliable platform for your e-commerce needs. You can trust us to keep your data safe and secure. We also provide a range of ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cartify.p.rapidapi.com/users/api/v1/admin/orders'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cartify.p.rapidapi.com/users/api/v1/admin/orders\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cartify.p.rapidapi.com/users/api/v1/admin/orders\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cartify.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cartify",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please fetch the recipe collection ids from the BBC Good Food API.",
        "model_answer": "requests.get(\"https://bbc-good-food-api.p.rapidapi.com/categories-collections-ids\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bbc-good-food-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Fetch recipies from search keyword, Author profile + recipes, collections recipes..\n\nNote: The API is deployed on basic plan server after the first subscriber I will upgrade the plan currently server go to sleep and first request wake up the server it takes 3 to 5 minutes.After 30 min of inactivity server go to sleep.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bbc-good-food-api.p.rapidapi.com/categories-collections-ids'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bbc-good-food-api.p.rapidapi.com/categories-collections-ids\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bbc-good-food-api.p.rapidapi.com/categories-collections-ids\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bbc-good-food-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BBC Good Food API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the pre-game odds for Dreambet.",
        "model_answer": "requests.get(\"https://dreambet.p.rapidapi.com/odds/dreambet\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dreambet.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Games and pre-game Odds for Dreambet",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dreambet.p.rapidapi.com/odds/dreambet'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dreambet.p.rapidapi.com/odds/dreambet\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dreambet.p.rapidapi.com/odds/dreambet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dreambet.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dreambet",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you give me information about the device with ID \"12345\" and API key \"abc123\" using the TrumpetBox Cloud API?",
        "model_answer": "requests.get(\"https://trumpetbox-cloud.p.rapidapi.com/device\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"trumpetbox-cloud.p.rapidapi.com\"}, params={\"id\": \"12345\", \"key\": \"abc123\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Thousands of businesses rely on TrumpetBox Cloud to communicate with their audience via text message. With our API, developers can access many of our platform\u2019s features and integrate them with other websites or applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://trumpetbox-cloud.p.rapidapi.com/device'\nquerystring = {\"id\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://trumpetbox-cloud.p.rapidapi.com/device\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "ID of the device",
                    "type": "STRING"
                },
                {
                    "name": "key",
                    "description": "TrumpetBox Cloud API KEY",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://trumpetbox-cloud.p.rapidapi.com/device\"\nquerystring = {\"id\": \"\\\"{{id}}\\\"\", \"key\": \"\\\"{{API_KEY}}\\\"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"trumpetbox-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TrumpetBox Cloud",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of the device",
                    "default": "\"{{id}}\""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "TrumpetBox Cloud API KEY",
                    "default": "\"{{API_KEY}}\""
                }
            ]
        }
    },
    {
        "query": "Can you check if the IP address 192.168.0.1 is a proxy?",
        "model_answer": "requests.get(\"https://proxy-detection.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"proxy-detection.p.rapidapi.com\"}, params={\"ip\": \"192.168.0.1\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Proxy Rotator is the world's first enterprise grade proxy ip rotation service. HTTPS proxies on a combination of over 26 million Residential, Private and Public Exclusive IP's. It's Easy to Use, Reliable and used by 1000's of Businesses daily.\r\n\r\nThe Proxy Detection API can detect if an IP address is, or has ever been, related to a proxy. With a database of over 26,000,000 worldwide proxies our probability of detecting a proxy based upon the ip address is unmatched. This API is useful for many scenario's such as reducing fraud on e-commerece sites, protecting your site from automated hacking attempts (XSS,SQLi,brute force), Prevent promotional offer abuse (multiple signups), limiting access on proxy IPs (prevent password / email changes) and many more uses!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://proxy-detection.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://proxy-detection.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "The IP address to be tested.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://proxy-detection.p.rapidapi.com/\"\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"proxy-detection.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Proxy Detection",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "The IP address to be tested.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to fetch a random premium anime mobile wallpaper.",
        "model_answer": "response = requests.get(\"https://premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com/rapidHandler/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Fetch The Best Quality Anime  Mobile Wallpapers & Illustrations From The 100k+ Collection. Easily Find Wallpaper Based On Requirements Which Are Categorized By Illustrations, Anime Name, Premium, and Genre (Boy, Christmas, Couple, Halloween, Family, Valentine, Wedding) with sensitivity control.\n\n1/06/2023 - Ultra & Mega plan changed, request increase at the same price.\n\nOur Quote API: https://shorturl.at/egkOQ \n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com/rapidHandler/random'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com/rapidHandler/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com/rapidHandler/random\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"premium-anime-mobile-wallpapers-illustrations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Premium-Anime-Mobile-Wallpapers-Illustrations",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with information about the domain \"example.com\"?",
        "model_answer": "requests.get(\"https://domain-info.p.rapidapi.com/domain-full-info/example.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"domain-info.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "This API returns informations on any domain online.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://domain-info.p.rapidapi.com/domain-full-info/{domain}'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://domain-info.p.rapidapi.com/domain-full-info/{domain}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://domain-info.p.rapidapi.com/domain-full-info/{domain}\"\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"domain-info.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Domain Info",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the news from Puerto Plata?",
        "model_answer": "requests.get(\"https://depuertoplata.p.rapidapi.comdepuertoplata.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"depuertoplata.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "tu ciudad en la red",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://depuertoplata.p.rapidapi.comdepuertoplata.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://depuertoplata.p.rapidapi.comdepuertoplata.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://depuertoplata.p.rapidapi.comdepuertoplata.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"depuertoplata.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "depuertoplata",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you recommend some stocks for me?",
        "model_answer": "requests.get(\"https://yh-finance-complete.p.rapidapi.com/recommendation\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yh-finance-complete.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This API helps you to query stocks, quotes, movers and other financial summary.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yh-finance-complete.p.rapidapi.com/recommendation'\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yh-finance-complete.p.rapidapi.com/recommendation\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "symbol",
                    "description": "i.e: TSLA",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yh-finance-complete.p.rapidapi.com/recommendation\"\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yh-finance-complete.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YH Finance Complete",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "i.e: TSLA",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a temporary email address for testing purposes?",
        "model_answer": "requests.get(\"https://gettempmail.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gettempmail.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Getting temp mail pr",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gettempmail.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gettempmail.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gettempmail.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gettempmail.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GetTempMail",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the Astronomy Picture of The day.",
        "model_answer": "requests.get(\"https://astronomy-picture-of-the-day.p.rapidapi.com/apod?api_key=SIGN-UP-FOR-KEY\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"astronomy-picture-of-the-day.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "This api returns a stunning astronomical picture every day with explanation from professionals.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://astronomy-picture-of-the-day.p.rapidapi.com/apod?api_key=nWYhQQdmCKwd0cVvrfyge124OrW4fnVOEL7QDdJH'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://astronomy-picture-of-the-day.p.rapidapi.com/apod?api_key=nWYhQQdmCKwd0cVvrfyge124OrW4fnVOEL7QDdJH\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://astronomy-picture-of-the-day.p.rapidapi.com/apod?api_key=nWYhQQdmCKwd0cVvrfyge124OrW4fnVOEL7QDdJH\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"astronomy-picture-of-the-day.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Astronomy Picture of The day",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide a response from the SimSimi Conversation API for the text \"Hello\" in English with no sexual contents?",
        "model_answer": "requests.get(\"https://simsimi.p.rapidapi.com/request.p\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"simsimi.p.rapidapi.com\"}, params={\"text\": \"Hello\", \"lc\": \"en\", \"ft\": \"0.0\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "SimSimi database consists of simple \"Request - Response\" set.\r\nWhen you request \"Hi\", SimSimi API send \"response\" by similarity with request sentence\r\n\r\nConversation API enables you to get SimSimi's response data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://simsimi.p.rapidapi.com/request.p'\nquerystring = {\"text\": \"\", \"lc\": \"\", \"ft\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://simsimi.p.rapidapi.com/request.p\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "Query message",
                    "type": "STRING"
                },
                {
                    "name": "lc",
                    "description": "Language code",
                    "type": "STRING"
                },
                {
                    "name": "ft",
                    "description": "Sexual Contents",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://simsimi.p.rapidapi.com/request.p\"\nquerystring = {\"text\": \"hi\", \"lc\": \"en\", \"ft\": \"0.0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"simsimi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SimSimi Conversation",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "Query message",
                    "default": "hi"
                },
                {
                    "name": "lc",
                    "type": "STRING",
                    "description": "Language code",
                    "default": "en"
                },
                {
                    "name": "ft",
                    "type": "NUMBER",
                    "description": "Sexual Contents",
                    "default": "0.0"
                }
            ]
        }
    },
    {
        "query": "I want to generate 5 sentences of Lorem Ipsum text.",
        "model_answer": "requests.get(\"https://lorem-ipsum-api.p.rapidapi.com/sentence\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"lorem-ipsum-api.p.rapidapi.com\"}, params={\"amount\": \"5\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Generate Lorem Ipsum placeholder text for your applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lorem-ipsum-api.p.rapidapi.com/sentence'\nquerystring = {\"amount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lorem-ipsum-api.p.rapidapi.com/sentence\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "amount",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lorem-ipsum-api.p.rapidapi.com/sentence\"\nquerystring = {\"amount\": \"2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lorem-ipsum-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lorem Ipsum Api",
            "api_arguments_original": [
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Can you please fetch the latest cryptocurrency news from CoinDesk?",
        "model_answer": "requests.get(\"https://cryptocurrency-news2.p.rapidapi.com/v1/coindesk\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cryptocurrency-news2.p.rapidapi.com\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "Get the latest crypto news direct from your preferred sources (fast & reliable). News sources will be continuously added.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cryptocurrency-news2.p.rapidapi.com/v1/coindesk'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cryptocurrency-news2.p.rapidapi.com/v1/coindesk\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cryptocurrency-news2.p.rapidapi.com/v1/coindesk\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cryptocurrency-news2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cryptocurrency News",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please scrape the top 30 repositories on Github for the query 'python'.",
        "model_answer": "requests.get(\"https://leo-github-data-scraper.p.rapidapi.com/search_top30/python\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"leo-github-data-scraper.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Github Data Scraper is the great way to get access to Github repositories details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://leo-github-data-scraper.p.rapidapi.com/search_top30/rails'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://leo-github-data-scraper.p.rapidapi.com/search_top30/rails\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://leo-github-data-scraper.p.rapidapi.com/search_top30/rails\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"leo-github-data-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Leo Github Data Scraper",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "",
                    "default": "rails"
                }
            ]
        }
    },
    {
        "query": "How can I get basic information on all weed strains?",
        "model_answer": "requests.get(\"https://weed-strain1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weed-strain1.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Basic information on all weed strain. Build mobile apps for weed strains.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weed-strain1.p.rapidapi.com/'\nquerystring = {\"ordering\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weed-strain1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ordering",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weed-strain1.p.rapidapi.com/\"\nquerystring = {\"ordering\": \"-strain\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weed-strain1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Weed Strain",
            "api_arguments_original": [
                {
                    "name": "ordering",
                    "type": "STRING",
                    "description": "",
                    "default": "-strain"
                }
            ]
        }
    },
    {
        "query": "I want to login to a user account with the username \"john\" and password \"password123\".",
        "model_answer": "requests.get(\"https://multipleteamscallingtest.p.rapidapi.com/user/login\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"multipleteamscallingtest.p.rapidapi.com\"}, params={\"username\": \"john\", \"password\": \"password123\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "MultipleTeamsCallingTest",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://multipleteamscallingtest.p.rapidapi.com/user/login'\nquerystring = {\"password\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://multipleteamscallingtest.p.rapidapi.com/user/login\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "password",
                    "description": "The password for login in clear text",
                    "type": "STRING"
                },
                {
                    "name": "username",
                    "description": "The user name for login",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://multipleteamscallingtest.p.rapidapi.com/user/login\"\nquerystring = {\"password\": \"string\", \"username\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"multipleteamscallingtest.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MultipleTeamsCallingTest",
            "api_arguments_original": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "The password for login in clear text",
                    "default": "string"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The user name for login",
                    "default": "string"
                }
            ]
        }
    },
    {
        "query": "Please check the languages supported by the Image Text Recognition API.",
        "model_answer": "requests.get(\"https://image-text-recognition.p.rapidapi.com/get_languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"image-text-recognition.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Recognizing text content from images",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://image-text-recognition.p.rapidapi.com/get_languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://image-text-recognition.p.rapidapi.com/get_languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://image-text-recognition.p.rapidapi.com/get_languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-text-recognition.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Image Text Recognition",
            "api_arguments_original": []
        }
    },
    {
        "query": "What is the all data from the Sports API?",
        "model_answer": "requests.get(\"https://all-data.p.rapidapi.comhttps://pubhub.yesitlabs.xyz/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"all-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "all sports data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-data.p.rapidapi.comhttps://pubhub.yesitlabs.xyz/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-data.p.rapidapi.comhttps://pubhub.yesitlabs.xyz/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-data.p.rapidapi.comhttps://pubhub.yesitlabs.xyz/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "All data",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me with the proxy data for the URL http://example.com?",
        "model_answer": "requests.get(\"https://scrapers-proxy2.p.rapidapi.com/tor\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"}, params={\"url\": \"http://example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Simple HTTP proxy API made for scrapers.  Scrape anonymously without having to worry about restrictions, blocks or captchas. Our goal is to provide you with faster response times and higher success rates.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://scrapers-proxy2.p.rapidapi.com/tor'\nquerystring = {\"user_agent\": \"\", \"device\": \"\", \"params\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://scrapers-proxy2.p.rapidapi.com/tor\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "user_agent",
                    "description": "Pass in `user_agent` if the page you are trying to scrape requires a specific user agent. If the page does not require a specific user agent, but a user agent from a type of device using `device` is recommended",
                    "type": "STRING"
                },
                {
                    "name": "device",
                    "description": "Pass in `device` to specify the type of web page you would like to see without needing to specify a user agent. This is recommended as an alternative to using `user_agent ` since it has a higher success rate",
                    "type": "STRING"
                },
                {
                    "name": "params",
                    "description": "Pass in `params` as json serialized object to specify url query parameters. This is an alternative to adding a query string to the `url` parameter",
                    "type": "OBJECT"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://scrapers-proxy2.p.rapidapi.com/tor\"\nquerystring = {\"user_agent\": \"\", \"device\": \"\", \"params\": \"\", \"url\": \"http://expyuzz4wqqyqhjn.onion/about/history/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"scrapers-proxy2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Scraper's Proxy",
            "api_arguments_original": [
                {
                    "name": "user_agent",
                    "type": "STRING",
                    "description": "Pass in `user_agent` if the page you are trying to scrape requires a specific user agent. If the page does not require a specific user agent, but a user agent from a type of device using `device` is recommended",
                    "default": ""
                },
                {
                    "name": "device",
                    "type": "STRING",
                    "description": "Pass in `device` to specify the type of web page you would like to see without needing to specify a user agent. This is recommended as an alternative to using `user_agent ` since it has a higher success rate",
                    "default": ""
                },
                {
                    "name": "params",
                    "type": "OBJECT",
                    "description": " Pass in `params` as json serialized object to specify url query parameters. This is an alternative to adding a query string to the `url` parameter",
                    "default": ""
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "http://expyuzz4wqqyqhjn.onion/about/history/"
                }
            ]
        }
    },
    {
        "query": "I want to check if the username \"johnsmith\" exists in the test API.",
        "model_answer": "requests.get(\"https://teste693.p.rapidapi.com/user/johnsmith\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"teste693.p.rapidapi.com\"})",
        "original": {
            "domain": "Science",
            "framework": "RapidAPI",
            "functionality": "teste",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://teste693.p.rapidapi.com/user/{username}'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://teste693.p.rapidapi.com/user/{username}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "description": "The name that needs to be fetched. Use user1 for testing.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://teste693.p.rapidapi.com/user/{username}\"\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"teste693.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "teste",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The name that needs to be fetched. Use user1 for testing. ",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please validate the email address info@rapidapi.com using the Email Validation_v3 API?",
        "model_answer": "requests.get(\"https://email-validation12.p.rapidapi.com/support@rapidapi.com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-validation12.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Check disposable email addresses",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-validation12.p.rapidapi.com/support@rapidapi.com'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-validation12.p.rapidapi.com/support@rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-validation12.p.rapidapi.com/support@rapidapi.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-validation12.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Validation_v3",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "string",
                    "description": "",
                    "default": "support@rapidapi.com"
                }
            ]
        }
    },
    {
        "query": "I want to search for operas in multiple genres in the rapidAPI Testing options API.",
        "model_answer": "requests.get(\"https://testing-options.p.rapidapi.com/opera/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"testing-options.p.rapidapi.com\"}, params={\"genre__name_hy__in\":\"opera1,opera2\", \"genre__name_ru__in\":\"opera3\", \"genre__name_en__in\":\"opera4\", \"year__in\":\"2020,2021\", \"published_at__gt\":\"2021-01-01\", \"catalogue_id\":\"catalogue1\", \"genre__name_en\":\"opera5\", \"published_at\":\"2022-01-01\", \"published_at__gte\":\"2021-01-01\", \"genre__name_hy\":\"opera6\", \"year\":\"2022\", \"catalogue_id__in\":\"catalogue2,catalogue3\", \"genre__name_ru\":\"opera7\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "This is my test API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testing-options.p.rapidapi.com/opera/'\nquerystring = {\"genre__name_hy__in\": \"\", \"genre__name_ru__in\": \"\", \"genre__name_en__in\": \"\", \"year__in\": \"\", \"published_at__gt\": \"\", \"catalogue_id\": \"\", \"genre__name_en\": \"\", \"published_at\": \"\", \"published_at__gte\": \"\", \"genre__name_hy\": \"\", \"year\": \"\", \"catalogue_id__in\": \"\", \"genre__name_ru\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testing-options.p.rapidapi.com/opera/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "genre__name_hy__in",
                    "description": "Multiple values may be separated by commas.",
                    "type": "STRING"
                },
                {
                    "name": "genre__name_ru__in",
                    "description": "Multiple values may be separated by commas.",
                    "type": "STRING"
                },
                {
                    "name": "genre__name_en__in",
                    "description": "Multiple values may be separated by commas.",
                    "type": "STRING"
                },
                {
                    "name": "year__in",
                    "description": "Multiple values may be separated by commas.",
                    "type": "STRING"
                },
                {
                    "name": "published_at__gt",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "catalogue_id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "genre__name_en",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "published_at",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "published_at__gte",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "genre__name_hy",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "year",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "catalogue_id__in",
                    "description": "Multiple values may be separated by commas.",
                    "type": "STRING"
                },
                {
                    "name": "genre__name_ru",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testing-options.p.rapidapi.com/opera/\"\nquerystring = {\"genre__name_hy__in\": \"\", \"genre__name_ru__in\": \"\", \"genre__name_en__in\": \"\", \"year__in\": \"\", \"published_at__gt\": \"\", \"catalogue_id\": \"\", \"genre__name_en\": \"\", \"published_at\": \"\", \"published_at__gte\": \"\", \"genre__name_hy\": \"\", \"year\": \"\", \"catalogue_id__in\": \"\", \"genre__name_ru\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testing-options.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Testing options",
            "api_arguments_original": [
                {
                    "name": "genre__name_hy__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "genre__name_ru__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "genre__name_en__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "year__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "published_at__gt",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "catalogue_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "genre__name_en",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "published_at",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "published_at__gte",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "genre__name_hy",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "catalogue_id__in",
                    "type": "STRING",
                    "description": "Multiple values may be separated by commas.",
                    "default": ""
                },
                {
                    "name": "genre__name_ru",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the history of the channel \"my_channel\" in the PubNub network.",
        "model_answer": "requests.get(\"https://pubnub-pubnub.p.rapidapi.com/history/demo/my_channel/0/2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"pubnub-pubnub.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "The PubNub Network makes Real-time Communications Simple  with an easy API. Two Functions: Send/Receive (Publish/Subscribe). We provide a web-scale API for businesses to build scalable Data Push communication apps on Mobile, Tablet and Web. Bidirectional JSON. Ask for commit access - via Twitter: @pubnub - via IRC: #pubnub on FreeNode",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pubnub-pubnub.p.rapidapi.com/history/demo/my_channel/0/2'\nquerystring = {\"callback\": \"\", \"limit\": \"\", \"subscribe_key\": \"\", \"channel\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pubnub-pubnub.p.rapidapi.com/history/demo/my_channel/0/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "callback",
                    "description": "JSONP Callback",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Limit of messages to return",
                    "type": "STRING"
                },
                {
                    "name": "subscribe_key",
                    "description": "Subscribe Key",
                    "type": "STRING"
                },
                {
                    "name": "channel",
                    "description": "Channel Name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pubnub-pubnub.p.rapidapi.com/history/demo/my_channel/0/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pubnub-pubnub.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PubNub Network",
            "api_arguments_original": [
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "JSONP Callback",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Limit of messages to return",
                    "default": "2"
                },
                {
                    "name": "subscribe_key",
                    "type": "STRING",
                    "description": "Subscribe Key",
                    "default": "demo"
                },
                {
                    "name": "channel",
                    "type": "STRING",
                    "description": "Channel Name",
                    "default": "my_channel"
                }
            ]
        }
    },
    {
        "query": "I want to get the climate risk assessment score for Paris, France with a radius of 50 km.",
        "model_answer": "requests.get(\"https://rankiteo-climate-risk-assessment.p.rapidapi.com/GetPowerplantByRadiusAndAddress\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"rankiteo-climate-risk-assessment.p.rapidapi.com\"}, params={\"address\": \"Paris, France\", \"radius_km\": 50})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "We provide an API to give a climate risk assessment score for any locations in the world.\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://rankiteo-climate-risk-assessment.p.rapidapi.com/GetPowerplantByRadiusAndAddress'\nquerystring = {\"address\": \"\", \"radius_km\": \"\", \"page_number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://rankiteo-climate-risk-assessment.p.rapidapi.com/GetPowerplantByRadiusAndAddress\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "address",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "radius_km",
                    "description": "default value is 100 km (100)",
                    "type": "NUMBER"
                },
                {
                    "name": "page_number",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://rankiteo-climate-risk-assessment.p.rapidapi.com/GetPowerplantByRadiusAndAddress\"\nquerystring = {\"radius_km\": \"\", \"page_number\": \"\", \"address\": \"Paris,France\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rankiteo-climate-risk-assessment.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Rankiteo Climate Risk Assessment",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "Paris,France"
                },
                {
                    "name": "radius_km",
                    "type": "NUMBER",
                    "description": "default value is 100 km (100)",
                    "default": ""
                },
                {
                    "name": "page_number",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you recommend a recipe collection for avid bakers on TikTok?",
        "model_answer": "requests.get(\"https://tiktok-api6.p.rapidapi.com/collection/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tiktok-api6.p.rapidapi.com\"}, params={\"collection_id\": \"(Recipes & Good Eats)-7084615222824045358\", \"username\": \"abbeychaplain\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Reliable TikTok API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-api6.p.rapidapi.com/collection/'\nquerystring = {\"collection_id\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-api6.p.rapidapi.com/collection/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "collection_id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "username",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-api6.p.rapidapi.com/collection/\"\nquerystring = {\"collection_id\": \"(Recipes & Good Eats)-7084615222824045358\", \"username\": \"abbeychaplain\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-api6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok API",
            "api_arguments_original": [
                {
                    "name": "collection_id",
                    "type": "STRING",
                    "description": "",
                    "default": "(Recipes & Good Eats)-7084615222824045358"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "abbeychaplain"
                }
            ]
        }
    },
    {
        "query": "I want to search for a random quote with a maximum length of 100 characters and tagged with \"love\" and \"inspiration\".",
        "model_answer": "response = requests.get(\"https://semantic-quotes.p.rapidapi.com/random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"semantic-quotes.p.rapidapi.com\"}, params={\"max_length\": 100, \"tags\": \"love, inspiration\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Semantic search for quotes. Wondering which celebrities have said something similar? Look no more, this API gives you the power to search for quotes semantically from over 1M+ quotes. The Artificial Intelligence (NLP) engine behind the scene seeks to understand the meaning of your query rather than simply matching keywords. We allows user to flexibly filter the results by the length of the quote, and/or by a large variety of tags.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://semantic-quotes.p.rapidapi.com/random'\nquerystring = {\"max_length\": \"\", \"tags\": \"\", \"min_length\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://semantic-quotes.p.rapidapi.com/random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "max_length",
                    "description": "Maximum length of the quote.",
                    "type": "NUMBER"
                },
                {
                    "name": "tags",
                    "description": "Comma seperated tags for filtering, for example, \n                `faith`,\n                `god`,\n                `humor`, \n                `hope`,\n                `inspirational`, \n                `love`, \n                `life`,\n                `motivational`,\n                `philosophy`,\n                `religion`,\n                `science`,\n                `spirituality`,\n                `success`,\n                `truth`,\n                `wisdom`,\n                `poetry`,\n                and much more.",
                    "type": "STRING"
                },
                {
                    "name": "min_length",
                    "description": "Minimum length of the quote.",
                    "type": "NUMBER"
                },
                {
                    "name": "limit",
                    "description": "Number of results returned.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://semantic-quotes.p.rapidapi.com/random\"\nquerystring = {\"max_length\": 4000, \"tags\": \"inspirational,motivational\", \"min_length\": \"0\", \"limit\": 3}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"semantic-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Semantic Quotes",
            "api_arguments_original": [
                {
                    "name": "max_length",
                    "type": "NUMBER",
                    "description": "Maximum length of the quote.",
                    "default": 4000
                },
                {
                    "name": "tags",
                    "type": "STRING",
                    "description": "Comma seperated tags for filtering, for example, \n                `faith`,\n                `god`,\n                `humor`, \n                `hope`,\n                `inspirational`, \n                `love`, \n                `life`,\n                `motivational`,\n                `philosophy`,\n                `religion`,\n                `science`,\n                `spirituality`,\n                `success`,\n                `truth`,\n                `wisdom`,\n                `poetry`,\n                and much more.\n        ",
                    "default": "inspirational,motivational"
                },
                {
                    "name": "min_length",
                    "type": "NUMBER",
                    "description": "Minimum length of the quote.",
                    "default": "0"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of results returned.",
                    "default": 3
                }
            ]
        }
    },
    {
        "query": "Please generate a face using the FaceGen API.",
        "model_answer": "requests.get(\"https://facegen.p.rapidapi.com/fg/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"facegen.p.rapidapi.com\"}, params={\"AI\": \"1\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Generation of faces by AI. (Occasionally, a neural network makes mistakes, which is why artifacts appear: an incorrectly bent pattern, a strange hair color, and so on.)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://facegen.p.rapidapi.com/fg/'\nquerystring = {\"AI\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://facegen.p.rapidapi.com/fg/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ai",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://facegen.p.rapidapi.com/fg/\"\nquerystring = {\"AI\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"facegen.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FaceGen",
            "api_arguments_original": [
                {
                    "name": "AI",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to get information about the brewery with ID 5494 from the Open Brewery DB API.",
        "model_answer": "requests.get(\"https://brianiswu-open-brewery-db-v1.p.rapidapi.com/breweries/5494\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"brianiswu-open-brewery-db-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Looking for a Beer API? Open Brewery DB is a free API for public information on breweries, cideries, brewpubs, and bottleshops. Currently it is focused to the United States, but future plans are to import world-wide data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://brianiswu-open-brewery-db-v1.p.rapidapi.com/breweries/5494'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://brianiswu-open-brewery-db-v1.p.rapidapi.com/breweries/5494\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "ID of Brewery",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://brianiswu-open-brewery-db-v1.p.rapidapi.com/breweries/5494\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"brianiswu-open-brewery-db-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Open Brewery DB",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "ID of Brewery",
                    "default": "5494"
                }
            ]
        }
    },
    {
        "query": "I want to get the geographical location information of my IP address.",
        "model_answer": "response = requests.get(\"https://ip-address-tracker-free.p.rapidapi.com/rapidapi/ip\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-address-tracker-free.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "This is a free service that will get you the ip geographical location information of your user.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-address-tracker-free.p.rapidapi.com/rapidapi/ip'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-address-tracker-free.p.rapidapi.com/rapidapi/ip\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-address-tracker-free.p.rapidapi.com/rapidapi/ip\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-address-tracker-free.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Address Tracker - Free",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please generate a unique name for my new company.",
        "model_answer": "requests.get(\"https://nameforge.p.rapidapi.com/single-name/short/New%20Company\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nameforge.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Unleash your imagination and create any name you can dream up. Generate unique names for children, companies, characters, and usernames, literally anything using descriptive queries. The possibilities are endless - see where your creativity takes you!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nameforge.p.rapidapi.com/single-name/short/{query}'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nameforge.p.rapidapi.com/single-name/short/{query}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nameforge.p.rapidapi.com/single-name/short/{query}\"\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nameforge.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NameForge",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "What is the estimated taxi fare from latitude 37.7749 to longitude -122.4194, with a departure latitude of 34.0522 and a departure longitude of -118.2437?",
        "model_answer": "requests.get(\"https://taxi-fare-calculator.p.rapidapi.com/search-geo\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"taxi-fare-calculator.p.rapidapi.com\"}, params={\"arr_lat\": 37.7749, \"arr_lng\": -122.4194, \"dep_lat\": 34.0522, \"dep_lng\": -118.2437})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "How much does a taxi cost? Estimate your taxicab fare & rates. Get your taxi fare now and compare taxi prices. Taxi Fare Calculator provides taxi & cab fares for any trip in any city. The API provides you with a price for the best possible route for your cab ride.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://taxi-fare-calculator.p.rapidapi.com/search-geo'\nquerystring = {\"arr_lat\": \"\", \"arr_lng\": \"\", \"dep_lat\": \"\", \"dep_lng\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://taxi-fare-calculator.p.rapidapi.com/search-geo\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "arr_lat",
                    "description": "Latitude of arrival point",
                    "type": "NUMBER"
                },
                {
                    "name": "arr_lng",
                    "description": "Longitude of arrival point",
                    "type": "NUMBER"
                },
                {
                    "name": "dep_lat",
                    "description": "Latitude of departure point",
                    "type": "NUMBER"
                },
                {
                    "name": "dep_lng",
                    "description": "Longitude of departure point",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://taxi-fare-calculator.p.rapidapi.com/search-geo\"\nquerystring = {\"arr_lat\": \"52.47\", \"arr_lng\": \"13.63\", \"dep_lat\": \"52.50\", \"dep_lng\": \"13.43\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"taxi-fare-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Taxi Fare Calculator",
            "api_arguments_original": [
                {
                    "name": "arr_lat",
                    "type": "NUMBER",
                    "description": "Latitude of arrival point",
                    "default": "52.47"
                },
                {
                    "name": "arr_lng",
                    "type": "NUMBER",
                    "description": "Longitude of arrival point",
                    "default": "13.63"
                },
                {
                    "name": "dep_lat",
                    "type": "NUMBER",
                    "description": "Latitude of departure point",
                    "default": "52.50"
                },
                {
                    "name": "dep_lng",
                    "type": "NUMBER",
                    "description": "Longitude of departure point",
                    "default": "13.43"
                }
            ]
        }
    },
    {
        "query": "I want to generate a quote from Joe Rogan.",
        "model_answer": "requests.get(\"https://joe-rogan-quote-generator.p.rapidapi.com/generate_rogan\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"joe-rogan-quote-generator.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Get quotes from the man himself",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://joe-rogan-quote-generator.p.rapidapi.com/generate_rogan'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://joe-rogan-quote-generator.p.rapidapi.com/generate_rogan\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://joe-rogan-quote-generator.p.rapidapi.com/generate_rogan\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"joe-rogan-quote-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Joe Rogan Quote Generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with live data for the game on the Uros Kovcic API.",
        "model_answer": "requests.get(\"https://uros-kovcic.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"uros-kovcic.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Api for games",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uros-kovcic.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uros-kovcic.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uros-kovcic.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uros-kovcic.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Uros Kovcic",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if an email address example@gmail.com is disposable.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "API allows manage LEGO set collection. User can specify which items you own and how many of them. Through this API could be persist collection.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cubiculuscollection.p.rapidapi.com/user-by-email/{apiKey}/{email}'\nquerystring = {\"email\": \"\", \"apikey\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cubiculuscollection.p.rapidapi.com/user-by-email/{apiKey}/{email}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "users's email",
                    "type": "STRING"
                },
                {
                    "name": "apikey",
                    "description": "Application key. Accessing application is identified by key. This application key could be for free obtained at cubiculus.com after registration",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cubiculuscollection.p.rapidapi.com/user-by-email/{apiKey}/{email}\"\nquerystring = {\"email\": \"\", \"apikey\": \"ewqwe\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cubiculuscollection.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "cubiculus - managing LEGO set collection",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "users's email",
                    "default": ""
                },
                {
                    "name": "apikey",
                    "type": "STRING",
                    "description": "Application key. Accessing application is identified by key. This application key could be for free obtained at cubiculus.com after registration",
                    "default": "ewqwe"
                }
            ]
        }
    },
    {
        "query": "Please generate a YouTube video description for the keywords \"unreal engine ai\" and \"npcs\" using the Blogzee AI - SEO & Social Content Generator API.",
        "model_answer": "requests.get(\"https://blogzee-ai-seo-social-content-generator.p.rapidapi.com/generate_youtube_video_description\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"blogzee-ai-seo-social-content-generator.p.rapidapi.com\"}, params={\"keyword1\": \"unreal engine ai\", \"keyword2\": \"npcs\", \"include_emojis\": \"True\", \"video_title\": \"Telling NPCs they Live in a Simulation - Unreal Engine 5 AI NPCs\", \"facebook_link\": \"https://www.facebook.com/\", \"linkedin_link\": \"https://www.linkedin.com\", \"tiktok_link\": \"https://www.tiktok.com/en/\", \"twitter_link\": \"https://twitter.com/home?lang=en\", \"instagram_link\": \"https://www.instagram.com/\", \"keyword4\": \"\", \"keyword3\": \"\", \"keyword5\": \"\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Blogzee AI is an innovative SEO content generator API powered by advanced machine learning algorithms. It uses OpenAI's cutting-edge language model to produce high-quality, SEO-optimized blog post ideas and content based on the user-specified keywords. Blogzee AI is capable of generating engaging blog posts, incorporating HTML, emojis, and up to five keywords to enhance readability and search engine visibility. Perfect for bloggers, content marketers, and SEO professionals who need a quick bo...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://blogzee-ai-seo-social-content-generator.p.rapidapi.com/generate_youtube_video_description'\nquerystring = {\"keyword1\": \"\", \"keyword2\": \"\", \"include_emojis\": \"\", \"video_title\": \"\", \"keyword5\": \"\", \"facebook_link\": \"\", \"linkedin_link\": \"\", \"tiktok_link\": \"\", \"twitter_link\": \"\", \"instagram_link\": \"\", \"keyword4\": \"\", \"keyword3\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://blogzee-ai-seo-social-content-generator.p.rapidapi.com/generate_youtube_video_description\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "keyword1",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "keyword2",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "include_emojis",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "video_title",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "keyword5",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "facebook_link",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "linkedin_link",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "tiktok_link",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "twitter_link",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "instagram_link",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "keyword4",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "keyword3",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://blogzee-ai-seo-social-content-generator.p.rapidapi.com/generate_youtube_video_description\"\nquerystring = {\"keyword1\": \"unreal engine ai\", \"keyword5\": \"\", \"facebook_link\": \"https://www.facebook.com/\", \"linkedin_link\": \"https://www.linkedin.com\", \"keyword2\": \"npcs\", \"tiktok_link\": \"https://www.tiktok.com/en/\", \"twitter_link\": \"https://twitter.com/home?lang=en\", \"instagram_link\": \"https://www.instagram.com/\", \"keyword4\": \"\", \"keyword3\": \"\", \"include_emojis\": \"True\", \"video_title\": \"Telling NPCs they Live in a Simulation - Unreal Engine 5 AI NPCs\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"blogzee-ai-seo-social-content-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Blogzee AI - SEO & Social Content Generator",
            "api_arguments_original": [
                {
                    "name": "keyword1",
                    "type": "STRING",
                    "description": "",
                    "default": "unreal engine ai"
                },
                {
                    "name": "keyword2",
                    "type": "STRING",
                    "description": "",
                    "default": "npcs"
                },
                {
                    "name": "include_emojis",
                    "type": "STRING",
                    "description": "",
                    "default": "True"
                },
                {
                    "name": "video_title",
                    "type": "STRING",
                    "description": "",
                    "default": "Telling NPCs they Live in a Simulation - Unreal Engine 5 AI NPCs"
                },
                {
                    "name": "keyword5",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "facebook_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.facebook.com/"
                },
                {
                    "name": "linkedin_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.linkedin.com"
                },
                {
                    "name": "tiktok_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.tiktok.com/en/"
                },
                {
                    "name": "twitter_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://twitter.com/home?lang=en"
                },
                {
                    "name": "instagram_link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.instagram.com/"
                },
                {
                    "name": "keyword4",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "keyword3",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the supported locations for the LinkedIn Company and Profile Data API?",
        "model_answer": "requests.get(\"https://linkedin-company-and-profile-data.p.rapidapi.com/supported-locations\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"linkedin-company-and-profile-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Introducing our LinkedIn Company and Profile Data API! With our API, you can access valuable insights and data from LinkedIn's vast network of professionals and companies. Our API provides real-time access to company and profile information, including company size, industry, employee information, job titles, and more. With this data, you can create powerful applications that empower your users with actionable insights and help them make informed decisions. Whether you're building a recruiting...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://linkedin-company-and-profile-data.p.rapidapi.com/supported-locations'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://linkedin-company-and-profile-data.p.rapidapi.com/supported-locations\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://linkedin-company-and-profile-data.p.rapidapi.com/supported-locations\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linkedin-company-and-profile-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Linkedin Company and Profile Data",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the items in a list with ListId 'abc123' using the Ishan API.",
        "model_answer": "requests.get(\"https://ishan1.p.rapidapi.com/v1.0/sites/root/lists/abc123/items\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ishan1.p.rapidapi.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Ishan",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ishan1.p.rapidapi.com/v1.0/sites/root/lists/ListId/items'\nquerystring = {\"ListId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ishan1.p.rapidapi.com/v1.0/sites/root/lists/ListId/items\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "listid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ishan1.p.rapidapi.com/v1.0/sites/root/lists/ListId/items\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ishan1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ishan",
            "api_arguments_original": [
                {
                    "name": "ListId",
                    "type": "STRING",
                    "description": "",
                    "default": "ListId"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve images from Chevereto API?",
        "model_answer": "requests.get(\"https://chevereto.p.rapidapi.comhttp://chevereto.ec/rapidapi/images\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"chevereto.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "chevereto",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://chevereto.p.rapidapi.comhttp://chevereto.ec/rapidapi/images'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://chevereto.p.rapidapi.comhttp://chevereto.ec/rapidapi/images\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://chevereto.p.rapidapi.comhttp://chevereto.ec/rapidapi/images\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chevereto.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "chevereto",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the localizations for the DigiXpress API?",
        "model_answer": "requests.get(\"https://digixpress.p.rapidapi.com/api/localisations/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"digixpress.p.rapidapi.com\"}).json()",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "DigiXpress is a solution for shipping and delivering parcels and letters through a vast network of relay points and door-to-door; based on a parcel rating algorithm knowing only the name of the parcel.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://digixpress.p.rapidapi.com/api/localisations/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://digixpress.p.rapidapi.com/api/localisations/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://digixpress.p.rapidapi.com/api/localisations/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"digixpress.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DigiXpress",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to find claims similar to the text \"This is a sample text\"",
        "model_answer": "requests.get(\"https://stacks-patent-similarity1.p.rapidapi.com/v1/infringement-research/predict\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"stacks-patent-similarity1.p.rapidapi.com\"}, params={\"patent_number\": \"\", \"text\": \"This is a sample text\", \"model_name\": \"\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "This is a useful API for finding claims similar to the user's input text. The \"Infringement Research\" is a tool for returning similar claims that the text is likely to infringe. The \"101 Eligibility Analyzer\" is a tool for testing a claim for eligibility under both \"Alice Test Step One\" and \"Alice Test Step Two\". The \"Patent Analytics\" provides multiple useful endpoints powered by the Stacks Similarity Engine for exploring IP infringement and clearance, client prospecting, finding patent lawy...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stacks-patent-similarity1.p.rapidapi.com/v1/infringement-research/predict'\nquerystring = {\"patent_number\": \"\", \"text\": \"\", \"model_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stacks-patent-similarity1.p.rapidapi.com/v1/infringement-research/predict\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "patent_number",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "model_name",
                    "description": "",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stacks-patent-similarity1.p.rapidapi.com/v1/infringement-research/predict\"\nquerystring = {\"patent_number\": \"\", \"text\": \"\", \"model_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stacks-patent-similarity1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stacks Patent Similarity",
            "api_arguments_original": [
                {
                    "name": "patent_number",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "model_name",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the information of the article with DOI 10.1111/fima.12262 using the Crossref API.",
        "model_answer": "response = requests.get(\"https://crossref.p.rapidapi.com/10.1111/fima.12262\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crossref.p.rapidapi.com\"})",
        "original": {
            "domain": "Science",
            "framework": "RapidAPI",
            "functionality": "Crossref makes research outputs easy to find, cite, link, assess, and reuse.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crossref.p.rapidapi.com/10.1111/fima.12262'\nquerystring = {\"doi\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crossref.p.rapidapi.com/10.1111/fima.12262\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "doi",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crossref.p.rapidapi.com/10.1111/fima.12262\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crossref.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "crossref",
            "api_arguments_original": [
                {
                    "name": "doi",
                    "type": "string",
                    "description": "",
                    "default": "10.1111/fima.12262"
                }
            ]
        }
    },
    {
        "query": "Can you search for information about the barcode \"9780143111597\"?",
        "model_answer": "requests.get(\"https://barcode-monster.p.rapidapi.com/code\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"barcode-monster.p.rapidapi.com\"}, params={\"code\": \"9780143111597\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Search for barcode information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://barcode-monster.p.rapidapi.com/code'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://barcode-monster.p.rapidapi.com/code\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "code",
                    "description": "Barcode to search",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://barcode-monster.p.rapidapi.com/code\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"barcode-monster.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "barcode.monster",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "Barcode to search",
                    "default": "code"
                }
            ]
        }
    },
    {
        "query": "I want to get the live currency exchange rate between USD and EUR.",
        "model_answer": "requests.get(\"https://mony.p.rapidapi.comhttps://testphp1997.000webhostapp.com\")",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": " get mony",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mony.p.rapidapi.comhttps://testphp1997.000webhostapp.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mony.p.rapidapi.comhttps://testphp1997.000webhostapp.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mony.p.rapidapi.comhttps://testphp1997.000webhostapp.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mony.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "mony",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I verify the legitimacy of a merchant with Udyam Aadhaar Verification API using the provided request ID \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"?",
        "model_answer": "requests.get(\"https://udyam-aadhaar-verification.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"udyam-aadhaar-verification.p.rapidapi.com\"}, params={\"request_id\" \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Make your onboarding process safer, faster, and smarter by verifying the legitimacy of the MSME merchants operating in the manufacturing or service sectors, on your platform.\n\nWith IDfy\u2019s Udyam Aadhaar verification API, you can now confidently onboard merchants knowing that the merchant exists, is genuine and is authorized to partake in the manufacture or service sector by the Ministry of MSME.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://udyam-aadhaar-verification.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://udyam-aadhaar-verification.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://udyam-aadhaar-verification.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"udyam-aadhaar-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Udyam Aadhaar Verification",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest exchange rates for USD?",
        "model_answer": "requests.get(\"https://exchange-rates-live.p.rapidapi.com/rates/eur\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"exchange-rates-live.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "An API showing all the latest currencies from official banks.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://exchange-rates-live.p.rapidapi.com/rates/eur'\nquerystring = {\"bankId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://exchange-rates-live.p.rapidapi.com/rates/eur\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "bankid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://exchange-rates-live.p.rapidapi.com/rates/eur\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"exchange-rates-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Exchange rates live",
            "api_arguments_original": [
                {
                    "name": "bankId",
                    "type": "string",
                    "description": "",
                    "default": "eur"
                }
            ]
        }
    },
    {
        "query": "I want to get the trading dashboard URL for Walnut Trading Dash API.",
        "model_answer": "requests.get(\"https://walnuttradingdash.p.rapidapi.com/free_access\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"walnuttradingdash.p.rapidapi.com\"}, params={\"get_dash_url\": \"True\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Algo trading dashboard to backtest strategies with over 170 digital assets (crypto, forex, stocks) and 30 technical analysis strategies. Performance metrics, charts, and interactive visualizations available in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://walnuttradingdash.p.rapidapi.com/free_access'\nquerystring = {\"get_dash_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://walnuttradingdash.p.rapidapi.com/free_access\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "get_dash_url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://walnuttradingdash.p.rapidapi.com/free_access\"\nquerystring = {\"get_dash_url\": \"True\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"walnuttradingdash.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WalnutTradingDash",
            "api_arguments_original": [
                {
                    "name": "get_dash_url",
                    "type": "STRING",
                    "description": "",
                    "default": "True"
                }
            ]
        }
    },
    {
        "query": "I want to get the performance details of the call with account_id",
        "model_answer": "requests.get(\"https://ctm.p.rapidapi.com/accounts/12345/calls/67890.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ctm.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Track the performance of your advertising with instantly activated tracking numbers in 30 countries. Integrate with Google and track down to keyword level.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ctm.p.rapidapi.com/accounts/{account_id}/calls/{callid}.json'\nquerystring = {\"account_id\": \"\", \"callid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ctm.p.rapidapi.com/accounts/{account_id}/calls/{callid}.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "account_id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "callid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ctm.p.rapidapi.com/accounts/{account_id}/calls/{callid}.json\"\nquerystring = {\"account_id\": \"\", \"callid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ctm.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CallTrackingMetrics",
            "api_arguments_original": [
                {
                    "name": "account_id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "callid",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "How many calories are burned when skiing for 2 hours and weighing 180 pounds?",
        "model_answer": "requests.get(\"https://calories-burned-by-api-ninjas.p.rapidapi.com/v1/caloriesburned\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"calories-burned-by-api-ninjas.p.rapidapi.com\"}, params={\"activity\": \"skiing\", \"weight\": 180, \"duration\": 120})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Calories burned calculator for hundreds of different sports/activities. See more info at https://api-ninjas.com/api/caloriesburned.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://calories-burned-by-api-ninjas.p.rapidapi.com/v1/caloriesburned'\nquerystring = {\"activity\": \"\", \"weight\": \"\", \"duration\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://calories-burned-by-api-ninjas.p.rapidapi.com/v1/caloriesburned\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "activity",
                    "description": "name of the given activity. This value can be partial (e.g. ski will match water skiing and downhill skiing)",
                    "type": "STRING"
                },
                {
                    "name": "weight",
                    "description": "weight of the user performing the activity in pounds. Must be between 50 and 500. Default value is 160.",
                    "type": "NUMBER"
                },
                {
                    "name": "duration",
                    "description": "how long the activity was performed in minutes. Must be 1 or greater. Default value is 60 (1 hour).",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://calories-burned-by-api-ninjas.p.rapidapi.com/v1/caloriesburned\"\nquerystring = {\"activity\": \"skiing\", \"weight\": \"\", \"duration\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"calories-burned-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Calories Burned by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "activity",
                    "type": "STRING",
                    "description": "name of the given activity. This value can be partial (e.g. ski will match water skiing and downhill skiing)",
                    "default": "skiing"
                },
                {
                    "name": "weight",
                    "type": "NUMBER",
                    "description": "weight of the user performing the activity in pounds. Must be between 50 and 500. Default value is 160.",
                    "default": ""
                },
                {
                    "name": "duration",
                    "type": "STRING",
                    "description": "how long the activity was performed in minutes. Must be 1 or greater. Default value is 60 (1 hour).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me the Power BI news for page 2?",
        "model_answer": "requests.get(\"https://power-bi-smartable.p.rapidapi.com/news/page/2/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"power-bi-smartable.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Power BI API offers the Microsoft Power BI news, learning resources, events, samples and other information.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://power-bi-smartable.p.rapidapi.com/news/page/1/'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://power-bi-smartable.p.rapidapi.com/news/page/1/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://power-bi-smartable.p.rapidapi.com/news/page/1/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"power-bi-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Power BI Smartable",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the domain authority and page authority of the website 'example.com' using the Domain Authority API?",
        "model_answer": "requests.get(\"https://domain-authority1.p.rapidapi.com/GetDomainAuthority\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"domain-authority1.p.rapidapi.com\"}, params={\"url\": \"example.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Get Domain Authority and Page Authority of any Domain or URL.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://domain-authority1.p.rapidapi.com/GetDomainAuthority'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://domain-authority1.p.rapidapi.com/GetDomainAuthority\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://domain-authority1.p.rapidapi.com/GetDomainAuthority\"\nquerystring = {\"url\": \"h-supertools.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"domain-authority1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Domain Authority",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "h-supertools.com"
                }
            ]
        }
    },
    {
        "query": "Can you validate the phone number +1 (408) 555-1234?",
        "model_answer": "requests.get(\"https://validate-phone.p.rapidapi.com/v1/validate?\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"validate-phone.p.rapidapi.com\"}, params={\"number\" \"+1 (408) 555-1234\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "\u201cValidate Phone\u201d API validates national and international phone numbers, get location information about phone number.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://validate-phone.p.rapidapi.com/v1/validate?'\nquerystring = {\"number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://validate-phone.p.rapidapi.com/v1/validate?\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "number",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://validate-phone.p.rapidapi.com/v1/validate?\"\nquerystring = {\"number\": \"17036971776\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"validate-phone.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Validate Phone",
            "api_arguments_original": [
                {
                    "name": "number",
                    "type": "STRING",
                    "description": "",
                    "default": "17036971776"
                }
            ]
        }
    },
    {
        "query": "I want to hash the string \"Hello World\" using the Hashing-Api.",
        "model_answer": "response = requests.get(\"https://hashing-api.p.rapidapi.com/api/sha/256/hashtext\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hashing-api.p.rapidapi.com\"}, params={\"dataString\": \"Hello World\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Blake2B/MD5/SHA Text/File/Bytes Hashing",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hashing-api.p.rapidapi.com/api/sha/256/hashtext'\nquerystring = {\"dataString\": \"\", \"mode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hashing-api.p.rapidapi.com/api/sha/256/hashtext\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "datastring",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "mode",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hashing-api.p.rapidapi.com/api/sha/256/hashtext\"\nquerystring = {\"dataString\": \"enter-your-string-here\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hashing-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hashing-Api",
            "api_arguments_original": [
                {
                    "name": "dataString",
                    "type": "STRING",
                    "description": "",
                    "default": "enter-your-string-here"
                },
                {
                    "name": "mode",
                    "type": "NUMBER",
                    "description": "",
                    "default": "256"
                }
            ]
        }
    },
    {
        "query": "Can you give me the prayer times for Kuala Lumpur, Malaysia?",
        "model_answer": "response = requests.get(\"https://waktu-solat4.p.rapidapi.com/solat/time\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"waktu-solat4.p.rapidapi.com\"}, params={\"code\": \"KUL01\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Information on prayer times in Malaysia. Sources of information from e-solat.gov.my",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://waktu-solat4.p.rapidapi.com/solat/time'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://waktu-solat4.p.rapidapi.com/solat/time\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "code",
                    "description": "zone code, get from API /solat/list",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://waktu-solat4.p.rapidapi.com/solat/time\"\nquerystring = {\"code\": \"SWK07\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"waktu-solat4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Waktu Solat",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "zone code, get from API /solat/list",
                    "default": "SWK07"
                }
            ]
        }
    },
    {
        "query": "I want to get the checkout price for an Airbnb property with property ID 123456 for check-in on 2022-05-01 and check-out on 2022-05-10 for 2 adults, with currency in EUR.",
        "model_answer": "requests.get(\"https://airbnb19.p.rapidapi.com/api/v1/getPropertyCheckoutPrice\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"airbnb19.p.rapidapi.com\"}, params={\"checkOut\": \"2022-05-10\", \"checkIn\": \"2022-05-01\", \"propertyId\": \"123456\", \"adults\": 2, \"currency\": \"EUR\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": " Airbnb API allows users to search accommodations by location, place name, and GEO coordinates to find a place to rent. This API has all needed by any developer to create a new application with some extended features.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://airbnb19.p.rapidapi.com/api/v1/getPropertyCheckoutPrice'\nquerystring = {\"checkOut\": \"\", \"checkIn\": \"\", \"propertyId\": \"\", \"adults\": \"\", \"pets\": \"\", \"children\": \"\", \"currency\": \"\", \"languageId\": \"\", \"infants\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://airbnb19.p.rapidapi.com/api/v1/getPropertyCheckoutPrice\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "checkout",
                    "description": "Check-out date",
                    "type": "DATE (YYYY-MM-DD)"
                },
                {
                    "name": "checkin",
                    "description": "Check-in date",
                    "type": "DATE (YYYY-MM-DD)"
                },
                {
                    "name": "propertyid",
                    "description": "Required filed **propertyId** can be got from search property api as **id** parameter.",
                    "type": "NUMBER"
                },
                {
                    "name": "adults",
                    "description": "Number of adult guests (13 years and over). Default is set to 1.",
                    "type": "NUMBER"
                },
                {
                    "name": "pets",
                    "description": "Number of pets",
                    "type": "NUMBER"
                },
                {
                    "name": "children",
                    "description": "Number of children (2-12 years)",
                    "type": "NUMBER"
                },
                {
                    "name": "currency",
                    "description": "Default currency is **USD**. To get other available currency please call **Get Currency** API",
                    "type": "STRING"
                },
                {
                    "name": "languageid",
                    "description": "Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.",
                    "type": "STRING"
                },
                {
                    "name": "infants",
                    "description": "Number of infants (under 2 years)",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://airbnb19.p.rapidapi.com/api/v1/getPropertyCheckoutPrice\"\nquerystring = {\"checkOut\": \"\", \"adults\": \"\", \"pets\": \"\", \"children\": \"\", \"currency\": \"USD\", \"checkIn\": \"\", \"languageId\": \"\", \"propertyId\": \"\", \"infants\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"airbnb19.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Airbnb_v2",
            "api_arguments_original": [
                {
                    "name": "checkOut",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "Check-out date",
                    "default": ""
                },
                {
                    "name": "checkIn",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "Check-in date",
                    "default": ""
                },
                {
                    "name": "propertyId",
                    "type": "NUMBER",
                    "description": "Required filed **propertyId** can be got from search property api as **id** parameter.",
                    "default": ""
                },
                {
                    "name": "adults",
                    "type": "NUMBER",
                    "description": "Number of adult guests (13 years and over). Default is set to 1.",
                    "default": ""
                },
                {
                    "name": "pets",
                    "type": "NUMBER",
                    "description": "Number of pets",
                    "default": ""
                },
                {
                    "name": "children",
                    "type": "NUMBER",
                    "description": "Number of children (2-12 years)",
                    "default": ""
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "Default currency is **USD**. To get other available currency please call **Get Currency** API",
                    "default": "USD"
                },
                {
                    "name": "languageId",
                    "type": "STRING",
                    "description": "Enter **LanguageId** if you want a response in the requested language. To get **LanguageId** call **getLanguages** API and pass in the Id.",
                    "default": ""
                },
                {
                    "name": "infants",
                    "type": "NUMBER",
                    "description": "Number of infants (under 2 years)",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Could you please provide me with the API call to retrieve the data from the KVStore API?",
        "model_answer": "requests.get(\"https://kvstore.p.rapidapi.com/collections\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"kvstore.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The simple storage service",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kvstore.p.rapidapi.com/collections'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kvstore.p.rapidapi.com/collections\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kvstore.p.rapidapi.com/collections\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kvstore.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "KVStore",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to show an image of Times Square with a marker using the Address to Image API.",
        "model_answer": "requests.get(url=\"https://address-to-image.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"address-to-image.p.rapidapi.com\"}, params={\"output\": \"image\", \"type\": \"jpeg\", \"marker\": \"1\", \"zoom\": \"1\", \"address\": \"Times Square\", \"width\": \"1024\", \"height\": \"1024\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Shows an image of an address, using Google Street View.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://address-to-image.p.rapidapi.com/'\nquerystring = {\"output\": \"\", \"type\": \"\", \"marker\": \"\", \"zoom\": \"\", \"address\": \"\", \"width\": \"\", \"height\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://address-to-image.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "output",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "type",
                    "description": "Image type, either **png **or **jpeg**",
                    "type": "STRING"
                },
                {
                    "name": "marker",
                    "description": "Whether or not to display a marker on the image at the desired address, 0 or 1",
                    "type": "NUMBER"
                },
                {
                    "name": "zoom",
                    "description": "The level of image zoom. Default is 1, range is 0-5",
                    "type": "NUMBER"
                },
                {
                    "name": "address",
                    "description": "Address or location.",
                    "type": "STRING"
                },
                {
                    "name": "width",
                    "description": "Image width - maximum 1024px",
                    "type": "NUMBER"
                },
                {
                    "name": "height",
                    "description": "Image height- maximum 1024px",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://address-to-image.p.rapidapi.com/\"\nquerystring = {\"output\": \"image\", \"type\": \"jpeg\", \"marker\": \"0\", \"zoom\": \"1\", \"address\": \"Times Square\", \"width\": \"1024\", \"height\": \"1024\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"address-to-image.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Address to Image",
            "api_arguments_original": [
                {
                    "name": "output",
                    "type": "STRING",
                    "description": "",
                    "default": "image"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Image type, either **png **or **jpeg**",
                    "default": "jpeg"
                },
                {
                    "name": "marker",
                    "type": "NUMBER",
                    "description": "Whether or not to display a marker on the image at the desired address, 0 or 1",
                    "default": "0"
                },
                {
                    "name": "zoom",
                    "type": "NUMBER",
                    "description": "The level of image zoom. Default is 1, range is 0-5",
                    "default": "1"
                },
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "Address or location.",
                    "default": "Times Square"
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "Image width - maximum 1024px",
                    "default": "1024"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "Image height- maximum 1024px",
                    "default": "1024"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the payment details for transactions made between January 1, 2020, and January 1, 2021, using the NOWPayments API.",
        "model_answer": "requests.get(\"https://nowpayments.p.rapidapi.com/v1/payment/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nowpayments.p.rapidapi.com\"}, params={\"dateFrom\": \"2020-01-01\", \"dateTo\": \"2021-01-01\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "NOWPayments is a non-custodial cryptocurrency payment processing platform. Accept payments in a wide range of cryptos and get them instantly converted into a coin of your choice and sent to your wallet. Keeping it simple \u2013 no excess. NOWPayments' API allows you to integrate crypto payments in 50+ assets into any service.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nowpayments.p.rapidapi.com/v1/payment/'\nquerystring = {\"dateFrom\": \"\", \"page\": \"\", \"limit\": \"\", \"sortBy\": \"\", \"orderBy\": \"\", \"dateTo\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nowpayments.p.rapidapi.com/v1/payment/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "datefrom",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "limit",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "sortby",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "orderby",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "dateto",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nowpayments.p.rapidapi.com/v1/payment/\"\nquerystring = {\"dateFrom\": \"2020-01-01\", \"page\": \"\", \"limit\": 10, \"sortBy\": \"created_at\", \"orderBy\": \"asc\", \"dateTo\": \"2021-01-01\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nowpayments.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NOWPayments",
            "api_arguments_original": [
                {
                    "name": "dateFrom",
                    "type": "STRING",
                    "description": "",
                    "default": "2020-01-01"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": 10
                },
                {
                    "name": "sortBy",
                    "type": "STRING",
                    "description": "",
                    "default": "created_at"
                },
                {
                    "name": "orderBy",
                    "type": "STRING",
                    "description": "",
                    "default": "asc"
                },
                {
                    "name": "dateTo",
                    "type": "STRING",
                    "description": "",
                    "default": "2021-01-01"
                }
            ]
        }
    },
    {
        "query": "I want to send an SMS notification to +1234567890 with the message \"Hello, this is a test message.\"",
        "model_answer": "requests.post(\"https://smsto.p.rapidapi.com/messages\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"smsto.p.rapidapi.com\"}, json={\"to\" \"+1234567890\", \"message\" \"Hello, this is a test message.\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Implement SMS notifications, OTP, reminders, etc. into your workflow and build apps that send SMS with our redundant SSL SMS API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://smsto.p.rapidapi.com/messages'\nquerystring = {\"created_at\": \"\", \"order_by\": \"\", \"to\": \"\", \"order_direction\": \"\", \"status\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://smsto.p.rapidapi.com/messages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "created_at",
                    "description": "Filter by created at",
                    "type": "STRING"
                },
                {
                    "name": "order_by",
                    "description": "Field to sort by",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "Filter by recipient number",
                    "type": "STRING"
                },
                {
                    "name": "order_direction",
                    "description": "Sort messages.",
                    "type": "STRING"
                },
                {
                    "name": "status",
                    "description": "Filter by status",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "The number of messages per page.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://smsto.p.rapidapi.com/messages\"\nquerystring = {\"created_at\": \"2022-08-19\", \"order_by\": \"created_at\", \"to\": \"+3579865333\", \"order_direction\": \"desc\", \"status\": \"REJECTED\", \"limit\": \"15\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"smsto.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SMSto",
            "api_arguments_original": [
                {
                    "name": "created_at",
                    "type": "STRING",
                    "description": "Filter by created at",
                    "default": "2022-08-19"
                },
                {
                    "name": "order_by",
                    "type": "STRING",
                    "description": "Field to sort by",
                    "default": "created_at"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "Filter by recipient number",
                    "default": "+3579865333"
                },
                {
                    "name": "order_direction",
                    "type": "STRING",
                    "description": "Sort messages.",
                    "default": "desc"
                },
                {
                    "name": "status",
                    "type": "STRING",
                    "description": "Filter by status",
                    "default": "REJECTED"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The number of messages per page.",
                    "default": "15"
                }
            ]
        }
    },
    {
        "query": "Please get the location data for IP address 123.456.789.123.",
        "model_answer": "requests.get(\"https://ip-geo3.p.rapidapi.com/location\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-geo3.p.rapidapi.com\"}, params={\"ip\": \"123.456.789.123\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "API returns location data such as country, city, latitude, longitude, timezone, asn, currency, security data for IPv4 and IPv6 addresses in JSON formats.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-geo3.p.rapidapi.com/location'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-geo3.p.rapidapi.com/location\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-geo3.p.rapidapi.com/location\"\nquerystring = {\"ip\": \"77.129.21.184\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-geo3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Geo",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "77.129.21.184"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the details of the YouTube channel with the ID \"UC-lHJZR3Gqxm24_Vd_AJ5Yw\"?",
        "model_answer": "requests.get(\"https://youtube-channel-details.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-channel-details.p.rapidapi.com\"}, params={\"id\": \"UC-lHJZR3Gqxm24_Vd_AJ5Yw\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "YouTube Channel Details API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-channel-details.p.rapidapi.com/'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-channel-details.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "**Channel ID** starting with the `UC` prefix, or **Channel URL**\n\ne.g. `https://www.youtube.com/user/PewDiePie`\ne.g. `UC-lHJZR3Gqxm24_Vd_AJ5Yw`",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-channel-details.p.rapidapi.com/\"\nquerystring = {\"id\": \"UC-lHJZR3Gqxm24_Vd_AJ5Yw\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-channel-details.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube Channel Details",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "**Channel ID** starting with the `UC` prefix, or **Channel URL**\n\ne.g. `https://www.youtube.com/user/PewDiePie`\ne.g. `UC-lHJZR3Gqxm24_Vd_AJ5Yw`",
                    "default": "UC-lHJZR3Gqxm24_Vd_AJ5Yw"
                }
            ]
        }
    },
    {
        "query": "I want to check if this email example@gmail.com is valid.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"check-disposable-email.p.rapidapi.com\"}, params={\"email\" \"example@gmail.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Validate the email address of your users at sign-up and get a risk score to help you eliminate fraud up-front, inform risk models and build customised workflows | Email Validation API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-validation14.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-validation14.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-validation14.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-validation14.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Validation",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the tennis matches information for September 6, 2020?",
        "model_answer": "requests.get(\"https://tennis-live-data.p.rapidapi.com/matches-by-date/2020-09-06\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tennis-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Tennis data for top competitions around the world including tournaments, matches, results, and rankings.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tennis-live-data.p.rapidapi.com/matches-by-date/2020-09-06'\nquerystring = {\"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tennis-live-data.p.rapidapi.com/matches-by-date/2020-09-06\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "date",
                    "description": "",
                    "type": "DATE (YYYY-MM-DD)"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tennis-live-data.p.rapidapi.com/matches-by-date/2020-09-06\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tennis-live-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tennis Live Data",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "",
                    "default": "2020-09-06"
                }
            ]
        }
    },
    {
        "query": "I want to check the information about the IP address 192.168.0.1.",
        "model_answer": "requests.get(\"https://all-information-about-ip.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"all-information-about-ip.p.rapidapi.com\"}, params={\"query\": \"192.168.0.1\", \"lang\": \"en\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API for getting information about ip address, taken from several databases, compared.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-information-about-ip.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-information-about-ip.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-information-about-ip.p.rapidapi.com/\"\nquerystring = {\"lang\": \"en\", \"query\": \"188.68.223.26\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-information-about-ip.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "All information about IP",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "188.68.223.26"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "I want to calculate the distance between two locations with latitude 37.7749 and longitude -122.4194 and latitude 34.0522 and longitude -118.2437 in kilometers.",
        "model_answer": "requests.get(\"https://distance-calculation-api-by-pizza-api.p.rapidapi.com/distance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"distance-calculation-api-by-pizza-api.p.rapidapi.com\"}, params={\"metric\": \"km\", \"lat1\": \"37.7749\", \"lon1\": \"-122.4194\", \"lat2\": \"34.0522\", \"lon2\": \"-118.2437\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "The Distance Calculation API is incredibly simple to use. Simply provide the latitude and longitude coordinates of the two locations you want to measure and the metric whether you want the result to be in km, mi (miles), m(metres), feet,  and the API will return the distance between them in a user-friendly format. The API uses the latest algorithms and techniques to provide fast and accurate results, making it the ideal solution for developers who need to incorporate distance calculation into...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://distance-calculation-api-by-pizza-api.p.rapidapi.com/distance'\nquerystring = {\"metric\": \"\", \"lat2\": \"\", \"lon2\": \"\", \"lon1\": \"\", \"lat1\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://distance-calculation-api-by-pizza-api.p.rapidapi.com/distance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "metric",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lat2",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lon2",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lon1",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lat1",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://distance-calculation-api-by-pizza-api.p.rapidapi.com/distance\"\nquerystring = {\"metric\": \"mi\", \"lat2\": \"40.730610\", \"lon2\": \"-73.935242\", \"lon1\": \"-87.836723\", \"lat1\": \"41.977226\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"distance-calculation-api-by-pizza-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Distance Calculation API by Pizza API",
            "api_arguments_original": [
                {
                    "name": "metric",
                    "type": "STRING",
                    "description": "",
                    "default": "mi"
                },
                {
                    "name": "lat2",
                    "type": "STRING",
                    "description": "",
                    "default": "40.730610"
                },
                {
                    "name": "lon2",
                    "type": "STRING",
                    "description": "",
                    "default": "-73.935242"
                },
                {
                    "name": "lon1",
                    "type": "STRING",
                    "description": "",
                    "default": "-87.836723"
                },
                {
                    "name": "lat1",
                    "type": "STRING",
                    "description": "",
                    "default": "41.977226"
                }
            ]
        }
    },
    {
        "query": "Please give me details of pizza with id 5.",
        "model_answer": "requests.get(\"https://pizza-and-desserts.p.rapidapi.com/pizzas/1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pizza-and-desserts.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "decent collection of pizzas and desserts for your next food app project..",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pizza-and-desserts.p.rapidapi.com/pizzas/1'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pizza-and-desserts.p.rapidapi.com/pizzas/1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pizza-and-desserts.p.rapidapi.com/pizzas/1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pizza-and-desserts.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pizza and Desserts",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to extract the structure from the text \"I am John and I live in New York.\" using the Walnut Entity API.",
        "model_answer": "requests.get(\"https://walnut-entity.p.rapidapi.com/wrt_transformer\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"walnut-entity.p.rapidapi.com\"}, params={\"payload\": \"I am John and I live in New York.\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Extract structure from text data (who, what, where..) automatically using AI.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://walnut-entity.p.rapidapi.com/wrt_transformer'\nquerystring = {\"payload\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://walnut-entity.p.rapidapi.com/wrt_transformer\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "payload",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://walnut-entity.p.rapidapi.com/wrt_transformer\"\nquerystring = {\"payload\": \"I am Richard from New York and I work at Microsoft.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"walnut-entity.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Walnut Entity",
            "api_arguments_original": [
                {
                    "name": "payload",
                    "type": "STRING",
                    "description": "",
                    "default": "I am Richard from New York and I work at Microsoft."
                }
            ]
        }
    },
    {
        "query": "Can you help me download this TikTok video? Here's the link",
        "model_answer": "requests.get(\"https://tiktok-video-downloader8.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tiktok-video-downloader8.p.rapidapi.com\"}, params={\"url\": \"https://www.tiktok.com/@tiktok/video/1234567890\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Simple and Lightweight Api to Download TikTok Videos Easily.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-video-downloader8.p.rapidapi.com/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-video-downloader8.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-video-downloader8.p.rapidapi.com/\"\nquerystring = {\"url\": \"https://www.tiktok.com/@world_dawgxx/video/7228270440354204974?is_from_webapp=1&sender_device=mobile&sender_web_id=7166870640249718273\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-video-downloader8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok Video Downloader",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.tiktok.com/@world_dawgxx/video/7228270440354204974?is_from_webapp=1&sender_device=mobile&sender_web_id=7166870640249718273"
                }
            ]
        }
    },
    {
        "query": "What are the historical ESG scores for Apple Inc. in 2020?",
        "model_answer": "requests.get(\"https://gaialens-historical-esg-scores.p.rapidapi.com/scores/historical/2020\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gaialens-historical-esg-scores.p.rapidapi.com\"}, params={\"year\": \"2020\", \"companyname\": \"Apple Inc.\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Data-driven and transparent historical ESG scores for over 17,000 companies",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gaialens-historical-esg-scores.p.rapidapi.com/scores/historical/2020'\nquerystring = {\"year\": \"\", \"sedol\": \"\", \"isin\": \"\", \"companyname\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gaialens-historical-esg-scores.p.rapidapi.com/scores/historical/2020\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "year",
                    "description": "<= 2020",
                    "type": "string"
                },
                {
                    "name": "sedol",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "isin",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "companyname",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gaialens-historical-esg-scores.p.rapidapi.com/scores/historical/2020\"\nquerystring = {\"sedol\": \"\", \"isin\": \"\", \"companyname\": \"Apple Inc.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gaialens-historical-esg-scores.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GaiaLens Historical ESG Scores",
            "api_arguments_original": [
                {
                    "name": "year",
                    "type": "string",
                    "description": "<= 2020",
                    "default": "2020"
                },
                {
                    "name": "sedol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "isin",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "companyname",
                    "type": "STRING",
                    "description": "",
                    "default": "Apple Inc."
                }
            ]
        }
    },
    {
        "query": "I want to generate a shield for the name \"google\".",
        "model_answer": "requests.get(\"https://shields.p.rapidapi.com/v1/shields\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shields.p.rapidapi.com\"}, params={\"name\": \"google\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "A simple and free way to generate shields.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shields.p.rapidapi.com/v1/shields'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shields.p.rapidapi.com/v1/shields\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shields.p.rapidapi.com/v1/shields\"\nquerystring = {\"name\": \"google\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shields.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shields",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "google"
                }
            ]
        }
    },
    {
        "query": "I want to capture a screenshot of the website https://example.com.",
        "model_answer": "response = requests.get(\"https://webcap-website-screenshot-capture.p.rapidapi.com/v1/getscreenshot\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"webcap-website-screenshot-capture.p.rapidapi.com\"}, params={\"url\": \"https://example.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Turn websites into high definition screenshot images super quick and super easy. Simply provide a URL and the API will generate a screenshot for you. The returned file will be cached for continuous use",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webcap-website-screenshot-capture.p.rapidapi.com/v1/getscreenshot'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webcap-website-screenshot-capture.p.rapidapi.com/v1/getscreenshot\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webcap-website-screenshot-capture.p.rapidapi.com/v1/getscreenshot\"\nquerystring = {\"url\": \"https://apple.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webcap-website-screenshot-capture.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WebCap - Website Screenshot Capture",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://apple.com"
                }
            ]
        }
    },
    {
        "query": "I want to check if example@gmail.com is a valid email address.",
        "model_answer": "response = requests.get(\"https://email-validator18.p.rapidapi.com/email/validate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-validator18.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Deep email verify. Supports: Gmail, Mail.Ru, iCloud, Hotmail, Yahoo, Outlook, Rambler, Yandex and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-validator18.p.rapidapi.com/email/validate'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-validator18.p.rapidapi.com/email/validate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "Email for validation",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-validator18.p.rapidapi.com/email/validate\"\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-validator18.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Validator_v2",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Email for validation",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to verify if this email address john@example.com is valid using the Quick Email Verification API.",
        "model_answer": "requests.get(\"https://quickemailverification.p.rapidapi.com/v1/verify\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"quickemailverification.p.rapidapi.com\"}, params={\"email\": \"john@example.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Improve your mail deliverability rates and protect your IP reputation by using our Free Email Verification Service. Need further help? You can contact us at https://quickemailverification.com/contact-us",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quickemailverification.p.rapidapi.com/v1/verify'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quickemailverification.p.rapidapi.com/v1/verify\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "Enter email address to validate",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quickemailverification.p.rapidapi.com/v1/verify\"\nquerystring = {\"email\": \"youremail@domain.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quickemailverification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quick Email Verification",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "Enter email address to validate",
                    "default": "youremail@domain.com"
                }
            ]
        }
    },
    {
        "query": "Can you give me a recipe for chicken curry?",
        "model_answer": "requests.get(\"https://recipe64.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"recipe64.p.rapidapi.com\"}, params={\"q\": \"chicken curry\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Creative recipes. The API provides access to 231,637 creative recipes from all cuisines around the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://recipe64.p.rapidapi.com/'\nquerystring = {\"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://recipe64.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://recipe64.p.rapidapi.com/\"\nquerystring = {\"q\": \"taco\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"recipe64.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Recipe_v2",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "taco"
                }
            ]
        }
    },
    {
        "query": "Can you suggest me a campaign for Vouchery.io?",
        "model_answer": "requests.get(\"https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\":\"https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Welcome to Vouchery.io API v2.0! Vouchery provides a REST-oriented API which gives you access to easily create main campaign that includes multiple promo campaigns, add rewards, validate and redeem vouchers.   You will find a detailed description of API design, authentication and authorisation, available endpoints, and responses on successful requests and errors at https://docs.vouchery.io/reference",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vouchery-io.p.rapidapi.comhttps://preview.vouchery.io/api/v2.0/campaigns\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vouchery-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vouchery.io",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me find all the suburbs in Australia within a 10 km radius of latitude -33.86885141 and longitude 151.2093319?",
        "model_answer": "requests.get(\"https://australian-postcode-to-suburb.p.rapidapi.com/radius/-33.86885141/151.2093319/10\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"australian-postcode-to-suburb.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Find out all the Australian  suburbs using postcode.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://australian-postcode-to-suburb.p.rapidapi.com/radius/-33.86885141/151.2093319/25'\nquerystring = {\"lat\": \"\", \"radius\": \"\", \"lng\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://australian-postcode-to-suburb.p.rapidapi.com/radius/-33.86885141/151.2093319/25\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lat",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "lng",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://australian-postcode-to-suburb.p.rapidapi.com/radius/-33.86885141/151.2093319/25\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"australian-postcode-to-suburb.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Australian postcode to suburb",
            "api_arguments_original": [
                {
                    "name": "lat",
                    "type": "string",
                    "description": "",
                    "default": "-33.86885141"
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "",
                    "default": "25"
                },
                {
                    "name": "lng",
                    "type": "string",
                    "description": "",
                    "default": "151.2093319"
                }
            ]
        }
    },
    {
        "query": "Can you check if my email address, example@xyz.com, has been compromised in any data breaches?",
        "model_answer": "requests.get(\"https://data-breach-checker.p.rapidapi.com/api/breach\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"data-breach-checker.p.rapidapi.com\"}, params={\"email\": \"example@xyz.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "The Data Breach Checker API allows users to check if their data has been compromised in any known data breaches. By simply entering an email address, the API searches through a vast database of known data breaches using the reputable \"Have I Been Pwned\" backend. The API is easy to integrate into existing applications, making it an essential tool for companies and individuals seeking to enhance their cybersecurity posture. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://data-breach-checker.p.rapidapi.com/api/breach'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://data-breach-checker.p.rapidapi.com/api/breach\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://data-breach-checker.p.rapidapi.com/api/breach\"\nquerystring = {\"email\": \"example@xyz.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"data-breach-checker.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Data Breach Checker",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "example@xyz.com"
                }
            ]
        }
    },
    {
        "query": "I want to get information on countries around the world.",
        "model_answer": "requests.get(\"https://countries59.p.rapidapi.com/list_countries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"countries59.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Get information on countries around the world. ISO2, ISO3, capitals, currencies, surface area, and more!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://countries59.p.rapidapi.com/list_countries'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://countries59.p.rapidapi.com/list_countries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://countries59.p.rapidapi.com/list_countries\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"countries59.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Countries",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to download the Instagram story of user \"example_user\".",
        "model_answer": "requests.get(\"https://instagram-downloader13.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram-downloader13.p.rapidapi.com\"}, params={\"story_user\": \"example_user\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "You can download any video,story,highlights,igtv,reel,post on this api \\n Conact us : https://PPooP.t.me \\n My Channel : https://keepdeving.t.me",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-downloader13.p.rapidapi.com/'\nquerystring = {\"story_user\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-downloader13.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "story_user",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-downloader13.p.rapidapi.com/\"\nquerystring = {\"story_user\": \"5l9.8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-downloader13.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram Downloader",
            "api_arguments_original": [
                {
                    "name": "story_user",
                    "type": "STRING",
                    "description": "",
                    "default": "5l9.8"
                }
            ]
        }
    },
    {
        "query": "Can you give me the Thai lottery results for the draw on March 16, 2022?",
        "model_answer": "requests.get(\"https://thai-lottery-result.p.rapidapi.com/results/20220316\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"thai-lottery-result.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Thai lottery results API, Provided by Thailand-API.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://thai-lottery-result.p.rapidapi.com/results/20220316'\nquerystring = {\"dateid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://thai-lottery-result.p.rapidapi.com/results/20220316\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "dateid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://thai-lottery-result.p.rapidapi.com/results/20220316\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thai-lottery-result.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Thai Lottery Result",
            "api_arguments_original": [
                {
                    "name": "dateid",
                    "type": "string",
                    "description": "",
                    "default": "20220316"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me a list of high anonymous proxy servers in the United States?",
        "model_answer": "requests.get(\"https://proxy-list2.p.rapidapi.com/proxy/get\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"proxy-list2.p.rapidapi.com\"}, params={\"type\": \"http\", \"country\": \"US\", \"anonymity\": \"high\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "Returns list of HTTP, HTTPS, SOCKS4, SOCKS5 proxies. Checks proxies each minute. Finds more than 7000 working proxies from multiple sources. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://proxy-list2.p.rapidapi.com/proxy/get'\nquerystring = {\"type\": \"\", \"country\": \"\", \"anonymity\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://proxy-list2.p.rapidapi.com/proxy/get\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "type",
                    "description": "Possible values: http, https, socks4, socks5",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "Use country code to filter data by country. Please check https://www.nationsonline.org/oneworld/country_code_list.htm for more information about country codes.",
                    "type": "STRING"
                },
                {
                    "name": "anonymity",
                    "description": "Possible values: high, anonymous, transparent",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://proxy-list2.p.rapidapi.com/proxy/get\"\nquerystring = {\"type\": \"http\", \"country\": \"US\", \"anonymity\": \"high\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"proxy-list2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Proxy List",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Possible values: http, https, socks4, socks5",
                    "default": "http"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Use country code to filter data by country. Please check https://www.nationsonline.org/oneworld/country_code_list.htm for more information about country codes.",
                    "default": "US"
                },
                {
                    "name": "anonymity",
                    "type": "STRING",
                    "description": "Possible values: high, anonymous, transparent",
                    "default": "high"
                }
            ]
        }
    },
    {
        "query": "I want to get information about an employee with ID 12345.",
        "model_answer": "requests.get(\"https://dd7.p.rapidapi.com/employees/name\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"dd7.p.rapidapi.com\"}, params={\"id\" \"12345\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "dd",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dd7.p.rapidapi.com/employees/name'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dd7.p.rapidapi.com/employees/name\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "nam",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dd7.p.rapidapi.com/employees/name\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dd7.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dd",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "nam",
                    "default": "name"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with today's football predictions?",
        "model_answer": "requests.get(\"https://168predict-vip-football-predictions.p.rapidapi.com/vip/today/under3.5?games_api_key=jbhdjfbghjbsjdfnkjdshgfuahoifhoi28u38y572yu8tqjewdoomcgddfdgdfgdgfgfddfswqdgkfjhgfcgcfxfxdsersrjgfdd\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"168predict-vip-football-predictions.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "168predict offers \"Daily\" accurate football predictions from 168 football leagues worldwide. Visit www.168predict.site",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://168predict-vip-football-predictions.p.rapidapi.com/vip/today/under3.5?games_api_key=jbhdjfbghjbsjdfnkjdshgfuahoifhoi28u38y572yu8tqjewdoomcgddfdgdfgdgfgfddfswqdgkfjhgfcgcfxfxdsersrjgfdd'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://168predict-vip-football-predictions.p.rapidapi.com/vip/today/under3.5?games_api_key=jbhdjfbghjbsjdfnkjdshgfuahoifhoi28u38y572yu8tqjewdoomcgddfdgdfgdgfgfddfswqdgkfjhgfcgcfxfxdsersrjgfdd\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://168predict-vip-football-predictions.p.rapidapi.com/vip/today/under3.5?games_api_key=jbhdjfbghjbsjdfnkjdshgfuahoifhoi28u38y572yu8tqjewdoomcgddfdgdfgdgfgfddfswqdgkfjhgfcgcfxfxdsersrjgfdd\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"168predict-vip-football-predictions.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "168predict VIP Football Predictions",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to download the Instagram reel from this link",
        "model_answer": "requests.get(\"https://instagram-reels-and-post-downloader.p.rapidapi.com/posts/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram-reels-and-post-downloader.p.rapidapi.com\"}, params={\"link\": \"https://www.instagram.com/reel/ABC123\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Download instagram reels and post uing API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-reels-and-post-downloader.p.rapidapi.com/posts/'\nquerystring = {\"link\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-reels-and-post-downloader.p.rapidapi.com/posts/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "link",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-reels-and-post-downloader.p.rapidapi.com/posts/\"\nquerystring = {\"link\": \"https://www.instagram.com/p/CtwqsweyqYB/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-reels-and-post-downloader.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram Reels and post Downloader",
            "api_arguments_original": [
                {
                    "name": "link",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.instagram.com/p/CtwqsweyqYB/"
                }
            ]
        }
    },
    {
        "query": "Can you provide the latest standings for the Russian Premier League for the current season?",
        "model_answer": "requests.get(\"https://russian-premier-league-standings.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"russian-premier-league-standings.p.rapidapi.com\"}, params={\"season\": \"2022\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Russian Premier League Standings & Table",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://russian-premier-league-standings.p.rapidapi.com/'\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://russian-premier-league-standings.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "season",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://russian-premier-league-standings.p.rapidapi.com/\"\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"russian-premier-league-standings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Russian Premier League Standings",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "please get me the Instagram profile information for user_id=123456789.",
        "model_answer": "requests.get(\"https://instagram39.p.rapidapi.com/getProfileByUserId\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"instagram39.p.rapidapi.com\"}, params={\"user_id\": \"123456789\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Please join our telegram channel to get notified about updates.      https://t.me/social_miner_news",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram39.p.rapidapi.com/getProfileByUserId'\nquerystring = {\"user_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram39.p.rapidapi.com/getProfileByUserId\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "user_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram39.p.rapidapi.com/getProfileByUserId\"\nquerystring = {\"user_id\": \"1190758433\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram39.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram_v10",
            "api_arguments_original": [
                {
                    "name": "user_id",
                    "type": "STRING",
                    "description": "",
                    "default": "1190758433"
                }
            ]
        }
    },
    {
        "query": "How can I recognize labels on liquor bottles using the Liquor Recognition API?",
        "model_answer": "requests.get(\"https://liquor-recognition.p.rapidapi.com/version\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"liquor-recognition.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Recognize labels on liquor bottles quickly, with over 25,000 different labels to choose from. The results include information on the liquor brand and the kind of spirit.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://liquor-recognition.p.rapidapi.com/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://liquor-recognition.p.rapidapi.com/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://liquor-recognition.p.rapidapi.com/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"liquor-recognition.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Liquor Recognition",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me the bitikas1 details?",
        "model_answer": "requests.get(\"https://bitikas1.p.rapidapi.comhttp://www.brunn.ee\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bitikas1.p.rapidapi.com\"}, params={\"bbb\": \"\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "niisama",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bitikas1.p.rapidapi.comhttp://www.brunn.ee'\nquerystring = {\"bbb\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bitikas1.p.rapidapi.comhttp://www.brunn.ee\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "bbb",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bitikas1.p.rapidapi.comhttp://www.brunn.ee\"\nquerystring = {\"bbb\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bitikas1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "bitikas1",
            "api_arguments_original": [
                {
                    "name": "bbb",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you show me the posts from the demo project?",
        "model_answer": "requests.get(\"https://demo-project20473.p.rapidapi.com/posts\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"demo-project20473.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This Project is created by the onboarding process",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://demo-project20473.p.rapidapi.com/posts'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://demo-project20473.p.rapidapi.com/posts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://demo-project20473.p.rapidapi.com/posts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"demo-project20473.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\ud83d\udc4b Demo Project_v12",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you give me the recent winning numbers for Powerball from CA Lottery?",
        "model_answer": "requests.get(\"https://ca-lottery.p.rapidapi.com/recent/powerball\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ca-lottery.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "California Lottery history.  Powerball, Megamillions, SuperLottoPlus, Fantasy5, Daily3, Daily4, and DailyDerby.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ca-lottery.p.rapidapi.com/recent/powerball'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ca-lottery.p.rapidapi.com/recent/powerball\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ca-lottery.p.rapidapi.com/recent/powerball\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ca-lottery.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CA Lottery",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to scrape the complete products of the Gymshark Shopify store.",
        "model_answer": "requests.get(\"https://shopify-store-scraper.p.rapidapi.com/product\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"shopify-store-scraper.p.rapidapi.com\"}, params={\"url\" \"https://row.gymshark.com\", \"handle\" \"gymshark-studio-leggings-black-ss22\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Scrape complete products of any shopify store.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shopify-store-scraper.p.rapidapi.com/product'\nquerystring = {\"url\": \"\", \"handle\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shopify-store-scraper.p.rapidapi.com/product\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "handle",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shopify-store-scraper.p.rapidapi.com/product\"\nquerystring = {\"url\": \"https://row.gymshark.com\", \"handle\": \"gymshark-studio-leggings-black-ss22\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shopify-store-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shopify Store Scraper",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://row.gymshark.com"
                },
                {
                    "name": "handle",
                    "type": "STRING",
                    "description": "",
                    "default": "gymshark-studio-leggings-black-ss22"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the list of categories on Wayfair?",
        "model_answer": "requests.get(\"https://wayfair.p.rapidapi.com/categories/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"}, params={\"caid\": \"214970\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "This API helps to query for all information about categories, products, etc\u2026 as on wayfair.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wayfair.p.rapidapi.com/categories/list'\nquerystring = {\"caid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wayfair.p.rapidapi.com/categories/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "caid",
                    "description": "The value of categoryId fields returned right in this endpoint. The default root category is 214970.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wayfair.p.rapidapi.com/categories/list\"\nquerystring = {\"caid\": \"214970\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wayfair.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wayfair",
            "api_arguments_original": [
                {
                    "name": "caid",
                    "type": "NUMBER",
                    "description": "The value of categoryId fields returned right in this endpoint. The default root category is 214970.",
                    "default": "214970"
                }
            ]
        }
    },
    {
        "query": "Can you help me forecast the price of Bitcoin in the next 24 hours using The Apophis API?",
        "model_answer": "requests.get(\"https://the-apophis.p.rapidapi.com/forecast/ultra\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"the-apophis.p.rapidapi.com\"}, params={\"timeframe\": \"24h\", \"currency\": \"btc\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "AI-powered API for crypto asset price forecasting offers a range of features and benefits that can revolutionize how traders and investors navigate the dynamic and often unpredictable crypto market.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-apophis.p.rapidapi.com/forecast/ultra'\nquerystring = {\"timeframe\": \"\", \"currency\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-apophis.p.rapidapi.com/forecast/ultra\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "timeframe",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "currency",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-apophis.p.rapidapi.com/forecast/ultra\"\nquerystring = {\"timeframe\": \"1h\", \"currency\": \"btc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-apophis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Apophis",
            "api_arguments_original": [
                {
                    "name": "timeframe",
                    "type": "STRING",
                    "description": "",
                    "default": "1h"
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "",
                    "default": "btc"
                }
            ]
        }
    },
    {
        "query": "I want to get the premium tips from the Betigolo Tips API.",
        "model_answer": "requests.get(\"https://betigolo-tips.p.rapidapi.com/premium/tips\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"betigolo-tips.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Historical results here: https://www.betigolo.com/tips_premium.php\n\nThe Betigolo Tips API is a powerful tool that provides EV+ tips for football matches, based on machine Learning algorithms predictions to helping users make informed decisions about their bets. The API is easy to use and can be integrated into sports betting applications with the help of detailed documentation and code examples provided by Rapid API. With the Betigolo Tips API, users can access accurate and up-to-date tips fo...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://betigolo-tips.p.rapidapi.com/premium/tips'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://betigolo-tips.p.rapidapi.com/premium/tips\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://betigolo-tips.p.rapidapi.com/premium/tips\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"betigolo-tips.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Betigolo Tips",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve data of chemical elements and their properties.",
        "model_answer": "requests.get(\"https://chemical-elements.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"chemical-elements.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "This API retrieves data of chemical elements and their properties collected from authoritative sources in JSON format",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://chemical-elements.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://chemical-elements.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://chemical-elements.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chemical-elements.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Chemical Elements",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you get the country codes using the AskTheWorld API?",
        "model_answer": "requests.get(\"https://asktheworld.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"asktheworld.p.rapidapi.com\"}, params={\"getCountryCodes\": \"true\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "This API lets you get all the questions beeing asked on search plattforms like google.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asktheworld.p.rapidapi.com/'\nquerystring = {\"getCountryCodes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asktheworld.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "getcountrycodes",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asktheworld.p.rapidapi.com/\"\nquerystring = {\"getCountryCodes\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asktheworld.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AskTheWorld",
            "api_arguments_original": [
                {
                    "name": "getCountryCodes",
                    "type": "STRING",
                    "description": "",
                    "default": "true"
                }
            ]
        }
    },
    {
        "query": "Please search for job posts for RN Nurse in San Diego, CA.",
        "model_answer": "response = requests.get(\"https://job-search6.p.rapidapi.com/api/v1/search/jobs\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"job-search6.p.rapidapi.com\"}, params={\"agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110\", \"ip\": \"75.83.85.4\", \"l\": \"San Diego, CA\", \"q\": \"RN Nurse\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Search for jobs posts, and post them on your web site",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://job-search6.p.rapidapi.com/api/v1/search/jobs'\nquerystring = {\"agent\": \"\", \"ip\": \"\", \"l\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://job-search6.p.rapidapi.com/api/v1/search/jobs\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "agent",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "l",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://job-search6.p.rapidapi.com/api/v1/search/jobs\"\nquerystring = {\"agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110\", \"ip\": \"75.83.85.4\", \"l\": \"San Diego, CA\", \"q\": \"RN Nurse\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"job-search6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Job Search",
            "api_arguments_original": [
                {
                    "name": "agent",
                    "type": "STRING",
                    "description": "",
                    "default": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110"
                },
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "75.83.85.4"
                },
                {
                    "name": "l",
                    "type": "STRING",
                    "description": "",
                    "default": "San Diego, CA"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "RN Nurse"
                }
            ]
        }
    },
    {
        "query": "I want to search for flights on KAYAK with a maximum of 3 stops and using my API key \"12345\".",
        "model_answer": "requests.get(\"https://kayak-flights.p.rapidapi.com/results\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"kayak-flights.p.rapidapi.com\"}, params={\"m\": \"3\", \"token\": \"12345\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Pricing and flight itineraries information on KAYAK.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kayak-flights.p.rapidapi.com/results'\nquerystring = {\"m\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kayak-flights.p.rapidapi.com/results\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "m",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "token",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kayak-flights.p.rapidapi.com/results\"\nquerystring = {\"m\": \"5\", \"token\": \"API_KEY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kayak-flights.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "KAYAK Flights",
            "api_arguments_original": [
                {
                    "name": "m",
                    "type": "STRING",
                    "description": "",
                    "default": "5"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": "API_KEY"
                }
            ]
        }
    },
    {
        "query": "How can I perform forward geocoding for the location \"123 Main St, New York\" using the TrueWay Geocoding API?",
        "model_answer": "requests.get(\"https://trueway-geocoding.p.rapidapi.com/ForwardGeocode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"trueway-geocoding.p.rapidapi.com\"}, params={\"location\": \"123 Main St, New York\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Forward and Reverse Geocoding",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://trueway-geocoding.p.rapidapi.com/ReverseGeocode'\nquerystring = {\"location\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://trueway-geocoding.p.rapidapi.com/ReverseGeocode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "location",
                    "description": "The location for which you wish to obtain the human-readable address",
                    "type": "STRING"
                },
                {
                    "name": "language",
                    "description": "The language in which to return results",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://trueway-geocoding.p.rapidapi.com/ReverseGeocode\"\nquerystring = {\"language\": \"en\", \"location\": \"37.7879493,-122.3961974\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"trueway-geocoding.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TrueWay Geocoding",
            "api_arguments_original": [
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "The location for which you wish to obtain the human-readable address",
                    "default": "37.7879493,-122.3961974"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The language in which to return results",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please retrieve the encryption key for the secure text API.",
        "model_answer": "requests.get(\"https://secure-text-api.p.rapidapi.com/getKey\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"secure-text-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "This project created for serve api endpoints to encrypt and decrypt text via http request",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://secure-text-api.p.rapidapi.com/getKey'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://secure-text-api.p.rapidapi.com/getKey\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://secure-text-api.p.rapidapi.com/getKey\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"secure-text-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "secure-text-api",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the live FREE to Air Tv Channel Streaming Links?",
        "model_answer": "requests.get(\"https://tvview.p.rapidapi.com/getAll\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tvview.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Live FREE to Air Tv Channel Streaming Links. For Development Purpose Only.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tvview.p.rapidapi.com/getAll'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tvview.p.rapidapi.com/getAll\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tvview.p.rapidapi.com/getAll\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tvview.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TVView",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the upcoming matches from the Kassbet API?",
        "model_answer": "requests.get(\"https://kassbet.p.rapidapi.com/v1/matches\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"kassbet.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Its a betting site",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kassbet.p.rapidapi.com/v1/matches'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kassbet.p.rapidapi.com/v1/matches\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kassbet.p.rapidapi.com/v1/matches\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kassbet.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "kassbet",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I use the Serpstat API to access keyword research and domain analysis data?",
        "model_answer": "requests.get(url=\"https://di_ry-serpstat-v1.p.rapidapi.com/v3/{api_method}\", params={\"query\": \"{domain-com}\", \"token\": \"{token}\", \"se\": \"{se}\"}, headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"di_ry-serpstat-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This API can be used by SEO and PPC specialists to access keyword research and domain analysis data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://di_ry-serpstat-v1.p.rapidapi.com/v3/{api_method}?query={domain-com}&token={token}&se={se}'\nquerystring = {\"api_method\": \"\", \"domain-com\": \"\", \"token\": \"\", \"se\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://di_ry-serpstat-v1.p.rapidapi.com/v3/{api_method}?query={domain-com}&token={token}&se={se}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "api_method",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "domain_com",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "token",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "se",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://di_ry-serpstat-v1.p.rapidapi.com/v3/{api_method}?query={domain-com}&token={token}&se={se}\"\nquerystring = {\"api_method\": \"\", \"domain-com\": \"\", \"token\": \"\", \"se\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"di_ry-serpstat-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Serpstat",
            "api_arguments_original": [
                {
                    "name": "api_method",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "domain-com",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "se",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you enrich the contact information for the email carynburns83@gmail.com?",
        "model_answer": "requests.get(\"https://enrich.p.rapidapi.com/contact/email\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"enrich.p.rapidapi.com\"}, params={\"email\": \"carynburns83@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "We are the leading enrichment API for businesses around the world.\n\nEnrich your CRM contacts with up-to-date business information:\nperson name, company, job position, education.\n\nWe charge credits only if necessary results are found.\n\nOur crawlers check in real-time many sources including LinkedIn, Facebook, Twitter, Indeed, Glassdoor, ZipRecruiter, BeBee and other platforms.\n\nWe provide links to the following social networks: Facebook, TikTok, Instagram, Snapchat, Twitter, LinkedIn, Youtube ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://enrich.p.rapidapi.com/contact/email'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://enrich.p.rapidapi.com/contact/email\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://enrich.p.rapidapi.com/contact/email\"\nquerystring = {\"email\": \"carynburns83@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"enrich.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "enrich",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "carynburns83@gmail.com"
                }
            ]
        }
    },
    {
        "query": "How can I check if a specific IP address is valid using the Networking API?",
        "model_answer": "requests.get(\"https://networking.p.rapidapi.com/api\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"networking.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "This API will help you with several networking-related utilities.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://networking.p.rapidapi.com/api'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://networking.p.rapidapi.com/api\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://networking.p.rapidapi.com/api\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"networking.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Networking",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check the keyword density for the URL \"https://en.wikipedia.org/wiki/Example.com\" using the SEO Automations API.",
        "model_answer": "requests.get(\"https://seo-automations.p.rapidapi.com/v1/seo/getKeywordDensity/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"seo-automations.p.rapidapi.com\"}, params={\"url\": \"https://en.wikipedia.org/wiki/Example.com\", \"numPhrases\": \"20\", \"phraseLength\": \"5\", \"n\": \"20\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "Optimize your website effortlessly with SEOOptimizeAPI - the powerful tool that provides valuable insights and automates repetitive tasks. With SEOOptimizeAPI, you can take the guesswork out of website optimization. The API utilizes advanced algorithms and technologies to provide in-depth insights into your website's performance and help you identify areas for improvement. And with its easy-to-use API endpoints, you can automate repetitive tasks and save time and effort.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://seo-automations.p.rapidapi.com/v1/seo/getKeywordDensity/'\nquerystring = {\"url\": \"\", \"numPhrases\": \"\", \"phraseLength\": \"\", \"n\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://seo-automations.p.rapidapi.com/v1/seo/getKeywordDensity/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "numphrases",
                    "description": "Number of phrases to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                    "type": "NUMBER"
                },
                {
                    "name": "phraselength",
                    "description": "Number of words in each phrase to return ( results are sorted by density ). \nBetween 1 and 10.\nDefault is 10.",
                    "type": "NUMBER"
                },
                {
                    "name": "n",
                    "description": "Number of Keywords to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://seo-automations.p.rapidapi.com/v1/seo/getKeywordDensity/\"\nquerystring = {\"numPhrases\": \"20\", \"phraseLength\": \"5\", \"n\": \"20\", \"url\": \"https://en.wikipedia.org/wiki/Example.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"seo-automations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SEO Automations",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://en.wikipedia.org/wiki/Example.com"
                },
                {
                    "name": "numPhrases",
                    "type": "NUMBER",
                    "description": "Number of phrases to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                    "default": "20"
                },
                {
                    "name": "phraseLength",
                    "type": "NUMBER",
                    "description": "Number of words in each phrase to return ( results are sorted by density ). \nBetween 1 and 10.\nDefault is 10.",
                    "default": "5"
                },
                {
                    "name": "n",
                    "type": "NUMBER",
                    "description": "Number of Keywords to return ( results are sorted by density ). \nBetween 1 and 100.\nDefault is 100.",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "What are the car rental locations available in Berlin on Booking.com?",
        "model_answer": "requests.get(\"https://booking-com.p.rapidapi.com/v1/car-rental/locations\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"booking-com.p.rapidapi.com\"}, params={\"locale\": \"en-gb\", \"name\": \"Berlin\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Find all hotels, view prices, photos of the hotels, reviews. Find car rental deals. **Site:** booking.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://booking-com.p.rapidapi.com/v1/car-rental/locations'\nquerystring = {\"locale\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://booking-com.p.rapidapi.com/v1/car-rental/locations\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "locale",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "name",
                    "description": "Name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://booking-com.p.rapidapi.com/v1/car-rental/locations\"\nquerystring = {\"locale\": \"en-gb\", \"name\": \"Berlin\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"booking-com.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Booking com",
            "api_arguments_original": [
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": "en-gb"
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name",
                    "default": "Berlin"
                }
            ]
        }
    },
    {
        "query": "I want to get live data for flight booking.",
        "model_answer": "requests.get(\"https://funtrip.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"funtrip.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "fundtrip",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://funtrip.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://funtrip.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://funtrip.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"funtrip.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "funtrip",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if the CNPJ 12345678901234 is valid?",
        "model_answer": "requests.get(\"https://consulta-cnpj-gratis.p.rapidapi.com/companies/00000000000191\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"consulta-cnpj-gratis.p.rapidapi.com\"}, params={\"CNPJ\": \"12345678901234\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API Gratuita de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://consulta-cnpj-gratis.p.rapidapi.com/companies/00000000000191'\nquerystring = {\"CNPJ\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://consulta-cnpj-gratis.p.rapidapi.com/companies/00000000000191\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cnpj",
                    "description": "CNPJ da Empresa",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://consulta-cnpj-gratis.p.rapidapi.com/companies/00000000000191\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"consulta-cnpj-gratis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Consulta CNPJ Gr\u00e1tis",
            "api_arguments_original": [
                {
                    "name": "CNPJ",
                    "type": "string",
                    "description": "CNPJ da Empresa",
                    "default": "00000000000191"
                }
            ]
        }
    },
    {
        "query": "Can you give me the climate events news from 'The Guardian'?",
        "model_answer": "requests.get(\"https://climate-change63.p.rapidapi.com/news/guadian\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"climate-change63.p.rapidapi.com\"})",
        "original": {
            "domain": "Cybersecurity",
            "framework": "RapidAPI",
            "functionality": "API showing climate events around the world",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-change63.p.rapidapi.com/news/guadian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-change63.p.rapidapi.com/news/guadian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaperid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-change63.p.rapidapi.com/news/guadian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-change63.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate change_v31",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "guadian"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest winning numbers and statistics for Lotto America.",
        "model_answer": "response = requests.get('https://lotto-america.p.rapidapi.com/stats', headers={'X-RapidAPI-Key': 'SIGN-UP-FOR-KEY', 'X-RapidAPI-Host': 'lotto-america.p.rapidapi.com'})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Do you live for the Lotto America? Well, you\u2019ve just found your match! Get the latest winning numbers and statistics for your game!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lotto-america.p.rapidapi.com/stats'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lotto-america.p.rapidapi.com/stats\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lotto-america.p.rapidapi.com/stats\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lotto-america.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lotto America",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please ping the stocks archive API.",
        "model_answer": "requests.get(\"https://stocks_archive.p.rapidapi.com/ping\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"stocks_archive.p.rapidapi.com\"}).content",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Archive data of some blue chip's tickers\n\n\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stocks_archive.p.rapidapi.com/ping'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stocks_archive.p.rapidapi.com/ping\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stocks_archive.p.rapidapi.com/ping\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stocks_archive.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "stocks_archive",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the movie with the ID 56789 is available.",
        "model_answer": "requests.get(\"https://daily-ovrll-0822202130837.p.rapidapi.com/status/200\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"daily-ovrll-0822202130837.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "DAILY OVRLL 2ud21f0720210822120837645",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://daily-ovrll-0822202130837.p.rapidapi.com/status/200'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://daily-ovrll-0822202130837.p.rapidapi.com/status/200\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://daily-ovrll-0822202130837.p.rapidapi.com/status/200\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"daily-ovrll-0822202130837.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DAILY OVRLL 0822202130837",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to generate AI-generated ad copy for Google Ads with thread ID \"6a6bbc6e-5896-45b6-8681-0a885e195f9a\" and prompt ID \"be5272ef-fbda-4e6d-abf7-0fe88b937693\".",
        "model_answer": "requests.get(\"https://adcopy-ai-google-ads-ai-text-generation.p.rapidapi.com/v1/adcopyai/fetchContent/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"adcopy-ai-google-ads-ai-text-generation.p.rapidapi.com\"}, params={\"threadId\": \"6a6bbc6e-5896-45b6-8681-0a885e195f9a\", \"promptId\": \"be5272ef-fbda-4e6d-abf7-0fe88b937693\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "AdCopy AI: The perfect solution for SEM and PPC marketers. With its advanced cloud infrastructure and OpenAI's ChatGPT engine, AdCopy AI generates top-notch ad copy tailored to Google's (TM) specifications, ensuring high relevance scores and reducing CPC and CPM costs. Say goodbye to time-consuming ad writing and hello to AdCopy AI - the AI technology that revolutionizes the way you write Ad Copy for your Google Ads (TM), freeing up your time and effort so you can focus on other important tasks.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://adcopy-ai-google-ads-ai-text-generation.p.rapidapi.com/v1/adcopyai/fetchContent/'\nquerystring = {\"threadId\": \"\", \"promptId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://adcopy-ai-google-ads-ai-text-generation.p.rapidapi.com/v1/adcopyai/fetchContent/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "threadid",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "promptid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://adcopy-ai-google-ads-ai-text-generation.p.rapidapi.com/v1/adcopyai/fetchContent/\"\nquerystring = {\"threadId\": \"6a6bbc6e-5896-45b6-8681-0a885e195f9a\", \"promptId\": \"be5272ef-fbda-4e6d-abf7-0fe88b937693\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"adcopy-ai-google-ads-ai-text-generation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AdCopy AI - Google Ads AI Text Generation",
            "api_arguments_original": [
                {
                    "name": "threadId",
                    "type": "STRING",
                    "description": "",
                    "default": "6a6bbc6e-5896-45b6-8681-0a885e195f9a"
                },
                {
                    "name": "promptId",
                    "type": "STRING",
                    "description": "",
                    "default": "be5272ef-fbda-4e6d-abf7-0fe88b937693"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with political articles for Biden and Trump from Boston Globe, New York Times, CNN, Washington Post, Los Angeles Times, and Chicago Tribute?",
        "model_answer": "requests.get(\"https://pac-api.p.rapidapi.com/trump/boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"pac-api.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API for collecting political articles for Biden and Trump",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pac-api.p.rapidapi.com/trump/boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute'\nquerystring = {\"newspaper\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pac-api.p.rapidapi.com/trump/boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaper",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pac-api.p.rapidapi.com/trump/boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pac-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PAC API",
            "api_arguments_original": [
                {
                    "name": "newspaper",
                    "type": "string",
                    "description": "",
                    "default": "boston_globe,new_york_times,cnn,washington_post,los_angeles_times,chicago_tribute"
                }
            ]
        }
    },
    {
        "query": "I want to get flashcards for the Real Estate Exam API.",
        "model_answer": "requests.get(\"https://real-estate-exam.p.rapidapi.com/flashcards\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"real-estate-exam.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "Questions, answers, and flash cards to ace the National Real Estate exam.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://real-estate-exam.p.rapidapi.com/flashcards'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://real-estate-exam.p.rapidapi.com/flashcards\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://real-estate-exam.p.rapidapi.com/flashcards\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"real-estate-exam.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Real Estate Exam",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get information about a specific user with user_id=12345 from the nail API.",
        "model_answer": "requests.get(\"https://nail.p.rapidapi.comhttps://wad.ojooo.com/register.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nail.p.rapidapi.com\"}, params={\"user_id\": \"12345\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "new001",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nail.p.rapidapi.comhttps://wad.ojooo.com/register.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nail.p.rapidapi.comhttps://wad.ojooo.com/register.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nail.p.rapidapi.comhttps://wad.ojooo.com/register.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nail.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "nail",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please create an image with size 500x500 pixels in RGB mode with the color #00ff00.",
        "model_answer": "requests.get(\"https://color-to-picture-api.p.rapidapi.com/color-image\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"color-to-picture-api.p.rapidapi.com\"}, params={\"height\": \"500\", \"color\": \"00ff00\", \"width\": \"500\", \"mode\": \"RGB\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Takes prompt of picture mode (L,RGB,RGBA), color in hex (example: ff03bc), width (example: 200), height (example: 200) and makes new image in single color",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://color-to-picture-api.p.rapidapi.com/color-image'\nquerystring = {\"height\": \"\", \"color\": \"\", \"width\": \"\", \"mode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://color-to-picture-api.p.rapidapi.com/color-image\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "height",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "color",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "mode",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://color-to-picture-api.p.rapidapi.com/color-image\"\nquerystring = {\"height\": \"200\", \"color\": \"ff0000\", \"width\": \"200\", \"mode\": \"RGB\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"color-to-picture-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Color to picture API",
            "api_arguments_original": [
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "",
                    "default": "200"
                },
                {
                    "name": "color",
                    "type": "STRING",
                    "description": "",
                    "default": "ff0000"
                },
                {
                    "name": "width",
                    "type": "STRING",
                    "description": "",
                    "default": "200"
                },
                {
                    "name": "mode",
                    "type": "STRING",
                    "description": "",
                    "default": "RGB"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a list of languages supported by the Long Translator API?",
        "model_answer": "requests.get(\"https://long-translator.p.rapidapi.com/languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"long-translator.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Translate text into other languages. \nCan translate long texts, fast processing, cost-effective.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://long-translator.p.rapidapi.com/languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://long-translator.p.rapidapi.com/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://long-translator.p.rapidapi.com/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"long-translator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Long Translator",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to calculate the BMI of a person who weighs 75 kg and has a height of 1.75 meters.",
        "model_answer": "requests.get(url=\"https://body-mass-index-bmi-calculator.p.rapidapi.com/metric\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"body-mass-index-bmi-calculator.p.rapidapi.com\"}, params={\"weight\": 75, \"height\": 1.75})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "Use this API to calculate the Body Mass Index of an individual based on their height and weight.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://body-mass-index-bmi-calculator.p.rapidapi.com/metric'\nquerystring = {\"weight\": \"\", \"height\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://body-mass-index-bmi-calculator.p.rapidapi.com/metric\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "weight",
                    "description": "The weight of someone in kilograms (kgs)",
                    "type": "NUMBER"
                },
                {
                    "name": "height",
                    "description": "The height of someone in meters (m)",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://body-mass-index-bmi-calculator.p.rapidapi.com/metric\"\nquerystring = {\"weight\": \"150\", \"height\": \"1.83\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"body-mass-index-bmi-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Body Mass Index (BMI) Calculator",
            "api_arguments_original": [
                {
                    "name": "weight",
                    "type": "NUMBER",
                    "description": "The weight of someone in kilograms (kgs)",
                    "default": "150"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "The height of someone in meters (m)",
                    "default": "1.83"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the current weather information?",
        "model_answer": "requests.get(\"https://qwiper-weather.p.rapidapi.com/?json=true\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qwiper-weather.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Ajoutez les donn\u00e9es m\u00e9t\u00e9orologiques d'aujourd'hui \u00e0 votre application.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qwiper-weather.p.rapidapi.com/?json=true'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qwiper-weather.p.rapidapi.com/?json=true\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qwiper-weather.p.rapidapi.com/?json=true\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qwiper-weather.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Qwiper Weather",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the profile information (including the proxy image) of the Instagram account with the username 'example_user'.",
        "model_answer": "requests.get(\"https://instagram-profile1.p.rapidapi.com/getvideo/instagram\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram-profile1.p.rapidapi.com\"}, params={\"username\": \"example_user\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Get profile information with proxy image will show directly to your frontend",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-profile1.p.rapidapi.com/getvideo/instagram'\nquerystring = {\"username\": \"\", \"next\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-profile1.p.rapidapi.com/getvideo/instagram\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "next",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-profile1.p.rapidapi.com/getvideo/instagram\"\nquerystring = {\"next\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-profile1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram Profile",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "default": "instagram"
                },
                {
                    "name": "next",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the boundaries for the CA FSA postal code A0A.",
        "model_answer": "response = requests.get(\"https://vanitysoft-canada-postal-boundaries-v1.p.rapidapi.com/rest/v1/public/boundary/ca/fsa\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"vanitysoft-canada-postal-boundaries-v1.p.rapidapi.com\"}, params={\"postal-fsa\": \"A0A\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "CA Postal Code(ex. T6H, or A0A0A1 ), FSA and LDU, Boundaries API: A simple & very fast API that will allow you to integrate multiple GeoJson CA FSA and LDU level boundaries result into your apps and systems. This API is designed to be used programatically for optimal performance. When using the MashApe UI for queries expect significant latency issues on large result sets!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vanitysoft-canada-postal-boundaries-v1.p.rapidapi.com/rest/v1/public/boundary/ca/fsa'\nquerystring = {\"postal-fsa\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vanitysoft-canada-postal-boundaries-v1.p.rapidapi.com/rest/v1/public/boundary/ca/fsa\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "postal_fsa",
                    "description": "Query by value postal code FSA, example: \\\"A0A\\\"",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vanitysoft-canada-postal-boundaries-v1.p.rapidapi.com/rest/v1/public/boundary/ca/fsa\"\nquerystring = {\"postal-fsa\": \"T6H\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vanitysoft-canada-postal-boundaries-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ca.boundaries.io",
            "api_arguments_original": [
                {
                    "name": "postal-fsa",
                    "type": "STRING",
                    "description": "Query by value postal code FSA, example: \\\"A0A\\\"",
                    "default": "T6H"
                }
            ]
        }
    },
    {
        "query": "Can you help me predict the outcome of the upcoming football match between team A and team B?",
        "model_answer": "requests.get(\"https://metrx-factory.p.rapidapi.com/v1/competitions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"metrx-factory.p.rapidapi.com\"}, params={\"estimateBill\": \"false\", \"nameLike\": \"team A vs team B\", \"year\": \"\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Predictive football analytics API. Get expected scores from quantitative models and statistically fair odds for upcoming and historical matches. Find discrepancies by comparing ratings to final results and market prices. Quantify team performance and trends using the Metrx Index algorithm.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://metrx-factory.p.rapidapi.com/v1/competitions'\nquerystring = {\"estimateBill\": \"\", \"nameLike\": \"\", \"year\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://metrx-factory.p.rapidapi.com/v1/competitions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "estimatebill",
                    "description": "Flag whether a cost estimate should be returned for the above parameters instead of the result.\n**Default**: false",
                    "type": "BOOLEAN"
                },
                {
                    "name": "namelike",
                    "description": "The full or partial name of a competition (case-insensitive).\n**Min. length**: 4 chars\n\nRefer to [API reference](https://docs.metrxfactory.io/competitions.htm) for a list of available competitions.",
                    "type": "STRING"
                },
                {
                    "name": "year",
                    "description": "The year a competition is hold. If a competition ends in another year that it was started then any included year matches.\nE.g. 2020 matches competitions from 2019-20, 2020 and 2020-21.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://metrx-factory.p.rapidapi.com/v1/competitions\"\nquerystring = {\"estimateBill\": \"\", \"nameLike\": \"champ\", \"year\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"metrx-factory.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Metrx Factory",
            "api_arguments_original": [
                {
                    "name": "estimateBill",
                    "type": "BOOLEAN",
                    "description": "Flag whether a cost estimate should be returned for the above parameters instead of the result.\n**Default**: false",
                    "default": ""
                },
                {
                    "name": "nameLike",
                    "type": "STRING",
                    "description": "The full or partial name of a competition (case-insensitive).\n**Min. length**: 4 chars\n\nRefer to [API reference](https://docs.metrxfactory.io/competitions.htm) for a list of available competitions.",
                    "default": "champ"
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "The year a competition is hold. If a competition ends in another year that it was started then any included year matches.\nE.g. 2020 matches competitions from 2019-20, 2020 and 2020-21.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you check the availability of the website http://google.com on the Wayback Machine API service?",
        "model_answer": "requests.get(\"https://community-wayback-machine.p.rapidapi.com/available\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"community-wayback-machine.p.rapidapi.com\"}, params={\"url\": \"http://google.com\", \"timestamp\":\"\", \"callback\":\"\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "The Internet Archive Wayback Machine supports a number of different APIs to make it easier for developers to retrieve information about Wayback capture data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-wayback-machine.p.rapidapi.com/available'\nquerystring = {\"url\": \"\", \"timestamp\": \"\", \"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-wayback-machine.p.rapidapi.com/available\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "timestamp",
                    "description": "timestamp is the timestamp to look up in Wayback. If not specified, the most recenty available capture in Wayback is returned. The format of the timestamp is 1-14 digits (YYYYMMDDhhmmss)",
                    "type": "STRING"
                },
                {
                    "name": "callback",
                    "description": "callback is an optional callback which may be specified to produce a JSONP response.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-wayback-machine.p.rapidapi.com/available\"\nquerystring = {\"url\": \"http://mashape.com\", \"timestamp\": \"20090101\", \"callback\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-wayback-machine.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wayback Machine",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "http://mashape.com"
                },
                {
                    "name": "timestamp",
                    "type": "STRING",
                    "description": "timestamp is the timestamp to look up in Wayback. If not specified, the most recenty available capture in Wayback is returned. The format of the timestamp is 1-14 digits (YYYYMMDDhhmmss)",
                    "default": "20090101"
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "callback is an optional callback which may be specified to produce a JSONP response.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the routing information from point A (30.1234, -97.5678) to point B (29.9876, -97.4321) in Germany using MapToolkit API.",
        "model_answer": "requests.get(\"https://maptoolkit.p.rapidapi.com/enhance/routing\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"maptoolkit.p.rapidapi.com\"}, params={\"start\": \"30.1234,-97.5678\", \"end\": \"29.9876,-97.4321\", \"language\": \"de\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "A toolkit for maps: Map tiles, address search (geocoding), routing, static maps & elevation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://maptoolkit.p.rapidapi.com/enhance/routing'\nquerystring = {\"kml\": \"\", \"geometry\": \"\", \"gpx_backward\": \"\", \"kml_backward\": \"\", \"routeType\": \"\", \"callback\": \"\", \"gpx\": \"\", \"end\": \"\", \"start\": \"\", \"geometry_backward\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://maptoolkit.p.rapidapi.com/enhance/routing\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "kml",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "geometry",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "gpx_backward",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "kml_backward",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "routetype",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "gpx",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "end",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "start",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "geometry_backward",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "language",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://maptoolkit.p.rapidapi.com/enhance/routing\"\nquerystring = {\"kml\": \"forward geometry K-UrlML\", \"geometry\": \"forward geometry GeoJSON\", \"gpx_backward\": \"backward geometry GPX-Url\", \"kml_backward\": \"backward geometry KML-Url\", \"routeType\": \"bike\", \"callback\": \"JSONP Callback Functionname\", \"gpx\": \"forward geometry GPX-Url\", \"end\": \"lng,lat\", \"start\": \"lng,lat\", \"geometry_backward\": \"backward geometry GeoJSON\", \"language\": \"de\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"maptoolkit.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MapToolkit",
            "api_arguments_original": [
                {
                    "name": "kml",
                    "type": "STRING",
                    "description": "",
                    "default": "forward geometry K-UrlML"
                },
                {
                    "name": "geometry",
                    "type": "STRING",
                    "description": "",
                    "default": "forward geometry GeoJSON"
                },
                {
                    "name": "gpx_backward",
                    "type": "STRING",
                    "description": "",
                    "default": "backward geometry GPX-Url"
                },
                {
                    "name": "kml_backward",
                    "type": "STRING",
                    "description": "",
                    "default": "backward geometry KML-Url"
                },
                {
                    "name": "routeType",
                    "type": "STRING",
                    "description": "",
                    "default": "bike"
                },
                {
                    "name": "callback",
                    "type": "STRING",
                    "description": "",
                    "default": "JSONP Callback Functionname"
                },
                {
                    "name": "gpx",
                    "type": "STRING",
                    "description": "",
                    "default": "forward geometry GPX-Url"
                },
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "",
                    "default": "lng,lat"
                },
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "",
                    "default": "lng,lat"
                },
                {
                    "name": "geometry_backward",
                    "type": "STRING",
                    "description": "",
                    "default": "backward geometry GeoJSON"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "de"
                }
            ]
        }
    },
    {
        "query": "Can you search for the details and posts of the creator with ID 12345 on Patreon?",
        "model_answer": "requests.get(\"https://patreon8.p.rapidapi.com/posts/2416483\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"patreon8.p.rapidapi.com\"}, params={\"creator_id\": \"12345\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Search Creators and get their details and posts from Patreon (Unofficial)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://patreon8.p.rapidapi.com/posts/2416483'\nquerystring = {\"creator_id\": \"\", \"cursor\": \"\", \"amount\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://patreon8.p.rapidapi.com/posts/2416483\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "creator_id",
                    "description": "The `creator_id`can be obtained using the `/search` endpoint.",
                    "type": "NUMBER"
                },
                {
                    "name": "cursor",
                    "description": "The cursor to the next page of results.",
                    "type": "STRING"
                },
                {
                    "name": "amount",
                    "description": "The `amount`of posts to be returned. Default is `10`. Max is `500`. Bigger amount results in higher response time.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://patreon8.p.rapidapi.com/posts/2416483\"\nquerystring = {\"cursor\": \"\", \"amount\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"patreon8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Patreon",
            "api_arguments_original": [
                {
                    "name": "creator_id",
                    "type": "NUMBER",
                    "description": "The `creator_id`can be obtained using the `/search` endpoint.",
                    "default": "2416483"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "The cursor to the next page of results.",
                    "default": ""
                },
                {
                    "name": "amount",
                    "type": "NUMBER",
                    "description": "The `amount`of posts to be returned. Default is `10`. Max is `500`. Bigger amount results in higher response time.",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to get transactions for the Ethereum chain.",
        "model_answer": "requests.get(\"https://felina-api2.p.rapidapi.com/v1/api/transactions/Ethereum\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"felina-api2.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Handles transacions of FEL tokens.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://felina-api2.p.rapidapi.com/v1/api/transactions/{chainId}'\nquerystring = {\"chainId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://felina-api2.p.rapidapi.com/v1/api/transactions/{chainId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "chainid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://felina-api2.p.rapidapi.com/v1/api/transactions/{chainId}\"\nquerystring = {\"chainId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"felina-api2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Felina API",
            "api_arguments_original": [
                {
                    "name": "chainId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the current configuration of the TorrentHunt API?",
        "model_answer": "requests.get(\"https://torrenthunt.p.rapidapi.com/config\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"torrenthunt.p.rapidapi.com\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "API to self host Torrent Hunt Bot",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://torrenthunt.p.rapidapi.com/config'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://torrenthunt.p.rapidapi.com/config\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://torrenthunt.p.rapidapi.com/config\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"torrenthunt.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TorrentHunt",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to find the antonyms and synonyms of the word \"happy\" using the TCYonlineDictionary API.",
        "model_answer": "requests.get(\"https://tcyonlinedictionary1.p.rapidapi.com/words/happy\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tcyonlinedictionary1.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "TCYonlineDictionary for antonyms and synonyms",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tcyonlinedictionary1.p.rapidapi.com/words/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tcyonlinedictionary1.p.rapidapi.com/words/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tcyonlinedictionary1.p.rapidapi.com/words/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tcyonlinedictionary1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TCYonlineDictionary",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the details of the brand with ID 158155 using the Consumer Reports API.",
        "model_answer": "requests.get(\"https://consumer-reports.p.rapidapi.com/brands/detail\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"consumer-reports.p.rapidapi.com\"}, params={\"id\" \"158155\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "This API helps to query trusted ratings and reviews for the products, cars and services used every day to create a review site such as : consumerreports.org",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://consumer-reports.p.rapidapi.com/brands/detail'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://consumer-reports.p.rapidapi.com/brands/detail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "The value of brands -> id field returned in .../search endpoint OR brandId field returned in .../products/list, .../products/detail endpoint.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://consumer-reports.p.rapidapi.com/brands/detail\"\nquerystring = {\"id\": \"158155\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"consumer-reports.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Consumer Reports",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "The value of brands -> id field returned in .../search endpoint OR brandId field returned in .../products/list, .../products/detail endpoint.",
                    "default": "158155"
                }
            ]
        }
    },
    {
        "query": "Can you detect the NSFW content in this image",
        "model_answer": "requests.get(\"https://nsfw-nude-detection.p.rapidapi.com/function/nsfw-wrapper\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nsfw-nude-detection.p.rapidapi.com\"}, params={\"url\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "An API to detect NSFW or nudity within an image (as URL).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nsfw-nude-detection.p.rapidapi.com/function/nsfw-wrapper'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nsfw-nude-detection.p.rapidapi.com/function/nsfw-wrapper\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nsfw-nude-detection.p.rapidapi.com/function/nsfw-wrapper\"\nquerystring = {\"url\": \"https://images.unsplash.com/photo-1571960614803-734d9b71e96e\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nsfw-nude-detection.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NSFW / Nude Detection",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://images.unsplash.com/photo-1571960614803-734d9b71e96e"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the daily betting tips for soccer?",
        "model_answer": "requests.get(\"https://daily-betting-tips.p.rapidapi.com/daily-betting-tip-api/items/daily_betting_coupons\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"daily-betting-tips.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "We provide 90% hit rate daily soccer and basketball betting predictions, Our predictions are generated by AI powered analysis of previous matches and other factors key to the game's result",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://daily-betting-tips.p.rapidapi.com/daily-betting-tip-api/items/daily_betting_coupons'\nquerystring = {\"sort\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://daily-betting-tips.p.rapidapi.com/daily-betting-tip-api/items/daily_betting_coupons\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sort",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://daily-betting-tips.p.rapidapi.com/daily-betting-tip-api/items/daily_betting_coupons\"\nquerystring = {\"sort\": \"-id\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"daily-betting-tips.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Daily Betting Tips",
            "api_arguments_original": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "-id"
                }
            ]
        }
    },
    {
        "query": "Please provide the balance of the wallet address 0x8d2d21fc8bec883e31ac0ac85494a0da06607025 on the Ethereum blockchain.",
        "model_answer": "requests.get(\"https://defi-watch1.p.rapidapi.com/wallets/ethereum/0x8d2d21fc8bec883e31ac0ac85494a0da06607025/balance\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"defi-watch1.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "DeFi Watch's API opens access to up-to-date data for thousands of cryptocurrencies. The API code is clear, developer-friendly, and provides daily and historical cryptocurrency information for each API request",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://defi-watch1.p.rapidapi.com/wallets/{chain}/{address}/balance'\nquerystring = {\"address\": \"\", \"chain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://defi-watch1.p.rapidapi.com/wallets/{chain}/{address}/balance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "address",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "chain",
                    "description": "Select specific blockchain for wallet assets",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://defi-watch1.p.rapidapi.com/wallets/{chain}/{address}/balance\"\nquerystring = {\"address\": \"\", \"chain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"defi-watch1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DeFi Watch",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "chain",
                    "type": "string",
                    "description": "Select specific blockchain for wallet assets",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Is there any recent news about Manchester United?",
        "model_answer": "requests.get(\"https://football-api7.p.rapidapi.com/v3.football.api-sports.io/{endpoint}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"football-api7.p.rapidapi.com\"}, params={\"endpoint\": \"news\", \"team\": \"Manchester United\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Football-API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://football-api7.p.rapidapi.com/v3.football.api-sports.io/{endpoint}'\nquerystring = {\"endpoint\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://football-api7.p.rapidapi.com/v3.football.api-sports.io/{endpoint}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "endpoint",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://football-api7.p.rapidapi.com/v3.football.api-sports.io/{endpoint}\"\nquerystring = {\"endpoint\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"football-api7.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Football-API",
            "api_arguments_original": [
                {
                    "name": "endpoint",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with information about a basketball tournament with id 100?",
        "model_answer": "requests.get(\"https://basketball-data.p.rapidapi.com/tournament/info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"}, params={\"tournamentId\": \"100\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Broadage Basketball API can deliver any type of data for a basketball match, tournament or team; including livescores, play-by-play, boxscore, match statistics & many more. Our Basketball Coverage includes 100+ tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.  <br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=soccer_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://basketball-data.p.rapidapi.com/tournament/info'\nquerystring = {\"tournamentId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://basketball-data.p.rapidapi.com/tournament/info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "tournamentid",
                    "description": "The id of the tournament.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://basketball-data.p.rapidapi.com/tournament/info\"\nquerystring = {\"tournamentId\": \"89\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"basketball-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Basketball Data",
            "api_arguments_original": [
                {
                    "name": "tournamentId",
                    "type": "NUMBER",
                    "description": "The id of the tournament.",
                    "default": "89"
                }
            ]
        }
    },
    {
        "query": "Can you get me information about the OutSystems community, sorted by rank in descending order?",
        "model_answer": "requests.get(\"https://outsystems-community-api.p.rapidapi.com/get_profiles\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"outsystems-community-api.p.rapidapi.com\"}, params={\"sort_by\": \"desc\", \"order_by\": \"rank\", \"page\": \"1\", \"limit\": \"50\", \"keyword\": \"\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get information about the OutSystems community. This is not an official OutSystems API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://outsystems-community-api.p.rapidapi.com/get_profiles'\nquerystring = {\"sort_by\": \"\", \"order_by\": \"\", \"page\": \"\", \"limit\": \"\", \"keyword\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://outsystems-community-api.p.rapidapi.com/get_profiles\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sort_by",
                    "description": "String (desc, asc). Orders the results by either Ascending or Descending order.",
                    "type": "ENUM"
                },
                {
                    "name": "order_by",
                    "description": "String (name, rank, kudos, components, solutions, profile_score, training_score, forums_score, forge_score, ideas_score, total_score, forums_posts, forums_comments, ideas_submitted, ideas_commented, forge_components, publications_articles, certifications). Sorts the results by chosen value.",
                    "type": "ENUM"
                },
                {
                    "name": "page",
                    "description": "Used to see the next page of profiles, eg limit=15 and page=2 will show you profiles 15-30",
                    "type": "NUMBER"
                },
                {
                    "name": "limit",
                    "description": "The limit of results per page that has been set. Integer between 1 - 50 (inclusive)",
                    "type": "NUMBER"
                },
                {
                    "name": "keyword",
                    "description": "Search keyword against profile name, job title, company or location.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://outsystems-community-api.p.rapidapi.com/get_profiles\"\nquerystring = {\"sort_by\": \"\", \"order_by\": \"\", \"page\": \"1\", \"limit\": \"50\", \"keyword\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"outsystems-community-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OutSystems Community API",
            "api_arguments_original": [
                {
                    "name": "sort_by",
                    "type": "ENUM",
                    "description": "String (desc, asc). Orders the results by either Ascending or Descending order.",
                    "default": ""
                },
                {
                    "name": "order_by",
                    "type": "ENUM",
                    "description": "String (name, rank, kudos, components, solutions, profile_score, training_score, forums_score, forge_score, ideas_score, total_score, forums_posts, forums_comments, ideas_submitted, ideas_commented, forge_components, publications_articles, certifications). Sorts the results by chosen value.",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Used to see the next page of profiles, eg limit=15 and page=2 will show you profiles 15-30",
                    "default": "1"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "The limit of results per page that has been set. Integer between 1 - 50 (inclusive)",
                    "default": "50"
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "Search keyword against profile name, job title, company or location.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide the version of the file \"example.docx\" in the storage \"my_storage\" using the GroupDocs.Signature Cloud API.",
        "model_answer": "response = requests.get(\"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/example.docx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"}, params={\"storageName\": \"my_storage\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "GroupDocs.Signature Cloud is a REST API that enables you to create, verify, search, and manipulate various types of signatures for the cloud-based documents.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/{path}'\nquerystring = {\"path\": \"\", \"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/{path}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "path",
                    "description": "File path e.g. '/file.ext'",
                    "type": "STRING"
                },
                {
                    "name": "storagename",
                    "description": "Storage name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://groupdocs-signature-cloud.p.rapidapi.com/signature/storage/version/{path}\"\nquerystring = {\"storageName\": \"\", \"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"groupdocs-signature-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GroupDocs.Signature Cloud",
            "api_arguments_original": [
                {
                    "name": "path",
                    "type": "STRING",
                    "description": "File path e.g. '/file.ext'",
                    "default": ""
                },
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide geolocation data for the IP address 192.168.1.1.",
        "model_answer": "requests.get(\"https://https-ipfinder-io.p.rapidapi.comhttps://api.ipfinder.io/v1/as1?token=2249efd59372e7dd12feecf9e20fd54cf327712c\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"https-ipfinder-io.p.rapidapi.com\"}, params={\"ip\": \"192.168.1.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "ipfinder offers one of the leading IP to geolocation APIs and global IP database services worldwide. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://https-ipfinder-io.p.rapidapi.comhttps://api.ipfinder.io/v1/as1?token=2249efd59372e7dd12feecf9e20fd54cf327712c'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://https-ipfinder-io.p.rapidapi.comhttps://api.ipfinder.io/v1/as1?token=2249efd59372e7dd12feecf9e20fd54cf327712c\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://https-ipfinder-io.p.rapidapi.comhttps://api.ipfinder.io/v1/as1?token=2249efd59372e7dd12feecf9e20fd54cf327712c\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"https-ipfinder-io.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "https://ipfinder.io/",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get a random fun fact.",
        "model_answer": "requests.get(\"https://fun-facts1.p.rapidapi.com/api/fun-facts\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fun-facts1.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "This simple API returns  radom fun facts",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fun-facts1.p.rapidapi.com/api/fun-facts'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fun-facts1.p.rapidapi.com/api/fun-facts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fun-facts1.p.rapidapi.com/api/fun-facts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fun-facts1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fun Facts",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the light switch is turned on.",
        "model_answer": "requests.get(\"https://light-switch.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"light-switch.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://light-switch.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://light-switch.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://light-switch.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"light-switch.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "light switch",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you suggest some queries related to \"python programming\"?",
        "model_answer": "requests.get(\"https://auto-suggest-queries.p.rapidapi.com/suggestqueries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"auto-suggest-queries.p.rapidapi.com\"}, params={\"query\": \"python programming\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "This is a Free Query Suggest API which provides suggestions for search queries based on a given keyword",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://auto-suggest-queries.p.rapidapi.com/suggestqueries'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://auto-suggest-queries.p.rapidapi.com/suggestqueries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://auto-suggest-queries.p.rapidapi.com/suggestqueries\"\nquerystring = {\"query\": \"How to\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auto-suggest-queries.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Auto Suggest Queries",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "How to"
                }
            ]
        }
    },
    {
        "query": "I want to get the seasons for series with ID 5945 using the Unofficial Cricbuzz API.",
        "model_answer": "requests.get(\"https://unofficial-cricbuzz.p.rapidapi.com/series/get-seasons\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"unofficial-cricbuzz.p.rapidapi.com\"}, params={\"seriesId\": \"5945\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "This API helps to query for live cricket scores, commentary, latest cricket news and editorials, schedules of upcoming matches, rankings, stats, records, etc",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://unofficial-cricbuzz.p.rapidapi.com/series/get-seasons'\nquerystring = {\"seriesId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://unofficial-cricbuzz.p.rapidapi.com/series/get-seasons\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "seriesid",
                    "description": "The value of id field returned in .../series/list or .../series/list-archives endpoints.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://unofficial-cricbuzz.p.rapidapi.com/series/get-seasons\"\nquerystring = {\"seriesId\": \"5945\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"unofficial-cricbuzz.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Unofficial Cricbuzz",
            "api_arguments_original": [
                {
                    "name": "seriesId",
                    "type": "NUMBER",
                    "description": "The value of id field returned in .../series/list or .../series/list-archives endpoints.",
                    "default": "5945"
                }
            ]
        }
    },
    {
        "query": "Can you provide a random English word?",
        "model_answer": "response = requests.get(\"https://free-random-word-generator-api.p.rapidapi.com/random-word\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"free-random-word-generator-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Returns a random English word.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://free-random-word-generator-api.p.rapidapi.com/random-word'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://free-random-word-generator-api.p.rapidapi.com/random-word\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://free-random-word-generator-api.p.rapidapi.com/random-word\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"free-random-word-generator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Free Random Word Generator API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the details of the Red Bull team in the FIA Formula 1 Championship.",
        "model_answer": "requests.get(\"https://fia-formula-1-championship-statistics.p.rapidapi.com/api/teams/details/redbull\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fia-formula-1-championship-statistics.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "FIA Formula 1 Championship Statistics is a REST API. Gain access to statistical data about FIA F1 championships. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fia-formula-1-championship-statistics.p.rapidapi.com/api/teams/details/redbull'\nquerystring = {\"team_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fia-formula-1-championship-statistics.p.rapidapi.com/api/teams/details/redbull\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "team_name",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fia-formula-1-championship-statistics.p.rapidapi.com/api/teams/details/redbull\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fia-formula-1-championship-statistics.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FIA Formula 1 Championship Statistics",
            "api_arguments_original": [
                {
                    "name": "team_name",
                    "type": "string",
                    "description": "",
                    "default": "redbull"
                }
            ]
        }
    },
    {
        "query": "I want to get symbols from the \"NYSE\" exchange using the Tradingview TA API (Technical Analysis) API.",
        "model_answer": "requests.get(\"https://tradingview-ta-api-technical-analysis.p.rapidapi.com/get_symbols_from_exchange\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"tradingview-ta-api-technical-analysis.p.rapidapi.com\"}, params={\"exchange\" \"NYSE\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Tradingview API for technical analysis. With indicators, ocillicators, summaries etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tradingview-ta-api-technical-analysis.p.rapidapi.com/get_symbols_from_exchange'\nquerystring = {\"exchange\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tradingview-ta-api-technical-analysis.p.rapidapi.com/get_symbols_from_exchange\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "exchange",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tradingview-ta-api-technical-analysis.p.rapidapi.com/get_symbols_from_exchange\"\nquerystring = {\"exchange\": \"NASDAQ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tradingview-ta-api-technical-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tradingview TA API (Technical Analysis)",
            "api_arguments_original": [
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "",
                    "default": "NASDAQ"
                }
            ]
        }
    },
    {
        "query": "I want to scrape Redbubble listings for orange cat products.",
        "model_answer": "requests.get(\"https://redbubble-scraper.p.rapidapi.com/redbubble\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"redbubble-scraper.p.rapidapi.com\"}, params={\"category\": \"all-departments\", \"page\": \"1\", \"search_term\": \"orange cat\", \"sort_order\": \"relevant\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "With this API, you can quickly and easily extract valuable data from Redbubble listings, including the title, price, product link, images, and tags. This data can help you optimize your product listings, track pricing trends, and stay on top of your competitors.\n\nThis API is easy to use, with simple commands that allow you to access the data you need in real-time. Plus, our API is highly customizable, so you can tailor it to your specific needs and preferences.\n\nSome key features of our Redbu...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://redbubble-scraper.p.rapidapi.com/redbubble'\nquerystring = {\"page\": \"\", \"category\": \"\", \"search_term\": \"\", \"sort_order\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://redbubble-scraper.p.rapidapi.com/redbubble\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "category",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "search_term",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "sort_order",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://redbubble-scraper.p.rapidapi.com/redbubble\"\nquerystring = {\"category\": \"all-departments\", \"page\": \"1\", \"search_term\": \"orange cat\", \"sort_order\": \"relevant\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"redbubble-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Redbubble scraper",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": "all-departments"
                },
                {
                    "name": "search_term",
                    "type": "STRING",
                    "description": "",
                    "default": "orange cat"
                },
                {
                    "name": "sort_order",
                    "type": "STRING",
                    "description": "",
                    "default": "relevant"
                }
            ]
        }
    },
    {
        "query": "I want to find places nearby the coordinates (47.6062\u00b0 N, 122.3321\u00b0 W).",
        "model_answer": "response = requests.get(\"https://places-nearby-a-coordinates.p.rapidapi.com/categories\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"places-nearby-a-coordinates.p.rapidapi.com\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Find places nearby a given coordinates.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://places-nearby-a-coordinates.p.rapidapi.com/categories'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://places-nearby-a-coordinates.p.rapidapi.com/categories\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://places-nearby-a-coordinates.p.rapidapi.com/categories\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"places-nearby-a-coordinates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Places Nearby a Coordinates",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the latest Climate News Feed with a limit of 5 news articles?",
        "model_answer": "requests.get(\"https://climate-news-feed.p.rapidapi.com/page/1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"climate-news-feed.p.rapidapi.com\"}, params={\"limit\": 5})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Climate Change news from the most trusted sources. Nasa, UN, and more. Flexible, reliable, and fast with low latency. Includes thumbnails, filtering, and pagination",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-news-feed.p.rapidapi.com/page/1'\nquerystring = {\"id\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-news-feed.p.rapidapi.com/page/1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "limit",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-news-feed.p.rapidapi.com/page/1\"\nquerystring = {\"limit\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-news-feed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate News Feed",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "Can you provide the historical stock data of AAPL for the last 1 month with a 1 day interval using Yahoo Finance API?",
        "model_answer": "response = requests.get(\"https://yahoo-finance15.p.rapidapi.com/api/yahoo/hi/history/AAPL/1mo\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Yahoo Finance API for stocks, options, ETFs, mutual funds and news. Moved to: https://rapidapi.com/sparior/api/mboum-finance",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yahoo-finance15.p.rapidapi.com/api/yahoo/hi/history/AAPL/15m'\nquerystring = {\"interval\": \"\", \"symbol\": \"\", \"diffandsplits\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/hi/history/AAPL/15m\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "interval",
                    "description": "Allows one of following : 5m|15m|30m|1h|1d|1wk|1mo|3mo",
                    "type": "string"
                },
                {
                    "name": "symbol",
                    "description": "A single symbol",
                    "type": "string"
                },
                {
                    "name": "diffandsplits",
                    "description": "Allows one of following : true|false",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yahoo-finance15.p.rapidapi.com/api/yahoo/hi/history/AAPL/15m\"\nquerystring = {\"diffandsplits\": \"false\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yahoo Finance_v2",
            "api_arguments_original": [
                {
                    "name": "interval",
                    "type": "string",
                    "description": "Allows one of following : 5m|15m|30m|1h|1d|1wk|1mo|3mo",
                    "default": "15m"
                },
                {
                    "name": "symbol",
                    "type": "string",
                    "description": "A single symbol",
                    "default": "AAPL"
                },
                {
                    "name": "diffandsplits",
                    "type": "STRING",
                    "description": "Allows one of following : true|false",
                    "default": "false"
                }
            ]
        }
    },
    {
        "query": "Can you help me find the geocoding information for the address \"1600 Amphitheatre Parkway, Mountain View, CA\" using the OpenCage Geocoder API?",
        "model_answer": "requests.get(\"https://opencage-geocoder.p.rapidapi.com/geocode/v1/json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"opencage-geocoder.p.rapidapi.com\"}, params={\"q\": \"1600 Amphitheatre Parkway, Mountain View, CA\", \"key\": \"OPENCAGE-API-Key\", \"language\": \"en\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Worldwide forward and reverse address geocoding. Uses multiple geocoders, based on open data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://opencage-geocoder.p.rapidapi.com/geocode/v1/json'\nquerystring = {\"q\": \"\", \"key\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://opencage-geocoder.p.rapidapi.com/geocode/v1/json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "\"latitude,longitude\" or \"address\" (without \")",
                    "type": "STRING"
                },
                {
                    "name": "key",
                    "description": "The API key you got when registering on https://geocoder.opencagedata.com/",
                    "type": "STRING"
                },
                {
                    "name": "language",
                    "description": "an IETF format language code (such as es for Spanish or pt-BR for Brazilian Portuguese); if this is omitted a code of en (English) will be assumed",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://opencage-geocoder.p.rapidapi.com/geocode/v1/json\"\nquerystring = {\"language\": \"en\", \"q\": \"Berlin\", \"key\": \"OPENCAGE-API-Key\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opencage-geocoder.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Opencage geocoder",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "\"latitude,longitude\" or \"address\" (without \")",
                    "default": "Berlin"
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "The API key you got when registering on https://geocoder.opencagedata.com/",
                    "default": "OPENCAGE-API-Key"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "an IETF format language code (such as es for Spanish or pt-BR for Brazilian Portuguese); if this is omitted a code of en (English) will be assumed",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "I want to check if google.com is a valid website domain.",
        "model_answer": "requests.get(\"https://website-categorization.p.rapidapi.com/api/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"website-categorization.p.rapidapi.com\"}, params={\"domainName\": \"google.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Website Categorization API lets you define the website category of a given URL. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://website-categorization.p.rapidapi.com/api/v1'\nquerystring = {\"domainName\": \"\", \"hardRefresh\": \"\", \"outputFormat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://website-categorization.p.rapidapi.com/api/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domainname",
                    "description": "Website's domain name",
                    "type": "STRING"
                },
                {
                    "name": "hardrefresh",
                    "description": "0 is used for getting the cached category if there is one. 1 is used for demanding the website categorization from scratch. Default: 0",
                    "type": "STRING"
                },
                {
                    "name": "outputformat",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://website-categorization.p.rapidapi.com/api/v1\"\nquerystring = {\"hardRefresh\": \"\", \"domainName\": \"google.com\", \"outputFormat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"website-categorization.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Website Categorization",
            "api_arguments_original": [
                {
                    "name": "domainName",
                    "type": "STRING",
                    "description": "Website's domain name",
                    "default": "google.com"
                },
                {
                    "name": "hardRefresh",
                    "type": "STRING",
                    "description": "0 is used for getting the cached category if there is one. 1 is used for demanding the website categorization from scratch. Default: 0",
                    "default": ""
                },
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to test the TEST API.",
        "model_answer": "requests.get(\"https://test6065.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"test6065.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Futtest",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test6065.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test6065.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test6065.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test6065.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TEST",
            "api_arguments_original": []
        }
    },
    {
        "query": "What is the risk-free rate for a 1-year duration in Germany on 2022-06-30?",
        "model_answer": "requests.get(\"https://risk-free-rate-api.p.rapidapi.com/api/risk_free_rate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"risk-free-rate-api.p.rapidapi.com\"}, params={\"duration\": \"1y\", \"geography\": \"Germany\", \"date\": \"2022-06-30\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Returns the risk-free rate for a given date. Geography and proxy (duration) are customizable. Treasury Bonds and Bills are used as source.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://risk-free-rate-api.p.rapidapi.com/api/risk_free_rate'\nquerystring = {\"duration\": \"\", \"geography\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://risk-free-rate-api.p.rapidapi.com/api/risk_free_rate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "duration",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "geography",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "date",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://risk-free-rate-api.p.rapidapi.com/api/risk_free_rate\"\nquerystring = {\"duration\": \"3m\", \"geography\": \"US\", \"date\": \"2023-05-10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"risk-free-rate-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Risk Free Rate API",
            "api_arguments_original": [
                {
                    "name": "duration",
                    "type": "STRING",
                    "description": "",
                    "default": "3m"
                },
                {
                    "name": "geography",
                    "type": "STRING",
                    "description": "",
                    "default": "US"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2023-05-10"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve the icon with id 12345 from the Flaticon API?",
        "model_answer": "requests.get(\"https://flaticon.p.rapidapi.com/style/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"flaticon.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "5M+ icons and vectors at your fingertips",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flaticon.p.rapidapi.com/style/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flaticon.p.rapidapi.com/style/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flaticon.p.rapidapi.com/style/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flaticon.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flaticon",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the song snippets of Halsey's album with the ID 63b88a2bc8450e8550fa6d5c?",
        "model_answer": "response = requests.get(\"https://halsey-lyric-snippets.p.rapidapi.com/album/id/63b88a2bc8450e8550fa6d5c\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"halsey-lyric-snippets.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "An API that allows users to view short excerpts of Halsey's songs.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://halsey-lyric-snippets.p.rapidapi.com/album/id/63b88a2bc8450e8550fa6d5c'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://halsey-lyric-snippets.p.rapidapi.com/album/id/63b88a2bc8450e8550fa6d5c\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://halsey-lyric-snippets.p.rapidapi.com/album/id/63b88a2bc8450e8550fa6d5c\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"halsey-lyric-snippets.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Halsey Lyric Snippets",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "63b88a2bc8450e8550fa6d5c"
                }
            ]
        }
    },
    {
        "query": "I want to get the scheduled games for France on October 15, 2021 using ViperScore API.",
        "model_answer": "requests.get(\"https://viperscore.p.rapidapi.com/games/scheduled/country\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"viperscore.p.rapidapi.com\"}, params={\"countryId\": \"30\", \"date\": \"2021-10-15\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "ViperScore is the cheapest sports API for all hobby and business projects with over 25 endpoints, 20+ sports and 5100+ leagues! We serve comprehensive data blazing fast with a clear structure and a well thought out scheme. You get the best live results and fast information for every game and we constantly develop the API further and include more data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://viperscore.p.rapidapi.com/games/scheduled/country'\nquerystring = {\"countryId\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://viperscore.p.rapidapi.com/games/scheduled/country\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "countryid",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "date",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://viperscore.p.rapidapi.com/games/scheduled/country\"\nquerystring = {\"countryId\": \"30\", \"date\": \"2021-10-15\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"viperscore.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ViperScore",
            "api_arguments_original": [
                {
                    "name": "countryId",
                    "type": "STRING",
                    "description": "",
                    "default": "30"
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2021-10-15"
                }
            ]
        }
    },
    {
        "query": "I want to get Amazon Live Data for ASIN",
        "model_answer": "response = requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B07WDSD7G7\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"}, params={\"asin\": \"B09DKV849B\", \"locale\": \"us\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Simple & high performance Magic Eden API, backed by rotating proxies & API keys\n\nCheck out my Opensea / Blur / Looksrare / x2y2 API as well\nhttps://rapidapi.com/openseatools/api/opensea15\n\n- Crypto Payments Available\n\n- Lifetime Unlimited Requests Licenses Available\n\n- Private Plans with 16 / 32 / 64 / 128  requests/second Available\n\n- Ready made bots written in node.js already configured to work with RapidApi Available.\n\nJoin our Discord to inquire & find out the latest information and tools...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://magiceden1.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://magiceden1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://magiceden1.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magiceden1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MagicEden",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the data from the test API.",
        "model_answer": "requests.get(\"https://testapi1046.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"testapi1046.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "for testing befor deployment ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testapi1046.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testapi1046.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testapi1046.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testapi1046.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "testApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me the list of all divisions in Bangladesh.",
        "model_answer": "requests.get(\"https://bdapi.p.rapidapi.com/v1.0/divisions\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\" \"bdapi.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "BD API is a RestAPI service. Divisions, Districts, Upazilla, Coordinates, etc of Bangladesh are available in Bangla and English within endpoints. Main Documentation website: https://bdapis.com/",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bdapi.p.rapidapi.com/v1.0/divisions'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bdapi.p.rapidapi.com/v1.0/divisions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bdapi.p.rapidapi.com/v1.0/divisions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bdapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BDapi",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the current rankings of the top 100 tennis players in ATP?",
        "model_answer": "requests.get(\"https://sports-live-scores.p.rapidapi.com/tennis/rankings/atp/100\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sports-live-scores.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "We support different Sports. Bettings odds, livescores, rankings and match details included. Sports include Football, Tennis, Basketball, Crikcet, Futsal, Handball, Baseball, Table Tennis, Esports. Try it out and always feel free tor reach out to the team to add more endpoints!  ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sports-live-scores.p.rapidapi.com/tennis/rankings/atp/50'\nquerystring = {\"n_players\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sports-live-scores.p.rapidapi.com/tennis/rankings/atp/50\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "n_players",
                    "description": "Number of players to be displayed. Max: 1000.",
                    "type": "string"
                },
                {
                    "name": "category",
                    "description": "*atp* or *wta*",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sports-live-scores.p.rapidapi.com/tennis/rankings/atp/50\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sports-live-scores.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sports Live Scores",
            "api_arguments_original": [
                {
                    "name": "n_players",
                    "type": "string",
                    "description": "Number of players to be displayed. Max: 1000.",
                    "default": "50"
                },
                {
                    "name": "category",
                    "type": "string",
                    "description": "*atp* or *wta*",
                    "default": "atp"
                }
            ]
        }
    },
    {
        "query": "Can you provide information about the character with ID 12345 from the RiordanVerse API?",
        "model_answer": "response = requests.get(\"https://riordanverse-api.p.rapidapi.com/api/characters/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"riordanverse-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "An API for RiordanVerse",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://riordanverse-api.p.rapidapi.com/api/characters/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://riordanverse-api.p.rapidapi.com/api/characters/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://riordanverse-api.p.rapidapi.com/api/characters/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"riordanverse-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "riordanverse-api",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the stock chart for AAPL from 2020-01-01 to 2021-01-01 in daily intervals.",
        "model_answer": "response = requests.get(\"https://schwab.p.rapidapi.com/quote/get-chart\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"schwab.p.rapidapi.com\"}, params={\"symbol\": \"AAPL\", \"startDate\": \"2020-01-01T00:00:00\", \"endDate\": \"2021-01-01T23:59:59\", \"dataPeriod\": \"Day\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Research investments, and follow market news",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://schwab.p.rapidapi.com/quote/get-chart'\nquerystring = {\"endDate\": \"\", \"startDate\": \"\", \"symbol\": \"\", \"dataPeriod\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://schwab.p.rapidapi.com/quote/get-chart\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "enddate",
                    "description": "The format is yyyy-MM-dd'T'HH:mm:ss",
                    "type": "STRING"
                },
                {
                    "name": "startdate",
                    "description": "The format is yyyy-MM-dd'T'HH:mm:ss",
                    "type": "STRING"
                },
                {
                    "name": "symbol",
                    "description": "The symbol to get information",
                    "type": "STRING"
                },
                {
                    "name": "dataperiod",
                    "description": "One of the following : Minute|Hour|Day|Week|Month",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://schwab.p.rapidapi.com/quote/get-chart\"\nquerystring = {\"dataPeriod\": \"Hour\", \"endDate\": \"2020-04-28T05:49:27\", \"startDate\": \"2020-04-27T05:49:27\", \"symbol\": \"TSLA\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"schwab.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Schwab",
            "api_arguments_original": [
                {
                    "name": "endDate",
                    "type": "STRING",
                    "description": "The format is yyyy-MM-dd'T'HH:mm:ss",
                    "default": "2020-04-28T05:49:27"
                },
                {
                    "name": "startDate",
                    "type": "STRING",
                    "description": "The format is yyyy-MM-dd'T'HH:mm:ss",
                    "default": "2020-04-27T05:49:27"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "The symbol to get information",
                    "default": "TSLA"
                },
                {
                    "name": "dataPeriod",
                    "type": "STRING",
                    "description": "One of the following : Minute|Hour|Day|Week|Month",
                    "default": "Hour"
                }
            ]
        }
    },
    {
        "query": "Can you help me search for movie torrents for the movie \"Inception\" with a maximum of 10 results?",
        "model_answer": "requests.get(\"https://movie-tv-music-search-and-download.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"movie-tv-music-search-and-download.p.rapidapi.com\"}, params={\"keywords\": \"Inception\", \"quantity\": \"10\", \"page\": \"1\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "Get multiple downloadable torrent links by keyword search of movie, TV, and music titles with a rate value of 10 being the best.Download via uTorrent, BitTorrent and other clients",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://movie-tv-music-search-and-download.p.rapidapi.com/search'\nquerystring = {\"keywords\": \"\", \"quantity\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://movie-tv-music-search-and-download.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "keywords",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "quantity",
                    "description": "MAX:40",
                    "type": "NUMBER"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://movie-tv-music-search-and-download.p.rapidapi.com/search\"\nquerystring = {\"keywords\": \"Fast X 2023\", \"page\": \"1\", \"quantity\": \"40\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"movie-tv-music-search-and-download.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Movie, TV, music search and download",
            "api_arguments_original": [
                {
                    "name": "keywords",
                    "type": "STRING",
                    "description": "",
                    "default": "Fast X 2023"
                },
                {
                    "name": "quantity",
                    "type": "NUMBER",
                    "description": "MAX:40",
                    "default": "40"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please calculate the amortized loan repayment schedule for a loan with an annual interest rate of 5%, 60 installments (payments), starting from 2022-01-01, and a principal amount of $100,000.",
        "model_answer": "response = requests.get(\"https://loan-amortization-schedule-calculator.p.rapidapi.com/v1/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"loan-amortization-schedule-calculator.p.rapidapi.com\"}, params={\"annualInterestRate\": \"0.05\", \"installmentCount\": \"60\", \"startDate\": \"2022-01-01\", \"principalAmount\": \"100000\", \"repaymentInterval\": \"month\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Amortized loan repayment schedule calculator",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://loan-amortization-schedule-calculator.p.rapidapi.com/v1/'\nquerystring = {\"annualInterestRate\": \"\", \"installmentCount\": \"\", \"startDate\": \"\", \"principalAmount\": \"\", \"repaymentInterval\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://loan-amortization-schedule-calculator.p.rapidapi.com/v1/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "annualinterestrate",
                    "description": "Decimal number: (annual interest rate in percent) / 100",
                    "type": "NUMBER"
                },
                {
                    "name": "installmentcount",
                    "description": "Number of installments (payments)",
                    "type": "NUMBER"
                },
                {
                    "name": "startdate",
                    "description": "Start date of the schedule",
                    "type": "DATE (YYYY-MM-DD)"
                },
                {
                    "name": "principalamount",
                    "description": "Principal amount of the loan",
                    "type": "NUMBER"
                },
                {
                    "name": "repaymentinterval",
                    "description": "Allowed values: year, month, week, biweekly",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://loan-amortization-schedule-calculator.p.rapidapi.com/v1/\"\nquerystring = {\"annualInterestRate\": \"0.06\", \"installmentCount\": \"12\", \"repaymentInterval\": \"month\", \"startDate\": \"2020-01-01\", \"principalAmount\": \"100000\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"loan-amortization-schedule-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Loan Amortization Schedule Calculator",
            "api_arguments_original": [
                {
                    "name": "annualInterestRate",
                    "type": "NUMBER",
                    "description": "Decimal number: (annual interest rate in percent) / 100",
                    "default": "0.06"
                },
                {
                    "name": "installmentCount",
                    "type": "NUMBER",
                    "description": "Number of installments (payments)",
                    "default": "12"
                },
                {
                    "name": "startDate",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "Start date of the schedule",
                    "default": "2020-01-01"
                },
                {
                    "name": "principalAmount",
                    "type": "NUMBER",
                    "description": "Principal amount of the loan",
                    "default": "100000"
                },
                {
                    "name": "repaymentInterval",
                    "type": "STRING",
                    "description": "Allowed values: year, month, week, biweekly",
                    "default": "month"
                }
            ]
        }
    },
    {
        "query": "I want to get the list of Flixbus stations.",
        "model_answer": "requests.get(\"https://flixbus.p.rapidapi.com/v1/stations\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "A service that provides flixbus travel search, available cities, stations, timetables and routes. Site: www.flixbus.com **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flixbus.p.rapidapi.com/v1/stations'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flixbus.p.rapidapi.com/v1/stations\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flixbus.p.rapidapi.com/v1/stations\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flixbus",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the weather information of New York City.",
        "model_answer": "requests.get(\"https://the-weather-api.p.rapidapi.com/api/weather/new_york_city\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"the-weather-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Get the updated and hyper-accurate weather/aqi information of any city. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-weather-api.p.rapidapi.com/api/weather/mumbai'\nquerystring = {\"cityName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-weather-api.p.rapidapi.com/api/weather/mumbai\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cityname",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-weather-api.p.rapidapi.com/api/weather/mumbai\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-weather-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The Weather API",
            "api_arguments_original": [
                {
                    "name": "cityName",
                    "type": "string",
                    "description": "",
                    "default": "mumbai"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve the contact details for contact ID 123 using the Upcall API?",
        "model_answer": "requests.get(\"https://upcall-upcall-v1.p.rapidapi.com/contacts/Some()\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"upcall-upcall-v1.p.rapidapi.com\"}, params={\"id\": \"123\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Upcall provides phone callers through an API and web interface. Simply send us your phone numbers and our professional callers will call them for you within minutes. We are the next generation call center. Contact us for more info!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://upcall-upcall-v1.p.rapidapi.com/contacts/Some()'\nquerystring = {\"id\": \"\", \"custom_fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://upcall-upcall-v1.p.rapidapi.com/contacts/Some()\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "ID of contact to fetch",
                    "type": "NUMBER"
                },
                {
                    "name": "custom_fields",
                    "description": "If set, custom fields will be displayed in the output",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://upcall-upcall-v1.p.rapidapi.com/contacts/Some()\"\nquerystring = {\"custom_fields\": \"Some()\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"upcall-upcall-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Upcall",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "ID of contact to fetch",
                    "default": "Some()"
                },
                {
                    "name": "custom_fields",
                    "type": "NUMBER",
                    "description": "If set, custom fields will be displayed in the output",
                    "default": "Some()"
                }
            ]
        }
    },
    {
        "query": "I want to get the income data for the zipcode 12345.",
        "model_answer": "requests.get(\"https://income-by-zipcode.p.rapidapi.com/zipcode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"income-by-zipcode.p.rapidapi.com\"}, params={\"zip\": \"12345\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Income by zipcode is a simple API for getting income by zipcode data in the United States.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://income-by-zipcode.p.rapidapi.com/zipcode'\nquerystring = {\"zip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://income-by-zipcode.p.rapidapi.com/zipcode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "zip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://income-by-zipcode.p.rapidapi.com/zipcode\"\nquerystring = {\"zip\": \"2818\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"income-by-zipcode.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Income by Zipcode",
            "api_arguments_original": [
                {
                    "name": "zip",
                    "type": "STRING",
                    "description": "",
                    "default": "2818"
                }
            ]
        }
    },
    {
        "query": "Can you help me with the Zomi Dictionary API? I want to get the definition of the word \"hello\".",
        "model_answer": "requests.get(\"https://zomidictionary.p.rapidapi.comhttps://zomidictionary.com/\")",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "Zomi Dictionary",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://zomidictionary.p.rapidapi.comhttps://zomidictionary.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://zomidictionary.p.rapidapi.comhttps://zomidictionary.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://zomidictionary.p.rapidapi.comhttps://zomidictionary.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"zomidictionary.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ZomiDictionary",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you extract the data for player with playerid 93 from the Valorant Esports API?",
        "model_answer": "requests.get(\"https://valorant-esports1.p.rapidapi.com/v1/players/93\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"valorant-esports1.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "The Valorant Esports is a user-friendly tool that allows you to extract data from the website vlr.gg. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://valorant-esports1.p.rapidapi.com/v1/players/93'\nquerystring = {\"playerid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://valorant-esports1.p.rapidapi.com/v1/players/93\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "playerid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://valorant-esports1.p.rapidapi.com/v1/players/93\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"valorant-esports1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Valorant Esports_v2",
            "api_arguments_original": [
                {
                    "name": "playerid",
                    "type": "string",
                    "description": "",
                    "default": "93"
                }
            ]
        }
    },
    {
        "query": "Please generate a word for me to play Charades.",
        "model_answer": "response = requests.get(\"https://pictionary-charades-word-generator.p.rapidapi.com/charades\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pictionary-charades-word-generator.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Generate words for Charades and Pictionary Games!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pictionary-charades-word-generator.p.rapidapi.com/charades'\nquerystring = {\"difficulty\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pictionary-charades-word-generator.p.rapidapi.com/charades\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "difficulty",
                    "description": "",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pictionary-charades-word-generator.p.rapidapi.com/charades\"\nquerystring = {\"difficulty\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pictionary-charades-word-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pictionary Charades Word Generator",
            "api_arguments_original": [
                {
                    "name": "difficulty",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me an API call to use the Fast Reading API to analyze the text \"This is a sample text\" in English language using Model 1 and with a word fixation of 3?",
        "model_answer": "requests.get(\"https://fast-reading.p.rapidapi.com/api/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fast-reading.p.rapidapi.com\"}, params={\"txt\": \"This is a sample text\", \"fix\": 3, \"lng\": \"en\", \"model\": \"m1\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Fast Reading (Bionic Reading) - is a shallow method of reading facilitating the reading process by guiding the eyes through text with artificial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fast-reading.p.rapidapi.com/api/'\nquerystring = {\"txt\": \"\", \"fix\": \"\", \"lng\": \"\", \"model\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fast-reading.p.rapidapi.com/api/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "txt",
                    "description": "Raw text to be converted",
                    "type": "STRING"
                },
                {
                    "name": "fix",
                    "description": "Word fixation",
                    "type": "NUMBER"
                },
                {
                    "name": "lng",
                    "description": "Language: EN, RU, ES",
                    "type": "STRING"
                },
                {
                    "name": "model",
                    "description": "Model For Text Processing: m1,m2,...m11",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fast-reading.p.rapidapi.com/api/\"\nquerystring = {\"fix\": \"5\", \"lng\": \"en\", \"model\": \"m1\", \"txt\": \"Fast Reading - is a shallow method of reading facilitating the reading process by guiding the eyes through text with artificial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fast-reading.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fast Reading",
            "api_arguments_original": [
                {
                    "name": "txt",
                    "type": "STRING",
                    "description": "Raw text to be converted",
                    "default": "Fast Reading - is a shallow method of reading facilitating the reading process by guiding the eyes through text with artificial fixation points. As a result, the reader is only focusing on the highlighted initial letters and lets the brain center complete the word."
                },
                {
                    "name": "fix",
                    "type": "NUMBER",
                    "description": "Word fixation",
                    "default": "5"
                },
                {
                    "name": "lng",
                    "type": "STRING",
                    "description": "Language: EN, RU, ES",
                    "default": "en"
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "Model For Text Processing: m1,m2,...m11",
                    "default": "m1"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with information about Dota 2 hero with ID 37 in English language?",
        "model_answer": "requests.get(\"https://dota2-heroes.p.rapidapi.com/heroes/en/37\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dota2-heroes.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "This api can give you all dota2 heroes list ands bios images videos role talents and abilities with 20 language.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dota2-heroes.p.rapidapi.com/heroes/{language}/37'\nquerystring = {\"language\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dota2-heroes.p.rapidapi.com/heroes/{language}/37\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "language",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dota2-heroes.p.rapidapi.com/heroes/{language}/37\"\nquerystring = {\"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dota2-heroes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Dota2 Heroes",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "37"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Email sandbox testing API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/metadata'\nquerystring = {\"attachmentId\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/metadata\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "attachmentid",
                    "description": "ID of attachment",
                    "type": "STRING"
                },
                {
                    "name": "emailid",
                    "description": "ID of email",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com/emails/{emailId}/attachments/{attachmentId}/metadata\"\nquerystring = {\"attachmentId\": \"\", \"emailId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jackmahoney-mailslurp-email-testing-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MailSlurp Email Testing",
            "api_arguments_original": [
                {
                    "name": "attachmentId",
                    "type": "STRING",
                    "description": "ID of attachment",
                    "default": ""
                },
                {
                    "name": "emailId",
                    "type": "STRING",
                    "description": "ID of email",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the population of Europe?",
        "model_answer": "requests.get(\"https://world-population3.p.rapidapi.com/continents/Europe\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"world-population3.p.rapidapi.com\"}, params={\"rank\": \"1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get interesting information about countries' population",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-population3.p.rapidapi.com/continents/Europe'\nquerystring = {\"continent\": \"\", \"rank\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-population3.p.rapidapi.com/continents/Europe\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "continent",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "rank",
                    "description": "Order the countries according to the rank. Can take two values:\n\n- 1 = ascending order\n\n-  -1 = descending order",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-population3.p.rapidapi.com/continents/Europe\"\nquerystring = {\"rank\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-population3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Population",
            "api_arguments_original": [
                {
                    "name": "continent",
                    "type": "string",
                    "description": "",
                    "default": "Europe"
                },
                {
                    "name": "rank",
                    "type": "NUMBER",
                    "description": "Order the countries according to the rank. Can take two values:\n\n- 1 = ascending order\n\n-  -1 = descending order",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you check if the IP address 192.168.1.1 has been associated with any malicious activity recently?",
        "model_answer": "requests.get(\"https://abuse-ip-check.p.rapidapi.com/api/v2/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"abuse-ip-check.p.rapidapi.com\"}, params={\"ipAddress\": \"192.168.1.1\", \"maxAgeInDays\": \"30\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Abuse IP Check is a project dedicated to helping combat the spread of hackers, spammers, and abusive activity on the internet.\n\nOur mission is to help make Web safer by providing a central blacklist for webmasters, system administrators, and other interested parties to report and find IP addresses that have been associated with malicious activity online.\n\nYou can report an IP address associated with malicious activity, or check to see if an IP address has been reported, by using the search bo...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://abuse-ip-check.p.rapidapi.com/api/v2/check'\nquerystring = {\"ipAddress\": \"\", \"maxAgeInDays\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://abuse-ip-check.p.rapidapi.com/api/v2/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ipaddress",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "maxageindays",
                    "description": "default : 30\nmin : 1\nmax : 365",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://abuse-ip-check.p.rapidapi.com/api/v2/check\"\nquerystring = {\"ipAddress\": \"118.25.6.39\", \"maxAgeInDays\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"abuse-ip-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Abuse IP Check",
            "api_arguments_original": [
                {
                    "name": "ipAddress",
                    "type": "STRING",
                    "description": "",
                    "default": "118.25.6.39"
                },
                {
                    "name": "maxAgeInDays",
                    "type": "STRING",
                    "description": "default : 30\nmin : 1\nmax : 365",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the top 5 graffiti tags in Jet Set Radio, ordered by name in ascending order?",
        "model_answer": "requests.get(\"https://jet-set-radio-api.p.rapidapi.com/graffiti-tags\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"jet-set-radio-api.p.rapidapi.com\"}, params={\"orderBy\" \"asc\", \"limit\" \"5\", \"sortBy\" \"name\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "A data provider for all things Jet Set Radio in JSON format!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jet-set-radio-api.p.rapidapi.com/graffiti-tags'\nquerystring = {\"orderBy\": \"\", \"limit\": \"\", \"sortBy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jet-set-radio-api.p.rapidapi.com/graffiti-tags\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "orderby",
                    "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Limit the number of items returned in the response.",
                    "type": "STRING"
                },
                {
                    "name": "sortby",
                    "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jet-set-radio-api.p.rapidapi.com/graffiti-tags\"\nquerystring = {\"orderBy\": \"asc\", \"limit\": \"5\", \"sortBy\": \"name\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jet-set-radio-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Jet Set Radio API",
            "api_arguments_original": [
                {
                    "name": "orderBy",
                    "type": "STRING",
                    "description": "Possible Values:\n - `asc`\n - `desc`\n\nsortBy must be present for this to take effect. \nThe default value is `asc`\n",
                    "default": "asc"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Limit the number of items returned in the response.",
                    "default": "5"
                },
                {
                    "name": "sortBy",
                    "type": "STRING",
                    "description": "Possible Values:\nAny field on the document\n\nExamples:\n - name\n - stats",
                    "default": "name"
                }
            ]
        }
    },
    {
        "query": "Please generate a fake identity.",
        "model_answer": "requests.get(\"https://fake-identity-generator1.p.rapidapi.com/GenerateRandomIdentity.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fake-identity-generator1.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The most complete and cheap Fake Identity Generation API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fake-identity-generator1.p.rapidapi.com/GenerateRandomIdentity.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fake-identity-generator1.p.rapidapi.com/GenerateRandomIdentity.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fake-identity-generator1.p.rapidapi.com/GenerateRandomIdentity.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fake-identity-generator1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fake Identity Generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check if example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "wffff",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "b4c6577cb2msh7c15fca215f2c30p1f1717jsn998498c6865e",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with real-time news from social media platforms like Twitter, Facebook, and Instagram?",
        "model_answer": "requests.get(\"https://onelike1.p.rapidapi.com/servicegr/news\", headers={\"X-RapidAPI-Key\" : \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" : \"onelike1.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Getting News in real-time via API from Social Medias like Twitter, Facebook, Instagram, etc",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://onelike1.p.rapidapi.com/servicegr/news'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://onelike1.p.rapidapi.com/servicegr/news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://onelike1.p.rapidapi.com/servicegr/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"onelike1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OneLike",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to list all available countries in Similar Web API.",
        "model_answer": "requests.get(\"https://similar-web.p.rapidapi.com/countries/list\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"similar-web.p.rapidapi.com\"})",
        "original": {
            "domain": "Monitoring",
            "framework": "RapidAPI",
            "functionality": "This API helps you to query website traffic and key metrics for any website, including engagement rate, traffic ranking, keyword ranking and traffic source... to create a plugin like similarweb.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://similar-web.p.rapidapi.com/countries/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://similar-web.p.rapidapi.com/countries/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://similar-web.p.rapidapi.com/countries/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"similar-web.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Similar Web",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check the reputation and geolocation of IP address 192.168.1.1?",
        "model_answer": "requests.get(\"https://ip-reputation-geoip-and-detect-vpn.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-reputation-geoip-and-detect-vpn.p.rapidapi.com\"}, params={\"ip\": \"192.168.1.1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Block fraud attempts in realtime. This ridiculously effective API provides invaluable information about any IP address.  Detect bots, prevent fraud and abuse by detecting users trying to hide behind a VPN, proxy, or TOR. Geolocate IP addresses to find out which country or city the website visitors are from.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-reputation-geoip-and-detect-vpn.p.rapidapi.com/'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-reputation-geoip-and-detect-vpn.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-reputation-geoip-and-detect-vpn.p.rapidapi.com/\"\nquerystring = {\"ip\": \"185.65.135.230\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-reputation-geoip-and-detect-vpn.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP reputation, geoip and detect VPN",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "185.65.135.230"
                }
            ]
        }
    },
    {
        "query": "How can I verify if the PAN-Aadhaar link exists for a specific request_id \"abcd-1234-efgh-5678\"?",
        "model_answer": "requests.get(\"https://verify-pan-aadhaar-link.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"verify-pan-aadhaar-link.p.rapidapi.com\"}, params={\"request_id\" : \"abcd-1234-efgh-5678\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Reduce the risk of fraud on your platform by onboarding only those individuals whose PAN is linked with their Aadhaar, in accordance with the laws of India.\n\nReduce manual efforts by calling a single API which tells you if an individual\u2019s PAN Aadhaar link exists or not.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://verify-pan-aadhaar-link.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://verify-pan-aadhaar-link.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://verify-pan-aadhaar-link.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"verify-pan-aadhaar-link.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Verify PAN Aadhaar link_v2",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you calculate the misinformation exposure score for the twitter account \"@example_user\"?",
        "model_answer": "requests.get(\"https://mescalc.p.rapidapi.com/account/@example_user\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mescalc.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Calculates Misinformation Exposure Score for Twitter accounts",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mescalc.p.rapidapi.com/account/{}'\nquerystring = {\"twitter_account\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mescalc.p.rapidapi.com/account/{}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "twitter_account",
                    "description": "",
                    "type": "OBJECT"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mescalc.p.rapidapi.com/account/{}\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mescalc.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MESCALC",
            "api_arguments_original": [
                {
                    "name": "twitter_account",
                    "type": "OBJECT",
                    "description": "",
                    "default": "{}"
                }
            ]
        }
    },
    {
        "query": "I want to get the live data of 567 Live app 2022.",
        "model_answer": "requests.get(\"https://567-live-app-2022.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"567-live-app-2022.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "567 Live c\u00f3 trang ch\u1ee7 567live.io duy nh\u1ea5t ch\u00ednh x\u00e1c. Cung c\u1ea5p \u0111\u1ee7 link t\u1ea3i 567 live app an to\u00e0n cho b\u1ea1n phi\u00ean b\u1ea3n m\u1edbi nh\u1ea5t.\n\u0110\u1ecba ch\u1ec9 : 99 Gi\u1ea3i Ph\u00f3ng, \u0110\u1ed3ng T\u00e2m, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i\nGoogle map https://www.google.com/maps?cid=7118718670140148249 \nHotline 0978720550\nGmail:  567liveapp@gmail.com\nWebsite https://567live.io/ \nhttps://sites.google.com/view/567live-app/\nhttps://567live.io/tai-ve/567live-apk \nhttps://567live.io/tai-ve/567live-ios\nhttps://567live.io/thu-muc/app-live/ \nhttps://folkd.com/u...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://567-live-app-2022.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://567-live-app-2022.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://567-live-app-2022.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"567-live-app-2022.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "567 Live app 2022",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the pre-game odds for FDJ.",
        "model_answer": "requests.get(\"https://fdj1.p.rapidapi.com/odds/fdj\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fdj1.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Games and pre-game Odds for FDJ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fdj1.p.rapidapi.com/odds/fdj'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fdj1.p.rapidapi.com/odds/fdj\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fdj1.p.rapidapi.com/odds/fdj\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fdj1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "FDJ",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you show me the TV channels broadcasting live football matches in Peru?",
        "model_answer": "requests.get(\"https://wosti-futbol-tv-peru.p.rapidapi.com/api/Teams\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"wosti-futbol-tv-peru.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Gu\u00eda de partidos de f\u00fatbol televisados en Per\u00fa. Horarios y canales (TV&streaming legales). Futbolenvivoperu.com Support: info@wosti.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wosti-futbol-tv-peru.p.rapidapi.com/api/Teams'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wosti-futbol-tv-peru.p.rapidapi.com/api/Teams\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wosti-futbol-tv-peru.p.rapidapi.com/api/Teams\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wosti-futbol-tv-peru.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WOSTI-Futbol TV Peru",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check the sentiment of this news article",
        "model_answer": "response = requests.get(\"https://news-sentiment2.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"news-sentiment2.p.rapidapi.com\"}, params={\"url\": \"https://www.goodnewsnetwork.org/cave-art-carvings-beneath-2000-years-of-sediment-in-alabama/\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "English news sentiment API, only $0.00001 per extra requests",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://news-sentiment2.p.rapidapi.com/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://news-sentiment2.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://news-sentiment2.p.rapidapi.com/\"\nquerystring = {\"url\": \"https://www.goodnewsnetwork.org/cave-art-carvings-beneath-2000-years-of-sediment-in-alabama/\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-sentiment2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "News Sentiment",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.goodnewsnetwork.org/cave-art-carvings-beneath-2000-years-of-sediment-in-alabama/"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the appointments for today at Clinic A?",
        "model_answer": "requests.get(\"https://appointment-system-api.p.rapidapi.com/appointment/getAppointments\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"appointment-system-api.p.rapidapi.com\"}, params={\"date\": \"2022.09.09\", \"clinicName\": \"Clinic A\"})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "Appointment System Api with user operations and admin operations. Api has all appointment operations for a clinic",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://appointment-system-api.p.rapidapi.com/appointment/getAppointments'\nquerystring = {\"date\": \"\", \"clinicName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://appointment-system-api.p.rapidapi.com/appointment/getAppointments\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "date",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "clinicname",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://appointment-system-api.p.rapidapi.com/appointment/getAppointments\"\nquerystring = {\"date\": \"2022.09.09\", \"clinicName\": \"DemoUser\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"appointment-system-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Appointment System API",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "",
                    "default": "2022.09.09"
                },
                {
                    "name": "clinicName",
                    "type": "STRING",
                    "description": "",
                    "default": "DemoUser"
                }
            ]
        }
    },
    {
        "query": "I want to download a Twitter video.",
        "model_answer": "requests.get(\"https://twitter65.p.rapidapi.com/api/twitter/hls\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"twitter65.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Download  Twitter videos",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitter65.p.rapidapi.com/api/twitter/hls'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitter65.p.rapidapi.com/api/twitter/hls\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitter65.p.rapidapi.com/api/twitter/hls\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitter65.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "twitter",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the latest posts from the \"hello_v2\" API.",
        "model_answer": "requests.get(\"https://hello1.p.rapidapi.com/posts\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"hello1.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "qweqw",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hello1.p.rapidapi.com/posts'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hello1.p.rapidapi.com/posts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hello1.p.rapidapi.com/posts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hello1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "hello_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get real-time details of the product with ASIN B07ZPKBL9V on Amazon in the US marketplace.",
        "model_answer": "response = requests.get(\"https://real-time-amazon-data.p.rapidapi.com/product-details\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"real-time-amazon-data.p.rapidapi.com\"}, params={\"asin\": \"B07ZPKBL9V\", \"country\": \"US\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Fast and Simple API to search for products, offers and reviews on Amazon in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://real-time-amazon-data.p.rapidapi.com/product-details'\nquerystring = {\"asin\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://real-time-amazon-data.p.rapidapi.com/product-details\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "asin",
                    "description": "Product ASIN for which to get details. Supports batching of up to 10 ASINs in a single request, separated by comma (e.g. *B08PPDJWC8,B07ZPKBL9V, B08BHXG144*).\n\nNote that each ASIN in a batch request is counted as a single request against the plan quota.",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "Sets the marketplace country, language and currency. \n\n**Default:** `US`\n\n**Allowed values:**  `US, AU, BR, CA, CN, FR, DE, IN, IT, MX, NL, SG, ES, TR, AE, GB, JP`",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://real-time-amazon-data.p.rapidapi.com/product-details\"\nquerystring = {\"country\": \"US\", \"asin\": \"B07ZPKBL9V\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"real-time-amazon-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Real-Time Amazon Data",
            "api_arguments_original": [
                {
                    "name": "asin",
                    "type": "STRING",
                    "description": "Product ASIN for which to get details. Supports batching of up to 10 ASINs in a single request, separated by comma (e.g. *B08PPDJWC8,B07ZPKBL9V, B08BHXG144*).\n\nNote that each ASIN in a batch request is counted as a single request against the plan quota.",
                    "default": "B07ZPKBL9V"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Sets the marketplace country, language and currency. \n\n**Default:** `US`\n\n**Allowed values:**  `US, AU, BR, CA, CN, FR, DE, IN, IT, MX, NL, SG, ES, TR, AE, GB, JP`\n",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "I want to check if example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "versioning-free",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://versioning-free.p.rapidapi.com/v1'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://versioning-free.p.rapidapi.com/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://versioning-free.p.rapidapi.com/v1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"versioning-free.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "versioning-free",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to find all the US zip codes within a 20 mile radius of zip code 90210.",
        "model_answer": "requests.get(\"https://usa-zip-codes-inside-radius.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"usa-zip-codes-inside-radius.p.rapidapi.com\"}, params={\"zip\": \"90210\", \"radius\": \"20\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Returns a list of all US ZIP codes that fall within a defined radius",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://usa-zip-codes-inside-radius.p.rapidapi.com/'\nquerystring = {\"zip\": \"\", \"radius\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://usa-zip-codes-inside-radius.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "zip",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "radius",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://usa-zip-codes-inside-radius.p.rapidapi.com/\"\nquerystring = {\"zip\": \"90210\", \"radius\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"usa-zip-codes-inside-radius.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "USA ZIP Codes Inside Radius",
            "api_arguments_original": [
                {
                    "name": "zip",
                    "type": "STRING",
                    "description": "",
                    "default": "90210"
                },
                {
                    "name": "radius",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "Can you update the info for PTL with info1=\"123\", info2=\"456\", info3=\"789\"?",
        "model_answer": "requests.get(\"https://ptl.p.rapidapi.com/update\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ptl.p.rapidapi.com\"}, params={\"info3\": \"789\", \"info1\": \"123\", \"info2\": \"456\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "receive user",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ptl.p.rapidapi.com/update'\nquerystring = {\"info3\": \"\", \"info1\": \"\", \"info2\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ptl.p.rapidapi.com/update\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "info3",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "info1",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "info2",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ptl.p.rapidapi.com/update\"\nquerystring = {\"info3\": \"333\", \"info1\": \"111\", \"info2\": \"222\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ptl.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PTL",
            "api_arguments_original": [
                {
                    "name": "info3",
                    "type": "STRING",
                    "description": "",
                    "default": "333"
                },
                {
                    "name": "info1",
                    "type": "STRING",
                    "description": "",
                    "default": "111"
                },
                {
                    "name": "info2",
                    "type": "STRING",
                    "description": "",
                    "default": "222"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the live weather data for New York City?",
        "model_answer": "requests.get(\"https://testapi460.p.rapidapi.com/mobilitu/public\")",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "as",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://testapi460.p.rapidapi.com/mobilitu/public'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://testapi460.p.rapidapi.com/mobilitu/public\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://testapi460.p.rapidapi.com/mobilitu/public\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"testapi460.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "testapi_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Could you check if the ASIN B07NM7HFHF is available on Amazon in the UK marketplace?",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/uk/B07NM7HFHF\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Date calculator",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://azaprime.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://azaprime.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://azaprime.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"azaprime.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Azaprime",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve information about the Throne of Glass character with the ID \"Aelin\".",
        "model_answer": "requests.get(\"https://throne-of-glass-api-2.p.rapidapi.com/api/characters/Aelin\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"throne-of-glass-api-2.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "API for Throne of Glass Characters",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://throne-of-glass-api-2.p.rapidapi.com/api/characters/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://throne-of-glass-api-2.p.rapidapi.com/api/characters/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://throne-of-glass-api-2.p.rapidapi.com/api/characters/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"throne-of-glass-api-2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Throne of Glass API 2",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to analyze the social media sentiment for Bitcoin using the Crowdsense API.",
        "model_answer": "requests.get(\"https://crowdsense1.p.rapidapi.com/api/socialnews/getpredictivespikesbycoinname\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crowdsense1.p.rapidapi.com\"}, params={\"coinName\": \"Bitcoin\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "The most comprehensive real-time alpha-generating data feed API for cryptocurrencies, that analyzes social media sentiment, weighted sentiment, mentions, reach, top coins, spikes, influencer posts, and other chatter updates. Based on 100,000,000s of feeds per day from billions of unique sources across Twitter, Telegram, and Reddit for 1000+ cryptocurrencies. Start now for free...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crowdsense1.p.rapidapi.com/api/socialnews/getpredictivespikesbycoinname'\nquerystring = {\"coinName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crowdsense1.p.rapidapi.com/api/socialnews/getpredictivespikesbycoinname\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "coinname",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crowdsense1.p.rapidapi.com/api/socialnews/getpredictivespikesbycoinname\"\nquerystring = {\"coinName\": \"Bitcoin\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crowdsense1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crowdsense",
            "api_arguments_original": [
                {
                    "name": "coinName",
                    "type": "STRING",
                    "description": "",
                    "default": "Bitcoin"
                }
            ]
        }
    },
    {
        "query": "How can I retrieve the latest job stories from YC Hacker News Official API?",
        "model_answer": "requests.get(\"https://yc-hacker-news-official.p.rapidapi.com/jobstories.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"yc-hacker-news-official.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "The official hacker news API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yc-hacker-news-official.p.rapidapi.com/jobstories.json'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yc-hacker-news-official.p.rapidapi.com/jobstories.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yc-hacker-news-official.p.rapidapi.com/jobstories.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yc-hacker-news-official.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YC Hacker news official",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide a map of New York City?",
        "model_answer": "requests.get(\"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/0/0/0\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"}, params={\"x\": \"40.7128\", \"y\": \"-74.0060\", \"z\": \"10\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Mapilion provides you with vector and raster map tiles at scale. Based on OpenStreetMap and OpenMapTiles.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/0/0/0'\nquerystring = {\"x\": \"\", \"y\": \"\", \"z\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/0/0/0\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "x",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "y",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "z",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mapilion-vector-and-raster-map-tiles.p.rapidapi.com/rapid-api/vector/0/0/0\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mapilion-vector-and-raster-map-tiles.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mapilion - Vector and Raster Map Tiles",
            "api_arguments_original": [
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "z",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Please convert the URL \"https://www.example.com\" to a QR code.",
        "model_answer": "requests.get(\"https://qr-code-generator77.p.rapidapi.com/api/qr-code\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qr-code-generator77.p.rapidapi.com\"}, params={\"url\": \"https://www.example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Conver string to qr",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-code-generator77.p.rapidapi.com/api/qr-code'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-code-generator77.p.rapidapi.com/api/qr-code\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-code-generator77.p.rapidapi.com/api/qr-code\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-generator77.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Qr Code Generator_v5",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me information about airports in London?",
        "model_answer": "requests.get(\"https://airports-by-api-ninjas.p.rapidapi.com/v1/airports\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"airports-by-api-ninjas.p.rapidapi.com\"}, params={\"region\": \"London\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "Access vital data for 30,000 different airports worldwide. See more info at https://api-ninjas.com/api/airports.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://airports-by-api-ninjas.p.rapidapi.com/v1/airports'\nquerystring = {\"offset\": \"\", \"max_elevation\": \"\", \"region\": \"\", \"min_elevation\": \"\", \"city\": \"\", \"country\": \"\", \"timezone\": \"\", \"name\": \"\", \"icao\": \"\", \"iata\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://airports-by-api-ninjas.p.rapidapi.com/v1/airports\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "offset",
                    "description": "number of results to offset for pagination.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_elevation",
                    "description": "maximum airport elevation in feet.",
                    "type": "NUMBER"
                },
                {
                    "name": "region",
                    "description": "administrative region such as state or province within a country (e.g. California)",
                    "type": "STRING"
                },
                {
                    "name": "min_elevation",
                    "description": "minimum airport elevation in feet.",
                    "type": "NUMBER"
                },
                {
                    "name": "city",
                    "description": "airport city (e.g. London)",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "airport country. Must be 2-character ISO-2 country code (e.g. GB)",
                    "type": "STRING"
                },
                {
                    "name": "timezone",
                    "description": "airport timezone (e.g. Europe/London)",
                    "type": "STRING"
                },
                {
                    "name": "name",
                    "description": "airport name. This parameter supports partial matching (e.g. Heathrow will match London Heathrow Airport)",
                    "type": "STRING"
                },
                {
                    "name": "icao",
                    "description": "International Civil Aviation Organization (ICAO) 4-character airport code.",
                    "type": "STRING"
                },
                {
                    "name": "iata",
                    "description": "International Air Transport Association (IATA) 3-character airport code.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://airports-by-api-ninjas.p.rapidapi.com/v1/airports\"\nquerystring = {\"offset\": \"\", \"max_elevation\": \"\", \"region\": \"\", \"min_elevation\": \"\", \"city\": \"\", \"country\": \"\", \"timezone\": \"\", \"name\": \"London Heathrow\", \"icao\": \"\", \"iata\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"airports-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Airports by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "number of results to offset for pagination.",
                    "default": ""
                },
                {
                    "name": "max_elevation",
                    "type": "NUMBER",
                    "description": "maximum airport elevation in feet.",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "administrative region such as state or province within a country (e.g. California)",
                    "default": ""
                },
                {
                    "name": "min_elevation",
                    "type": "NUMBER",
                    "description": "minimum airport elevation in feet.",
                    "default": ""
                },
                {
                    "name": "city",
                    "type": "STRING",
                    "description": "airport city (e.g. London)",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "airport country. Must be 2-character ISO-2 country code (e.g. GB)",
                    "default": ""
                },
                {
                    "name": "timezone",
                    "type": "STRING",
                    "description": "airport timezone (e.g. Europe/London)\n\n",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "airport name. This parameter supports partial matching (e.g. Heathrow will match London Heathrow Airport)",
                    "default": "London Heathrow"
                },
                {
                    "name": "icao",
                    "type": "STRING",
                    "description": "International Civil Aviation Organization (ICAO) 4-character airport code.",
                    "default": ""
                },
                {
                    "name": "iata",
                    "type": "STRING",
                    "description": "International Air Transport Association (IATA) 3-character airport code.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://email-verifier15.p.rapidapi.com/verify-email\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-verifier15.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "A simple API to verify email addresses in making sure they are valid and real, for ensuring you are sending emails to actual people!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-verifier15.p.rapidapi.com/verify-email'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-verifier15.p.rapidapi.com/verify-email\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-verifier15.p.rapidapi.com/verify-email\"\nquerystring = {\"email\": \"abc1@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-verifier15.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Verifier",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "abc1@gmail.com"
                }
            ]
        }
    },
    {
        "query": "Can you please check the meaning of the word \"dog\" in the English language?",
        "model_answer": "requests.get(url=\"https://lexicala1.p.rapidapi.com/search-entries\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"lexicala1.p.rapidapi.com\"}, params={\"text\": \"dog\", \"language\": \"en\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Lexicala API is a REST interface offering access to dictionary and lexical data from our monolingual, bilingual, multilingual and learner\u2019s dictionaries in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lexicala1.p.rapidapi.com/search-entries'\nquerystring = {\"sample\": \"\", \"source\": \"\", \"language\": \"\", \"analyzed\": \"\", \"subcategorization\": \"\", \"polysemous\": \"\", \"pos\": \"\", \"gender\": \"\", \"monosemous\": \"\", \"morph\": \"\", \"text\": \"\", \"number\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lexicala1.p.rapidapi.com/search-entries\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sample",
                    "description": "Number of randomly-sampled results to return",
                    "type": "NUMBER"
                },
                {
                    "name": "source",
                    "description": "The resource to search within. The default value is 'global', i.e. the Global series",
                    "type": "STRING"
                },
                {
                    "name": "language",
                    "description": "The language code of the entry\u2019s language. For an extensive list of language codes, see GET /languages",
                    "type": "STRING"
                },
                {
                    "name": "analyzed",
                    "description": "Whether to search using the language analyzer or to get exact matches only. The default value is 'false'",
                    "type": "BOOLEAN"
                },
                {
                    "name": "subcategorization",
                    "description": "The subcategorization (e.g. countable, transitive, \u2026) to search for",
                    "type": "STRING"
                },
                {
                    "name": "polysemous",
                    "description": "Whether to only return polysemous entries",
                    "type": "BOOLEAN"
                },
                {
                    "name": "pos",
                    "description": "The part of speech (POS) to search for",
                    "type": "STRING"
                },
                {
                    "name": "gender",
                    "description": "The grammatical gender to search for",
                    "type": "STRING"
                },
                {
                    "name": "monosemous",
                    "description": "Whether to only return monosemous entries",
                    "type": "BOOLEAN"
                },
                {
                    "name": "morph",
                    "description": "Whether to search in headword inflections if exist. The default value is 'false'",
                    "type": "BOOLEAN"
                },
                {
                    "name": "text",
                    "description": "The headword text to search for",
                    "type": "STRING"
                },
                {
                    "name": "number",
                    "description": "The grammatical number to search for",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "Page number of results to return (1-indexed). The default value is 1",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lexicala1.p.rapidapi.com/search-entries\"\nquerystring = {\"sample\": \"\", \"source\": \"\", \"language\": \"\", \"analyzed\": \"\", \"subcategorization\": \"\", \"polysemous\": \"\", \"pos\": \"\", \"gender\": \"\", \"monosemous\": \"\", \"morph\": \"\", \"text\": \"\", \"number\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lexicala1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lexicala",
            "api_arguments_original": [
                {
                    "name": "sample",
                    "type": "NUMBER",
                    "description": "Number of randomly-sampled results to return",
                    "default": ""
                },
                {
                    "name": "source",
                    "type": "STRING",
                    "description": "The resource to search within. The default value is 'global', i.e. the Global series",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The language code of the entry\u2019s language. For an extensive list of language codes, see GET /languages",
                    "default": ""
                },
                {
                    "name": "analyzed",
                    "type": "BOOLEAN",
                    "description": "Whether to search using the language analyzer or to get exact matches only. The default value is 'false'",
                    "default": ""
                },
                {
                    "name": "subcategorization",
                    "type": "STRING",
                    "description": "The subcategorization (e.g. countable, transitive, \u2026) to search for",
                    "default": ""
                },
                {
                    "name": "polysemous",
                    "type": "BOOLEAN",
                    "description": "Whether to only return polysemous entries",
                    "default": ""
                },
                {
                    "name": "pos",
                    "type": "STRING",
                    "description": "The part of speech (POS) to search for",
                    "default": ""
                },
                {
                    "name": "gender",
                    "type": "STRING",
                    "description": "The grammatical gender to search for",
                    "default": ""
                },
                {
                    "name": "monosemous",
                    "type": "BOOLEAN",
                    "description": "Whether to only return monosemous entries",
                    "default": ""
                },
                {
                    "name": "morph",
                    "type": "BOOLEAN",
                    "description": "Whether to search in headword inflections if exist. The default value is 'false'",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "The headword text to search for",
                    "default": ""
                },
                {
                    "name": "number",
                    "type": "STRING",
                    "description": "The grammatical number to search for",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "Page number of results to return (1-indexed). The default value is 1",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me get the details of a commercial property for rent with ID 123456 from the UK Real Estate Rightmove API?",
        "model_answer": "requests.get(\"https://uk-real-estate-rightmove.p.rapidapi.com/commercial/property-to-rent/detail\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"uk-real-estate-rightmove.p.rapidapi.com\"}, params={\"id\": \"123456\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Real-time data, unofficial API rightmove co uk\n\nRightmove is a leading UK Real Estate website in the United Kingdom. With the aim of providing detailed and reliable information about various types of properties, Rightmove has become an important destination for individuals looking to buy, sell, or rent property in the UK",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uk-real-estate-rightmove.p.rapidapi.com/commercial/property-to-rent/detail'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uk-real-estate-rightmove.p.rapidapi.com/commercial/property-to-rent/detail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "id from commercial/property-to-rent endpoint",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uk-real-estate-rightmove.p.rapidapi.com/commercial/property-to-rent/detail\"\nquerystring = {\"id\": \"127696127\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uk-real-estate-rightmove.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "UK Real Estate Rightmove",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "id from commercial/property-to-rent endpoint ",
                    "default": "127696127"
                }
            ]
        }
    },
    {
        "query": "requests.get(\"https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}\", headers={\"X-RapidAPI-Key\"",
        "model_answer": "requests.get(\"https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"throne-of-glass-api3.p.rapidapi.com\"}, params={\"id\": \"1\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Throne of Glass API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://throne-of-glass-api3.p.rapidapi.com/api/characters/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"throne-of-glass-api3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Throne of Glass API_v2",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to generate a strong password with uppercase letters, lowercase letters, and numbers.",
        "model_answer": "requests.get(\"https://password-generator18.p.rapidapi.com/generate-password\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"password-generator18.p.rapidapi.com\"}, params={\"excludeSimilarCharacters\": \"false\", \"strict\": \"false\", \"uppercase\": \"true\", \"exclude\": \"\", \"symbols\": \"false\", \"lowercase\": \"true\", \"length\": \"15\", \"numbers\": \"true\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Generate strong, unique, and customizable passwords with our Password Generator API. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://password-generator18.p.rapidapi.com/generate-password'\nquerystring = {\"excludeSimilarCharacters\": \"\", \"strict\": \"\", \"uppercase\": \"\", \"exclude\": \"\", \"symbols\": \"\", \"lowercase\": \"\", \"length\": \"\", \"numbers\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://password-generator18.p.rapidapi.com/generate-password\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "excludesimilarcharacters",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "strict",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "uppercase",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "exclude",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "symbols",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "lowercase",
                    "description": "",
                    "type": "BOOLEAN"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "numbers",
                    "description": "",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://password-generator18.p.rapidapi.com/generate-password\"\nquerystring = {\"excludeSimilarCharacters\": \"false\", \"strict\": \"false\", \"uppercase\": \"true\", \"exclude\": \"1\", \"symbols\": \"false\", \"lowercase\": \"true\", \"length\": \"15\", \"numbers\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"password-generator18.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Password Generator",
            "api_arguments_original": [
                {
                    "name": "excludeSimilarCharacters",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "false"
                },
                {
                    "name": "strict",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "false"
                },
                {
                    "name": "uppercase",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                },
                {
                    "name": "exclude",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "symbols",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "false"
                },
                {
                    "name": "lowercase",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                },
                {
                    "name": "length",
                    "type": "NUMBER",
                    "description": "",
                    "default": "15"
                },
                {
                    "name": "numbers",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                }
            ]
        }
    },
    {
        "query": "Can you help me find synonyms for the word \"happy\" in English?",
        "model_answer": "requests.get(\"https://synonyms-words.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"synonyms-words.p.rapidapi.com\"}, params={\"language\":\"EN\", \"word\":\"happy\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "In this api you can display synonyms for hundreds of miles of words in English, Spanish, French and Portuguese languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://synonyms-words.p.rapidapi.com/'\nquerystring = {\"language\": \"\", \"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://synonyms-words.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "language",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "word",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://synonyms-words.p.rapidapi.com/\"\nquerystring = {\"language\": \"EN\", \"word\": \"car\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"synonyms-words.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Synonyms Words",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "EN"
                },
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "car"
                }
            ]
        }
    },
    {
        "query": "What is the mention count of my brand for the past 30 days?",
        "model_answer": "requests.get(\"https://track-the-mentions-and-conversations-about-your-business.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"track-the-mentions-and-conversations-about-your-business.p.rapidapi.com\"}, params={\"query\": \"my brand\", \"page\": 1, \"period\": 30})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Find your brand, competitor, or any other query mentions across the web daily, including websites, Twitter, Reddit, forums, blogs, and other",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://track-the-mentions-and-conversations-about-your-business.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"page\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://track-the-mentions-and-conversations-about-your-business.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://track-the-mentions-and-conversations-about-your-business.p.rapidapi.com/\"\nquerystring = {\"page\": \"1\", \"period\": \"14\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"track-the-mentions-and-conversations-about-your-business.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Track the mentions and conversations about your business",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "period",
                    "type": "NUMBER",
                    "description": "",
                    "default": "14"
                }
            ]
        }
    },
    {
        "query": "Please calculate the daily caloric needs for a sedentary person with a maintenance body composition goal and vegan dietary preferences.",
        "model_answer": "requests.get(\"https://health-calculator-api.p.rapidapi.com/mnd\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"health-calculator-api.p.rapidapi.com\"}, params={\"activity_level\": \"sedentary\", \"body_composition_goal\": \"maintenance\", \"dietary_preferences\": \"vegan\"})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "Welcome to the Health Calculator API. This API provides endpoints for calculating Body Mass Index (BMI), Body Fat Percentage, Basal Metabolic Rate (BMR), Daily Caloric Needs (DCN), Daily Water Intake (DWI), Target Heart Rate (THR), Macronutrients Distribution and Ideal Body Weight (IBW). With this API, you can easily integrate these calculations into your applications, websites, or any other projects.\n\nError Handling\n\nThe API uses standard HTTP status codes to indicate the success or failure ...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://health-calculator-api.p.rapidapi.com/mnd'\nquerystring = {\"activity_level\": \"\", \"body_composition_goal\": \"\", \"dietary_preferences\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://health-calculator-api.p.rapidapi.com/mnd\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "activity_level",
                    "description": "The activity_level parameter accepts the following values:\n\n**sedentary** - Little to no exercise.\n**moderately_active** - Moderate exercise/sports 3-5 days/week.\n**very_active** - Hard exercise/sports 6-7 days/week.",
                    "type": "STRING"
                },
                {
                    "name": "body_composition_goal",
                    "description": "The body_composition_goal parameter accepts the following values:\n\n**weight_loss** - Goal of losing weight.\n**maintenance** - Goal of maintaining current weight.\n**muscle_gain** - Goal of gaining muscle.",
                    "type": "STRING"
                },
                {
                    "name": "dietary_preferences",
                    "description": "The dietary_preferences parameter allows users to specify their dietary preferences. It can be any string value representing the individual's dietary choices or restrictions, such as \\\"**vegetarian**,\\\" \\\"**vegan**,\\\" \\\"**pescatarian**,\\\" or \\\"**gluten-free**.\\\"",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://health-calculator-api.p.rapidapi.com/mnd\"\nquerystring = {\"activity_level\": \"sedentary\", \"body_composition_goal\": \"maintenance\", \"dietary_preferences\": \"vegan\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"health-calculator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Health Calculator API",
            "api_arguments_original": [
                {
                    "name": "activity_level",
                    "type": "STRING",
                    "description": "The activity_level parameter accepts the following values:\n\n**sedentary** - Little to no exercise.\n**moderately_active** - Moderate exercise/sports 3-5 days/week.\n**very_active** - Hard exercise/sports 6-7 days/week.",
                    "default": "sedentary"
                },
                {
                    "name": "body_composition_goal",
                    "type": "STRING",
                    "description": "The body_composition_goal parameter accepts the following values:\n\n**weight_loss** - Goal of losing weight.\n**maintenance** - Goal of maintaining current weight.\n**muscle_gain** - Goal of gaining muscle.\n",
                    "default": "maintenance"
                },
                {
                    "name": "dietary_preferences",
                    "type": "STRING",
                    "description": "The dietary_preferences parameter allows users to specify their dietary preferences. It can be any string value representing the individual's dietary choices or restrictions, such as \\\"**vegetarian**,\\\" \\\"**vegan**,\\\" \\\"**pescatarian**,\\\" or \\\"**gluten-free**.\\\"",
                    "default": "vegan"
                }
            ]
        }
    },
    {
        "query": "Can you download the game from this URL",
        "model_answer": "requests.get(\"https://game3.p.rapidapi.comhttp://www.mediafire.com/file/9ezvd76dd9dxgab/game.apk/file\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"game3.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "download this g develop game ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://game3.p.rapidapi.comhttp://www.mediafire.com/file/9ezvd76dd9dxgab/game.apk/file'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://game3.p.rapidapi.comhttp://www.mediafire.com/file/9ezvd76dd9dxgab/game.apk/file\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://game3.p.rapidapi.comhttp://www.mediafire.com/file/9ezvd76dd9dxgab/game.apk/file\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"game3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "game",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the historical channel views and subscribers for the YouTube channel with the channelId UCj1VqrHhDte54oLgPG4xpuQ.",
        "model_answer": "requests.get(\"https://historical-youtube-data.p.rapidapi.com/hytapi/channel\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"historical-youtube-data.p.rapidapi.com\"}, params={\"channelId\": \"UCj1VqrHhDte54oLgPG4xpuQ\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Historical channel views and subscribers for YouTube channels.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://historical-youtube-data.p.rapidapi.com/hytapi/channel'\nquerystring = {\"channelId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://historical-youtube-data.p.rapidapi.com/hytapi/channel\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "channelid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://historical-youtube-data.p.rapidapi.com/hytapi/channel\"\nquerystring = {\"channelId\": \"UCj1VqrHhDte54oLgPG4xpuQ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"historical-youtube-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Historical YouTube Data",
            "api_arguments_original": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "",
                    "default": "UCj1VqrHhDte54oLgPG4xpuQ"
                }
            ]
        }
    },
    {
        "query": "Can you give me the Experian credit score and report for my application ID \"12345\"?",
        "model_answer": "response = requests.get(\"https://experian-credit-report-score.p.rapidapi.com/GetArchiveReport\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"experian-credit-report-score.p.rapidapi.com\"}, params={\"AppId\": \"12345\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Delivers a consumer\u2019s standard Experian credit score and report.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://experian-credit-report-score.p.rapidapi.com/GetArchiveReport'\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://experian-credit-report-score.p.rapidapi.com/GetArchiveReport\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "appid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://experian-credit-report-score.p.rapidapi.com/GetArchiveReport\"\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"experian-credit-report-score.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Experian Credit Report Score",
            "api_arguments_original": [
                {
                    "name": "AppId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to translate the sentence \"Hello, how are you?\" from English to French.",
        "model_answer": "requests.get(\"https://translate-plus.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"translate-plus.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Dynamically Translate between languages with the Translate Plus API. Our API is much cheaper & faster than Google Translate and other translation providers! Get Started Free!\nIf you are using a very high volume and with our new service, you can translate more efficiently and cost-effectively on https://translateplus.io",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translate-plus.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translate-plus.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translate-plus.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translate-plus.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translate Plus",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to send a PUT request to the API \"Putreq\" with the given request parameters",
        "model_answer": "requests.put(\"https://putreq.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"putreq.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "put req",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://putreq.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://putreq.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://putreq.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"putreq.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Putreq",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the latest stock price for Microsoft and Apple from the NSE index.",
        "model_answer": "requests.get(\"https://latest-stock-price.p.rapidapi.com/price\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"latest-stock-price.p.rapidapi.com\"}, params={\"Indices\": \"NSE\", \"Identifier\": \"MSFT,AAPL\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Latest Stock Price from NSE",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://latest-stock-price.p.rapidapi.com/price'\nquerystring = {\"Indices\": \"\", \"Identifier\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://latest-stock-price.p.rapidapi.com/price\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "indices",
                    "description": "Define Stock Indices",
                    "type": "ENUM"
                },
                {
                    "name": "identifier",
                    "description": "Define Stock Identifier\nSupports multiple comma separated Identifier",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://latest-stock-price.p.rapidapi.com/price\"\nquerystring = {\"Identifier\": \"\", \"Indices\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"latest-stock-price.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Latest Stock Price",
            "api_arguments_original": [
                {
                    "name": "Indices",
                    "type": "ENUM",
                    "description": "Define Stock Indices",
                    "default": ""
                },
                {
                    "name": "Identifier",
                    "type": "STRING",
                    "description": "Define Stock Identifier\nSupports multiple comma separated Identifier",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you get the cryptocurrency trades data for BTC on COINBASE exchange from October 11th, 2022 at 10:00:00 UTC to October 15th, 2022 at 11:00:00 UTC sorted in ascending order with a limit of 100 records?",
        "model_answer": "response = requests.get(\"https://cryptocurrency-financial-data.p.rapidapi.com/trades\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cryptocurrency-financial-data.p.rapidapi.com\"}, params={\"start\": \"2022-10-11T10:00:00\", \"end\": \"2022-10-15T11:00:00\", \"sort\": \"asc\", \"base\": \"USDT\", \"market_venue\": \"COINBASE\", \"limit\": \"100\", \"symbol\": \"BTC\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Cryptocurrency financial data API for major exchanges. Candlesticks (OHLCV, VWAP, and Trade Count), Trades (tick-level). Spot and futures markets. Robust data catalog and documentation.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cryptocurrency-financial-data.p.rapidapi.com/trades'\nquerystring = {\"start\": \"\", \"base\": \"\", \"market_venue\": \"\", \"symbol\": \"\", \"end\": \"\", \"sort\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cryptocurrency-financial-data.p.rapidapi.com/trades\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "start",
                    "description": "Start of the requested time period, *%Y-%m-%dT%H:%M:%S* UTC timezone",
                    "type": "STRING"
                },
                {
                    "name": "base",
                    "description": "The second or quote currency in the traded pair",
                    "type": "STRING"
                },
                {
                    "name": "market_venue",
                    "description": "The name of an exchange or a venue",
                    "type": "STRING"
                },
                {
                    "name": "symbol",
                    "description": "The first or base currency in the traded pair",
                    "type": "STRING"
                },
                {
                    "name": "end",
                    "description": "End of the requested time period, *%Y-%m-%dT%H:%M:%S* UTC timezone",
                    "type": "STRING"
                },
                {
                    "name": "sort",
                    "description": "The ordering of results: `asc` (from earliest to latest), `desc` (from latest to earliest)",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Maximum number of records to return, max `10000`",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cryptocurrency-financial-data.p.rapidapi.com/trades\"\nquerystring = {\"start\": \"2022-10-11T10:00:00\", \"end\": \"2022-10-15T11:00:00\", \"sort\": \"asc\", \"base\": \"USDT\", \"market_venue\": \"COINBASE\", \"limit\": \"100\", \"symbol\": \"BTC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cryptocurrency-financial-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cryptocurrency Financial Data",
            "api_arguments_original": [
                {
                    "name": "start",
                    "type": "STRING",
                    "description": "Start of the requested time period, *%Y-%m-%dT%H:%M:%S* UTC timezone",
                    "default": "2022-10-11T10:00:00"
                },
                {
                    "name": "base",
                    "type": "STRING",
                    "description": "The second or quote currency in the traded pair",
                    "default": "USDT"
                },
                {
                    "name": "market_venue",
                    "type": "STRING",
                    "description": "The name of an exchange or a venue",
                    "default": "COINBASE"
                },
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "The first or base currency in the traded pair",
                    "default": "BTC"
                },
                {
                    "name": "end",
                    "type": "STRING",
                    "description": "End of the requested time period, *%Y-%m-%dT%H:%M:%S* UTC timezone",
                    "default": "2022-10-15T11:00:00"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "The ordering of results: `asc` (from earliest to latest), `desc` (from latest to earliest)",
                    "default": "asc"
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Maximum number of records to return, max `10000`",
                    "default": "100"
                }
            ]
        }
    },
    {
        "query": "I want to get the user information for the username \"therock\" on TikTok.",
        "model_answer": "requests.get(\"https://tiktok-bulletproof.p.rapidapi.com/user-info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"tiktok-bulletproof.p.rapidapi.com\"}, params={\"username\": \"therock\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "The stable Tiktok API. I intend to keep it simple in terms of amount of endpoints, and make sure it is operational 99.9% of time instead. If you don't like the stability - you can get a refund, no questions asked. Bigger custom plans and crypto payments are available on request  - contact https://t.me/neot55",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-bulletproof.p.rapidapi.com/user-info'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-bulletproof.p.rapidapi.com/user-info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-bulletproof.p.rapidapi.com/user-info\"\nquerystring = {\"username\": \"therock\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-bulletproof.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok Bulletproof",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "",
                    "default": "therock"
                }
            ]
        }
    },
    {
        "query": "I want to get information about the webtoon with title number 500123 in English language.",
        "model_answer": "requests.get(\"https://webtoon.p.rapidapi.com/canvas/titles/get-info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"webtoon.p.rapidapi.com\"}, params={\"titleNo\": \"500123\", \"language\": \"en\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "This API provides the largest webcomics data in the world to create a comic site/application such as webtoons.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webtoon.p.rapidapi.com/canvas/titles/get-info'\nquerystring = {\"titleNo\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webtoon.p.rapidapi.com/canvas/titles/get-info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "titleno",
                    "description": "The value of titleNo field returned in .../canvas/titles/list or .../canvas/search or .../canvas/home endpoint",
                    "type": "NUMBER"
                },
                {
                    "name": "language",
                    "description": "One of the following : en|zh-hant|de|fr|es|th|id",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webtoon.p.rapidapi.com/canvas/titles/get-info\"\nquerystring = {\"titleNo\": \"300138\", \"language\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webtoon.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webtoon",
            "api_arguments_original": [
                {
                    "name": "titleNo",
                    "type": "NUMBER",
                    "description": "The value of titleNo field returned in .../canvas/titles/list or .../canvas/search or .../canvas/home endpoint",
                    "default": "300138"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "One of the following : en|zh-hant|de|fr|es|th|id",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Can you help me translate the sentence \"Hello, how are you?\" into French?",
        "model_answer": "requests.get(\"https://translate287.p.rapidapi.com/detect/accurate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"translate287.p.rapidapi.com\"}, params={\"text\": \"Hello, how are you?\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Easy and reliable Machine Translation  and Language Detection",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translate287.p.rapidapi.com/detect/accurate'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translate287.p.rapidapi.com/detect/accurate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translate287.p.rapidapi.com/detect/accurate\"\nquerystring = {\"text\": \"this is accurate and it can improve if it's longer\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translate287.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translate_v3",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "this is accurate and it can improve if it's longer"
                }
            ]
        }
    },
    {
        "query": "Can you please fetch the TikTok feeds for user \"therock\"?",
        "model_answer": "requests.get(\"https://tiktok28.p.rapidapi.com/feeds/therock\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tiktok28.p.rapidapi.com\"}, params={\"schemaType\": \"1\", \"secUid\": \"MS4wLjABAAAAM3R2BtjzVT-uAtstkl2iugMzC6AtnpkojJbjiOdDDrdsTiTR75-8lyWJCY5VvDrZ\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Highly maintain and accurate T-tok API to  fetch profiles or feeds in bulk. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok28.p.rapidapi.com/feeds/therock'\nquerystring = {\"schemaType\": \"\", \"username\": \"\", \"secUid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok28.p.rapidapi.com/feeds/therock\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "schematype",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "username",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "secuid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok28.p.rapidapi.com/feeds/therock\"\nquerystring = {\"schemaType\": \"1\", \"secUid\": \"MS4wLjABAAAAM3R2BtjzVT-uAtstkl2iugMzC6AtnpkojJbjiOdDDrdsTiTR75-8lyWJCY5VvDrZ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok28.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tiktok_v2",
            "api_arguments_original": [
                {
                    "name": "schemaType",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "default": "therock"
                },
                {
                    "name": "secUid",
                    "type": "STRING",
                    "description": "",
                    "default": "MS4wLjABAAAAM3R2BtjzVT-uAtstkl2iugMzC6AtnpkojJbjiOdDDrdsTiTR75-8lyWJCY5VvDrZ"
                }
            ]
        }
    },
    {
        "query": "I want to check if the IP address 192.168.0.1 is valid using the Itcooking.eu - IP Geolocation API.",
        "model_answer": "requests.get(\"https://itcooking-eu-ip-geolocation1.p.rapidapi.com/geoip/v1/lite/GetIpInfoLite\",\n              headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"itcooking-eu-ip-geolocation1.p.rapidapi.com\"},\n              params={\"ip\": \"192.168.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "IP Geolocation REST API by Itcooking.eu. Fast and easy way to get (lookup) geolocation data to IPv4 and IPv6 address.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://itcooking-eu-ip-geolocation1.p.rapidapi.com/geoip/v1/lite/GetIpInfoLite'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://itcooking-eu-ip-geolocation1.p.rapidapi.com/geoip/v1/lite/GetIpInfoLite\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://itcooking-eu-ip-geolocation1.p.rapidapi.com/geoip/v1/lite/GetIpInfoLite\"\nquerystring = {\"ip\": \"52.30.208.221\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"itcooking-eu-ip-geolocation1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Itcooking.eu - IP Geolocation",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "52.30.208.221"
                }
            ]
        }
    },
    {
        "query": "I want to download a Twitter video using the provided API.",
        "model_answer": "requests.get(\"https://twitter-video-downloader-mp4.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"twitter-video-downloader-mp4.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Twitter video downloader in mp4  is Iframe & button API ( https://mp3downy.com/twitter-video-downloader-API )  is now providing you the best ever fastest Downloader API(Application Programming Interface) all of free. We provide you the best health status of 99.99% productive uptime and we assure the best speeds all over the time with all kinds of video types supported and you can use it in the ease with customization provision inbuilt.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitter-video-downloader-mp4.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitter-video-downloader-mp4.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitter-video-downloader-mp4.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitter-video-downloader-mp4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Twitter video downloader mp4",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if example@example.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"check-disposable-email.p.rapidapi.com\"}, params={\"email\" \"example@example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An easy tool to test proxy whether it's online, anonymous, is it HTTP, HTTPS or both, to get proxy performance timings.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://proxy-checker.p.rapidapi.com/api/user-request-management/v1/user-request/6416ab3d3c01efbe45e97675'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://proxy-checker.p.rapidapi.com/api/user-request-management/v1/user-request/6416ab3d3c01efbe45e97675\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "**User Request ID** - received from the response of sending a proxy for checking.",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://proxy-checker.p.rapidapi.com/api/user-request-management/v1/user-request/6416ab3d3c01efbe45e97675\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"proxy-checker.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Proxy Checker",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "**User Request ID** - received from the response of sending a proxy for checking.",
                    "default": "6416ab3d3c01efbe45e97675"
                }
            ]
        }
    },
    {
        "query": "I want to get information about the song \"Bad Guy\" by Billie Eilish using the Miza API.",
        "model_answer": "requests.get(\"https://miza.p.rapidapi.com/d/Bad_Guy\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"miza.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "A multipurpose API that includes many image, video, and audio operations. Please see https://ko-fi.com/mizabot if you'd like premium features on the Discord bot itself!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://miza.p.rapidapi.com/d/ABCDEF'\nquerystring = {\"path\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://miza.p.rapidapi.com/d/ABCDEF\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "path",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://miza.p.rapidapi.com/d/ABCDEF\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"miza.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Miza",
            "api_arguments_original": [
                {
                    "name": "path",
                    "type": "string",
                    "description": "",
                    "default": "ABCDEF"
                }
            ]
        }
    },
    {
        "query": "I want to get the current weather for New York City.",
        "model_answer": "requests.get(\"https://weatherapi.com/v1/current.json\", params={\"key\" \"API_KEY\", \"q\" \"New York City\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Personal Use Key",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://midknightt.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://midknightt.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://midknightt.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"midknightt.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Midknightt",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if example@example.com is a valid email using the Check Disposable Email API?",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@example.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Provides access to amazon product details, customer reviews, product images, videos, and more, with support for all Amazon websites across the globe. Whether you're a developer building an e-commerce app or a business looking to enhance your customer experience, our API has got you covered. Try it today and start integrating Amazon product data into your application or website.\n\nCheckout our channel of telegram: https://t.me/+EkKIVZiiDQthMmYx",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazon-web-scraping-api.p.rapidapi.com/websites'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazon-web-scraping-api.p.rapidapi.com/websites\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazon-web-scraping-api.p.rapidapi.com/websites\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazon-web-scraping-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Amazon Web Scraping API",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the schedule for the lab.",
        "model_answer": "response = requests.get(\"https://lab2.p.rapidapi.comhttp://labs/lab\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"lab2.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "lab schedule",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lab2.p.rapidapi.comhttp://labs/lab'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lab2.p.rapidapi.comhttp://labs/lab\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lab2.p.rapidapi.comhttp://labs/lab\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lab2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "lab",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to test the opta API.",
        "model_answer": "requests.get(\"https://test-opta.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test-opta.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "opta",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test-opta.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test-opta.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test-opta.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test-opta.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test opta",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check the gender and nationality for the name \"John Doe\"?",
        "model_answer": "requests.get(\"https://genderize-nationalize.p.rapidapi.com/genderize/John%20Doe\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"genderize-nationalize.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get name gender and nationality.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://genderize-nationalize.p.rapidapi.com/genderize/{name}'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://genderize-nationalize.p.rapidapi.com/genderize/{name}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://genderize-nationalize.p.rapidapi.com/genderize/{name}\"\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"genderize-nationalize.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Genderize  - Nationalize",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the media links for a specific watch with watchId 12345.",
        "model_answer": "response = requests.get(\"https://watch-database1.p.rapidapi.com/watch-media-links-by-id/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"watch-database1.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Our Watch Models API is a comprehensive and accurate data source of more than 20,000 watch models. This API allows users to retrieve detailed information about each model, including brand, model name, release date, features, and more. This data can be easily integrated into a wide range of use cases, such as e-commerce, watch retailers, watch collectors, research and development and watch repair.  Our API is constantly updated and maintained to ensure that the data provided is accurate and co...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://watch-database1.p.rapidapi.com/watch-media-links-by-id/{watchId}'\nquerystring = {\"watchId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://watch-database1.p.rapidapi.com/watch-media-links-by-id/{watchId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "watchid",
                    "description": "",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://watch-database1.p.rapidapi.com/watch-media-links-by-id/{watchId}\"\nquerystring = {\"watchId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"watch-database1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Watch Database",
            "api_arguments_original": [
                {
                    "name": "watchId",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with all the data for the anime with mal_id 5114.",
        "model_answer": "requests.get(\"https://animes5.p.rapidapi.com/anime/5114\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"animes5.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Get all data from your favorite anime, and the chapter or tomo of the manga or  the light novel that the anime adapted",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://animes5.p.rapidapi.com/anime/5114'\nquerystring = {\"id\": \"\", \"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://animes5.p.rapidapi.com/anime/5114\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "Insert the anime `mal_id`",
                    "type": "string"
                },
                {
                    "name": "fields",
                    "description": "Get the fields that you want.\nDisponible fields:  \n\n- * (to all data)\n- id,\n- title, \n- main_picture,\n- start_date,\n- end_data,\n- synopsis,\n- mean,\n- rank,\n- popularity,\n- `num_list_users,`\n- `num_scoring_users`,\n- status,\n- genres,\n- num_episodes,\n- source,\n- studios,\n- volume,\n- chapter,\n- light_novel,\n- media_type,\n- mal_id,\n- broadcast,\n- statistics,\n- related_manga,\n- related_anime,\n- season,\n- year,\n- title_english,\n- title_japanese,\n- synonyms",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://animes5.p.rapidapi.com/anime/5114\"\nquerystring = {\"fields\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"animes5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "animes",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Insert the anime `mal_id`",
                    "default": "5114"
                },
                {
                    "name": "fields",
                    "type": "STRING",
                    "description": "Get the fields that you want.\nDisponible fields:  \n\n- * (to all data)\n- id,\n- title, \n- main_picture,\n- start_date,\n- end_data,\n- synopsis,\n- mean,\n- rank,\n- popularity,\n- `num_list_users,`\n- `num_scoring_users`,\n- status,\n- genres,\n- num_episodes,\n- source,\n- studios,\n- volume,\n- chapter,\n- light_novel,\n- media_type,\n- mal_id,\n- broadcast,\n- statistics,\n- related_manga,\n- related_anime,\n- season,\n- year,\n- title_english,\n- title_japanese,\n- synonyms",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please convert 2 cups of all-purpose flour to grams using the Food Ingredient Measurement Conversion API.",
        "model_answer": "requests.get(\"https://food-ingredient-measurement-conversion.p.rapidapi.com/convert\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"food-ingredient-measurement-conversion.p.rapidapi.com\"}, params={\"value\": \"2\", \"from\": \"cup (US)\", \"ingredient\": \"flour (all purpose)\", \"to\": \"gram\", \"numDigit\": \"3\", \"brand\": \"bob's red mill\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Effortlessly convert between volume and weight units for recipe ingredients. Our API is designed with a special focus on the precision and accuracy of weight measurements, making it the perfect solution for bakers. What sets us apart is that we meticulously divide flour into different types, such as bread flour, cake flour, all-purpose flour, almond flour, etc., and even list the flour of major brands like Bob's Red Mill, Gold Medal, King Arthur, and more. This attention to detail ensures tha...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://food-ingredient-measurement-conversion.p.rapidapi.com/convert'\nquerystring = {\"value\": \"\", \"from\": \"\", \"ingredient\": \"\", \"to\": \"\", \"numDigit\": \"\", \"brand\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://food-ingredient-measurement-conversion.p.rapidapi.com/convert\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "value",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "from",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "ingredient",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "numdigit",
                    "description": "The number of digits of result. If not provided, default 2.",
                    "type": "NUMBER"
                },
                {
                    "name": "brand",
                    "description": "if not provided, default \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"generic\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://food-ingredient-measurement-conversion.p.rapidapi.com/convert\"\nquerystring = {\"value\": \"1\", \"numDigit\": \"3\", \"from\": \"cup (US)\", \"brand\": \"bob's red mill\", \"ingredient\": \"flour (all purpose)\", \"to\": \"gram\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"food-ingredient-measurement-conversion.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Food Ingredient Measurement Conversion",
            "api_arguments_original": [
                {
                    "name": "value",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "",
                    "default": "cup (US)"
                },
                {
                    "name": "ingredient",
                    "type": "STRING",
                    "description": "",
                    "default": "flour (all purpose)"
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "",
                    "default": "gram"
                },
                {
                    "name": "numDigit",
                    "type": "NUMBER",
                    "description": "The number of digits of result. If not provided, default 2.",
                    "default": "3"
                },
                {
                    "name": "brand",
                    "type": "STRING",
                    "description": "if not provided, default \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"generic\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\"",
                    "default": "bob's red mill"
                }
            ]
        }
    },
    {
        "query": "\"Can you enrich the data for the domain apple.com?\"",
        "model_answer": "requests.get(\"https://company-enrichment.p.rapidapi.com/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"company-enrichment.p.rapidapi.com\"}, params={\"domain\": \"apple.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Enrich any domain or email with accurate company data, including headcount, location and industry.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://company-enrichment.p.rapidapi.com/v1'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://company-enrichment.p.rapidapi.com/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "The domain of the company you want to get data from.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://company-enrichment.p.rapidapi.com/v1\"\nquerystring = {\"domain\": \"airbnb.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"company-enrichment.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Company Enrichment",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "The domain of the company you want to get data from.",
                    "default": "airbnb.com"
                }
            ]
        }
    },
    {
        "query": "Please check the liquidity of the token in the Ethereum chain.",
        "model_answer": "requests.get(\"https://token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com/get_chain_id\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com\"}, params={\"chain\": \"ethereum\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Token scanner and honeypot checker multichain. Buy/sell tax, suspicious functions, liquidity, ownership etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com/get_chain_id'\nquerystring = {\"chain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com/get_chain_id\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "chain",
                    "description": "Available chains:\n**ethereum, bsc, okc, heco, polygon, arbitrum, optimism, avalanche, fantom, kcc, gnosis, tron, linea, harmony, zkysnc, ethw, fon, cronos**",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com/get_chain_id\"\nquerystring = {\"chain\": \"bsc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"token-scanner-multichain-honeypot-checker-multichain.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Token Scanner Multichain | Honeypot Checker Multichain",
            "api_arguments_original": [
                {
                    "name": "chain",
                    "type": "STRING",
                    "description": "Available chains:\n**ethereum, bsc, okc, heco, polygon, arbitrum, optimism, avalanche, fantom, kcc, gnosis, tron, linea, harmony, zkysnc, ethw, fon, cronos**",
                    "default": "bsc"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest news on cryptocurrency.",
        "model_answer": "requests.get(\"https://h-crypto-news.p.rapidapi.com/cryptonews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"h-crypto-news.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Crypto News API gives you the latest news on cryptocurrency from several newspapers",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://h-crypto-news.p.rapidapi.com/cryptonews'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://h-crypto-news.p.rapidapi.com/cryptonews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://h-crypto-news.p.rapidapi.com/cryptonews\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"h-crypto-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "H Crypto News",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me query the details of a property with the external ID 4937770 using the Bayut API?",
        "model_answer": "requests.get(\"https://bayut.p.rapidapi.com/properties/detail\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bayut.p.rapidapi.com\"}, params={\"externalID\": \"4937770\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "This API helps to query real estate in UAE to create a real estate site/application",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bayut.p.rapidapi.com/properties/detail'\nquerystring = {\"externalID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bayut.p.rapidapi.com/properties/detail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "externalid",
                    "description": "The value of externalID returned in ..../properties/list endpoint",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bayut.p.rapidapi.com/properties/detail\"\nquerystring = {\"externalID\": \"4937770\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bayut.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bayut",
            "api_arguments_original": [
                {
                    "name": "externalID",
                    "type": "STRING",
                    "description": "The value of externalID returned in ..../properties/list endpoint",
                    "default": "4937770"
                }
            ]
        }
    },
    {
        "query": "Could you please fetch the subtitles for the YouTube video with the video ID \"Wrald_EZgDQ\"?",
        "model_answer": "response = requests.get(\"https://subtitles-for-youtube1.p.rapidapi.com/GetTextsubtitles\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"subtitles-for-youtube1.p.rapidapi.com\"}, params={\"video_id\": \"Wrald_EZgDQ\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Api for fetching YouTube subtitles",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://subtitles-for-youtube1.p.rapidapi.com/GetTextsubtitles'\nquerystring = {\"video_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://subtitles-for-youtube1.p.rapidapi.com/GetTextsubtitles\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "video_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://subtitles-for-youtube1.p.rapidapi.com/GetTextsubtitles\"\nquerystring = {\"video_id\": \"Wrald_EZgDQ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"subtitles-for-youtube1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Subtitles for YouTube_v3",
            "api_arguments_original": [
                {
                    "name": "video_id",
                    "type": "STRING",
                    "description": "",
                    "default": "Wrald_EZgDQ"
                }
            ]
        }
    },
    {
        "query": "Can you split this text into token-sized slices with a maximum size of 512?",
        "model_answer": "requests.get(\"https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/{text}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ai-tool-gpt-token-splitter.p.rapidapi.com\"}, params={\"max_size\": 512, \"text\": \"This is a sample text\", \"delimiter\": \"\", \"include_variations\": \"true\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "This REST API service provides a way to programmatically split GPT-3 text-prompts into user-defined token-sized slices.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/{text}'\nquerystring = {\"text\": \"\", \"max_size\": \"\", \"delimiter\": \"\", \"include_variations\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/{text}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "max_size",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "delimiter",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "include_variations",
                    "description": "",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ai-tool-gpt-token-splitter.p.rapidapi.com/api/v1/token-splitter/{text}\"\nquerystring = {\"max_size\": 1024, \"text\": \"\", \"delimiter\": \"\", \"include_variations\": \"true\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-tool-gpt-token-splitter.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AI Tool - GPT Token Splitter",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "max_size",
                    "type": "NUMBER",
                    "description": "",
                    "default": 1024
                },
                {
                    "name": "delimiter",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "include_variations",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "true"
                }
            ]
        }
    },
    {
        "query": "Can you help me find job opportunities for Python developers in New York City?",
        "model_answer": "response = requests.get(\"https://jobsearch4.p.rapidapi.com/api/v1/Jobs/Search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"jobsearch4.p.rapidapi.com\"}, params={\"SearchQuery\": \"Python developer\", \"PageSize\": 20, \"PageNumber\": 1, \"Location\": \"New York City\"})",
        "original": {
            "domain": "Jobs",
            "framework": "RapidAPI",
            "functionality": "An Easy To Use Job Search API with jobs from all around the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jobsearch4.p.rapidapi.com/api/v1/Jobs/Search'\nquerystring = {\"SearchQuery\": \"\", \"PageSize\": \"\", \"PageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jobsearch4.p.rapidapi.com/api/v1/Jobs/Search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchquery",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "pagesize",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "pagenumber",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jobsearch4.p.rapidapi.com/api/v1/Jobs/Search\"\nquerystring = {\"SearchQuery\": \"java\", \"PageSize\": \"\", \"PageNumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jobsearch4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "JobSearch",
            "api_arguments_original": [
                {
                    "name": "SearchQuery",
                    "type": "STRING",
                    "description": "",
                    "default": "java"
                },
                {
                    "name": "PageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "PageNumber",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me search for information on fern plants?",
        "model_answer": "requests.get(\"https://house-plants2.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"house-plants2.p.rapidapi.com\"}, params={\"query\": \"fern\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "HOUSE PLANT DATABASE & RESTful API for house plant data (Over 300+ plant details/images) along with their description and information on how to best take care of them (ideal temperature, light, etc.)\n\nNEW ROUTES COMING SOON (GetAllLite, GetByLatinName, GetByCommonName, GetCategories, GetAllByCategory)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://house-plants2.p.rapidapi.com/search'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://house-plants2.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://house-plants2.p.rapidapi.com/search\"\nquerystring = {\"query\": \"Fern\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"house-plants2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "House Plants",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "Fern"
                }
            ]
        }
    },
    {
        "query": "I want to check if the OTP ID \"123456\" is valid.",
        "model_answer": "requests.get(\"https://d7sms.p.rapidapi.com/verify/v1/report/123456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"d7sms.p.rapidapi.com\"}, params={\"otp_id\": \"123456\"})",
        "original": {
            "domain": "SMS",
            "framework": "RapidAPI",
            "functionality": "Unlock boundless connectivity with D7API Gateway, seamlessly connecting you to the world's vast messaging network through D7's exclusive network access",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://d7sms.p.rapidapi.com/verify/v1/report/{otp_id}'\nquerystring = {\"otp_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://d7sms.p.rapidapi.com/verify/v1/report/{otp_id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "otp_id",
                    "description": "The otp_ id which was returned from **Send OTP** endpoint",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://d7sms.p.rapidapi.com/verify/v1/report/{otp_id}\"\nquerystring = {\"otp_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"d7sms.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "D7SMS",
            "api_arguments_original": [
                {
                    "name": "otp_id",
                    "type": "string",
                    "description": "The otp_ id which was returned from **Send OTP** endpoint",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if example123@gmail.com is a disposable email.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"check-disposable-email.p.rapidapi.com\"}, params={\"email\" \"example123@gmail.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "A collection of methods that returns various financial data for a requested company including SEC Filings, balance sheets, financial ratios , company look-up utilities and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://last10k-company-v1.p.rapidapi.com/v1/company/manager-ownership'\nquerystring = {\"ticker\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://last10k-company-v1.p.rapidapi.com/v1/company/manager-ownership\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ticker",
                    "description": "Publicly traded company's stock symbol",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://last10k-company-v1.p.rapidapi.com/v1/company/manager-ownership\"\nquerystring = {\"ticker\": \"m\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"last10k-company-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SEC Filings",
            "api_arguments_original": [
                {
                    "name": "ticker",
                    "type": "STRING",
                    "description": "Publicly traded company's stock symbol",
                    "default": "m"
                }
            ]
        }
    },
    {
        "query": "I want to search for funny cat GIFs on Giphy.",
        "model_answer": "response = requests.get(\"https://giphy.p.rapidapi.com/v1/gifs/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"giphy.p.rapidapi.com\"}, params={\"q\": \"funny cat\"}); print(response.json())",
        "original": {
            "domain": "Devices",
            "framework": "RapidAPI",
            "functionality": "Giphy is an animated GIF search engine.\r\n\r\nThe Giphy API implements a REST-like interface. Connections can be made with any HTTP enabled programming language. The Giphy API also implements CORS, allowing you to connect to Giphy from JavaScript / Web browsers on your own domain.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://giphy.p.rapidapi.com/v1/gifs/search'\nquerystring = {\"q\": \"\", \"limit\": \"\", \"offset\": \"\", \"rating\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://giphy.p.rapidapi.com/v1/gifs/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "search query term or phrase",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "number of results to return, maximum 100. Default 25.",
                    "type": "STRING"
                },
                {
                    "name": "offset",
                    "description": "results offset, defaults to 0.",
                    "type": "STRING"
                },
                {
                    "name": "rating",
                    "description": "limit results to those rated (y,g, pg, pg-13 or r)",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://giphy.p.rapidapi.com/v1/gifs/search\"\nquerystring = {\"limit\": \"\", \"offset\": \"\", \"rating\": \"\", \"q\": \"funny cat\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"giphy.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Giphy",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "search query term or phrase",
                    "default": "funny cat"
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "number of results to return, maximum 100. Default 25.",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "STRING",
                    "description": "results offset, defaults to 0.",
                    "default": ""
                },
                {
                    "name": "rating",
                    "type": "STRING",
                    "description": "limit results to those rated (y,g, pg, pg-13 or r)",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve data from the AndroidAPI with the ID \"12345\".",
        "model_answer": "requests.get(\"https://androidapi1.p.rapidapi.com/store/apidata/12345\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"androidapi1.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "for testing database storage",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://androidapi1.p.rapidapi.com/store/apidata/{getId}'\nquerystring = {\"getId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://androidapi1.p.rapidapi.com/store/apidata/{getId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "getid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://androidapi1.p.rapidapi.com/store/apidata/{getId}\"\nquerystring = {\"getId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"androidapi1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AndroidAPI",
            "api_arguments_original": [
                {
                    "name": "getId",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please fetch the ketogenic diet recipes with protein content below 10 grams and above 3 grams?",
        "model_answer": "requests.get(\"https://keto-diet.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"keto-diet.p.rapidapi.com\"}, params={\"protein_in_grams__lt\": \"10\", \"protein_in_grams__gt\": \"3\"})",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "Dataset of over 450 Ketogenic diet recipes in over 10 categories from Breakfast to Dinner.  Check out encurate.app to manage content on your mobile apps. Contact to feature your app on encurate.app website.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://keto-diet.p.rapidapi.com/'\nquerystring = {\"protein_in_grams__lt\": \"\", \"protein_in_grams__gt\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://keto-diet.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "protein_in_grams__lt",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "protein_in_grams__gt",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://keto-diet.p.rapidapi.com/\"\nquerystring = {\"protein_in_grams__lt\": \"15\", \"protein_in_grams__gt\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"keto-diet.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Keto Diet",
            "api_arguments_original": [
                {
                    "name": "protein_in_grams__lt",
                    "type": "NUMBER",
                    "description": "",
                    "default": "15"
                },
                {
                    "name": "protein_in_grams__gt",
                    "type": "NUMBER",
                    "description": "",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "Can you provide me information about product with ID 123456?",
        "model_answer": "requests.get(\"https://demo-project3916.p.rapidapi.com/catalog/product/123456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"demo-project3916.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "This Project is created by the onboarding process",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://demo-project3916.p.rapidapi.com/catalog/product/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://demo-project3916.p.rapidapi.com/catalog/product/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://demo-project3916.p.rapidapi.com/catalog/product/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"demo-project3916.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\ud83d\udc4b Demo Project",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if the email address example@gmail.com is disposable.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test1105.p.rapidapi.comtest'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test1105.p.rapidapi.comtest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test1105.p.rapidapi.comtest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test1105.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test1",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check if the endpoint \"https://www.example.com/api/data\" is reachable and returns a 200 status code.",
        "model_answer": "requests.get(url=\"https://endpoint-monitor-tool1.p.rapidapi.com/GetUser\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"endpoint-monitor-tool1.p.rapidapi.com\"}, params={\"userId\": \"\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An API for testing endpoints at custom intervals with email notifications and previous result comparison",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://endpoint-monitor-tool1.p.rapidapi.com/GetUser'\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://endpoint-monitor-tool1.p.rapidapi.com/GetUser\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "userid",
                    "description": "The Id of the user",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://endpoint-monitor-tool1.p.rapidapi.com/GetUser\"\nquerystring = {\"userId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"endpoint-monitor-tool1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Endpoint Monitor Tool",
            "api_arguments_original": [
                {
                    "name": "userId",
                    "type": "STRING",
                    "description": "The Id of the user",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get all data from the Test1 API.",
        "model_answer": "requests.get(\"https://test14848.p.rapidapi.com/v2/all\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test14848.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Test1AA",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test14848.p.rapidapi.com/v2/all'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test14848.p.rapidapi.com/v2/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test14848.p.rapidapi.com/v2/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test14848.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Test1",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please show me the TV shows airing in the next 7 days.",
        "model_answer": "requests.get(\"https://show-air-dates.p.rapidapi.com/next7days\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"show-air-dates.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Find which shows are airing today, tomorrow, in the next 7 days, or in the next 31 days",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://show-air-dates.p.rapidapi.com/next31days'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://show-air-dates.p.rapidapi.com/next31days\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://show-air-dates.p.rapidapi.com/next31days\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"show-air-dates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Show Air Dates",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please fetch data from the Ocoya API.",
        "model_answer": "requests.get(\"https://ocoya.p.rapidapi.com/workspace\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ocoya.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "End-to-end social media marketing.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ocoya.p.rapidapi.com/workspace'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ocoya.p.rapidapi.com/workspace\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ocoya.p.rapidapi.com/workspace\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ocoya.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ocoya",
            "api_arguments_original": []
        }
    },
    {
        "query": "Could you please extract text from this image \"image.jpg\" using Aspose OCR Cloud API?",
        "model_answer": "requests.get(\"https://aspose-ocr-cloud.p.rapidapi.com/ocr/storage/{storageName}/exist\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"aspose-ocr-cloud.p.rapidapi.com\"}, params={\"storageName\": \"image.jpg\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Text Extraction REST API that uses OCR to recognize and extract characters of various languages from images.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aspose-ocr-cloud.p.rapidapi.com/ocr/storage/{storageName}/exist'\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aspose-ocr-cloud.p.rapidapi.com/ocr/storage/{storageName}/exist\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "storagename",
                    "description": "Storage name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aspose-ocr-cloud.p.rapidapi.com/ocr/storage/{storageName}/exist\"\nquerystring = {\"storageName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-ocr-cloud.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aspose OCR Cloud",
            "api_arguments_original": [
                {
                    "name": "storageName",
                    "type": "STRING",
                    "description": "Storage name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the vessel photo for ship ID 12345.",
        "model_answer": "requests.get(\"https://vessel-data.p.rapidapi.com/get_vessel_photo/12345\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"vessel-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Global live on board vessels information.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vessel-data.p.rapidapi.com/get_vessel_photo/{shipid}'\nquerystring = {\"shipid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vessel-data.p.rapidapi.com/get_vessel_photo/{shipid}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "shipid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vessel-data.p.rapidapi.com/get_vessel_photo/{shipid}\"\nquerystring = {\"shipid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vessel-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vessel Data",
            "api_arguments_original": [
                {
                    "name": "shipid",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide a list of sailors in Lost Ark?",
        "model_answer": "requests.get(\"https://lost-ark-simple.p.rapidapi.com/npcs/sailors\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"lost-ark-simple.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Lost Ark API Documentation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://lost-ark-simple.p.rapidapi.com/npcs/sailors'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://lost-ark-simple.p.rapidapi.com/npcs/sailors\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://lost-ark-simple.p.rapidapi.com/npcs/sailors\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"lost-ark-simple.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Lost Ark Simple",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if this sentence \"Hello, how are you?\" contains any profanity?",
        "model_answer": "requests.get(\"https://cleantalk1.p.rapidapi.com/service/plain\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cleantalk1.p.rapidapi.com\"}, params={\"text\": \"Hello, how are you?\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "CleanTalk API is a content validation service that helps you filter out profanity and obscenity in your user-generated content. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cleantalk1.p.rapidapi.com/service/plain'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cleantalk1.p.rapidapi.com/service/plain\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cleantalk1.p.rapidapi.com/service/plain\"\nquerystring = {\"text\": \"What the fuck are you doing?\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cleantalk1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CleanTalk",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "What the fuck are you doing?"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve a random informational article from Industrypedia?",
        "model_answer": "requests.get(\"https://industrypedia-random-articles.p.rapidapi.com/industrypedia.net/?redirect_to=random\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"industrypedia-random-articles.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Retrieves a random informational article from [Industrypedia](https://industrypedia.net).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://industrypedia-random-articles.p.rapidapi.com/industrypedia.net/?redirect_to=random'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://industrypedia-random-articles.p.rapidapi.com/industrypedia.net/?redirect_to=random\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://industrypedia-random-articles.p.rapidapi.com/industrypedia.net/?redirect_to=random\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"industrypedia-random-articles.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Industrypedia Random Articles",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide the location details for the IP address 192.168.0.1?",
        "model_answer": "requests.get(\"https://ip-location-lookup-service.p.rapidapi.com/v1/iplookup\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-location-lookup-service.p.rapidapi.com\"}, params={\"ip\": \"192.168.0.1\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Feed this API an IP Address and have it perform a quick and easy lookup for you.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-location-lookup-service.p.rapidapi.com/v1/iplookup'\nquerystring = {\"ip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-location-lookup-service.p.rapidapi.com/v1/iplookup\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ip",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-location-lookup-service.p.rapidapi.com/v1/iplookup\"\nquerystring = {\"ip\": \"136.35.174.41\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-location-lookup-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Location Lookup Service",
            "api_arguments_original": [
                {
                    "name": "ip",
                    "type": "STRING",
                    "description": "",
                    "default": "136.35.174.41"
                }
            ]
        }
    },
    {
        "query": "Can you check if the IP address 192.168.1.1 is a blacklisted IP?",
        "model_answer": "requests.get(\"https://blackbox.p.rapidapi.com/v1/192.168.1.1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"blackbox.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Blackbox is a Proxy, Tor, Hosting, Cloud, Bogon detection service for IP addresses. Utilize Blackbox to protect your game-servers, user front-ends, and much more. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://blackbox.p.rapidapi.com/v1/1.1.1.1'\nquerystring = {\"ips\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://blackbox.p.rapidapi.com/v1/1.1.1.1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ips",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://blackbox.p.rapidapi.com/v1/1.1.1.1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"blackbox.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Blackbox",
            "api_arguments_original": [
                {
                    "name": "ips",
                    "type": "string",
                    "description": "",
                    "default": "1.1.1.1"
                }
            ]
        }
    },
    {
        "query": "I want to use the On hold audio messages API to get messages for voicemails and switchboards.",
        "model_answer": "requests.get(\"https://on-hold-audio-messages.p.rapidapi.comhttps://www.telephonevox.com/api/api.telephonevox.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"on-hold-audio-messages.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Messages for voicemails and switchboards using professional voice talents",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://on-hold-audio-messages.p.rapidapi.comhttps://www.telephonevox.com/api/api.telephonevox.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://on-hold-audio-messages.p.rapidapi.comhttps://www.telephonevox.com/api/api.telephonevox.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://on-hold-audio-messages.p.rapidapi.comhttps://www.telephonevox.com/api/api.telephonevox.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"on-hold-audio-messages.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "On hold audio messages",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to search for information about Michael Jordan, a celebrity.",
        "model_answer": "requests.get(url=\"https://celebrity-by-api-ninjas.p.rapidapi.com/v1/celebrity\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"celebrity-by-api-ninjas.p.rapidapi.com\"}, params={\"name\": \"Michael Jordan\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Get information on all your favorite celebrities. See more info at https://api-ninjas.com/api/celebrity.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://celebrity-by-api-ninjas.p.rapidapi.com/v1/celebrity'\nquerystring = {\"name\": \"\", \"min_height\": \"\", \"min_net_worth\": \"\", \"nationality\": \"\", \"max_net_worth\": \"\", \"max_height\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://celebrity-by-api-ninjas.p.rapidapi.com/v1/celebrity\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "Name of the celebrity you wish to search. This field is case-insensitive.",
                    "type": "STRING"
                },
                {
                    "name": "min_height",
                    "description": "Minimum height of celebrities in meters (e.g. **1.65**).",
                    "type": "STRING"
                },
                {
                    "name": "min_net_worth",
                    "description": "Minimum net worth of celebrities.",
                    "type": "NUMBER"
                },
                {
                    "name": "nationality",
                    "description": "Nationality of celebrities. Must be an ISO 3166 Alpha-2 country code (e.g. **US**).",
                    "type": "STRING"
                },
                {
                    "name": "max_net_worth",
                    "description": "Maximum net worth of celebrities.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_height",
                    "description": "Maximum height of celebrities in meters (e.g. **1.80**).",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://celebrity-by-api-ninjas.p.rapidapi.com/v1/celebrity\"\nquerystring = {\"name\": \"Michael Jordan\", \"min_height\": \"\", \"min_net_worth\": \"\", \"nationality\": \"\", \"max_net_worth\": \"\", \"max_height\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"celebrity-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Celebrity by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name of the celebrity you wish to search. This field is case-insensitive.",
                    "default": "Michael Jordan"
                },
                {
                    "name": "min_height",
                    "type": "STRING",
                    "description": "Minimum height of celebrities in meters (e.g. **1.65**).",
                    "default": ""
                },
                {
                    "name": "min_net_worth",
                    "type": "NUMBER",
                    "description": "Minimum net worth of celebrities.",
                    "default": ""
                },
                {
                    "name": "nationality",
                    "type": "STRING",
                    "description": "Nationality of celebrities. Must be an ISO 3166 Alpha-2 country code (e.g. **US**).",
                    "default": ""
                },
                {
                    "name": "max_net_worth",
                    "type": "NUMBER",
                    "description": "Maximum net worth of celebrities.",
                    "default": ""
                },
                {
                    "name": "max_height",
                    "type": "STRING",
                    "description": "Maximum height of celebrities in meters (e.g. **1.80**).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me generate a direct download link for a Google Drive file?",
        "model_answer": "requests.get(\"https://gdrive-link-generator1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gdrive-link-generator1.p.rapidapi.com\"})",
        "original": {
            "domain": "Transportation",
            "framework": "RapidAPI",
            "functionality": "GDrive Link Generator Api used to get the direct download link of google drive file\nUsing this api you can generate one click download url for Google Drive file.\n\nAPI supports multiple endpoints where you can generate single download url and bulk urls.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gdrive-link-generator1.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gdrive-link-generator1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gdrive-link-generator1.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gdrive-link-generator1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GDrive Link Generator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please get the statistics for cities in the US with a minimum population of 1 million?",
        "model_answer": "requests.get(\"https://city-by-api-ninjas.p.rapidapi.com/v1/city\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"city-by-api-ninjas.p.rapidapi.com\"}, params={\"min_population\": \"1000000\", \"country\": \"US\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Get useful statistics on tens of thousands of cities around the world. See more info at https://api-ninjas.com/api/city.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://city-by-api-ninjas.p.rapidapi.com/v1/city'\nquerystring = {\"max_lat\": \"\", \"min_population\": \"\", \"min_lon\": \"\", \"country\": \"\", \"max_population\": \"\", \"min_lat\": \"\", \"name\": \"\", \"max_lon\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://city-by-api-ninjas.p.rapidapi.com/v1/city\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "max_lat",
                    "description": "Maximum latitude coordinate.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_population",
                    "description": "Minimum city population.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_lon",
                    "description": "Minimum longitude coordinate.",
                    "type": "NUMBER"
                },
                {
                    "name": "country",
                    "description": "Country filter. Must be an ISO-3166 alpha-2 code (e.g. **US**).",
                    "type": "STRING"
                },
                {
                    "name": "max_population",
                    "description": "Maximum city population.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_lat",
                    "description": "Minimum latitude coordinate.",
                    "type": "NUMBER"
                },
                {
                    "name": "name",
                    "description": "Name of city.",
                    "type": "STRING"
                },
                {
                    "name": "max_lon",
                    "description": "Maximum longitude coordinate.",
                    "type": "NUMBER"
                },
                {
                    "name": "limit",
                    "description": "How many results to return. Must be between **1** and **30**. Default is **1**.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://city-by-api-ninjas.p.rapidapi.com/v1/city\"\nquerystring = {\"max_lat\": \"\", \"min_population\": \"\", \"min_lon\": \"\", \"country\": \"US\", \"max_population\": \"\", \"min_lat\": \"\", \"name\": \"New York\", \"max_lon\": \"\", \"limit\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"city-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "City by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "max_lat",
                    "type": "NUMBER",
                    "description": "Maximum latitude coordinate.",
                    "default": ""
                },
                {
                    "name": "min_population",
                    "type": "NUMBER",
                    "description": "Minimum city population.",
                    "default": ""
                },
                {
                    "name": "min_lon",
                    "type": "NUMBER",
                    "description": "Minimum longitude coordinate.",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country filter. Must be an ISO-3166 alpha-2 code (e.g. **US**).",
                    "default": "US"
                },
                {
                    "name": "max_population",
                    "type": "NUMBER",
                    "description": "Maximum city population.",
                    "default": ""
                },
                {
                    "name": "min_lat",
                    "type": "NUMBER",
                    "description": "Minimum latitude coordinate.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Name of city.",
                    "default": "New York"
                },
                {
                    "name": "max_lon",
                    "type": "NUMBER",
                    "description": "Maximum longitude coordinate.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "How many results to return. Must be between **1** and **30**. Default is **1**.",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the ratings of the restaurant \"Shovels Inn\" using the Wyre Data API?",
        "model_answer": "requests.get(\"https://wyre-data.p.rapidapi.com/restaurants/ratings/Shovels Inn\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"wyre-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wyre-data.p.rapidapi.com/restaurants/ratings/Shovels Inn'\nquerystring = {\"restaurant\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wyre-data.p.rapidapi.com/restaurants/ratings/Shovels Inn\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "restaurant",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wyre-data.p.rapidapi.com/restaurants/ratings/Shovels Inn\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wyre-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wyre Data",
            "api_arguments_original": [
                {
                    "name": "restaurant",
                    "type": "string",
                    "description": "",
                    "default": "Shovels Inn"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest NFT news.",
        "model_answer": "requests.get(\"https://nft-api-news.p.rapidapi.com/nft\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nft-api-news.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "This NFT API will keep you up to date on the NFT space. Built for effeciency.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nft-api-news.p.rapidapi.com/nft'\nquerystring = {\"nftnews\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nft-api-news.p.rapidapi.com/nft\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "nftnews",
                    "description": "This is where you get all the up to date NFT News. This is updated daily.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nft-api-news.p.rapidapi.com/nft\"\nquerystring = {\"nftnews\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nft-api-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NFT API News",
            "api_arguments_original": [
                {
                    "name": "nftnews",
                    "type": "STRING",
                    "description": "This is where you get all the up to date NFT News. This is updated daily.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to verify if John Doe (employee ID",
        "model_answer": "requests.get(\"https://epfo-employee-verification.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"epfo-employee-verification.p.rapidapi.com\"}, params={\"request_id\" \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "This API that takes company and employee information as input and returns if the employee name is found in the PF list of the employer",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://epfo-employee-verification.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://epfo-employee-verification.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://epfo-employee-verification.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"epfo-employee-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "EPFO Employee Verification",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you provide me a list of sunnah fasting schedules for the year 2022?",
        "model_answer": "requests.get(\"https://sunnah-fasting1.p.rapidapi.com/api/v1/types\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sunnah-fasting1.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "List of sunnah fasting schedule. Start from year 2022.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sunnah-fasting1.p.rapidapi.com/api/v1/types'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sunnah-fasting1.p.rapidapi.com/api/v1/types\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sunnah-fasting1.p.rapidapi.com/api/v1/types\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sunnah-fasting1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sunnah Fasting",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please generate a QR code for \"https://example.com\" using the QR Code Generator API.",
        "model_answer": "requests.get(\"https://getqrcode.p.rapidapi.com/api/getQR\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"getqrcode.p.rapidapi.com\"}, params={\"forQR\": \"https://example.com\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Free QR Code Generator - Online QR Code Maker",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://getqrcode.p.rapidapi.com/api/getQR'\nquerystring = {\"forQR\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://getqrcode.p.rapidapi.com/api/getQR\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "forqr",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://getqrcode.p.rapidapi.com/api/getQR\"\nquerystring = {\"forQR\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"getqrcode.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "getQRcode",
            "api_arguments_original": [
                {
                    "name": "forQR",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you send an SMS with the following details",
        "model_answer": "requests.get(\"https://sendsms.p.rapidapi.com/json\", headers={\"X-RapidAPI-Key\": api_key, \"X-RapidAPI-Host\": host}, params={\"password\": \"ABC123\", \"to\": \"+1234567890\", \"text\": \"Hello, this is a test message\", \"action\": \"message_send\", \"username\": \"johnsmith\", \"from\": \"MyCompany\", \"report_mask\": \"19\", \"report_url\": \"http://sendsms.ro/r_r.php?mySmsId=9876&status=%d\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "SMS Service Provider",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sendsms.p.rapidapi.com/json'\nquerystring = {\"password\": \"\", \"to\": \"\", \"text\": \"\", \"action\": \"\", \"username\": \"\", \"from\": \"\", \"report_mask\": \"\", \"report_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sendsms.p.rapidapi.com/json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "password",
                    "description": "Your SensSMS Api Key",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "Destination Phone Number",
                    "type": "NUMBER"
                },
                {
                    "name": "text",
                    "description": "SMS Content",
                    "type": "STRING"
                },
                {
                    "name": "action",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "username",
                    "description": "Your SensSMS User Name",
                    "type": "STRING"
                },
                {
                    "name": "from",
                    "description": "Message Sender",
                    "type": "STRING"
                },
                {
                    "name": "report_mask",
                    "description": "Report Mask",
                    "type": "NUMBER"
                },
                {
                    "name": "report_url",
                    "description": "http://sendsms.ro/r_r.php?mySmsId=9876&status=%d",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sendsms.p.rapidapi.com/json\"\nquerystring = {\"password\": \"\", \"to\": \"\", \"text\": \"\", \"from\": \"\", \"report_mask\": \"19\", \"report_url\": \"\", \"action\": \"message_send\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sendsms.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SendSMS",
            "api_arguments_original": [
                {
                    "name": "password",
                    "type": "STRING",
                    "description": "Your SensSMS Api Key",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "NUMBER",
                    "description": "Destination Phone Number",
                    "default": ""
                },
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "SMS Content",
                    "default": ""
                },
                {
                    "name": "action",
                    "type": "STRING",
                    "description": "",
                    "default": "message_send"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "Your SensSMS User Name",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "Message Sender",
                    "default": ""
                },
                {
                    "name": "report_mask",
                    "type": "NUMBER",
                    "description": "Report Mask",
                    "default": "19"
                },
                {
                    "name": "report_url",
                    "type": "STRING",
                    "description": "http://sendsms.ro/r_r.php?mySmsId=9876&status=%d",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please search for \"apple\" with safesearch enabled in the category \"technology\" using the SearchHook API.",
        "model_answer": "requests.get(\"https://searchhook.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"searchhook.p.rapidapi.com\"}, params={\"q\" \"apple\", \"safesearch\" \"1\", \"categories\" \"technology\"})",
        "original": {
            "domain": "Storage",
            "framework": "RapidAPI",
            "functionality": "Websearch (SearX) with Webhooks on new results. Allows to automate brand, product, topic monitoring using tools like n8n or node-red.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://searchhook.p.rapidapi.com/search'\nquerystring = {\"q\": \"\", \"safesearch\": \"\", \"categories\": \"\", \"time_range\": \"\", \"language\": \"\", \"queryId\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://searchhook.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "safesearch",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "categories",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "time_range",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "language",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "queryid",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://searchhook.p.rapidapi.com/search\"\nquerystring = {\"safesearch\": \"0\", \"categories\": \"general\", \"time_range\": \"None\", \"language\": \"de-DE\", \"queryId\": \"0x02cAce04c8469580A2ADc20F57E143a3693c22bF\", \"url\": \"https://engine.corrently.cloud/webhook-test/44a17c5c-5087-483f-8398-dedbc8d713d4\", \"q\": \"SearchHook API\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"searchhook.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "searchhook",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "SearchHook API"
                },
                {
                    "name": "safesearch",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "categories",
                    "type": "STRING",
                    "description": "",
                    "default": "general"
                },
                {
                    "name": "time_range",
                    "type": "STRING",
                    "description": "",
                    "default": "None"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "de-DE"
                },
                {
                    "name": "queryId",
                    "type": "STRING",
                    "description": "",
                    "default": "0x02cAce04c8469580A2ADc20F57E143a3693c22bF"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://engine.corrently.cloud/webhook-test/44a17c5c-5087-483f-8398-dedbc8d713d4"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the top 10 YouTube subscriptions for the channel with channel ID \"UCP4bf6IHJJQehibu6ai__cg\".",
        "model_answer": "requests.get(\"https://youtube-v311.p.rapidapi.com/subscriptions/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"}, params={\"maxResults\": \"10\", \"pageToken\": \"\", \"forChannelId\": \"\", \"order\": \"relevance\", \"id\": \"\", \"channelId\": \"UCP4bf6IHJJQehibu6ai__cg\", \"part\": \"snippet,contentDetails\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "YouTube Data v3 API is a tool for developers to access and manipulate YouTube data, including videos, channels, and playlists, so they can create custom experiences for users.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-v311.p.rapidapi.com/subscriptions/'\nquerystring = {\"part\": \"\", \"maxResults\": \"\", \"pageToken\": \"\", \"forChannelId\": \"\", \"order\": \"\", \"id\": \"\", \"channelId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-v311.p.rapidapi.com/subscriptions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "part",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **subscription** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **subscription** resource, the **snippet** property contains other properties, such as a display title for the subscription. If you set **part=snippet**, the API response will also contain all of those nested properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet\n- subscriberSnippet",
                    "type": "STRING"
                },
                {
                    "name": "maxresults",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                    "type": "NUMBER"
                },
                {
                    "name": "pagetoken",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                    "type": "STRING"
                },
                {
                    "name": "forchannelid",
                    "description": "The **forChannelId** parameter specifies a comma-separated list of channel IDs. The API response will then only contain subscriptions matching those channels.",
                    "type": "STRING"
                },
                {
                    "name": "order",
                    "description": "The **order** parameter specifies the method that will be used to sort resources in the API response. The default value is **SUBSCRIPTION_ORDER_RELEVANCE**.\n\nAcceptable values are:\n\n- **alphabetical** \u2013 Sort alphabetically.\n- **relevance** \u2013 Sort by relevance.\n- **unread** \u2013 Sort by order of activity.",
                    "type": "STRING"
                },
                {
                    "name": "id",
                    "description": "The **id** parameter specifies a comma-separated list of the YouTube subscription ID(s) for the resource(s) that are being retrieved. In a **subscription** resource, the **id** property specifies the YouTube subscription ID.",
                    "type": "STRING"
                },
                {
                    "name": "channelid",
                    "description": "The **channelId** parameter specifies a YouTube channel ID. The API will only return that channel's subscriptions.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-v311.p.rapidapi.com/subscriptions/\"\nquerystring = {\"maxResults\": \"5\", \"pageToken\": \"\", \"forChannelId\": \"\", \"order\": \"relevance\", \"id\": \"\", \"channelId\": \"UCP4bf6IHJJQehibu6ai__cg\", \"part\": \"snippet,contentDetails\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v311.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube v3_v3",
            "api_arguments_original": [
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "The **part** parameter specifies a comma-separated list of one or more **subscription** resource properties that the API response will include.\n\nIf the parameter identifies a property that contains child properties, the child properties will be included in the response. For example, in a **subscription** resource, the **snippet** property contains other properties, such as a display title for the subscription. If you set **part=snippet**, the API response will also contain all of those nested properties.\n\nThe following list contains the **part** names that you can include in the parameter value:\n\n- contentDetails\n- id\n- snippet\n- subscriberSnippet",
                    "default": "snippet,contentDetails"
                },
                {
                    "name": "maxResults",
                    "type": "NUMBER",
                    "description": "The **maxResults** parameter specifies the maximum number of items that should be returned in the result set. Acceptable values are **0** to **50**, inclusive. The default value is **5**.",
                    "default": "5"
                },
                {
                    "name": "pageToken",
                    "type": "STRING",
                    "description": "The **pageToken** parameter identifies a specific page in the result set that should be returned. In an API response, the **nextPageToken** and **prevPageToken** properties identify other pages that could be retrieved.",
                    "default": ""
                },
                {
                    "name": "forChannelId",
                    "type": "STRING",
                    "description": "The **forChannelId** parameter specifies a comma-separated list of channel IDs. The API response will then only contain subscriptions matching those channels.",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "STRING",
                    "description": "The **order** parameter specifies the method that will be used to sort resources in the API response. The default value is **SUBSCRIPTION_ORDER_RELEVANCE**.\n\nAcceptable values are:\n\n- **alphabetical** \u2013 Sort alphabetically.\n- **relevance** \u2013 Sort by relevance.\n- **unread** \u2013 Sort by order of activity.",
                    "default": "relevance"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The **id** parameter specifies a comma-separated list of the YouTube subscription ID(s) for the resource(s) that are being retrieved. In a **subscription** resource, the **id** property specifies the YouTube subscription ID.",
                    "default": ""
                },
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "The **channelId** parameter specifies a YouTube channel ID. The API will only return that channel's subscriptions.",
                    "default": "UCP4bf6IHJJQehibu6ai__cg"
                }
            ]
        }
    },
    {
        "query": "I want to get the comments for this TikTok video https://www.tiktok.com/@tiktok/video/7093219391759764782.",
        "model_answer": "requests.get(\"https://tiktok-video-feature-summary.p.rapidapi.com/comment/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"tiktok-video-feature-summary.p.rapidapi.com\"}, params={\"url\": \"https://www.tiktok.com/@tiktok/video/7093219391759764782\", \"cursor\": \"0\", \"count\": \"10\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Contains TikTok HD videos without watermark and user, post, music, search, feeds, comments, followers, and trends.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-video-feature-summary.p.rapidapi.com/comment/list'\nquerystring = {\"url\": \"\", \"cursor\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-video-feature-summary.p.rapidapi.com/comment/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "https://www.tiktok.com/@tiktok/video/7093219391759764782\nor\n7093219391759764782\nor\nhttps://vm.tiktok.com/ZSeQS6B5k/",
                    "type": "STRING"
                },
                {
                    "name": "cursor",
                    "description": "hasMore is True",
                    "type": "NUMBER"
                },
                {
                    "name": "count",
                    "description": "max 50",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-video-feature-summary.p.rapidapi.com/comment/list\"\nquerystring = {\"cursor\": \"0\", \"url\": \"https://www.tiktok.com/@tiktok/video/7093219391759764782\", \"count\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-video-feature-summary.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tiktok Video Feature Summary",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "https://www.tiktok.com/@tiktok/video/7093219391759764782\nor\n7093219391759764782\nor\nhttps://vm.tiktok.com/ZSeQS6B5k/",
                    "default": "https://www.tiktok.com/@tiktok/video/7093219391759764782"
                },
                {
                    "name": "cursor",
                    "type": "NUMBER",
                    "description": "hasMore is True",
                    "default": "0"
                },
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "max 50",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to search for addresses in the UK using the query \"Farringdon Road\".",
        "model_answer": "requests.get(\"https://find-by-address.p.rapidapi.com/v1/addresses\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"find-by-address.p.rapidapi.com\"}, params={\"query\": \"Farringdon Road\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "\u201cFind By Address\u201d API gets addresses for given search term. This API provides a JSON interface to search UK addresses. This API gives access to Royal Mail PAF data and Geocoding. his API uses the latest PAF and Multiple Residence data from Royal Mail.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://find-by-address.p.rapidapi.com/v1/addresses'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://find-by-address.p.rapidapi.com/v1/addresses\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://find-by-address.p.rapidapi.com/v1/addresses\"\nquerystring = {\"query\": \"Farringdon Road\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"find-by-address.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Find By Address",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "Farringdon Road"
                }
            ]
        }
    },
    {
        "query": "Please get the real-time finance data for Bitcoin to USD in Spanish language.",
        "model_answer": "requests.get(\"https://real-time-finance-data.p.rapidapi.com/currency-news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"real-time-finance-data.p.rapidapi.com\"}, params={\"from_symbol\": \"BTC\", \"to_symbol\": \"USD\", \"language\": \"es\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Get stocks / market quotes and trends, ETF, international exchanges / forex, crypto,  related news and analytics in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://real-time-finance-data.p.rapidapi.com/currency-news'\nquerystring = {\"from_symbol\": \"\", \"to_symbol\": \"\", \"language\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://real-time-finance-data.p.rapidapi.com/currency-news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "from_symbol",
                    "description": "A 3-Letter currency code / symbol (ISO 4217). For example: *USD*.",
                    "type": "STRING"
                },
                {
                    "name": "to_symbol",
                    "description": "A 3-Letter currency code / symbol (ISO 4217). For example: *EUR*.",
                    "type": "STRING"
                },
                {
                    "name": "language",
                    "description": "The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://real-time-finance-data.p.rapidapi.com/currency-news\"\nquerystring = {\"language\": \"en\", \"from_symbol\": \"USD\", \"to_symbol\": \"EUR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"real-time-finance-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Real-Time Finance Data",
            "api_arguments_original": [
                {
                    "name": "from_symbol",
                    "type": "STRING",
                    "description": "A 3-Letter currency code / symbol (ISO 4217). For example: *USD*.",
                    "default": "USD"
                },
                {
                    "name": "to_symbol",
                    "type": "STRING",
                    "description": "A 3-Letter currency code / symbol (ISO 4217). For example: *EUR*.",
                    "default": "EUR"
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The language to use for the results, specified as a 2-letter language code - see [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).\n\n**Default**: *en*.",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Can you help me get the price and product details for the ASINs B005YQZ1KE and B074R8RQQ2 on Amazon.com?",
        "model_answer": "requests.get(\"https://amazon-product-price-data.p.rapidapi.com/product\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-product-price-data.p.rapidapi.com\"}, params={\"locale\": \"US\", \"asins\": \"B005YQZ1KE,B074R8RQQ2\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Cheap and lightweight API to get rich Amazon product metadata",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazon-product-price-data.p.rapidapi.com/product'\nquerystring = {\"locale\": \"\", \"asins\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazon-product-price-data.p.rapidapi.com/product\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "locale",
                    "description": "Currently supported locales:\n\nUS (amazon.com)\nUK (amazon.co.uk)\nCA (amazon.ca)\nIN (amazon.in)\nFR (amazon.fr)\n\nMore coming soon!",
                    "type": "STRING"
                },
                {
                    "name": "asins",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazon-product-price-data.p.rapidapi.com/product\"\nquerystring = {\"locale\": \"US\", \"asins\": \"B005YQZ1KE,B074R8RQQ2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazon-product-price-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Amazon Product Price Data",
            "api_arguments_original": [
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "Currently supported locales:\n\nUS (amazon.com)\nUK (amazon.co.uk)\nCA (amazon.ca)\nIN (amazon.in)\nFR (amazon.fr)\n\nMore coming soon!",
                    "default": "US"
                },
                {
                    "name": "asins",
                    "type": "STRING",
                    "description": "",
                    "default": "B005YQZ1KE,B074R8RQQ2"
                }
            ]
        }
    },
    {
        "query": "How can I convert an image to ASCII using the Img to ASCII API with the image located at \"/path/to/image.jpg\"?",
        "model_answer": "response = requests.get(\"https://img-to-ascii.p.rapidapi.com/get-ascii/2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"img-to-ascii.p.rapidapi.com\"}, params={\"id\": \"/path/to/image.jpg\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Convert picture to ASCII image by URL or upload your own image.\nSet the specific size for the ASCII result.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://img-to-ascii.p.rapidapi.com/get-ascii/2'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://img-to-ascii.p.rapidapi.com/get-ascii/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://img-to-ascii.p.rapidapi.com/get-ascii/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"img-to-ascii.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Img to ASCII",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "I want to get the scheduled handball matches for tomorrow.",
        "model_answer": "requests.get(\"https://handball-data.p.rapidapi.com/match/list/scheduled\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"handball-data.p.rapidapi.com\"}, params={\"date\": \"29/01/2022\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Broadage Handball API will give you wide range of data of world's top handball leagues, including fixtures, standings, match lists and many more. Our Handball Coverage includes the biggest handball tournaments from all around the world with in-depth coverage, giving you the opportunity to present the best sports data to users located anywhere.<br>This is a limited version in RapidApi. <a href=\"https://www.broadage.com/signup/api/free?utm_source=rapidapi&utm_medium=click&utm_campaign=handball_api\" target=\u201d_blank\u201d>Please, click here to start your Free Trial and try the endpoints with live data now!</a>",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://handball-data.p.rapidapi.com/match/list/scheduled'\nquerystring = {\"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://handball-data.p.rapidapi.com/match/list/scheduled\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "date",
                    "description": "The date of the match. The format is {dd/MM/yyyy}. Match list data can be retrieved for only \u00b1 7 days.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://handball-data.p.rapidapi.com/match/list/scheduled\"\nquerystring = {\"date\": \"28/01/2021\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"handball-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Handball Data",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "The date of the match. The format is {dd/MM/yyyy}. Match list data can be retrieved for only \u00b1 7 days.",
                    "default": "28/01/2021"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest cricket series data?",
        "model_answer": "response = requests.get(\"https://cricket-live-data.p.rapidapi.com/series\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"cricket-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Fixtures, Results, and scorecards for the worlds most popular cricket tournaments",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cricket-live-data.p.rapidapi.com/series'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cricket-live-data.p.rapidapi.com/series\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cricket-live-data.p.rapidapi.com/series\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cricket-live-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Cricket Live Data",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you calculate the distance between start (-118.2437, 34.0522) and end (-122.4194, 37.7749) coordinates?",
        "model_answer": "requests.get(\"https://geowide.p.rapidapi.com/distance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"geowide.p.rapidapi.com\"}, params={\"start_longitude\": -118.2437, \"start_latitude\": 34.0522, \"end_latitude\": 37.7749, \"end_longitude\": -122.4194})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "GeoWide API efficiently calculates distances between geographic points, enabling accurate measurements for various applications. With minimal latency, it returns the distance in kilometers, miles, or other units, empowering developers to incorporate precise geographic calculations into their projects effortlessly.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geowide.p.rapidapi.com/distance'\nquerystring = {\"start_longitude\": \"\", \"start_latitude\": \"\", \"end_latitude\": \"\", \"end_longitude\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geowide.p.rapidapi.com/distance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "start_longitude",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "start_latitude",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "end_latitude",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "end_longitude",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geowide.p.rapidapi.com/distance\"\nquerystring = {\"start_longitude\": \"12.482778\", \"start_latitude\": \"41.893333\", \"end_latitude\": \"40.416944\", \"end_longitude\": \"-3.703333\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geowide.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GeoWide",
            "api_arguments_original": [
                {
                    "name": "start_longitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "12.482778"
                },
                {
                    "name": "start_latitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "41.893333"
                },
                {
                    "name": "end_latitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "40.416944"
                },
                {
                    "name": "end_longitude",
                    "type": "NUMBER",
                    "description": "",
                    "default": "-3.703333"
                }
            ]
        }
    },
    {
        "query": "Please provide the token price and other information for the token with address 0xe9e7cea3dedca5984780bafc599bd69add087d56.",
        "model_answer": "requests.get(\"https://pancakeswap-api.p.rapidapi.com/get_balance\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pancakeswap-api.p.rapidapi.com\"}, params={\"address\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\", \"token\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "A pancakeswap API to get token price and other information with token address. Token price, token name, token decimals,  balance of an address, token supply, token symbol.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pancakeswap-api.p.rapidapi.com/get_balance'\nquerystring = {\"address\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pancakeswap-api.p.rapidapi.com/get_balance\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "address",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "token",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pancakeswap-api.p.rapidapi.com/get_balance\"\nquerystring = {\"address\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\", \"token\": \"0xe9e7cea3dedca5984780bafc599bd69add087d56\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pancakeswap-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pancakeswap API",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": "0xe9e7cea3dedca5984780bafc599bd69add087d56"
                }
            ]
        }
    },
    {
        "query": "Can you check if this person with person_id 123456 is in the facial authentication database?",
        "model_answer": "requests.get(\"https://auther-check.p.rapidapi.com/person/face/123456\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Plug and play the facial authentication into: point of sale, mobile app, self-checkouts, kiosk, ATM.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://auther-check.p.rapidapi.com/person/face/{person_id}'\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://auther-check.p.rapidapi.com/person/face/{person_id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "person_id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://auther-check.p.rapidapi.com/person/face/{person_id}\"\nquerystring = {\"person_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"auther-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Auther Check",
            "api_arguments_original": [
                {
                    "name": "person_id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the comments for context \"string\" using The South Asian Express API.",
        "model_answer": "response = requests.get(\"https://the-south-asian-express.p.rapidapi.com/comments\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"the-south-asian-express.p.rapidapi.com\"}, params={\"context\": \"string\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Wordpress v2 API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://the-south-asian-express.p.rapidapi.com/comments'\nquerystring = {\"context\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://the-south-asian-express.p.rapidapi.com/comments\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "context",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://the-south-asian-express.p.rapidapi.com/comments\"\nquerystring = {\"context\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"the-south-asian-express.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "The South Asian Express",
            "api_arguments_original": [
                {
                    "name": "context",
                    "type": "STRING",
                    "description": "Scope under which the request is made; determines fields present in response.",
                    "default": "string"
                }
            ]
        }
    },
    {
        "query": "I want to get 5 chess puzzles with themes \"endgame\" and \"tactics\" from the Chess Puzzles_v2 API.",
        "model_answer": "requests.get(\"https://chess-puzzles2.p.rapidapi.com/advanced\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"}, params={\"number_of_puzzles\": 5, \"themes\": \"endgame,tactics\", \"theme_search_type\": \"AND\", \"number_of_moves\": 4, \"opening_variation\": \"Kings_Gambit_Accepted_Abbazia_Defense\", \"rating\": 1200, \"opening_family\": \"Kings_Gambit_Accepted\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Quickly access 1.000.000+ chess puzzles!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://chess-puzzles2.p.rapidapi.com/advanced'\nquerystring = {\"number_of_puzzles\": \"\", \"themes\": \"\", \"theme_search_type\": \"\", \"number_of_moves\": \"\", \"opening_variation\": \"\", \"rating\": \"\", \"opening_family\": \"\", \"max_deviation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://chess-puzzles2.p.rapidapi.com/advanced\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "number_of_puzzles",
                    "description": "Number of puzzles you will get",
                    "type": "NUMBER"
                },
                {
                    "name": "themes",
                    "description": "Themes of the puzzles",
                    "type": "STRING"
                },
                {
                    "name": "theme_search_type",
                    "description": "AND: if puzzles need to have all themes;  OR: if puzzles can have either theme",
                    "type": "STRING"
                },
                {
                    "name": "number_of_moves",
                    "description": "Total number of moves of the puzzles",
                    "type": "NUMBER"
                },
                {
                    "name": "opening_variation",
                    "description": "Puzzle's opening variation",
                    "type": "STRING"
                },
                {
                    "name": "rating",
                    "description": "Rating of the puzzles",
                    "type": "STRING"
                },
                {
                    "name": "opening_family",
                    "description": "Puzzle's opening family",
                    "type": "STRING"
                },
                {
                    "name": "max_deviation",
                    "description": "Maximum possible rating deviation",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://chess-puzzles2.p.rapidapi.com/advanced\"\nquerystring = {\"number_of_puzzles\": \"1\", \"themes\": \"kingsideAttack,middlegame\", \"theme_search_type\": \"AND\", \"number_of_moves\": \"4\", \"opening_variation\": \"Kings_Gambit_Accepted_Abbazia_Defense\", \"rating\": \"1200\", \"opening_family\": \"Kings_Gambit_Accepted\", \"max_deviation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chess-puzzles2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Chess Puzzles_v2",
            "api_arguments_original": [
                {
                    "name": "number_of_puzzles",
                    "type": "NUMBER",
                    "description": "Number of puzzles you will get",
                    "default": "1"
                },
                {
                    "name": "themes",
                    "type": "STRING",
                    "description": "Themes of the puzzles",
                    "default": "kingsideAttack,middlegame"
                },
                {
                    "name": "theme_search_type",
                    "type": "STRING",
                    "description": "AND: if puzzles need to have all themes;  OR: if puzzles can have either theme",
                    "default": "AND"
                },
                {
                    "name": "number_of_moves",
                    "type": "NUMBER",
                    "description": "Total number of moves of the puzzles",
                    "default": "4"
                },
                {
                    "name": "opening_variation",
                    "type": "STRING",
                    "description": "Puzzle's opening variation",
                    "default": "Kings_Gambit_Accepted_Abbazia_Defense"
                },
                {
                    "name": "rating",
                    "type": "STRING",
                    "description": "Rating of the puzzles",
                    "default": "1200"
                },
                {
                    "name": "opening_family",
                    "type": "STRING",
                    "description": "Puzzle's opening family",
                    "default": "Kings_Gambit_Accepted"
                },
                {
                    "name": "max_deviation",
                    "type": "NUMBER",
                    "description": "Maximum possible rating deviation",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me the current online music statistics?",
        "model_answer": "requests.get(\"https://online-music.p.rapidapi.com/online-music.su\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"online-music.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Music site",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://online-music.p.rapidapi.com/online-music.su'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://online-music.p.rapidapi.com/online-music.su\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://online-music.p.rapidapi.com/online-music.su\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"online-music.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "online-music",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with a list of radio stations from the GMC Radio API?",
        "model_answer": "requests.get(\"https://gmc-radio.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gmc-radio.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "GMC Radio",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gmc-radio.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gmc-radio.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gmc-radio.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gmc-radio.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GMC Radio",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please retrieve the political towns associated with the ZIP code 3052.",
        "model_answer": "requests.get(\"https://schweizer-postleitzahlen.p.rapidapi.com/zip/3052\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"schweizer-postleitzahlen.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "API to get political towns from a ZIP-code (Postleitzahl)\nA ZIP-code can belong to multiple towns.\nThe data is updated daily.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://schweizer-postleitzahlen.p.rapidapi.com/zip/3052'\nquerystring = {\"zip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://schweizer-postleitzahlen.p.rapidapi.com/zip/3052\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "zip",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://schweizer-postleitzahlen.p.rapidapi.com/zip/3052\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"schweizer-postleitzahlen.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Schweizer Postleitzahlen",
            "api_arguments_original": [
                {
                    "name": "zip",
                    "type": "NUMBER",
                    "description": "",
                    "default": "3052"
                }
            ]
        }
    },
    {
        "query": "How can I get the tick data for the cryptocurrency contract BTCUSDT on Bybit?",
        "model_answer": "requests.get(\"https://bybit4.p.rapidapi.com/perpetual/usdc/openapi/public/v1/tick\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bybit4.p.rapidapi.com\"}, params={\"symbol\": \"BTCUSDT\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Public Data Bybit. Cryptocurrency prices and charts. Derivatives, Futures, Spot, USDC Contract",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bybit4.p.rapidapi.com/perpetual/usdc/openapi/public/v1/tick'\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bybit4.p.rapidapi.com/perpetual/usdc/openapi/public/v1/tick\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "symbol",
                    "description": "Contract name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bybit4.p.rapidapi.com/perpetual/usdc/openapi/public/v1/tick\"\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bybit4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bybit",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "Contract name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me the trending topics in the Left 4 Dead steam community?",
        "model_answer": "requests.get(\"https://steam-community.p.rapidapi.com/group/trendingtopics/l4d\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"steam-community.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Interface with elements on the SteamCommunity.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://steam-community.p.rapidapi.com/group/trendingtopics/l4d'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://steam-community.p.rapidapi.com/group/trendingtopics/l4d\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://steam-community.p.rapidapi.com/group/trendingtopics/l4d\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"steam-community.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Steam Community",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "l4d"
                }
            ]
        }
    },
    {
        "query": "I want to print labels in A4 format with Avery brand using the Print your own labels and stickers API.",
        "model_answer": "requests.get(\"https://print-your-own-labels-and-stickers.p.rapidapi.com/labels/letter\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"print-your-own-labels-and-stickers.p.rapidapi.com\"}, params={\"format\": \"A4\", \"brand\": \"Avery\", \"height\": \"\", \"code\": \"2x2\", \"width\": \"\", \"shape\": \"\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "Help your customers print their own labels and stickers, from your own website and under your own branding.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://print-your-own-labels-and-stickers.p.rapidapi.com/labels/letter'\nquerystring = {\"format\": \"\", \"brand\": \"\", \"height\": \"\", \"code\": \"\", \"width\": \"\", \"shape\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://print-your-own-labels-and-stickers.p.rapidapi.com/labels/letter\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "format",
                    "description": "Its value can be either \n**Letter**\nor \n**A4** \nThey represent the two world standard printer paper sizes, respectively 8.5 inch by 11 inch and 210 mm by 297 mm.",
                    "type": "string"
                },
                {
                    "name": "brand",
                    "description": "Label manufacturer's name.\nThis is the current list of possible values. We will continue adding new brands.\nAvery\nHerma\nOnlinelabels\nUline\nMegastar\nSheetlabels",
                    "type": "STRING"
                },
                {
                    "name": "height",
                    "description": "Label height.",
                    "type": "STRING"
                },
                {
                    "name": "code",
                    "description": "It is a string that represents **average** label sizes, in the format [width]x[height].\nFor example:\n**2.5x4**\nor \n**70x40**\n\nBeing average sizes, means that they represent all sizes that are close to them. \nE.g. **3x2** would represent any other close sizes like **3.062x1.837**.\n\nThis concept is useful, when you are going to suggest to your users, which templates do offer label sizes that are equal of close to the label size they need to print on.",
                    "type": "STRING"
                },
                {
                    "name": "width",
                    "description": "Label width",
                    "type": "STRING"
                },
                {
                    "name": "shape",
                    "description": "Label shape.\nValid values are:\nsquare\nrectangle\ncircle\noval",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://print-your-own-labels-and-stickers.p.rapidapi.com/labels/letter\"\nquerystring = {\"brand\": \"avery\", \"height\": \"\", \"code\": \"2x2\", \"width\": \"\", \"shape\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"print-your-own-labels-and-stickers.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Print your own labels and stickers",
            "api_arguments_original": [
                {
                    "name": "format",
                    "type": "string",
                    "description": "Its value can be either \n**Letter**\nor \n**A4** \nThey represent the two world standard printer paper sizes, respectively 8.5 inch by 11 inch and 210 mm by 297 mm.",
                    "default": "letter"
                },
                {
                    "name": "brand",
                    "type": "STRING",
                    "description": "Label manufacturer's name.\nThis is the current list of possible values. We will continue adding new brands.\nAvery\nHerma\nOnlinelabels\nUline\nMegastar\nSheetlabels",
                    "default": "avery"
                },
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "Label height.",
                    "default": ""
                },
                {
                    "name": "code",
                    "type": "STRING",
                    "description": "It is a string that represents **average** label sizes, in the format [width]x[height].\nFor example:\n**2.5x4**\nor \n**70x40**\n\nBeing average sizes, means that they represent all sizes that are close to them. \nE.g. **3x2** would represent any other close sizes like **3.062x1.837**.\n\nThis concept is useful, when you are going to suggest to your users, which templates do offer label sizes that are equal of close to the label size they need to print on.\n",
                    "default": "2x2"
                },
                {
                    "name": "width",
                    "type": "STRING",
                    "description": "Label width",
                    "default": ""
                },
                {
                    "name": "shape",
                    "type": "STRING",
                    "description": "Label shape.\nValid values are:\nsquare\nrectangle\ncircle\noval",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the aircraft information for registration number N12345?",
        "model_answer": "requests.get(\"https://flightera-flight-data.p.rapidapi.com/aircraft/info\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"flightera-flight-data.p.rapidapi.com\"}, params={\"reg\" \"N12345\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Flight status, on-time performance and statistics by Flightera",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flightera-flight-data.p.rapidapi.com/aircraft/info'\nquerystring = {\"reg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flightera-flight-data.p.rapidapi.com/aircraft/info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "reg",
                    "description": "The registration of the aircraft, as returned by /airline/aircraft or /aircraft/search",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flightera-flight-data.p.rapidapi.com/aircraft/info\"\nquerystring = {\"reg\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flightera-flight-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flightera Flight Data",
            "api_arguments_original": [
                {
                    "name": "reg",
                    "type": "STRING",
                    "description": "The registration of the aircraft, as returned by /airline/aircraft or /aircraft/search",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get famous movie quotes by Al Pacino.",
        "model_answer": "requests.get(\"https://movie-and-tv-shows-quotes.p.rapidapi.com/quotes/actor/al_pachino\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"movie-and-tv-shows-quotes.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "This API helps query for Famous Movies and TV shows quotes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://movie-and-tv-shows-quotes.p.rapidapi.com/quotes/actor/al_pachino'\nquerystring = {\"actor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://movie-and-tv-shows-quotes.p.rapidapi.com/quotes/actor/al_pachino\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "actor",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://movie-and-tv-shows-quotes.p.rapidapi.com/quotes/actor/al_pachino\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"movie-and-tv-shows-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Movie and TV shows Quotes",
            "api_arguments_original": [
                {
                    "name": "actor",
                    "type": "string",
                    "description": "",
                    "default": "al_pachino"
                }
            ]
        }
    },
    {
        "query": "I want to generate a QR code for the website grayhat.in using the Image QR code generator API.",
        "model_answer": "requests.get(\"https://image-qr-code-generator.p.rapidapi.com/qr\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"image-qr-code-generator.p.rapidapi.com\"}, params={\"url\": \"grayhat.in\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "This API generates Image QR codes",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://image-qr-code-generator.p.rapidapi.com/qr'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://image-qr-code-generator.p.rapidapi.com/qr\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://image-qr-code-generator.p.rapidapi.com/qr\"\nquerystring = {\"url\": \"grayhat.in\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-qr-code-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Image QR code generator",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "grayhat.in"
                }
            ]
        }
    },
    {
        "query": "Can you rank the top J2A coins for me?",
        "model_answer": "requests.get(\"https://j2acoin.p.rapidapi.com/getRankingList\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"j2acoin.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://j2acoin.p.rapidapi.com/getRankingList'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://j2acoin.p.rapidapi.com/getRankingList\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://j2acoin.p.rapidapi.com/getRankingList\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"j2acoin.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "J2ACoin",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you generate a random name for me?",
        "model_answer": "requests.get(\"https://random-chunk-api.p.rapidapi.com/api/name\")",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "A simple random picker for names, movies, TV shows, quotes, and numbers. A simple JSON object, user object, and array generator.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-chunk-api.p.rapidapi.com/api/color'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-chunk-api.p.rapidapi.com/api/color\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-chunk-api.p.rapidapi.com/api/color\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-chunk-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Chunk API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if the email example@gmail.com is valid.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"check-disposable-email.p.rapidapi.com\"}, params={\"email\" \"example@gmail.com\"})",
        "original": {
            "domain": "Science",
            "framework": "RapidAPI",
            "functionality": "Astrology made easy! Astrological calculation, birth charts, composite charts in SVG. Plus all astrological data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://astrologer.p.rapidapi.com/api/v3/now'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://astrologer.p.rapidapi.com/api/v3/now\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://astrologer.p.rapidapi.com/api/v3/now\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"astrologer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Astrologer",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the geocoding data for the postcode \"PL11DN\" using the UK PostCode API.",
        "model_answer": "requests.get(\"https://uk-postcode-api.p.rapidapi.com/postcodes/PL11DN\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"uk-postcode-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Energy",
            "framework": "RapidAPI",
            "functionality": "Auto populate your app & service with accurate and comprehensive PAF & Geocoding data from the Royal Mail",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://uk-postcode-api.p.rapidapi.com/postcodes/PL11DN'\nquerystring = {\"postcode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://uk-postcode-api.p.rapidapi.com/postcodes/PL11DN\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "postcode",
                    "description": "Pass a PostCode value for looking up addresses",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://uk-postcode-api.p.rapidapi.com/postcodes/PL11DN\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"uk-postcode-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "UK PostCode API",
            "api_arguments_original": [
                {
                    "name": "postcode",
                    "type": "STRING",
                    "description": "Pass a PostCode value for looking up addresses",
                    "default": "PL11DN"
                }
            ]
        }
    },
    {
        "query": "I want to convert a speech file named \"audio.wav\" to text using the Speech Recognition API.",
        "model_answer": "requests.get(\"https://speech-recognition14.p.rapidapi.com/languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"speech-recognition14.p.rapidapi.com\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Convert speech to text quickly and easily. Supports 100+ languages",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://speech-recognition14.p.rapidapi.com/languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://speech-recognition14.p.rapidapi.com/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://speech-recognition14.p.rapidapi.com/languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"speech-recognition14.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Speech Recognition",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide real-time LinkedIn company data for the domain \"apple.com\"?",
        "model_answer": "requests.get(\"https://fresh-linkedin-company-data.p.rapidapi.com/get-company-by-domain\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fresh-linkedin-company-data.p.rapidapi.com\"}, params={\"domain\": \"apple.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "**Real-time** LinkedIn Company data based on Numeric ID, Domain or URL. **Really working now 2023**. Scalable API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fresh-linkedin-company-data.p.rapidapi.com/get-company-by-domain'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fresh-linkedin-company-data.p.rapidapi.com/get-company-by-domain\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fresh-linkedin-company-data.p.rapidapi.com/get-company-by-domain\"\nquerystring = {\"domain\": \"apple.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fresh-linkedin-company-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fresh LinkedIn Company Data",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "apple.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the latest weather data for Seattle, United States?",
        "model_answer": "requests.get(\"https://weather-by-api-ninjas.p.rapidapi.com/v1/weather\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weather-by-api-ninjas.p.rapidapi.com\"}, params={\"city\": \"Seattle\", \"state\": \"United States\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Get the latest weather data for any region in the world. See more info at https://api-ninjas.com/api/weather.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weather-by-api-ninjas.p.rapidapi.com/v1/weather'\nquerystring = {\"country\": \"\", \"lon\": \"\", \"zip\": \"\", \"state\": \"\", \"city\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weather-by-api-ninjas.p.rapidapi.com/v1/weather\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "country",
                    "description": "Country name.",
                    "type": "STRING"
                },
                {
                    "name": "lon",
                    "description": "Longitude of desired location. If used, **lat** parameter must also be supplied.",
                    "type": "STRING"
                },
                {
                    "name": "zip",
                    "description": "5-digit Zip code (United States only).",
                    "type": "NUMBER"
                },
                {
                    "name": "state",
                    "description": "US state (United States only).",
                    "type": "STRING"
                },
                {
                    "name": "city",
                    "description": "City name.",
                    "type": "STRING"
                },
                {
                    "name": "lat",
                    "description": "Latitude of desired location. If used, **lon** parameter must also be supplied.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weather-by-api-ninjas.p.rapidapi.com/v1/weather\"\nquerystring = {\"country\": \"\", \"lon\": \"\", \"zip\": \"\", \"state\": \"\", \"city\": \"Seattle\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weather-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Weather by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Country name.",
                    "default": ""
                },
                {
                    "name": "lon",
                    "type": "STRING",
                    "description": "Longitude of desired location. If used, **lat** parameter must also be supplied.",
                    "default": ""
                },
                {
                    "name": "zip",
                    "type": "NUMBER",
                    "description": "5-digit Zip code (United States only).",
                    "default": ""
                },
                {
                    "name": "state",
                    "type": "STRING",
                    "description": "US state (United States only).",
                    "default": ""
                },
                {
                    "name": "city",
                    "type": "STRING",
                    "description": "City name.",
                    "default": "Seattle"
                },
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "Latitude of desired location. If used, **lon** parameter must also be supplied.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with a random quote from the anime character Naruto?",
        "model_answer": "requests.get(\"https://anime-quotes1.p.rapidapi.com/api/quotes/character\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"anime-quotes1.p.rapidapi.com\"}, params={\"name\": \"Naruto\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "A free restful API serving quality anime quotes",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://anime-quotes1.p.rapidapi.com/api/quotes/character'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://anime-quotes1.p.rapidapi.com/api/quotes/character\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://anime-quotes1.p.rapidapi.com/api/quotes/character\"\nquerystring = {\"name\": \"Goku\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"anime-quotes1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Anime Quotes",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Goku"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the details of the job with the Job ID J123456 in the USA Jobs for IT API.",
        "model_answer": "response = requests.get(\"https://usa-jobs-for-it.p.rapidapi.com/FullStack\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"usa-jobs-for-it.p.rapidapi.com\"}, params={\"job_id\": \"J123456\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An USA Jobs for IT API from different sources",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://usa-jobs-for-it.p.rapidapi.com/FullStack'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://usa-jobs-for-it.p.rapidapi.com/FullStack\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://usa-jobs-for-it.p.rapidapi.com/FullStack\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"usa-jobs-for-it.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "USA Jobs for IT",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check this image file if it contains any explicit content?",
        "model_answer": "requests.get(\"https://nsfw3.p.rapidapi.com/v1/version\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nsfw3.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "This API processes images and detects sexual content in them, marking the images as Safe For Work (SFW) or Not Safe For Work (NSFW).  [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/nsfw) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/nsfw?utm_source=nsfw_rapidapi&utm_medium=endpoints&utm_campaign=rapidapi) [![Telegram](https://img.shields.io/ba...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nsfw3.p.rapidapi.com/v1/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nsfw3.p.rapidapi.com/v1/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nsfw3.p.rapidapi.com/v1/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nsfw3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NSFW",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if the firmware with SHA2 hash \"ab34cd56ef78\" is valid using IoTVAS API?",
        "model_answer": "requests.get(\"https://iotvas.p.rapidapi.com/firmware/af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175/accounts\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"iotvas.p.rapidapi.com\"}, params={\"firmware_hash\" \"ab34cd56ef78\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "IOTVAS API enables you to detect IoT devices in the network and provides detailed firmware risk analysis without requiring the user to upload the firmware file.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://iotvas.p.rapidapi.com/firmware/af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175/accounts'\nquerystring = {\"firmware_hash\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://iotvas.p.rapidapi.com/firmware/af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175/accounts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "firmware_hash",
                    "description": "SHA2 hash of device firmware",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://iotvas.p.rapidapi.com/firmware/af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175/accounts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iotvas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IoTVAS",
            "api_arguments_original": [
                {
                    "name": "firmware_hash",
                    "type": "STRING",
                    "description": "SHA2 hash of device firmware",
                    "default": "af88b1aaac0b222df8539f3ae1479b5c8eaeae41f1776b5dd2fa805cb33a1175"
                }
            ]
        }
    },
    {
        "query": "Can you track energy prices on Sky News?",
        "model_answer": "response = requests.get(\"https://energy-price-news.p.rapidapi.com/news/sources/skynews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"energy-price-news.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Tracking multiple news sources for articles about energy prices",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://energy-price-news.p.rapidapi.com/news/sources/skynews'\nquerystring = {\"sourceId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://energy-price-news.p.rapidapi.com/news/sources/skynews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sourceid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://energy-price-news.p.rapidapi.com/news/sources/skynews\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"energy-price-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Energy Price News",
            "api_arguments_original": [
                {
                    "name": "sourceId",
                    "type": "string",
                    "description": "",
                    "default": "skynews"
                }
            ]
        }
    },
    {
        "query": "How can I get the list of tools available for API deployment from APIEvangelist?",
        "model_answer": "requests.get(\"https://ismaelc-apievangelist.p.rapidapi.com/data/tools.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ismaelc-apievangelist.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Kin Lane's list of tools for API deployment.  What can I say?  He's da man!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ismaelc-apievangelist.p.rapidapi.com/data/tools.json'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ismaelc-apievangelist.p.rapidapi.com/data/tools.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ismaelc-apievangelist.p.rapidapi.com/data/tools.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ismaelc-apievangelist.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "APIEvangelist",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the arrival flights for \"LHR\" airport using the Flight Fare Search API.",
        "model_answer": "requests.get(\"https://flight-fare-search.p.rapidapi.com/v2/airport/arrivals\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"flight-fare-search.p.rapidapi.com\"}, params={\"airportCode\" \"LHR\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Elevate your travel game with Flight Fare Search API! Get real-time flight data, fares, and airport info for seamless travel planning. Transform your app into a powerful travel companion with Flight Fare Search.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flight-fare-search.p.rapidapi.com/v2/airport/arrivals'\nquerystring = {\"airportCode\": \"\", \"carrierCode\": \"\", \"date\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flight-fare-search.p.rapidapi.com/v2/airport/arrivals\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "airportcode",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "carriercode",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "date",
                    "description": "",
                    "type": "DATE (YYYY-MM-DD)"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flight-fare-search.p.rapidapi.com/v2/airport/arrivals\"\nquerystring = {\"carrierCode\": \"\", \"date\": \"\", \"airportCode\": \"LHR\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flight-fare-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flight Fare Search",
            "api_arguments_original": [
                {
                    "name": "airportCode",
                    "type": "STRING",
                    "description": "",
                    "default": "LHR"
                },
                {
                    "name": "carrierCode",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please get the latest foreign exchange reference rates from the European Central Bank API.",
        "model_answer": "requests.get(\"https://european-central-bank-reference-rates.p.rapidapi.com/GetReferenceRates\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"european-central-bank-reference-rates.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Get the 30 Euro foreign exchange reference rates in JSON-format. Updated every day at around 16:00 CET by the ECB (European Central Bank).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://european-central-bank-reference-rates.p.rapidapi.com/GetReferenceRates'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://european-central-bank-reference-rates.p.rapidapi.com/GetReferenceRates\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://european-central-bank-reference-rates.p.rapidapi.com/GetReferenceRates\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"european-central-bank-reference-rates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "European Central Bank - Reference Rates",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to search for email marketing and landing pages softwares.",
        "model_answer": "requests.get(\"https://saas-softwares-and-features-api.p.rapidapi.com/assets\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"saas-softwares-and-features-api.p.rapidapi.com\"}, params={\"q\": \"email-marketing, landing-pages\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "This API allows you to query SaaS software, products and tools and their meta data such as description, logo, video url, and the features they offer. You can use the name of the feature(s) to query. For example you can answer questions like, \"Get all Email Markeitng software\".",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://saas-softwares-and-features-api.p.rapidapi.com/assets'\nquerystring = {\"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://saas-softwares-and-features-api.p.rapidapi.com/assets\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://saas-softwares-and-features-api.p.rapidapi.com/assets\"\nquerystring = {\"q\": \"email-marketing, landing-pages\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"saas-softwares-and-features-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SaaS Softwares and Features API",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "email-marketing, landing-pages"
                }
            ]
        }
    },
    {
        "query": "Can you check if the social security number 123-45-6789 is valid in the Philippines?",
        "model_answer": "requests.get(\"https://philippines-social-security-ocr.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"philippines-social-security-ocr.p.rapidapi.com\"}, params={\"request_id\": \"123-45-6789\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Philippines Social Security OCR API allows you to onboard your customers with speed and precision.\n\nEnable them to pre-fill their onboarding forms instantly, by just uploading or scanning their Social Security card \u2013 IDfy will digitize the document for you!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://philippines-social-security-ocr.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://philippines-social-security-ocr.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://philippines-social-security-ocr.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"philippines-social-security-ocr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Philippines Social Security OCR",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "I want to check if a certain email address is valid",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "You can also select games from Mega888 slot game, and Blackjack. Mega888 table games are very best and easy for you to knowledge the global game.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ten-secrets-about-mega888-ios-download-that-has-never-been-revealed-for-the-past-years.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ten-secrets-about-mega888-ios-download-that-has-never-been-revealed-for-the-past-years.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ten-secrets-about-mega888-ios-download-that-has-never-been-revealed-for-the-past-years.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ten-secrets-about-mega888-ios-download-that-has-never-been-revealed-for-the-past-years.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ten Secrets About Mega888 Ios Download That Has Never Been Revealed For The Past Years",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check the busy and popular times for Walmart located at 8400 Coral Way, Miami, FL 33155?",
        "model_answer": "requests.get(\"https://busy-and-popular-times.p.rapidapi.com/search/Walmart+8400+Coral+Way+Miami+FL+33155\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"busy-and-popular-times.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The goal of this API  is to provide an option to use Google popular times data, until it is available via Google's API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://busy-and-popular-times.p.rapidapi.com/search/Walmart+8400+Coral+Way+Miami+FL+33155'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://busy-and-popular-times.p.rapidapi.com/search/Walmart+8400+Coral+Way+Miami+FL+33155\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://busy-and-popular-times.p.rapidapi.com/search/Walmart+8400+Coral+Way+Miami+FL+33155\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"busy-and-popular-times.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Busy and Popular Times",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "string",
                    "description": "",
                    "default": "Walmart+8400+Coral+Way+Miami+FL+33155"
                }
            ]
        }
    },
    {
        "query": "Can you provide me the tourist attractions in London?",
        "model_answer": "requests.get(\"https://opentripmap-places-v1.p.rapidapi.com/en/places/geoname\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"opentripmap-places-v1.p.rapidapi.com\"}, params={\"name\": \"London\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Over 10 million tourist attractions and facilities around the world",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://opentripmap-places-v1.p.rapidapi.com/{lang}/places/geoname'\nquerystring = {\"name\": \"\", \"lang\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://opentripmap-places-v1.p.rapidapi.com/{lang}/places/geoname\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "Placename",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "Two-letter language code (ISO639-1). The following values are available: en (english), ru (russian)",
                    "type": "ENUM"
                },
                {
                    "name": "country",
                    "description": "Two-letter country code, ISO-3166 (optional). Default is all countries.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://opentripmap-places-v1.p.rapidapi.com/{lang}/places/geoname\"\nquerystring = {\"name\": \"London\", \"lang\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opentripmap-places-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Places",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Placename",
                    "default": "London"
                },
                {
                    "name": "lang",
                    "type": "ENUM",
                    "description": "Two-letter language code (ISO639-1). The following values are available: en (english), ru (russian)",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Two-letter country code, ISO-3166 (optional). Default is all countries.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the details of a movie with movie_id=12345.",
        "model_answer": "requests.get(\"https://list-movies-v3.p.rapidapi.com/api/v2/movie_details.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"list-movies-v3.p.rapidapi.com\"}, params={\"movie_id\": \"12345\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "This Movies API contains the data of the best movies ever made in a very easy-to-use and organized format.\n\nGreat choice for REST API based Frontend Developer Projects.\n\nIn the case of accessing the complete list, the Cover image, Rank, Title, Thumbnail, Rating, Id, Year, Images, Description, Trailer, Genre, Director, Writer and ID of the movies are listed.\n\nThis is a lightweight web service, (REST interface), which provides an easy way to access our database.\n\nAn API (Application programming...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://list-movies-v3.p.rapidapi.com/api/v2/movie_details.json'\nquerystring = {\"movie_id\": \"\", \"imdb_id\": \"\", \"with_cast\": \"\", \"with_images\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://list-movies-v3.p.rapidapi.com/api/v2/movie_details.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "movie_id",
                    "description": "The YTS ID of the movie or the IMDB ID",
                    "type": "NUMBER"
                },
                {
                    "name": "imdb_id",
                    "description": "The YTS ID of the movie or the IMDB ID",
                    "type": "NUMBER"
                },
                {
                    "name": "with_cast",
                    "description": "When set the data returned will include the added information about the cast",
                    "type": "BOOLEAN"
                },
                {
                    "name": "with_images",
                    "description": "When set the data returned will include the added image URLs",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://list-movies-v3.p.rapidapi.com/api/v2/movie_details.json\"\nquerystring = {\"movie_id\": \"10\", \"imdb_id\": \"10\", \"with_cast\": \"false\", \"with_images\": \"false\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"list-movies-v3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "List Movies v3",
            "api_arguments_original": [
                {
                    "name": "movie_id",
                    "type": "NUMBER",
                    "description": "The YTS ID of the movie or the IMDB ID",
                    "default": "10"
                },
                {
                    "name": "imdb_id",
                    "type": "NUMBER",
                    "description": "The YTS ID of the movie or the IMDB ID",
                    "default": "10"
                },
                {
                    "name": "with_cast",
                    "type": "BOOLEAN",
                    "description": "When set the data returned will include the added information about the cast",
                    "default": "false"
                },
                {
                    "name": "with_images",
                    "type": "BOOLEAN",
                    "description": "When set the data returned will include the added image URLs",
                    "default": "false"
                }
            ]
        }
    },
    {
        "query": "I want to use the Hitmen2 API to retrieve gaming data.",
        "model_answer": "requests.get(\"https://hitmen2.p.rapidapi.comhttp://hitman11.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hitmen2.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "crea",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hitmen2.p.rapidapi.comhttp://hitman11.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hitmen2.p.rapidapi.comhttp://hitman11.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hitmen2.p.rapidapi.comhttp://hitman11.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hitmen2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "hitmen2",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to generate a barcode image for the data \"1234567890\" in the UPCA symbology.",
        "model_answer": "requests.get(\"https://barcode18.p.rapidapi.com/upca/data/1234567890\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\" \"barcode18.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "RESTful API for barcode image generation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://barcode18.p.rapidapi.com/upca/data/123456789012'\nquerystring = {\"symbology\": \"\", \"data\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://barcode18.p.rapidapi.com/upca/data/123456789012\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "symbology",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://barcode18.p.rapidapi.com/upca/data/123456789012\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"barcode18.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Barcode",
            "api_arguments_original": [
                {
                    "name": "symbology",
                    "type": "string",
                    "description": "",
                    "default": "upca"
                },
                {
                    "name": "data",
                    "type": "string",
                    "description": "",
                    "default": "123456789012"
                }
            ]
        }
    },
    {
        "query": "I want to test the test API.",
        "model_answer": "requests.get(\"https://test15380.p.rapidapi.com/wrty\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test15380.p.rapidapi.com\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "testjoo",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test15380.p.rapidapi.com/wrty'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test15380.p.rapidapi.com/wrty\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test15380.p.rapidapi.com/wrty\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test15380.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test",
            "api_arguments_original": []
        }
    },
    {
        "query": "I have an image of a Voter ID Card and I want to extract the data from it using the Voter Card OCR API.",
        "model_answer": "response = requests.get(\"https://voter-card-ocr.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"voter-card-ocr.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Extract data from Voter ID Card instantly and accurately!\n\n \n\nWhen paired with IDfy\u2019s Voter Card Verification API, extracts data from an image of a Voter ID Card. It accurately auto-fills this data in the right fields for a quicker &amp; errorless form-filling experience.\n\nGet your API access",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://voter-card-ocr.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://voter-card-ocr.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://voter-card-ocr.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"voter-card-ocr.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Voter Card OCR",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "I want to check if this email example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://email-address-validator4.p.rapidapi.com/v1/checkemail\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"email-address-validator4.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "Stop guessing if an email is valid or full. With this API, you can determine first hand if the email is deliverable and working. Not only can this API detect if an email is formatted correctly, it also uses various methods to verify if the email is actually valid",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://email-address-validator4.p.rapidapi.com/v1/checkemail'\nquerystring = {\"email\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://email-address-validator4.p.rapidapi.com/v1/checkemail\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://email-address-validator4.p.rapidapi.com/v1/checkemail\"\nquerystring = {\"email\": \"test@gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"email-address-validator4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Email Address Validator",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "",
                    "default": "test@gmail.com"
                }
            ]
        }
    },
    {
        "query": "Can you give me the price and information about the Pokemon Trading Card with the set number XY12-163?",
        "model_answer": "requests.get(\"https://pokemon-tcg-card-prices.p.rapidapi.com/card\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pokemon-tcg-card-prices.p.rapidapi.com\"}, params={\"setNumber\": \"XY12-163\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Provides a model of the Pokemon Trading Card Game cards.\nEach individual card has a price that is based on recent sales of the card or currently open listings.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pokemon-tcg-card-prices.p.rapidapi.com/card'\nquerystring = {\"set\": \"\", \"setId\": \"\", \"setNumber\": \"\", \"cardNumber\": \"\", \"name\": \"\", \"limit\": \"\", \"series\": \"\", \"fromId\": \"\", \"variant\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pokemon-tcg-card-prices.p.rapidapi.com/card\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "set",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "setid",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "setnumber",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "cardnumber",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "name",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Max 200, defaults to 50",
                    "type": "STRING"
                },
                {
                    "name": "series",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "fromid",
                    "description": "A paging parameter. The ID from which the query will continue.\nCalls for many results include a fromId field that can be used as a query param in the next call to get the next page of results",
                    "type": "STRING"
                },
                {
                    "name": "variant",
                    "description": "DEFAULT / REVERSE_HOLO",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pokemon-tcg-card-prices.p.rapidapi.com/card\"\nquerystring = {\"set\": \"vivid-voltage\", \"setId\": \"33ee55f4-30d0-4900-850f-36a351fb9719\", \"setNumber\": \"\", \"cardNumber\": \"\", \"name\": \"\", \"limit\": \"\", \"series\": \"sword-and-shield\", \"fromId\": \"\", \"variant\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pokemon-tcg-card-prices.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pokemon TCG Card Prices",
            "api_arguments_original": [
                {
                    "name": "set",
                    "type": "STRING",
                    "description": "",
                    "default": "vivid-voltage"
                },
                {
                    "name": "setId",
                    "type": "STRING",
                    "description": "",
                    "default": "33ee55f4-30d0-4900-850f-36a351fb9719"
                },
                {
                    "name": "setNumber",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "cardNumber",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Max 200, defaults to 50",
                    "default": ""
                },
                {
                    "name": "series",
                    "type": "STRING",
                    "description": "",
                    "default": "sword-and-shield"
                },
                {
                    "name": "fromId",
                    "type": "STRING",
                    "description": "A paging parameter. The ID from which the query will continue.\nCalls for many results include a fromId field that can be used as a query param in the next call to get the next page of results",
                    "default": ""
                },
                {
                    "name": "variant",
                    "type": "STRING",
                    "description": "DEFAULT / REVERSE_HOLO",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with crime data for the zip code 94109.",
        "model_answer": "requests.get(\"https://crime-data-by-zipcode-api.p.rapidapi.com/crime_data\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crime-data-by-zipcode-api.p.rapidapi.com\"}, params={\"zip\": \"94109\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The Crime Data By ZipCode API allows users to retrieve crime scores for a specific Zip Code in the US. It also provides additional information about crime rates and crime rates for nearby locations. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crime-data-by-zipcode-api.p.rapidapi.com/crime_data'\nquerystring = {\"zip\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crime-data-by-zipcode-api.p.rapidapi.com/crime_data\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "zip",
                    "description": "ZIP Code to retrieve crime data from.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crime-data-by-zipcode-api.p.rapidapi.com/crime_data\"\nquerystring = {\"zip\": \"94109\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crime-data-by-zipcode-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crime Data By ZipCode API",
            "api_arguments_original": [
                {
                    "name": "zip",
                    "type": "NUMBER",
                    "description": "ZIP Code to retrieve crime data from.",
                    "default": "94109"
                }
            ]
        }
    },
    {
        "query": "Please provide me with a list of physical quantities, constants, and equations.",
        "model_answer": "requests.get(\"https://physical-quantities-constants-and-equations.p.rapidapi.com/equations/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"physical-quantities-constants-and-equations.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "This API retrieves physical quantities,constants and equations formatted as JSON ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://physical-quantities-constants-and-equations.p.rapidapi.com/equations/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://physical-quantities-constants-and-equations.p.rapidapi.com/equations/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://physical-quantities-constants-and-equations.p.rapidapi.com/equations/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"physical-quantities-constants-and-equations.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Physical quantities, constants and equations ",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if my email address someone@example.com has been compromised in a data breach.",
        "model_answer": "requests.get(\"https://breachdirectory.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"breachdirectory.p.rapidapi.com\"}, params={\"term\": \"someone@example.com\", \"func\": \"auto\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Check if an email, username, password, or phone number was compromised in a data breach.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://breachdirectory.p.rapidapi.com/'\nquerystring = {\"term\": \"\", \"func\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://breachdirectory.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "term",
                    "description": "Enter the proper search term given the function you selected.",
                    "type": "STRING"
                },
                {
                    "name": "func",
                    "description": "Select the function you wish to use from the following:\n- auto: Returns passwords, SHA-1 hashes, and sources given any username or email.\n- sources: Returns sources given username or email.\n- password: Returns how many times a given password has been leaked.\n- domain: Returns passwords, SHA-1 hashes, and sources given any domain (Limited to 1000 results for security).\n- dehash: Attempts to decrypt a given hash.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://breachdirectory.p.rapidapi.com/\"\nquerystring = {\"term\": \"someone@example.com\", \"func\": \"auto\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"breachdirectory.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BreachDirectory",
            "api_arguments_original": [
                {
                    "name": "term",
                    "type": "STRING",
                    "description": "Enter the proper search term given the function you selected.",
                    "default": "someone@example.com"
                },
                {
                    "name": "func",
                    "type": "STRING",
                    "description": "Select the function you wish to use from the following:\n- auto: Returns passwords, SHA-1 hashes, and sources given any username or email.\n- sources: Returns sources given username or email.\n- password: Returns how many times a given password has been leaked.\n- domain: Returns passwords, SHA-1 hashes, and sources given any domain (Limited to 1000 results for security).\n- dehash: Attempts to decrypt a given hash.",
                    "default": "auto"
                }
            ]
        }
    },
    {
        "query": "How can I extract JSON product data from AliExpress using the AliExpress Product API?",
        "model_answer": "requests.get(\"https://aliexpress-product1.p.rapidapi.com/scraper\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"aliexpress-product1.p.rapidapi.com\"}, params={\"productId\" \"32984931216\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "AliExpress Product API is an unofficial API to extract JSON product data from aliexpress.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aliexpress-product1.p.rapidapi.com/scraper'\nquerystring = {\"productId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aliexpress-product1.p.rapidapi.com/scraper\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "productid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aliexpress-product1.p.rapidapi.com/scraper\"\nquerystring = {\"productId\": \"32984931216\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aliexpress-product1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AliExpress Product",
            "api_arguments_original": [
                {
                    "name": "productId",
                    "type": "STRING",
                    "description": "",
                    "default": "32984931216"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the forecast for Jackson Hole ski resort?",
        "model_answer": "requests.get(\"https://ski-resort-forecast.p.rapidapi.com/Jackson Hole/forecast\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ski-resort-forecast.p.rapidapi.com\"}, params={\"units\": \"i\", \"el\": \"top\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Forecast and current snow conditions for nearly every ski resort.  Perfect spelling of resort names is NOT required in most cases.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ski-resort-forecast.p.rapidapi.com/Jackson Hole/forecast'\nquerystring = {\"resort\": \"\", \"units\": \"\", \"el\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ski-resort-forecast.p.rapidapi.com/Jackson Hole/forecast\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "resort",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "units",
                    "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
                    "type": "STRING"
                },
                {
                    "name": "el",
                    "description": "Specify a part of the mountain. Accepted values are 'top', 'mid and 'bot'. Using this parameter improves response time.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ski-resort-forecast.p.rapidapi.com/Jackson Hole/forecast\"\nquerystring = {\"units\": \"i\", \"el\": \"top\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ski-resort-forecast.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ski Resort Forecast",
            "api_arguments_original": [
                {
                    "name": "resort",
                    "type": "string",
                    "description": "",
                    "default": "Jackson Hole"
                },
                {
                    "name": "units",
                    "type": "STRING",
                    "description": "Specify desired units. Accepted values are 'i' (imperial) and 'm' (metric). Using this parameter improves response time.",
                    "default": "i"
                },
                {
                    "name": "el",
                    "type": "STRING",
                    "description": "Specify a part of the mountain. Accepted values are 'top', 'mid and 'bot'. Using this parameter improves response time.",
                    "default": "top"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the details of the NBA team with ID 1234?",
        "model_answer": "requests.get(\"https://free-nba.p.rapidapi.com/teams/1234\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"free-nba.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Unofficial NBA API for Historical NBA Data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://free-nba.p.rapidapi.com/teams/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://free-nba.p.rapidapi.com/teams/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "The ID of the team",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://free-nba.p.rapidapi.com/teams/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"free-nba.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Free NBA",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The ID of the team",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you extract body shapes from full-body photos?",
        "model_answer": "requests.get(\"https://body-shape-analyzer.p.rapidapi.com/image/chkaip\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"body-shape-analyzer.p.rapidapi.com\"})",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "Extract body shapes from full-body photos on the front and side and provide the body shape analysis results.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://body-shape-analyzer.p.rapidapi.com/image/chkaip'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://body-shape-analyzer.p.rapidapi.com/image/chkaip\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://body-shape-analyzer.p.rapidapi.com/image/chkaip\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"body-shape-analyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Body Shape Analyzer",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if a certain email address is valid. Can you help me with that?",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Amazon, Ebay, Target, Walmart, Google - price & product data from all marketplaces via one API. The Price Comparison API provides price & product data incl. product title, manufacturer, sellers, reviews, prices, size selection etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://price-comparison1.p.rapidapi.com/611247373064/offers'\nquerystring = {\"id\": \"\", \"latitude\": \"\", \"longitude\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://price-comparison1.p.rapidapi.com/611247373064/offers\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "An identifier can be any of the following:\n\n- UPC\n- EAN\n- ISBN\n- GTIN\n- Amazon ASIN",
                    "type": "string"
                },
                {
                    "name": "latitude",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "longitude",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://price-comparison1.p.rapidapi.com/611247373064/offers\"\nquerystring = {\"latitude\": \"37.777805\", \"longitude\": \"-122.49493\", \"country\": \"US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"price-comparison1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Price Comparison",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "An identifier can be any of the following:\n\n- UPC\n- EAN\n- ISBN\n- GTIN\n- Amazon ASIN",
                    "default": "611247373064"
                },
                {
                    "name": "latitude",
                    "type": "STRING",
                    "description": "",
                    "default": "37.777805"
                },
                {
                    "name": "longitude",
                    "type": "STRING",
                    "description": "",
                    "default": "-122.49493"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "I want to create a GIF from the video with the URL \"https://www.example.com/video.mp4\" starting from 5 seconds and ending at 10 seconds, with a duration of 5 seconds and a size of 500x300 pixels.",
        "model_answer": "requests.get(\"https://apilayer-giflayer-v1.p.rapidapi.com/capture\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"apilayer-giflayer-v1.p.rapidapi.com\"}, params={\"url\": \"https://www.example.com/video.mp4\", \"start\": 5, \"end\": 10, \"duration\": 5, \"size\": \"500x300\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Free, powerful Video to GIF API for developers and businesses",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://apilayer-giflayer-v1.p.rapidapi.com/capture'\nquerystring = {\"url\": \"\", \"start\": \"\", \"end\": \"\", \"duration\": \"\", \"size\": \"\", \"crop\": \"\", \"fps\": \"\", \"trailer\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://apilayer-giflayer-v1.p.rapidapi.com/capture\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "The video URL you would like to generate a GIF from",
                    "type": "STRING"
                },
                {
                    "name": "start",
                    "description": "The starting time (in seconds) of your GIF",
                    "type": "NUMBER"
                },
                {
                    "name": "end",
                    "description": "The ending time (in seconds) of your GIF",
                    "type": "NUMBER"
                },
                {
                    "name": "duration",
                    "description": "The duration (in seconds) of your GIF",
                    "type": "NUMBER"
                },
                {
                    "name": "size",
                    "description": "resize the GIF to the dimensions of your choice (accepts width and height in pixels) (Default: 300x200)",
                    "type": "STRING"
                },
                {
                    "name": "crop",
                    "description": "Crop the GIF to the size of your choice (accepts width and height in pixels)",
                    "type": "STRING"
                },
                {
                    "name": "fps",
                    "description": "specify a GIF quality (Frames per Second) of your choice (Default: 15)",
                    "type": "NUMBER"
                },
                {
                    "name": "trailer",
                    "description": "Set to \"1\" to create default trailer, or specify custom trailer parameters",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://apilayer-giflayer-v1.p.rapidapi.com/capture\"\nquerystring = {\"url\": \"\", \"start\": \"\", \"end\": \"\", \"duration\": \"\", \"size\": \"\", \"crop\": \"\", \"fps\": \"15\", \"trailer\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"apilayer-giflayer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "giflayer",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The video URL you would like to generate a GIF from",
                    "default": ""
                },
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "The starting time (in seconds) of your GIF",
                    "default": ""
                },
                {
                    "name": "end",
                    "type": "NUMBER",
                    "description": "The ending time (in seconds) of your GIF",
                    "default": ""
                },
                {
                    "name": "duration",
                    "type": "NUMBER",
                    "description": "The duration (in seconds) of your GIF",
                    "default": ""
                },
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "resize the GIF to the dimensions of your choice (accepts width and height in pixels) (Default: 300x200)",
                    "default": ""
                },
                {
                    "name": "crop",
                    "type": "STRING",
                    "description": "Crop the GIF to the size of your choice (accepts width and height in pixels)",
                    "default": ""
                },
                {
                    "name": "fps",
                    "type": "NUMBER",
                    "description": "specify a GIF quality (Frames per Second) of your choice (Default: 15)",
                    "default": "15"
                },
                {
                    "name": "trailer",
                    "type": "NUMBER",
                    "description": "Set to \"1\" to create default trailer, or specify custom trailer parameters",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with information about construction projects in my area?",
        "model_answer": "requests.get(\"https://constructioness.p.rapidapi.comadasda\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"constructioness.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "adasdasd",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://constructioness.p.rapidapi.comadasda'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://constructioness.p.rapidapi.comadasda\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://constructioness.p.rapidapi.comadasda\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"constructioness.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "constructioness",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with a quality riddle.",
        "model_answer": "requests.get(\"https://riddles-by-api-ninjas.p.rapidapi.com/v1/riddles\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"riddles-by-api-ninjas.p.rapidapi.com\"}, params={\"limit\": 1})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Quality riddles perfect for entertainment apps. See more info at https://api-ninjas.com/api/riddles",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://riddles-by-api-ninjas.p.rapidapi.com/v1/riddles'\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://riddles-by-api-ninjas.p.rapidapi.com/v1/riddles\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "description": "Number of results to return. Must be between 1 and 20. Default is 1.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://riddles-by-api-ninjas.p.rapidapi.com/v1/riddles\"\nquerystring = {\"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"riddles-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Riddles by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Number of results to return. Must be between 1 and 20. Default is 1.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you generate a testimonial for a travel agency in Spanish?",
        "model_answer": "requests.get(\"https://review-generator-ai.p.rapidapi.com/api/data/locales\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"review-generator-ai.p.rapidapi.com\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Generate testimonial & review using AI. Quickly write candid testimonials and reviews for people and services in 30+ languages",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://review-generator-ai.p.rapidapi.com/api/data/locales'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://review-generator-ai.p.rapidapi.com/api/data/locales\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://review-generator-ai.p.rapidapi.com/api/data/locales\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"review-generator-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Review Generator (AI)",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to find a burger with chicken on Burgers Hub API.",
        "model_answer": "requests.get(\"https://burgers-hub.p.rapidapi.com/find-burger/\", params={\"search\": \"chicken\"}, headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"burgers-hub.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "This api returns kinds of burgers with there name, image, price, ingeridients etc",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://burgers-hub.p.rapidapi.com/find-burger/?search=chicken'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://burgers-hub.p.rapidapi.com/find-burger/?search=chicken\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://burgers-hub.p.rapidapi.com/find-burger/?search=chicken\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"burgers-hub.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Burgers Hub",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you give me live sportsbook odds from different providers?",
        "model_answer": "requests.get(\"https://sportsbook-odds.p.rapidapi.com/arb_low_hold\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sportsbook-odds.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "LIVE ODDS W/ PLAYER PROPS from Fanduel, DraftKings, Caesars, BetMGM, Bovada, BetOnline, WynnBet, PointsBet, Sugarhouse/BetRivers, SuperBook, FoxBet, BallyBet and more to come soon.\n\nLeagues: MLB, NBA, NFL, NHL, NCAA Football, NCAA Basketball.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sportsbook-odds.p.rapidapi.com/arb_low_hold'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sportsbook-odds.p.rapidapi.com/arb_low_hold\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sportsbook-odds.p.rapidapi.com/arb_low_hold\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sportsbook-odds.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sportsbook Odds",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me get data from the PSS API?",
        "model_answer": "requests.get(\"https://pss.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pss.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "pss",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pss.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pss.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pss.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pss.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "pss",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I retrieve ticket information from Etihad Airways website for flights in the UAE?",
        "model_answer": "requests.get(\"https://get_ticket_information.p.rapidapi.com/etihad.com/en-ae/manage\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\":\"get_ticket_information.p.rapidapi.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Get_Ticket_Information from Fligths",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://get_ticket_information.p.rapidapi.com/etihad.com/en-ae/manage'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://get_ticket_information.p.rapidapi.com/etihad.com/en-ae/manage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://get_ticket_information.p.rapidapi.com/etihad.com/en-ae/manage\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"get_ticket_information.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Get_Ticket_Information",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me retrieve the Instagram posts from the username \"user123\"? I want to get the last 20 posts.",
        "model_answer": "requests.get(\"https://instagram-api-20231.p.rapidapi.com/api/user_posts_from_username/instagram\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram-api-20231.p.rapidapi.com\"}, params={\"username\": \"user123\", \"count\": \"20\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Best Instagram Scraper API 2023 \n\u25cf Launched in May 2023 \n\u25cf 100% real-time data, no cache, no-CORS media, advanced profile, get access to hidden insights & more. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-api-20231.p.rapidapi.com/api/user_posts_from_username/instagram'\nquerystring = {\"username\": \"\", \"max_id\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-api-20231.p.rapidapi.com/api/user_posts_from_username/instagram\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "max_id",
                    "description": "Leave `max_id` empty for first request then provide `next_max_id` received from previous request to get more items.",
                    "type": "STRING"
                },
                {
                    "name": "count",
                    "description": "number of posts",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-api-20231.p.rapidapi.com/api/user_posts_from_username/instagram\"\nquerystring = {\"max_id\": \"\", \"count\": \"12\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-api-20231.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram API 2023",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "default": "instagram"
                },
                {
                    "name": "max_id",
                    "type": "STRING",
                    "description": "Leave `max_id` empty for first request then provide `next_max_id` received from previous request to get more items.",
                    "default": ""
                },
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "number of posts",
                    "default": "12"
                }
            ]
        }
    },
    {
        "query": "Can you please search all the websites hosted on the same IP as google.com?",
        "model_answer": "requests.get(\"https://websites-on-same-ip.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"websites-on-same-ip.p.rapidapi.com\"}, params={\"q\": \"google.com\", \"type\": \"WEBIP\", \"pagenum\": \"1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Search all domains on a shared IP address",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://websites-on-same-ip.p.rapidapi.com/'\nquerystring = {\"q\": \"\", \"type\": \"\", \"pagenum\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://websites-on-same-ip.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "pagenum",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://websites-on-same-ip.p.rapidapi.com/\"\nquerystring = {\"pagenum\": \"1\", \"q\": \"ebay.com\", \"type\": \"WEBIP\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"websites-on-same-ip.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Websites on same IP",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "ebay.com"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "WEBIP"
                },
                {
                    "name": "pagenum",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest crypto news from the ALL Crypto News Feed API.",
        "model_answer": "requests.get(\"https://all-crypto-news-feed.p.rapidapi.com/get_blogs_feed\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"all-crypto-news-feed.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "All news about crypto. Tweets, listing news, .gov announcements, blogs etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://all-crypto-news-feed.p.rapidapi.com/get_blogs_feed'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://all-crypto-news-feed.p.rapidapi.com/get_blogs_feed\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://all-crypto-news-feed.p.rapidapi.com/get_blogs_feed\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"all-crypto-news-feed.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ALL Crypto News Feed",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you predict the outcome of the upcoming football match between Real Madrid and Barcelona?",
        "model_answer": "requests.get(\"https://football-prediction-api.p.rapidapi.com/api/v2/predictions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"football-prediction-api.p.rapidapi.com\"}, params={\"market\": \"classic\", \"iso_date\": \"2022-10-23\", \"federation\":\"UEFA\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "The Football Prediction API provides predictions for upcoming football matches, average bookie odds, results for past matches and prediction performance statistics for past results.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://football-prediction-api.p.rapidapi.com/api/v2/predictions'\nquerystring = {\"market\": \"\", \"iso_date\": \"\", \"federation\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://football-prediction-api.p.rapidapi.com/api/v2/predictions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "market",
                    "description": "Shows the predictions for a certain market. Defaults to \"classic\" if not provided",
                    "type": "STRING"
                },
                {
                    "name": "iso_date",
                    "description": "Will filter the results by date. Can be used to show past results.",
                    "type": "STRING"
                },
                {
                    "name": "federation",
                    "description": "Filter the predictions by federation",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://football-prediction-api.p.rapidapi.com/api/v2/predictions\"\nquerystring = {\"market\": \"classic\", \"iso_date\": \"2018-12-01\", \"federation\": \"UEFA\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"football-prediction-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Football Prediction",
            "api_arguments_original": [
                {
                    "name": "market",
                    "type": "STRING",
                    "description": "Shows the predictions for a certain market. Defaults to \"classic\" if not provided",
                    "default": "classic"
                },
                {
                    "name": "iso_date",
                    "type": "STRING",
                    "description": "Will filter the results by date. Can be used to show past results.",
                    "default": "2018-12-01"
                },
                {
                    "name": "federation",
                    "type": "STRING",
                    "description": "Filter the predictions by federation",
                    "default": "UEFA"
                }
            ]
        }
    },
    {
        "query": "I want to download the map tile with y=1, z=10, and x=5.",
        "model_answer": "requests.get(\"https://offline-maptiles.p.rapidapi.com/local/osm/v1/10/5/1.png\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"offline-maptiles.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Download map tiles for offline use (intranet, offline devices).  You can store those downloaded tiles as long as you want.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://offline-maptiles.p.rapidapi.com/local/osm/v1/3/6/3.png'\nquerystring = {\"y\": \"\", \"z\": \"\", \"x\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://offline-maptiles.p.rapidapi.com/local/osm/v1/3/6/3.png\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "y",
                    "description": "y tile number",
                    "type": "NUMBER"
                },
                {
                    "name": "z",
                    "description": "Zoom factor between 0 and 19",
                    "type": "NUMBER"
                },
                {
                    "name": "x",
                    "description": "x tile number",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://offline-maptiles.p.rapidapi.com/local/osm/v1/3/6/3.png\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"offline-maptiles.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Offline MapTiles",
            "api_arguments_original": [
                {
                    "name": "y",
                    "type": "NUMBER",
                    "description": "y tile number",
                    "default": "3"
                },
                {
                    "name": "z",
                    "type": "NUMBER",
                    "description": "Zoom factor between 0 and 19",
                    "default": "3"
                },
                {
                    "name": "x",
                    "type": "NUMBER",
                    "description": "x tile number",
                    "default": "6"
                }
            ]
        }
    },
    {
        "query": "I want to get the WHOIS history for the domain \"example.com\" since the date \"2020-01-01\".",
        "model_answer": "requests.get(\"https://whois-history1.p.rapidapi.com/api/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"whois-history1.p.rapidapi.com\"}, params={\"domainName\": \"example.com\", \"sinceDate\": \"2020-01-01\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "WHOIS History API lets you find out about current and past domain owners and all other relevant registration details that can be gathered from WHOIS records. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://whois-history1.p.rapidapi.com/api/v1'\nquerystring = {\"domainName\": \"\", \"createdDateTo\": \"\", \"createdDateFrom\": \"\", \"outputFormat\": \"\", \"expiredDateTo\": \"\", \"updatedDateTo\": \"\", \"mode\": \"\", \"updatedDateFrom\": \"\", \"expiredDateFrom\": \"\", \"sinceDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://whois-history1.p.rapidapi.com/api/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domainname",
                    "description": "The domain for which historic WHOIS data is requested.",
                    "type": "STRING"
                },
                {
                    "name": "createddateto",
                    "description": "If present, search through domains created before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "type": "STRING"
                },
                {
                    "name": "createddatefrom",
                    "description": "If present, search through domains created after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "type": "STRING"
                },
                {
                    "name": "outputformat",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "type": "STRING"
                },
                {
                    "name": "expireddateto",
                    "description": "If present, search through domains expired before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "type": "STRING"
                },
                {
                    "name": "updateddateto",
                    "description": "If present, search through domains updated before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "type": "STRING"
                },
                {
                    "name": "mode",
                    "description": "preview \u2013 return only the number of domains. No credits deducted. purchase \u2013 return the actual list of domains (limited to 10,000). 1 request costs 50 DRS credits. Default: preview",
                    "type": "STRING"
                },
                {
                    "name": "updateddatefrom",
                    "description": "If present, search through domains updated after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "type": "STRING"
                },
                {
                    "name": "expireddatefrom",
                    "description": "If present, search through domains expired after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "type": "STRING"
                },
                {
                    "name": "sincedate",
                    "description": "If present, search through activities discovered since the given date. Sometimes there is a latency between the actual added/renewal/expired date and the date when our system detected this change. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://whois-history1.p.rapidapi.com/api/v1\"\nquerystring = {\"createdDateTo\": \"\", \"domainName\": \"google.com\", \"createdDateFrom\": \"\", \"outputFormat\": \"\", \"expiredDateTo\": \"\", \"updatedDateTo\": \"\", \"mode\": \"\", \"updatedDateFrom\": \"\", \"expiredDateFrom\": \"\", \"sinceDate\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whois-history1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Whois History",
            "api_arguments_original": [
                {
                    "name": "domainName",
                    "type": "STRING",
                    "description": "The domain for which historic WHOIS data is requested.",
                    "default": "google.com"
                },
                {
                    "name": "createdDateTo",
                    "type": "STRING",
                    "description": "If present, search through domains created before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "createdDateFrom",
                    "type": "STRING",
                    "description": "If present, search through domains created after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "default": ""
                },
                {
                    "name": "expiredDateTo",
                    "type": "STRING",
                    "description": "If present, search through domains expired before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "updatedDateTo",
                    "type": "STRING",
                    "description": "If present, search through domains updated before the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "mode",
                    "type": "STRING",
                    "description": "preview \u2013 return only the number of domains. No credits deducted. purchase \u2013 return the actual list of domains (limited to 10,000). 1 request costs 50 DRS credits. Default: preview",
                    "default": ""
                },
                {
                    "name": "updatedDateFrom",
                    "type": "STRING",
                    "description": "If present, search through domains updated after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "expiredDateFrom",
                    "type": "STRING",
                    "description": "If present, search through domains expired after the given date. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                },
                {
                    "name": "sinceDate",
                    "type": "STRING",
                    "description": "If present, search through activities discovered since the given date. Sometimes there is a latency between the actual added/renewal/expired date and the date when our system detected this change. Acceptable values: date in \"YYYY-MM-DD\" format.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the owner details of the Web Push Notifications Server?",
        "model_answer": "requests.get(\"https://web-push-notifications-server.p.rapidapi.com/owner/-your-owner-id-here-\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"web-push-notifications-server.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Simple server which provides Web Push Notifications service to frontend applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://web-push-notifications-server.p.rapidapi.com/owner/-your-owner-id-here-'\nquerystring = {\"owner-id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://web-push-notifications-server.p.rapidapi.com/owner/-your-owner-id-here-\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "owner_id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://web-push-notifications-server.p.rapidapi.com/owner/-your-owner-id-here-\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"web-push-notifications-server.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Web Push Notifications Server",
            "api_arguments_original": [
                {
                    "name": "owner-id",
                    "type": "string",
                    "description": "",
                    "default": "-your-owner-id-here-"
                }
            ]
        }
    },
    {
        "query": "\"Can you give me more information about the ROAC of company 123456789?\"",
        "model_answer": "response = requests.get(\"https://roac.p.rapidapi.com/api/Auditores/roac/123456789\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"roac.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "API ROAC",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://roac.p.rapidapi.com/api/Auditores/roac/{roac}'\nquerystring = {\"roac\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://roac.p.rapidapi.com/api/Auditores/roac/{roac}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "roac",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://roac.p.rapidapi.com/api/Auditores/roac/{roac}\"\nquerystring = {\"roac\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"roac.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ROAC",
            "api_arguments_original": [
                {
                    "name": "roac",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to download an image from Pinterest with this URL",
        "model_answer": "requests.get(\"https://pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com/ideapin/https://www.pinterest.com/pin/1149051292401881795/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "This APi comes with pinterest image downloader, pinterest video downloader and pinterest idea pin downloader | Fast. Download without Watermark.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com/ideapin/https://www.pinterest.com/pin/1149051292401881795/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com/ideapin/https://www.pinterest.com/pin/1149051292401881795/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com/ideapin/https://www.pinterest.com/pin/1149051292401881795/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pinterest-downloader-download-image-video-and-pinterest-ideapin.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pinterest Downloader -  Download image video and pinterest ideapin",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "string",
                    "description": "",
                    "default": "https://www.pinterest.com/pin/1149051292401881795/"
                }
            ]
        }
    },
    {
        "query": "I want to get the privacy details for app id 835599320 on the Apple App Store.",
        "model_answer": "response = requests.get(\"https://app-store2.p.rapidapi.com/privacy/835599320\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"app-store2.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Unofficial Apple App Store Api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://app-store2.p.rapidapi.com/privacy/835599320'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://app-store2.p.rapidapi.com/privacy/835599320\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://app-store2.p.rapidapi.com/privacy/835599320\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"app-store2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "App Store",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "835599320"
                }
            ]
        }
    },
    {
        "query": "Can you please check the current Billboard Hot 100 songs for the week of October 8th, 2022?",
        "model_answer": "requests.get(\"https://billboard-api5.p.rapidapi.com/api/charts/country-songs/bolivia\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"billboard-api5.p.rapidapi.com\"}, params={\"week\": \"2022-10-08\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Billboard charts API: Weekly Billboard Hot 100, Weekly Billboard 200, Weekly Artist 100, Weekly Billboard Weekly Global 200, Weekly Catalog Albums, Weekly Independent Albums, Weekly Billboard U.S. Afrobeats Songs. Year End Hot 100 Songs, Year End Billboard 200 Albums, Year End Billboard  Global 200, Year End Top Artists, Year End Top Artists \u2013 Duo/Group, Year End Top Labels, Year End Top New Artists, Year End Top Artists \u2013 Male, Year End Top Artists \u2013 Female. \nAll Greatest of All Time Charts....",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://billboard-api5.p.rapidapi.com/api/charts/country-songs/bolivia'\nquerystring = {\"week\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://billboard-api5.p.rapidapi.com/api/charts/country-songs/bolivia\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "week",
                    "description": "",
                    "type": "DATE (YYYY-MM-DD)"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://billboard-api5.p.rapidapi.com/api/charts/country-songs/bolivia\"\nquerystring = {\"week\": \"2022-10-08\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"billboard-api5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Billboard API_v2",
            "api_arguments_original": [
                {
                    "name": "week",
                    "type": "DATE (YYYY-MM-DD)",
                    "description": "",
                    "default": "2022-10-08"
                }
            ]
        }
    },
    {
        "query": "Please provide information about the League of Legends tournament with leagueId 101097443346691685.",
        "model_answer": "requests.get(\"https://league-of-legends-esports.p.rapidapi.com/tournaments\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"league-of-legends-esports.p.rapidapi.com\"}, params={\"leagueId\": \"101097443346691685\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "This api gives you all of the lol esports leagues , vods, tournaments, match , game , event details with videos , scheadule , standings, teams and their players. And live game score.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://league-of-legends-esports.p.rapidapi.com/tournaments'\nquerystring = {\"leagueId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://league-of-legends-esports.p.rapidapi.com/tournaments\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "leagueid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://league-of-legends-esports.p.rapidapi.com/tournaments\"\nquerystring = {\"leagueId\": \"101097443346691685\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"league-of-legends-esports.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "League Of Legends Esports",
            "api_arguments_original": [
                {
                    "name": "leagueId",
                    "type": "STRING",
                    "description": "",
                    "default": "101097443346691685"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with 10 inspirational quotes?",
        "model_answer": "requests.get(\"https://quotes88.p.rapidapi.com/quotes/10\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"quotes88.p.rapidapi.com\"}, params={\"id\": \"10\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "We  provide developers with a vast collection of inspirational, thought-provoking, and entertaining quotes. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quotes88.p.rapidapi.com/quotes/10'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quotes88.p.rapidapi.com/quotes/10\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quotes88.p.rapidapi.com/quotes/10\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quotes88.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quotes_v2",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "Can you help me get the IP address of my current location?",
        "model_answer": "requests.get(\"https://ip-address3.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ip-address3.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Low latency API to retrieve User IP Address. Use to integrate on web based client apps to determine IP address of user.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ip-address3.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ip-address3.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ip-address3.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ip-address3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IP Address",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me search for the torrent file with the topic \"Avengers Endgame\"?",
        "model_answer": "response = requests.get(\"https://torrent-search3.p.rapidapi.com/torrent/piratebay/Avengers%20Endgame\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"torrent-search3.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This script is a JavaScript code that uses the @dil5han/torrent-api module to create a server that can search multiple torrent websites and return the results to the client in JSON format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://torrent-search3.p.rapidapi.com/torrent/piratebay/{searchtopic}'\nquerystring = {\"searchtopic\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://torrent-search3.p.rapidapi.com/torrent/piratebay/{searchtopic}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchtopic",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://torrent-search3.p.rapidapi.com/torrent/piratebay/{searchtopic}\"\nquerystring = {\"searchtopic\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"torrent-search3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Torrent-Search",
            "api_arguments_original": [
                {
                    "name": "searchtopic",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me the information of the file at this url",
        "model_answer": "requests.get(\"https://terabox-downloader.p.rapidapi.com/info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"terabox-downloader.p.rapidapi.com\"}, params={\"url\": \"https://terabox.com/s/1gw8aGb75AWIp0fkfd3VaAgs\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Terabox Downloader",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://terabox-downloader.p.rapidapi.com/info'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://terabox-downloader.p.rapidapi.com/info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "Example: https://terabox.com/s/1gw8aGb75AWIp0fkfd3VaAgs",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://terabox-downloader.p.rapidapi.com/info\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"terabox-downloader.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Terabox Downloader",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "Example: https://terabox.com/s/1gw8aGb75AWIp0fkfd3VaAgs",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "response = requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get essential (24 data points) domain information realtime with one simple call.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://livescan-a-domain.p.rapidapi.com/'\nquerystring = {\"type\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://livescan-a-domain.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "type",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://livescan-a-domain.p.rapidapi.com/\"\nquerystring = {\"type\": \"LIVESCAN\", \"q\": \"domain.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"livescan-a-domain.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Livescan a Domain",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "LIVESCAN"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "domain.com"
                }
            ]
        }
    },
    {
        "query": "I want to get the current market trends for cryptocurrencies in Asia-Pacific from the G-Finance API.",
        "model_answer": "requests.get(\"https://g-finance.p.rapidapi.com/market-trends/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"g-finance.p.rapidapi.com\"}, params={\"t\" \"cryptocurrencies\", \"gl\" \"US\", \"s\" \"asia-pacific\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This API helps to query financial summary, stocks, quotes, movers, news, etc\u2026",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://g-finance.p.rapidapi.com/market-trends/'\nquerystring = {\"t\": \"\", \"gl\": \"\", \"s\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://g-finance.p.rapidapi.com/market-trends/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "t",
                    "description": "Tab name. One of these:\n\nindexes\nmost-active\ngainers\nlosers\nclimate-leaders\ncryptocurrencies\ncurrencies",
                    "type": "STRING"
                },
                {
                    "name": "gl",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "s",
                    "description": "Subtab name. If you selected the indexes tab, you can choose one of the following, leave empty to get all.\n\namericas\neurope-middle-east-africa\nasia-pacific",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://g-finance.p.rapidapi.com/market-trends/\"\nquerystring = {\"gl\": \"US\", \"t\": \"losers\", \"s\": \"en\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"g-finance.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "G - Finance",
            "api_arguments_original": [
                {
                    "name": "t",
                    "type": "STRING",
                    "description": "Tab name. One of these:\n\nindexes\nmost-active\ngainers\nlosers\nclimate-leaders\ncryptocurrencies\ncurrencies",
                    "default": "losers"
                },
                {
                    "name": "gl",
                    "type": "STRING",
                    "description": "",
                    "default": "US"
                },
                {
                    "name": "s",
                    "type": "STRING",
                    "description": "Subtab name. If you selected the indexes tab, you can choose one of the following, leave empty to get all.\n\namericas\neurope-middle-east-africa\nasia-pacific",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "I want to get the current time in UTC.",
        "model_answer": "requests.get(\"https://world-clock.p.rapidapi.com/json/utc/now\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"world-clock.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An API to get the current time. REST Services that will return current date/time in JSON for any registered time zone.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://world-clock.p.rapidapi.com/json/utc/now'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://world-clock.p.rapidapi.com/json/utc/now\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://world-clock.p.rapidapi.com/json/utc/now\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"world-clock.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "World Clock",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to access ST666 website on my mobile device.",
        "model_answer": "requests.get(\"https://demo-project27383.p.rapidapi.com/order/my\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"demo-project27383.p.rapidapi.com\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "ST666 ENT - Truy c\u1eadp nh\u00e0 c\u00e1i ST666 tr\u00ean di \u0111\u1ed9ng - Link mobile v\u00e0o ST666 nhanh nh\u1ea5t! Ch\u00fac c\u00e1c b\u1ea1n ch\u01a1i c\u00e1 c\u01b0\u1ee3c t\u1ea1i ST666 nhi\u1ec1u may m\u1eafn!\nWebsite: https://st666ent.com/\n\u0110\u1ecba ch\u1ec9: 6 T\u00f4n Th\u1ea5t Thuy\u1ebft, Ph\u01b0\u1eddng 1, Qu\u1eadn 4, TP.HCM\nS\u0110T: 0989918987\nHastag: #st666 #st666ent #nhacaist666 #CasinoOnline #dangnhapst666",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://demo-project27383.p.rapidapi.com/order/my'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://demo-project27383.p.rapidapi.com/order/my\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://demo-project27383.p.rapidapi.com/order/my\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"demo-project27383.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "\ud83d\udc4b Demo Project",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the trending hashtags in the United States.",
        "model_answer": "response = requests.get(\"https://hashtag5.p.rapidapi.com/api/v2.1/trending/United%20States/tags\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hashtag5.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Generate hashtags based on image, text and get the post count detail of that hashtag.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hashtag5.p.rapidapi.com/api/v2.1/trending/United States/tags'\nquerystring = {\"country_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hashtag5.p.rapidapi.com/api/v2.1/trending/United States/tags\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "country_name",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hashtag5.p.rapidapi.com/api/v2.1/trending/United States/tags\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hashtag5.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hashtag",
            "api_arguments_original": [
                {
                    "name": "country_name",
                    "type": "string",
                    "description": "",
                    "default": "United States"
                }
            ]
        }
    },
    {
        "query": "I want to forward geocode the address \"1600 Amphitheatre Parkway, Mountain View, CA\" using the Geocode - Forward and Reverse API.",
        "model_answer": "requests.get(\"https://geocode-forward-and-reverse.p.rapidapi.com/forward\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"geocode-forward-and-reverse.p.rapidapi.com\"}, params={\"address\": \"1600 Amphitheatre Parkway, Mountain View, CA\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Forward and reverse geocoding using Google Geocoding API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geocode-forward-and-reverse.p.rapidapi.com/forward'\nquerystring = {\"address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geocode-forward-and-reverse.p.rapidapi.com/forward\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "address",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geocode-forward-and-reverse.p.rapidapi.com/forward\"\nquerystring = {\"address\": \"2795 Hastings St, Vancouver, BC V5K 1Z8\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geocode-forward-and-reverse.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Geocode - Forward and Reverse",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "2795 Hastings St, Vancouver, BC V5K 1Z8"
                }
            ]
        }
    },
    {
        "query": "I want to get information about IKEA stores in the United States.",
        "model_answer": "response = requests.get(\"https://ikea-api.p.rapidapi.com/stores\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ikea-api.p.rapidapi.com\"}, params={\"countryCode\": \"us\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "This [unofficial] Ikea API is a great solution for developers looking for a comprehensive and up-to-date access to Ikea's products and search. An Ikea Scraper REST API solution.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ikea-api.p.rapidapi.com/stores'\nquerystring = {\"countryCode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ikea-api.p.rapidapi.com/stores\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "countrycode",
                    "description": "Can be obtained through the  **Countries** endpoint,",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ikea-api.p.rapidapi.com/stores\"\nquerystring = {\"countryCode\": \"us\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ikea-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ikea API",
            "api_arguments_original": [
                {
                    "name": "countryCode",
                    "type": "STRING",
                    "description": "Can be obtained through the  **Countries** endpoint,",
                    "default": "us"
                }
            ]
        }
    },
    {
        "query": "I want to lookup the leagues for the username \"myusername\" in the Satellite API.",
        "model_answer": "requests.get(\"https://satellite-api.p.rapidapi.com/lookup/2ksports\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"satellite-api.p.rapidapi.com\"}, params={\"username\": \"myusername\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "This Read-Only API Allows Users To Access Their Sleeper Fantasy Football Leagues. Lookup Leagues, Check Standings, View Keeper Options And More.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://satellite-api.p.rapidapi.com/lookup/2ksports'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://satellite-api.p.rapidapi.com/lookup/2ksports\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://satellite-api.p.rapidapi.com/lookup/2ksports\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"satellite-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Satellite API",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "default": "2ksports"
                }
            ]
        }
    },
    {
        "query": "I want to get information about an exercise with ID 20 from MuscleWiki API.",
        "model_answer": "requests.get(\"https://musclewiki.p.rapidapi.com/exercises/20\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"musclewiki.p.rapidapi.com\"})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "The API provides information about exercises from MuscleWiki, including the name, category, target muscles,instructions for performing the exercise and a short video demonstration.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://musclewiki.p.rapidapi.com/exercises/20'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://musclewiki.p.rapidapi.com/exercises/20\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "Exercise's ID",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://musclewiki.p.rapidapi.com/exercises/20\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"musclewiki.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MuscleWiki",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "Exercise's ID",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "I want to fetch songs and album data from Apple Music using the URL \"https://music.apple.com/us/album/evermore/1544310928\".",
        "model_answer": "requests.get(\"https://apple-music24.p.rapidapi.com/playlist1/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"apple-music24.p.rapidapi.com\"}, params={\"url\": \"https://music.apple.com/us/album/evermore/1544310928\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Fetches songs & album data from Apple Music",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://apple-music24.p.rapidapi.com/playlist1/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://apple-music24.p.rapidapi.com/playlist1/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://apple-music24.p.rapidapi.com/playlist1/\"\nquerystring = {\"url\": \"https://music.apple.com/us/album/m-s-dhoni-the-untold-story-original-motion-picture/1158884319\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"apple-music24.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Apple Music",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://music.apple.com/us/album/m-s-dhoni-the-untold-story-original-motion-picture/1158884319"
                }
            ]
        }
    },
    {
        "query": "Can you extract the content from the following URL",
        "model_answer": "requests.get(\"https://url-content-extractor.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"url-content-extractor.p.rapidapi.com\"}, params={\"query\": \"https://example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Provide a URL and get the content in return",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://url-content-extractor.p.rapidapi.com/search'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://url-content-extractor.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://url-content-extractor.p.rapidapi.com/search\"\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"url-content-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "URL Content Extractor",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "We have bring an api that will help to fetch udemy course scrapper for your next project Get Udemy course scraper for your next project. Use this api to fetch all the data you need in a fraction of a second.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://udemy-course-scrapper-api.p.rapidapi.com/course-names/course-instructor/course-url'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://udemy-course-scrapper-api.p.rapidapi.com/course-names/course-instructor/course-url\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://udemy-course-scrapper-api.p.rapidapi.com/course-names/course-instructor/course-url\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"udemy-course-scrapper-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Udemy course scrapper api",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check the reputation of the domain \"example.com\".",
        "model_answer": "requests.get(\"https://domain-reputation1.p.rapidapi.com/api/v1\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"domain-reputation1.p.rapidapi.com\"}, params={\"domainName\" \"example.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Domain Reputation API lets you build a risk profile for a given domain or IP address with a single score based on multiple data sources.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://domain-reputation1.p.rapidapi.com/api/v1'\nquerystring = {\"domainName\": \"\", \"outputFormat\": \"\", \"mode\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://domain-reputation1.p.rapidapi.com/api/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domainname",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "outputformat",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "type": "STRING"
                },
                {
                    "name": "mode",
                    "description": "API can check your domain in 2 modes: 'fast' - some heavy tests and data collectors will be disabled. 'full' - all the data and the tests will be processed. Default: fast",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://domain-reputation1.p.rapidapi.com/api/v1\"\nquerystring = {\"outputFormat\": \"\", \"mode\": \"\", \"domainName\": \"whoisxmlapi.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"domain-reputation1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Domain Reputation",
            "api_arguments_original": [
                {
                    "name": "domainName",
                    "type": "STRING",
                    "description": "",
                    "default": "whoisxmlapi.com"
                },
                {
                    "name": "outputFormat",
                    "type": "STRING",
                    "description": "Response output format. Acceptable values: XML or JSON. Defaults to JSON.",
                    "default": ""
                },
                {
                    "name": "mode",
                    "type": "STRING",
                    "description": "API can check your domain in 2 modes: 'fast' - some heavy tests and data collectors will be disabled. 'full' - all the data and the tests will be processed. Default: fast",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to generate a fake credit card number using the Visa card network.",
        "model_answer": "requests.get(\"https://fake-credit-card-number-generator-api.p.rapidapi.com/creditcard-cardgenerate/visa\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"fake-credit-card-number-generator-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This is an API that generates fake credit card numbers that will pass Luhn's algorithm.\n\nDifferent than most services that generate credit card numbers  -  our service allows you to specify what card network (Visa, Mastercard, American Express, etc) you want to use.\n\nOur API will generate trillions of random credit card numbers!\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fake-credit-card-number-generator-api.p.rapidapi.com/creditcard-cardgenerate/visa'\nquerystring = {\"cardnetwork\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fake-credit-card-number-generator-api.p.rapidapi.com/creditcard-cardgenerate/visa\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cardnetwork",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fake-credit-card-number-generator-api.p.rapidapi.com/creditcard-cardgenerate/visa\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fake-credit-card-number-generator-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fake Credit Card Number Generator API",
            "api_arguments_original": [
                {
                    "name": "cardnetwork",
                    "type": "string",
                    "description": "",
                    "default": "visa"
                }
            ]
        }
    },
    {
        "query": "I want to search for active listings on Etsy.",
        "model_answer": "requests.get(\"https://community-etsy.p.rapidapi.com/listings/active\", headers={\"X-RapidAPI-Key\" \"TO BE FILLED\", \"X-RapidAPI-Host\" \"community-etsy.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Buy and sell handmade or vintage items, art and supplies on Etsy, the world's most vibrant handmade marketplace.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-etsy.p.rapidapi.com/listings/active'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-etsy.p.rapidapi.com/listings/active\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-etsy.p.rapidapi.com/listings/active\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-etsy.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Etsy",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get live sports data using the provided API.",
        "model_answer": "requests.get(\"https://sport1.p.rapidapi.comhttps://docs.rapidapi.com/docs/keys?a236f20115msh22fb5936ab91947p1f8113jsn65f273848924\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sport1.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Live",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sport1.p.rapidapi.comhttps://docs.rapidapi.com/docs/keys?a236f20115msh22fb5936ab91947p1f8113jsn65f273848924'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sport1.p.rapidapi.comhttps://docs.rapidapi.com/docs/keys?a236f20115msh22fb5936ab91947p1f8113jsn65f273848924\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sport1.p.rapidapi.comhttps://docs.rapidapi.com/docs/keys?a236f20115msh22fb5936ab91947p1f8113jsn65f273848924\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sport1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "sport_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the data for the episode 8 of Majutsushi Orphen Hagure Tabi",
        "model_answer": "requests.get(\"https://gogoanime-data-api.p.rapidapi.com/majutsushi-orphen-hagure-tabi-seiiki-hen-episode-8\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gogoanime-data-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "data from gogoanime website for anime website building and stuff.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gogoanime-data-api.p.rapidapi.com/majutsushi-orphen-hagure-tabi-seiiki-hen-episode-8'\nquerystring = {\"link\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gogoanime-data-api.p.rapidapi.com/majutsushi-orphen-hagure-tabi-seiiki-hen-episode-8\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "link",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gogoanime-data-api.p.rapidapi.com/majutsushi-orphen-hagure-tabi-seiiki-hen-episode-8\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gogoanime-data-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "gogoanime-data-api",
            "api_arguments_original": [
                {
                    "name": "link",
                    "type": "string",
                    "description": "",
                    "default": "majutsushi-orphen-hagure-tabi-seiiki-hen-episode-8"
                }
            ]
        }
    },
    {
        "query": "What's the current weather for Lon",
        "model_answer": "response = requests.get(\"https://weather1003.p.rapidapi.com/current\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weather1003.p.rapidapi.com\"}, params={\"lon\": \"-122.4194\", \"lat\": \"37.7749\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Current weather data API, and Weather forecast API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weather1003.p.rapidapi.com/current'\nquerystring = {\"lon\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weather1003.p.rapidapi.com/current\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lon",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lat",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weather1003.p.rapidapi.com/current\"\nquerystring = {\"lon\": \"38.5\", \"lat\": \"-78.5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weather1003.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Weather_v6",
            "api_arguments_original": [
                {
                    "name": "lon",
                    "type": "STRING",
                    "description": "",
                    "default": "38.5"
                },
                {
                    "name": "lat",
                    "type": "STRING",
                    "description": "",
                    "default": "-78.5"
                }
            ]
        }
    },
    {
        "query": "I want to find condos and townhouses in Florida using the Florida Realty API.",
        "model_answer": "requests.get(\"https://florida-realty-api1.p.rapidapi.com/realty/listings/M5215311859\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"florida-realty-api1.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Find condos and townhouses in Florida (USA) and get access to the original listing service MLS with thousands of properties.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://florida-realty-api1.p.rapidapi.com/realty/listings/M5215311859'\nquerystring = {\"identifier\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://florida-realty-api1.p.rapidapi.com/realty/listings/M5215311859\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "identifier",
                    "description": "The unique identifier of a listing you'll got before from getListings.  Each OfferForPurchase has got an attribute named Identifier that is used  on this endpoint to get the details of the property.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://florida-realty-api1.p.rapidapi.com/realty/listings/M5215311859\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"florida-realty-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Florida Realty API",
            "api_arguments_original": [
                {
                    "name": "identifier",
                    "type": "STRING",
                    "description": "The unique identifier of a listing you'll got before from getListings.  Each OfferForPurchase has got an attribute named Identifier that is used  on this endpoint to get the details of the property.",
                    "default": "M5215311859"
                }
            ]
        }
    },
    {
        "query": "Can you get me the latest election news?",
        "model_answer": "requests.get(\"https://election2020-smartable.p.rapidapi.com/news/page/1/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"election2020-smartable.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "The Election API offers the 2020 U.S. election news, events, important people, FAQs, and other information. The data is tagged with democratic voice and republican voice, so it's up to the user to decide which opinion to follow.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://election2020-smartable.p.rapidapi.com/news/page/1/'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://election2020-smartable.p.rapidapi.com/news/page/1/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://election2020-smartable.p.rapidapi.com/news/page/1/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"election2020-smartable.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Election2020 Smartable",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Please provide a random mindfulness quote.",
        "model_answer": "requests.get(\"https://metaapi-mindfulness-quotes.p.rapidapi.com/v1/mindfulness\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"metaapi-mindfulness-quotes.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get a random quote about mindfulness from a list of 100 quotes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://metaapi-mindfulness-quotes.p.rapidapi.com/v1/mindfulness'\nquerystring = {\"author\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://metaapi-mindfulness-quotes.p.rapidapi.com/v1/mindfulness\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "author",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "category",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://metaapi-mindfulness-quotes.p.rapidapi.com/v1/mindfulness\"\nquerystring = {\"author\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"metaapi-mindfulness-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MetaAPI Mindfulness Quotes",
            "api_arguments_original": [
                {
                    "name": "author",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if \"john@example.com\" is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"john@example.com\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "FlightsLogic provides Flight API, Airline Consolidator, Flight Aggregator to the travel agents, tour operators and travel companies worldwide.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flight-airline-consolidator-flight-aggregator.p.rapidapi.comhttps://flightslogic.com'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flight-airline-consolidator-flight-aggregator.p.rapidapi.comhttps://flightslogic.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flight-airline-consolidator-flight-aggregator.p.rapidapi.comhttps://flightslogic.com\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flight-airline-consolidator-flight-aggregator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flight , Airline Consolidator, Flight Aggregator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you retrieve 5 random step strings from the WikiHow API?",
        "model_answer": "requests.get(\"https://hargrimm-wikihow-v1.p.rapidapi.com/steps\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"hargrimm-wikihow-v1.p.rapidapi.com\"}, params={\"count\": \"5\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Retrieve random out-of-context text and images from WikiHow articles",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hargrimm-wikihow-v1.p.rapidapi.com/steps'\nquerystring = {\"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hargrimm-wikihow-v1.p.rapidapi.com/steps\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "count",
                    "description": "The number of step strings to retrieve (maximum 100)",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hargrimm-wikihow-v1.p.rapidapi.com/steps\"\nquerystring = {\"count\": \"3\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hargrimm-wikihow-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WikiHow",
            "api_arguments_original": [
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "The number of step strings to retrieve (maximum 100)",
                    "default": "3"
                }
            ]
        }
    },
    {
        "query": "I want to get the transitaires with the id \"DOUANE_AGENCE_GONDRAND\".",
        "model_answer": "requests.get(\"https://transitaires.p.rapidapi.com/transitaires/DOUANE_AGENCE_GONDRAND\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"transitaires.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Transitaires de d\u00e9douanement en Nouvelle-Cal\u00e9donie ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://transitaires.p.rapidapi.com/transitaires/DOUANE_AGENCE_GONDRAND'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://transitaires.p.rapidapi.com/transitaires/DOUANE_AGENCE_GONDRAND\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://transitaires.p.rapidapi.com/transitaires/DOUANE_AGENCE_GONDRAND\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"transitaires.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Transitaires",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": "DOUANE_AGENCE_GONDRAND"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with news articles about technology published within the last 24 hours in Indonesia?",
        "model_answer": "requests.get(\"https://berita1.p.rapidapi.com/competitor\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"berita1.p.rapidapi.com\"}, params={\"categories\" \"100271:3\", \"publishedWithin\" \"86400000\", \"offset\" \"0\", \"country\" \"id\", \"length\" \"0\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "belajar",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://berita1.p.rapidapi.com/competitor'\nquerystring = {\"id\": \"\", \"categories\": \"\", \"publishedWithin\": \"\", \"offset\": \"\", \"country\": \"\", \"length\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://berita1.p.rapidapi.com/competitor\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "categories",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "publishedwithin",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "country",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "length",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://berita1.p.rapidapi.com/competitor\"\nquerystring = {\"categories\": \"100271:3\", \"publishedWithin\": \"86400000\", \"offset\": \"0\", \"country\": \"id\", \"length\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"berita1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "berita",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "competitor"
                },
                {
                    "name": "categories",
                    "type": "STRING",
                    "description": "",
                    "default": "100271:3"
                },
                {
                    "name": "publishedWithin",
                    "type": "NUMBER",
                    "description": "",
                    "default": "86400000"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                },
                {
                    "name": "length",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to take a screenshot of \"https://www.example.com\" and save it as a png file.",
        "model_answer": "requests.get(\"https://website-screenshot3.p.rapidapi.com/api/v1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"website-screenshot3.p.rapidapi.com\"}, params={\"url\": \"https://www.example.com\", \"type\": \"png\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Website Screenshot API lets you get the screenshots of any site pages of your choice as a file in jpg, png, or PDF file (with embedded links) in just one API call.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://website-screenshot3.p.rapidapi.com/api/v1'\nquerystring = {\"url\": \"\", \"type\": \"\", \"ua\": \"\", \"mobile\": \"\", \"noJs\": \"\", \"imageOutputFormat\": \"\", \"quality\": \"\", \"delay\": \"\", \"thumbWidth\": \"\", \"mode\": \"\", \"timeout\": \"\", \"height\": \"\", \"scale\": \"\", \"scroll\": \"\", \"landscape\": \"\", \"width\": \"\", \"errorsOutputFormat\": \"\", \"fullPage\": \"\", \"touchScreen\": \"\", \"retina\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://website-screenshot3.p.rapidapi.com/api/v1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "The target website's url.",
                    "type": "STRING"
                },
                {
                    "name": "type",
                    "description": "Image output type. Acceptable values: jpg | png pdf. Default: jpg",
                    "type": "STRING"
                },
                {
                    "name": "ua",
                    "description": "The 'User-Agent' header string.",
                    "type": "STRING"
                },
                {
                    "name": "mobile",
                    "description": "If specified, emulates mobile device.",
                    "type": "STRING"
                },
                {
                    "name": "nojs",
                    "description": "If specified, disables JS.",
                    "type": "STRING"
                },
                {
                    "name": "imageoutputformat",
                    "description": "Response output format. Acceptable values: image | base64. Default: image",
                    "type": "STRING"
                },
                {
                    "name": "quality",
                    "description": "Image quality. (only for jpg type). Acceptable values: 40 < quality < 99. Default: jpg",
                    "type": "STRING"
                },
                {
                    "name": "delay",
                    "description": "Custom delay (ms) before screen capture. Acceptable values: 0 < delay < 10000 ms. Default: 250",
                    "type": "STRING"
                },
                {
                    "name": "thumbwidth",
                    "description": "Image thumb width (px). Acceptable values: 50 < thumbWidth < width param value. Default: 0",
                    "type": "STRING"
                },
                {
                    "name": "mode",
                    "description": "fast - waiting for the document.load event. slow - waiting for network idle event. Default: fast",
                    "type": "STRING"
                },
                {
                    "name": "timeout",
                    "description": "Custom timeout (ms) for page loading. Acceptable values: 1000 < timeout < 30000 ms. Default: 15000",
                    "type": "STRING"
                },
                {
                    "name": "height",
                    "description": "Image height (px). Acceptable values: 100 < width < 3000. Default: 600",
                    "type": "STRING"
                },
                {
                    "name": "scale",
                    "description": "deviceScaleFactor value for the emulator. Acceptable values: 0.5 < scale < 4.0. Default: 1.0",
                    "type": "STRING"
                },
                {
                    "name": "scroll",
                    "description": "If specified, scrolls down and up (useful for fullpage screenshots).",
                    "type": "STRING"
                },
                {
                    "name": "landscape",
                    "description": "If specified, renders page in landscape mode (useful for smartphone emulation).",
                    "type": "STRING"
                },
                {
                    "name": "width",
                    "description": "Image width (px). Acceptable values: 100 < width < 3000. Default: 800",
                    "type": "STRING"
                },
                {
                    "name": "errorsoutputformat",
                    "description": "Errors output format. Acceptable values: JSON | XML. Default: JSON",
                    "type": "STRING"
                },
                {
                    "name": "fullpage",
                    "description": "If specified, makes full-page screenshot.",
                    "type": "STRING"
                },
                {
                    "name": "touchscreen",
                    "description": "If specified, emulates device with a touch screens.",
                    "type": "STRING"
                },
                {
                    "name": "retina",
                    "description": "If specified, emulates retina display.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://website-screenshot3.p.rapidapi.com/api/v1\"\nquerystring = {\"type\": \"\", \"url\": \"google.com\", \"ua\": \"\", \"mobile\": \"\", \"noJs\": \"\", \"imageOutputFormat\": \"\", \"quality\": \"\", \"delay\": \"\", \"thumbWidth\": \"\", \"mode\": \"\", \"timeout\": \"\", \"height\": \"\", \"scale\": \"\", \"scroll\": \"\", \"landscape\": \"\", \"width\": \"\", \"errorsOutputFormat\": \"\", \"fullPage\": \"\", \"touchScreen\": \"\", \"retina\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"website-screenshot3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Website Screenshot",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "The target website's url.",
                    "default": "google.com"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "Image output type. Acceptable values: jpg | png pdf. Default: jpg",
                    "default": ""
                },
                {
                    "name": "ua",
                    "type": "STRING",
                    "description": "The 'User-Agent' header string.",
                    "default": ""
                },
                {
                    "name": "mobile",
                    "type": "STRING",
                    "description": "If specified, emulates mobile device.",
                    "default": ""
                },
                {
                    "name": "noJs",
                    "type": "STRING",
                    "description": "If specified, disables JS.",
                    "default": ""
                },
                {
                    "name": "imageOutputFormat",
                    "type": "STRING",
                    "description": "Response output format. Acceptable values: image | base64. Default: image",
                    "default": ""
                },
                {
                    "name": "quality",
                    "type": "STRING",
                    "description": "Image quality. (only for jpg type). Acceptable values: 40 < quality < 99. Default: jpg",
                    "default": ""
                },
                {
                    "name": "delay",
                    "type": "STRING",
                    "description": "Custom delay (ms) before screen capture. Acceptable values: 0 < delay < 10000 ms. Default: 250",
                    "default": ""
                },
                {
                    "name": "thumbWidth",
                    "type": "STRING",
                    "description": "Image thumb width (px). Acceptable values: 50 < thumbWidth < width param value. Default: 0",
                    "default": ""
                },
                {
                    "name": "mode",
                    "type": "STRING",
                    "description": "fast - waiting for the document.load event. slow - waiting for network idle event. Default: fast",
                    "default": ""
                },
                {
                    "name": "timeout",
                    "type": "STRING",
                    "description": "Custom timeout (ms) for page loading. Acceptable values: 1000 < timeout < 30000 ms. Default: 15000",
                    "default": ""
                },
                {
                    "name": "height",
                    "type": "STRING",
                    "description": "Image height (px). Acceptable values: 100 < width < 3000. Default: 600",
                    "default": ""
                },
                {
                    "name": "scale",
                    "type": "STRING",
                    "description": "deviceScaleFactor value for the emulator. Acceptable values: 0.5 < scale < 4.0. Default: 1.0",
                    "default": ""
                },
                {
                    "name": "scroll",
                    "type": "STRING",
                    "description": "If specified, scrolls down and up (useful for fullpage screenshots).",
                    "default": ""
                },
                {
                    "name": "landscape",
                    "type": "STRING",
                    "description": "If specified, renders page in landscape mode (useful for smartphone emulation).",
                    "default": ""
                },
                {
                    "name": "width",
                    "type": "STRING",
                    "description": "Image width (px). Acceptable values: 100 < width < 3000. Default: 800",
                    "default": ""
                },
                {
                    "name": "errorsOutputFormat",
                    "type": "STRING",
                    "description": "Errors output format. Acceptable values: JSON | XML. Default: JSON",
                    "default": ""
                },
                {
                    "name": "fullPage",
                    "type": "STRING",
                    "description": "If specified, makes full-page screenshot.",
                    "default": ""
                },
                {
                    "name": "touchScreen",
                    "type": "STRING",
                    "description": "If specified, emulates device with a touch screens.",
                    "default": ""
                },
                {
                    "name": "retina",
                    "type": "STRING",
                    "description": "If specified, emulates retina display.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the Instagram ID for the user \"example_user\".",
        "model_answer": "requests.get(\"https://instagram174.p.rapidapi.com/api/v1/user/instagram/id\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram174.p.rapidapi.com\"}, params={\"username\": \"example_user\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Get information from Instagram reliably",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram174.p.rapidapi.com/api/v1/user/instagram/id'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram174.p.rapidapi.com/api/v1/user/instagram/id\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram174.p.rapidapi.com/api/v1/user/instagram/id\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram174.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram_v7",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "string",
                    "description": "",
                    "default": "instagram"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve live data for the ASIN B09DKV849B from the Amazon Live Data API in the US marketplace?",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "123goal.info",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://123caca.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://123caca.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://123caca.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"123caca.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "123CACA",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check the liquidation data from Binance using the Liquidation Report API?",
        "model_answer": "requests.get(\"https://liquidation-report.p.rapidapi.com/lickhunterpro\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"liquidation-report.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Crypto liquidation tracking and reporting system. Aggregate data from exchange like Binance, Bybit & OKX",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://liquidation-report.p.rapidapi.com/lickhunterpro'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://liquidation-report.p.rapidapi.com/lickhunterpro\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://liquidation-report.p.rapidapi.com/lickhunterpro\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"liquidation-report.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Liquidation Report",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the latest Covid-19 statistics for Trinidad and Tobago.",
        "model_answer": "requests.get(\"https://trinidad-covid-19-statistics.p.rapidapi.com/latestday\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"trinidad-covid-19-statistics.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "This API provides Covid-19 statistics by year, month, day and most recent day in Trinidad and Tobago",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://trinidad-covid-19-statistics.p.rapidapi.com/latestday'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://trinidad-covid-19-statistics.p.rapidapi.com/latestday\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://trinidad-covid-19-statistics.p.rapidapi.com/latestday\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"trinidad-covid-19-statistics.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Trinidad Covid 19 Statistics",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the list of Steam games on special offers in the US region?",
        "model_answer": "requests.get(\"https://steamgames-special-offers.p.rapidapi.com/games_list/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"steamgames-special-offers.p.rapidapi.com\"}, params={\"region\": \"US\", \"start\": \"0\", \"count\": \"10\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Get Steam Games List and Data that are on Special Discounted Offers. \nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://steamgames-special-offers.p.rapidapi.com/games_list/'\nquerystring = {\"region\": \"\", \"start\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://steamgames-special-offers.p.rapidapi.com/games_list/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "region",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "start",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "count",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://steamgames-special-offers.p.rapidapi.com/games_list/\"\nquerystring = {\"region\": \"US\", \"start\": \"0\", \"count\": \"10\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"steamgames-special-offers.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SteamGames Special offers",
            "api_arguments_original": [
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "",
                    "default": "US"
                },
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                },
                {
                    "name": "count",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to search for videos on YouTube with the keyword \"python programming\" and sort them by view count.",
        "model_answer": "requests.get(\"https://youtube-v3-lite.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-v3-lite.p.rapidapi.com\"}, params={\"channelId\": \"UCAuUUnT6oDeKwE6v1NGQxug\", \"part\": \"id,snippet\", \"type\": \"video\", \"order\": \"viewCount\", \"q\": \"python programming\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Lite version of Youtube Data API v3. Get Youtube data without any Youtube api key",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-v3-lite.p.rapidapi.com/search'\nquerystring = {\"channelId\": \"\", \"part\": \"\", \"type\": \"\", \"order\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-v3-lite.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "channelid",
                    "description": "Channel id.",
                    "type": "STRING"
                },
                {
                    "name": "part",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "order",
                    "description": "Sort parameter:\n\n- `date` [default]\n- `viewCount`",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-v3-lite.p.rapidapi.com/search\"\nquerystring = {\"type\": \"\", \"order\": \"\", \"channelId\": \"UCAuUUnT6oDeKwE6v1NGQxug\", \"part\": \"id,snippet\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-v3-lite.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Youtube v3 Lite",
            "api_arguments_original": [
                {
                    "name": "channelId",
                    "type": "STRING",
                    "description": "Channel id.",
                    "default": "UCAuUUnT6oDeKwE6v1NGQxug"
                },
                {
                    "name": "part",
                    "type": "STRING",
                    "description": "",
                    "default": "id,snippet"
                },
                {
                    "name": "type",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "order",
                    "type": "ENUM",
                    "description": "Sort parameter:\n\n- `date` [default]\n- `viewCount`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me a list of Star Wars characters with their details?",
        "model_answer": "requests.get(\"https://star-wars-characters.p.rapidapi.com/46DYBV/star_wars_characters\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"star-wars-characters.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "list of star wars characters + details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://star-wars-characters.p.rapidapi.com/46DYBV/star_wars_characters'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://star-wars-characters.p.rapidapi.com/46DYBV/star_wars_characters\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://star-wars-characters.p.rapidapi.com/46DYBV/star_wars_characters\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"star-wars-characters.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Star Wars Characters",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please send a connection request to the following LinkedIn profiles",
        "model_answer": "requests.get(\"https://linkedin-outreach.p.rapidapi.com/send-requests/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"linkedin-outreach.p.rapidapi.com\"}, params={\"urls\": \"profile1URL,profile2URL,profile3URL\", \"message\": \"Hello [target_name], I would love to connect with you.\", \"cookie\": \"ABCDEF\", \"email\": \"example@gmail.com\", \"key\": \"9gZJadaH4r\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Automate Outreach on Linkedin with ease! Extract search results, Find LinkedIn profile URLs, Scrape LinkedIn profiles etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://linkedin-outreach.p.rapidapi.com/send-requests/'\nquerystring = {\"urls\": \"\", \"message\": \"\", \"cookie\": \"\", \"email\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://linkedin-outreach.p.rapidapi.com/send-requests/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "urls",
                    "description": "URLs of the people you wish to send requests, Please insert a insert a string of 10 URLs separated by comma. Example :    URL1, URL2, URL3, ....... , URL10",
                    "type": "STRING"
                },
                {
                    "name": "message",
                    "description": "The message you will leave while sending request.  You can customize the message by using variables. For example, \\\"Hello [target_name],  would love to connect with you.\\\" is the message you want to send, here target_name is a variable, written in squared brackets '[]'. Assuming the target's name is John Wick then the resulting string will be, \\\"Hello John Wick, would love to connect with you.\\\"\nNote: Please take care of the spelling while adding the variable(s).",
                    "type": "STRING"
                },
                {
                    "name": "cookie",
                    "description": "The value of cookie named \\\"li_at\\\".\nNote: The above value is just a sample. To get the value actual value of the cookie , please follow the document link given.",
                    "type": "STRING"
                },
                {
                    "name": "email",
                    "description": "The email where you will receive the results of connection requests' status.",
                    "type": "STRING"
                },
                {
                    "name": "key",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://linkedin-outreach.p.rapidapi.com/send-requests/\"\nquerystring = {\"urls\": \"\", \"message\": \"Hello !\", \"cookie\": \"AQEDAT8o77sA5oINAAABhWMFjJcAAAGFhxIQl00AyXE9APCZSG8AMGX7XtruKSB69ICj9e1iau7FwJPZY3PrB7xaAtDscX21Oe79Vo6GwuU8iLhotFq7cRfrB9JdslzXQyxSyr1_lyZHDGHZ5\", \"email\": \"\", \"key\": \"9gZJadaH4r\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"linkedin-outreach.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LinkedIn Outreach",
            "api_arguments_original": [
                {
                    "name": "urls",
                    "type": "STRING",
                    "description": "URLs of the people you wish to send requests, Please insert a insert a string of 10 URLs separated by comma. Example :    URL1, URL2, URL3, ....... , URL10  ",
                    "default": ""
                },
                {
                    "name": "message",
                    "type": "STRING",
                    "description": "The message you will leave while sending request.  You can customize the message by using variables. For example, \\\"Hello [target_name],  would love to connect with you.\\\" is the message you want to send, here target_name is a variable, written in squared brackets '[]'. Assuming the target's name is John Wick then the resulting string will be, \\\"Hello John Wick, would love to connect with you.\\\"\nNote: Please take care of the spelling while adding the variable(s).",
                    "default": "Hello !"
                },
                {
                    "name": "cookie",
                    "type": "STRING",
                    "description": "The value of cookie named \\\"li_at\\\".\nNote: The above value is just a sample. To get the value actual value of the cookie , please follow the document link given.",
                    "default": "AQEDAT8o77sA5oINAAABhWMFjJcAAAGFhxIQl00AyXE9APCZSG8AMGX7XtruKSB69ICj9e1iau7FwJPZY3PrB7xaAtDscX21Oe79Vo6GwuU8iLhotFq7cRfrB9JdslzXQyxSyr1_lyZHDGHZ5"
                },
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "The email where you will receive the results of connection requests' status.",
                    "default": ""
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "",
                    "default": "9gZJadaH4r"
                }
            ]
        }
    },
    {
        "query": "I want to search for historical events related to World War II.",
        "model_answer": "response = requests.get(\"https://historical-events-by-api-ninjas.p.rapidapi.com/v1/historicalevents\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"historical-events-by-api-ninjas.p.rapidapi.com\"}, params={\"text\": \"World War II\"})",
        "original": {
            "domain": "Events",
            "framework": "RapidAPI",
            "functionality": "Search through the most famous events in history. See more info at https://api-ninjas.com/api/historicalevents.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://historical-events-by-api-ninjas.p.rapidapi.com/v1/historicalevents'\nquerystring = {\"text\": \"\", \"month\": \"\", \"day\": \"\", \"year\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://historical-events-by-api-ninjas.p.rapidapi.com/v1/historicalevents\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "query text to search events by. Use keywords or short phrases for best match results.",
                    "type": "STRING"
                },
                {
                    "name": "month",
                    "description": "integer month (e.g. 3 for March).",
                    "type": "NUMBER"
                },
                {
                    "name": "day",
                    "description": "calendar day of the month.",
                    "type": "NUMBER"
                },
                {
                    "name": "year",
                    "description": "4-digit year (e.g. 1776). For BC/BCE years, use a negative integer (e.g. -351 for 351 BC).",
                    "type": "NUMBER"
                },
                {
                    "name": "offset",
                    "description": "number of results to offset (for pagination).",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://historical-events-by-api-ninjas.p.rapidapi.com/v1/historicalevents\"\nquerystring = {\"text\": \"roman empire\", \"month\": \"\", \"day\": \"\", \"year\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"historical-events-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Historical Events by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "query text to search events by. Use keywords or short phrases for best match results.",
                    "default": "roman empire"
                },
                {
                    "name": "month",
                    "type": "NUMBER",
                    "description": "integer month (e.g. 3 for March).",
                    "default": ""
                },
                {
                    "name": "day",
                    "type": "NUMBER",
                    "description": "calendar day of the month.",
                    "default": ""
                },
                {
                    "name": "year",
                    "type": "NUMBER",
                    "description": "4-digit year (e.g. 1776). For BC/BCE years, use a negative integer (e.g. -351 for 351 BC).",
                    "default": ""
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "number of results to offset (for pagination).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you perform sentiment analysis on the text \"I love this movie!\" in English using Google's BERT Sentiment Analysis API?",
        "model_answer": "response = requests.get(\"https://googles-bert-sentiment-analysis.p.rapidapi.com/sentiment\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"googles-bert-sentiment-analysis.p.rapidapi.com\"}, params={\"text\": \"I love this movie!\", \"lang\": \"en\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "The BERT-Based Sentiment Analysis API is a cutting-edge tool that leverages Google's BERT (Bidirectional Encoder Representations from Transformers) model to perform accurate sentiment analysis on text data. BERT is a state-of-the-art language representation model that excels in understanding context and nuances, making it highly effective for sentiment classification tasks. This API provides developers with the ability to harness the power of BERT for robust and precise sentiment analysis.\n\nS...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://googles-bert-sentiment-analysis.p.rapidapi.com/sentiment'\nquerystring = {\"text\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://googles-bert-sentiment-analysis.p.rapidapi.com/sentiment\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://googles-bert-sentiment-analysis.p.rapidapi.com/sentiment\"\nquerystring = {\"lang\": \"id\", \"text\": \"wah rumahnya bagus ya, tapi kok halamannya kotor sih?\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"googles-bert-sentiment-analysis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google's BERT Sentiment Analysis",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "wah rumahnya bagus ya, tapi kok halamannya kotor sih?"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "id"
                }
            ]
        }
    },
    {
        "query": "Please provide the names of Allah with Arabic as well as English words and their explanations and benefits.",
        "model_answer": "requests.get(\"https://allah-name.p.rapidapi.com/name\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"allah-name.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "99 name of Allah with Arabic as well as English word and with explanation and benefit",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://allah-name.p.rapidapi.com/name'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://allah-name.p.rapidapi.com/name\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://allah-name.p.rapidapi.com/name\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"allah-name.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Allah Name",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me find train trips from Berlin to Munich on February 16, 2022?",
        "model_answer": "requests.get(\"https://deutsche-bahn1.p.rapidapi.com/trips\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"deutsche-bahn1.p.rapidapi.com\"}, params={\"from_id\" \"008011201\", \"to_id\" \"008011155\", \"date\" \"16.02.2022\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Search stations and trips within Deutsche Bahn network. Find a train or public transport stop, search trains, trams, subway, and buses between two stations in the german railway network.. Get journey and fare data, departure and arrival times for any stop in Germany",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://deutsche-bahn1.p.rapidapi.com/trips'\nquerystring = {\"date\": \"\", \"from_id\": \"\", \"passenger0_age\": \"\", \"time\": \"\", \"to_id\": \"\", \"passenger3_age\": \"\", \"passenger2_discount\": \"\", \"passenger4_discount\": \"\", \"passenger1_discount\": \"\", \"passenger3_discount\": \"\", \"passenger2_age\": \"\", \"passenger0_discount\": \"\", \"passenger4_age\": \"\", \"passenger1_age\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://deutsche-bahn1.p.rapidapi.com/trips\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "date",
                    "description": "Travel date in format DD.MM.YYYY",
                    "type": "STRING"
                },
                {
                    "name": "from_id",
                    "description": "Departure id",
                    "type": "STRING"
                },
                {
                    "name": "passenger0_age",
                    "description": "Age of the first passenger",
                    "type": "NUMBER"
                },
                {
                    "name": "time",
                    "description": "Travel time",
                    "type": "TIME (24-hour HH:MM)"
                },
                {
                    "name": "to_id",
                    "description": "Arrival id",
                    "type": "STRING"
                },
                {
                    "name": "passenger3_age",
                    "description": "Age of the fourth passenger",
                    "type": "NUMBER"
                },
                {
                    "name": "passenger2_discount",
                    "description": "Discount of the third passenger",
                    "type": "ENUM"
                },
                {
                    "name": "passenger4_discount",
                    "description": "Discount of the fifth passenger",
                    "type": "ENUM"
                },
                {
                    "name": "passenger1_discount",
                    "description": "Discount of the second passenger",
                    "type": "ENUM"
                },
                {
                    "name": "passenger3_discount",
                    "description": "Discount of the fourth passenger",
                    "type": "ENUM"
                },
                {
                    "name": "passenger2_age",
                    "description": "Age of the third passenger",
                    "type": "NUMBER"
                },
                {
                    "name": "passenger0_discount",
                    "description": "Discount of the first passenger",
                    "type": "ENUM"
                },
                {
                    "name": "passenger4_age",
                    "description": "Age of the fifth passenger",
                    "type": "NUMBER"
                },
                {
                    "name": "passenger1_age",
                    "description": "Age of the second passenger",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://deutsche-bahn1.p.rapidapi.com/trips\"\nquerystring = {\"passenger3_age\": \"\", \"passenger2_discount\": \"\", \"passenger4_discount\": \"\", \"date\": \"16.02.2022\", \"passenger1_discount\": \"\", \"passenger3_discount\": \"\", \"from_id\": \"008011201\", \"passenger2_age\": \"\", \"passenger0_discount\": \"\", \"passenger4_age\": \"\", \"passenger0_age\": \"45\", \"time\": \"09:00\", \"passenger1_age\": \"\", \"to_id\": \"008011155\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"deutsche-bahn1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Deutsche Bahn",
            "api_arguments_original": [
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "Travel date in format DD.MM.YYYY",
                    "default": "16.02.2022"
                },
                {
                    "name": "from_id",
                    "type": "STRING",
                    "description": "Departure id",
                    "default": "008011201"
                },
                {
                    "name": "passenger0_age",
                    "type": "NUMBER",
                    "description": "Age of the first passenger",
                    "default": "45"
                },
                {
                    "name": "time",
                    "type": "TIME (24-hour HH:MM)",
                    "description": "Travel time",
                    "default": "09:00"
                },
                {
                    "name": "to_id",
                    "type": "STRING",
                    "description": "Arrival id",
                    "default": "008011155"
                },
                {
                    "name": "passenger3_age",
                    "type": "NUMBER",
                    "description": "Age of the fourth passenger",
                    "default": ""
                },
                {
                    "name": "passenger2_discount",
                    "type": "ENUM",
                    "description": "Discount of the third passenger",
                    "default": ""
                },
                {
                    "name": "passenger4_discount",
                    "type": "ENUM",
                    "description": "Discount of the fifth passenger",
                    "default": ""
                },
                {
                    "name": "passenger1_discount",
                    "type": "ENUM",
                    "description": "Discount of the second passenger",
                    "default": ""
                },
                {
                    "name": "passenger3_discount",
                    "type": "ENUM",
                    "description": "Discount of the fourth passenger",
                    "default": ""
                },
                {
                    "name": "passenger2_age",
                    "type": "NUMBER",
                    "description": "Age of the third passenger",
                    "default": ""
                },
                {
                    "name": "passenger0_discount",
                    "type": "ENUM",
                    "description": "Discount of the first passenger",
                    "default": ""
                },
                {
                    "name": "passenger4_age",
                    "type": "NUMBER",
                    "description": "Age of the fifth passenger",
                    "default": ""
                },
                {
                    "name": "passenger1_age",
                    "type": "NUMBER",
                    "description": "Age of the second passenger",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please check the status of the API \"DAILY OVRLL 0822202124848\"?",
        "model_answer": "requests.get(\"https://daily-ovrll-0822202124848.p.rapidapi.com/status/200\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"daily-ovrll-0822202124848.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "DAILY OVRLL 9hlhjjvr20210822114848856",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://daily-ovrll-0822202124848.p.rapidapi.com/status/200'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://daily-ovrll-0822202124848.p.rapidapi.com/status/200\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://daily-ovrll-0822202124848.p.rapidapi.com/status/200\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"daily-ovrll-0822202124848.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DAILY OVRLL 0822202124848",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you fetch the profile information for the Instagram user \"example_user\" using the provided API?",
        "model_answer": "requests.get(\"https://instagram120.p.rapidapi.com/api/instagram/hls\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram120.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Fetch any data from Instagram: photo and video links, profile info, stories, highlights. Uptime 97%. Best price for 500k requests!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram120.p.rapidapi.com/api/instagram/hls'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram120.p.rapidapi.com/api/instagram/hls\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram120.p.rapidapi.com/api/instagram/hls\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram120.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "instagram_v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the list of products and their options from the sandbox market place API?",
        "model_answer": "requests.get(\"https://sandbox-mktplace-eu-01-products.p.rapidapi.com/api_seller_products_others.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sandbox-mktplace-eu-01-products.p.rapidapi.com\"}, params={\"action\": \"list_products_options_values\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "sandbox.mktplace.eu - 01 products",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sandbox-mktplace-eu-01-products.p.rapidapi.com/api_seller_products_others.php'\nquerystring = {\"action\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sandbox-mktplace-eu-01-products.p.rapidapi.com/api_seller_products_others.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "action",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sandbox-mktplace-eu-01-products.p.rapidapi.com/api_seller_products_others.php\"\nquerystring = {\"action\": \"list_products_options_values\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sandbox-mktplace-eu-01-products.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "sandbox mktplace eu  01 products",
            "api_arguments_original": [
                {
                    "name": "action",
                    "type": "STRING",
                    "description": "",
                    "default": "list_products_options_values"
                }
            ]
        }
    },
    {
        "query": "I want to compile a Visual Basic code file named \"vb_code.vb\".",
        "model_answer": "requests.post(\"https://visual-basic-code-compiler.p.rapidapi.com/versions/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"visual-basic-code-compiler.p.rapidapi.com\"}, files={\"file\": open(\"vb_code.vb\", \"r\")})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Visual Basic Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://visual-basic-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://visual-basic-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://visual-basic-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"visual-basic-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Visual Basic Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you pronounce the word \"fluent\" for me?",
        "model_answer": "requests.get(\"https://thefluentme.p.rapidapi.com/post/P36288\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"thefluentme.p.rapidapi.com\"}, params={\"post_id\": \"fluent\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "The AI-powered language pronunciation API with ChatGPT",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://thefluentme.p.rapidapi.com/post/P36288'\nquerystring = {\"post_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://thefluentme.p.rapidapi.com/post/P36288\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "post_id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://thefluentme.p.rapidapi.com/post/P36288\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thefluentme.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "thefluentme",
            "api_arguments_original": [
                {
                    "name": "post_id",
                    "type": "string",
                    "description": "",
                    "default": "P36288"
                }
            ]
        }
    },
    {
        "query": "Can you check if this IFC file is valid? The file path is /path/to/file.ifc",
        "model_answer": "requests.get(\"https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"}, params={\"ticket\": \"/path/to/file.ifc\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "IFC models related BIM services\nGITHUB Repository : https://github.com/aminov-jp/BIMIFCServices",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}'\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ticket",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ifc-bim-services4.p.rapidapi.com/ilod/{ticket}\"\nquerystring = {\"ticket\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ifc-bim-services4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IFC BIM Services",
            "api_arguments_original": [
                {
                    "name": "ticket",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get promotional codes from the Get Promo Codes API.",
        "model_answer": "requests.get(\"https://get-promo-codes.p.rapidapi.com/data/get-stores/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"get-promo-codes.p.rapidapi.com\"}, params={\"page\": \"1\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "We are excited to offer developers access to our coupon data through the RapidAPI interface. Our coupon data includes over 1,000,000 coupon listings from more than 10,000 online merchants across the United States, United Kingdom, Australia, India, and other countries.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://get-promo-codes.p.rapidapi.com/data/get-stores/'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://get-promo-codes.p.rapidapi.com/data/get-stores/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://get-promo-codes.p.rapidapi.com/data/get-stores/\"\nquerystring = {\"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"get-promo-codes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Get Promo Codes",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to make a sample map for my app.",
        "model_answer": "requests.get(\"https://new-client.p.rapidapi.com/njajal\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"new-client.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Make sample map for app",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://new-client.p.rapidapi.com/njajal'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://new-client.p.rapidapi.com/njajal\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://new-client.p.rapidapi.com/njajal\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"new-client.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "New Client",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the walk, transit, and bike scores for a specific Zillow property?",
        "model_answer": "requests.get(\"https://zillow69.p.rapidapi.com/walkTransitBikeScores\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"zillow69.p.rapidapi.com\"}, params={\"zpid\": \"12345678\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Fast and highly available API. For-sale, rental listings and agens real-time data from Zillow.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://zillow69.p.rapidapi.com/walkTransitBikeScores'\nquerystring = {\"zpid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://zillow69.p.rapidapi.com/walkTransitBikeScores\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "zpid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://zillow69.p.rapidapi.com/walkTransitBikeScores\"\nquerystring = {\"zpid\": \"20485700\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"zillow69.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Zillow",
            "api_arguments_original": [
                {
                    "name": "zpid",
                    "type": "STRING",
                    "description": "",
                    "default": "20485700"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Misc useful API for software engineers and others.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://utile-space.p.rapidapi.com/health'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://utile-space.p.rapidapi.com/health\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://utile-space.p.rapidapi.com/health\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"utile-space.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "utile-space",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve the followings of user with userId 44196397 on Twitter.",
        "model_answer": "requests.get(\"https://twitter-aio.p.rapidapi.com/user/44196397/followings\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"twitter-aio.p.rapidapi.com\"}, params={\"cursor\": \"\", \"count\": \"20\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Access real-time data as soon as it's posted! With the Twitter AIO API, you can retrieve tweets, spaces, media and profiles instantly. Say goodbye to expensive fees charged by Twitter while still getting access to all the available data.\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitter-aio.p.rapidapi.com/user/44196397/followings'\nquerystring = {\"userId\": \"\", \"cursor\": \"\", \"count\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitter-aio.p.rapidapi.com/user/44196397/followings\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "userid",
                    "description": "The userId of the user. You can get it by converting a username to the userId or by searching a user and extracting the restId.",
                    "type": "string"
                },
                {
                    "name": "cursor",
                    "description": "At the end of the entries array you'll find two objects with the type TimelineTimelineCursor. There is one cursor to go up (Top) and one for going down (bottom) the list. You just need to provide the value as the cursor parameter to get the next page of the pagination.",
                    "type": "STRING"
                },
                {
                    "name": "count",
                    "description": "The default count is 20. You can specify a custom one here.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitter-aio.p.rapidapi.com/user/44196397/followings\"\nquerystring = {\"cursor\": \"\", \"count\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitter-aio.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Twitter AIO",
            "api_arguments_original": [
                {
                    "name": "userId",
                    "type": "string",
                    "description": "The userId of the user. You can get it by converting a username to the userId or by searching a user and extracting the restId.",
                    "default": "44196397"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "At the end of the entries array you'll find two objects with the type TimelineTimelineCursor. There is one cursor to go up (Top) and one for going down (bottom) the list. You just need to provide the value as the cursor parameter to get the next page of the pagination.",
                    "default": ""
                },
                {
                    "name": "count",
                    "type": "STRING",
                    "description": "The default count is 20. You can specify a custom one here.",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "Can you help me get pricing and flight itineraries information on Skyscanner?",
        "model_answer": "response = requests.get(\"https://skyscanner-flights.p.rapidapi.com/results\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"skyscanner-flights.p.rapidapi.com\"}, params={\"m\": \"5\", \"token\": \"API_KEY\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Pricing and flight itineraries information on Skyscanner.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://skyscanner-flights.p.rapidapi.com/results'\nquerystring = {\"m\": \"\", \"token\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://skyscanner-flights.p.rapidapi.com/results\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "m",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "token",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://skyscanner-flights.p.rapidapi.com/results\"\nquerystring = {\"m\": \"5\", \"token\": \"API_KEY\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"skyscanner-flights.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Skyscanner Flights",
            "api_arguments_original": [
                {
                    "name": "m",
                    "type": "STRING",
                    "description": "",
                    "default": "5"
                },
                {
                    "name": "token",
                    "type": "STRING",
                    "description": "",
                    "default": "API_KEY"
                }
            ]
        }
    },
    {
        "query": "I want to get the image of the manga with the ID \"6486b7937ae7cb74845df888\".",
        "model_answer": "requests.get(url=\"https://mangaverse-api.p.rapidapi.com/manga/image\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mangaverse-api.p.rapidapi.com\"}, params={\"id\": \"6486b7937ae7cb74845df888\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Unleash the World of Manga with MangaVerse API!  Discover a captivating universe of manga from Japan, Korea, and China, all conveniently translated into English. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mangaverse-api.p.rapidapi.com/manga/image'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mangaverse-api.p.rapidapi.com/manga/image\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mangaverse-api.p.rapidapi.com/manga/image\"\nquerystring = {\"id\": \"6486b7937ae7cb74845df888\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mangaverse-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MangaVerse API",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "6486b7937ae7cb74845df888"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me the current weather alerts in English for the location with ID 5c7a120c-473f-57be-af23-5c847c847a00?",
        "model_answer": "requests.get(\"https://kayuloweather.p.rapidapi.com/weatherAlert/en/5c7a120c-473f-57be-af23-5c847c847a00\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"kayuloweather.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "[DISCOUNT] Weather forecasts to the minute, weather alerts, historical data and astronomy data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kayuloweather.p.rapidapi.com/weatherAlert/en/5c7a120c-473f-57be-af23-5c847c847a00'\nquerystring = {\"language\": \"\", \"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kayuloweather.p.rapidapi.com/weatherAlert/en/5c7a120c-473f-57be-af23-5c847c847a00\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "language",
                    "description": "The IETF BCP 47 language tag to use for localizing responses.",
                    "type": "STRING"
                },
                {
                    "name": "id",
                    "description": "The unique identifier for the weather alert.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kayuloweather.p.rapidapi.com/weatherAlert/en/5c7a120c-473f-57be-af23-5c847c847a00\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kayuloweather.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "KayuloWeather",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "The IETF BCP 47 language tag to use for localizing responses.",
                    "default": "en"
                },
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "The unique identifier for the weather alert.",
                    "default": "5c7a120c-473f-57be-af23-5c847c847a00"
                }
            ]
        }
    },
    {
        "query": "What is the equivalent word for the number 123456?",
        "model_answer": "requests.get(\"https://number2words4.p.rapidapi.com/v1/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"number2words4.p.rapidapi.com\"}, params={\"language\": \"EN\", \"number\": \"123456\", \"locale\": \"USA\", \"units\": \"cent\", \"currency\": \"dollar\", \"output\": \"text\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Convert any digit's number into the equivalent words",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://number2words4.p.rapidapi.com/v1/'\nquerystring = {\"language\": \"\", \"number\": \"\", \"locale\": \"\", \"units\": \"\", \"currency\": \"\", \"output\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://number2words4.p.rapidapi.com/v1/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "language",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "number",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "locale",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "units",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "currency",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "output",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://number2words4.p.rapidapi.com/v1/\"\nquerystring = {\"language\": \"EN\", \"number\": \"98765432.10\", \"locale\": \"USA\", \"units\": \"cent\", \"currency\": \"dollar\", \"output\": \"text\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"number2words4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Number2Words",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": "EN"
                },
                {
                    "name": "number",
                    "type": "NUMBER",
                    "description": "",
                    "default": "98765432.10"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "",
                    "default": "USA"
                },
                {
                    "name": "units",
                    "type": "STRING",
                    "description": "",
                    "default": "cent"
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "",
                    "default": "dollar"
                },
                {
                    "name": "output",
                    "type": "STRING",
                    "description": "",
                    "default": "text"
                }
            ]
        }
    },
    {
        "query": "I want to scrape news articles from nytimes.",
        "model_answer": "response = requests.get(\"https://news175.p.rapidapi.com/articles/nytimes\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"news175.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "News Scrapper",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://news175.p.rapidapi.com/articles/nytimes'\nquerystring = {\"newspaper_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://news175.p.rapidapi.com/articles/nytimes\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaper_id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://news175.p.rapidapi.com/articles/nytimes\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news175.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "News_v3",
            "api_arguments_original": [
                {
                    "name": "newspaper_id",
                    "type": "string",
                    "description": "",
                    "default": "nytimes"
                }
            ]
        }
    },
    {
        "query": "I want to download this Instagram media using the following URL",
        "model_answer": "requests.get(\"https://instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com\"}, params={\"url\": \"https://www.instagram.com/p/CQNuGCnBIk0/\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Downlaod All Instagram Media Including Stories , Reels, Videos and many more, Using Single URL.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com/\"\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram-downloader-download-videos-reels-stories-2023.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram Downloader - Download Videos, Reels, Stories 2023",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to stream the live football match with matchid 123.",
        "model_answer": "requests.get(\"https://football-live-stream-api.p.rapidapi.com/stream.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"football-live-stream-api.p.rapidapi.com\"}, params={\"matchid\": \"123\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Live Football Streaming HD",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://football-live-stream-api.p.rapidapi.com/stream.php'\nquerystring = {\"matchid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://football-live-stream-api.p.rapidapi.com/stream.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "matchid",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://football-live-stream-api.p.rapidapi.com/stream.php\"\nquerystring = {\"matchid\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"football-live-stream-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Football Live Stream Api",
            "api_arguments_original": [
                {
                    "name": "matchid",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you generate a QR code for the text \"Hello World\"?",
        "model_answer": "requests.get(\"https://qr-code-generator20.p.rapidapi.com/generateadvanceimage\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"qr-code-generator20.p.rapidapi.com\"}, params={\"data\": \"Hello World\", \"foreground_color\": \"FF2400\", \"background_color\": \"00DBFF\", \"size\": 500, \"margin\": 10, \"label\": \"My label\", \"label_size\": 20, \"label_alignment\": \"center\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "QR code generator API. Dynamically generate QR codes and get an image in multiple formats.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://qr-code-generator20.p.rapidapi.com/generateadvanceimage'\nquerystring = {\"data\": \"\", \"foreground_color\": \"\", \"background_color\": \"\", \"size\": \"\", \"margin\": \"\", \"label\": \"\", \"label_size\": \"\", \"label_alignment\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://qr-code-generator20.p.rapidapi.com/generateadvanceimage\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "data",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "foreground_color",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "background_color",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "size",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "margin",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "label",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "label_size",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "label_alignment",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://qr-code-generator20.p.rapidapi.com/generateadvanceimage\"\nquerystring = {\"foreground_color\": \"FF2400\", \"background_color\": \"00DBFF\", \"size\": \"500\", \"margin\": \"10\", \"data\": \"1234\", \"label\": \"My label\", \"label_size\": \"20\", \"label_alignment\": \"center\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"qr-code-generator20.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QR Code Generator",
            "api_arguments_original": [
                {
                    "name": "data",
                    "type": "STRING",
                    "description": "",
                    "default": "1234"
                },
                {
                    "name": "foreground_color",
                    "type": "STRING",
                    "description": "",
                    "default": "FF2400"
                },
                {
                    "name": "background_color",
                    "type": "STRING",
                    "description": "",
                    "default": "00DBFF"
                },
                {
                    "name": "size",
                    "type": "NUMBER",
                    "description": "",
                    "default": "500"
                },
                {
                    "name": "margin",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                },
                {
                    "name": "label",
                    "type": "STRING",
                    "description": "",
                    "default": "My label"
                },
                {
                    "name": "label_size",
                    "type": "NUMBER",
                    "description": "",
                    "default": "20"
                },
                {
                    "name": "label_alignment",
                    "type": "STRING",
                    "description": "",
                    "default": "center"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the 14-day weather forecast for latitude 40.7128 and longitude -74.0060 in English?",
        "model_answer": "requests.get(\"https://weather-forecast-14-days.p.rapidapi.com/api/getforecastdata\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weather-forecast-14-days.p.rapidapi.com\"}, params={\"LAT\": \"40.7128\", \"LON\": \"-74.0060\", \"LANG\": \"en\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "weather forecast world wide  14 days 6hourly",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weather-forecast-14-days.p.rapidapi.com/api/getforecastdata'\nquerystring = {\"LAT\": \"\", \"LON\": \"\", \"LANG\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weather-forecast-14-days.p.rapidapi.com/api/getforecastdata\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lat",
                    "description": "Latitude",
                    "type": "NUMBER"
                },
                {
                    "name": "lon",
                    "description": "Longitude",
                    "type": "NUMBER"
                },
                {
                    "name": "lang",
                    "description": "Language [en,de,nl,fr,pl,gr,it,cn,ru,cz,pt,es]",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weather-forecast-14-days.p.rapidapi.com/api/getforecastdata\"\nquerystring = {\"LANG\": \"en\", \"LAT\": \"51.5\", \"LON\": \"-0.6\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weather-forecast-14-days.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "weather forecast 14 days",
            "api_arguments_original": [
                {
                    "name": "LAT",
                    "type": "NUMBER",
                    "description": "Latitude",
                    "default": "51.5"
                },
                {
                    "name": "LON",
                    "type": "NUMBER",
                    "description": "Longitude",
                    "default": "-0.6"
                },
                {
                    "name": "LANG",
                    "type": "STRING",
                    "description": "Language [en,de,nl,fr,pl,gr,it,cn,ru,cz,pt,es]",
                    "default": "en"
                }
            ]
        }
    },
    {
        "query": "Please verify if the email address example@gmail.com is valid.",
        "model_answer": "requests.get(\"https://apilayer-mailboxlayer-v1.p.rapidapi.com/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"apilayer-mailboxlayer-v1.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Simple and powerful email verification JSON API using SMTP, typo checks, syntax validation, and free and disposable provider filtering.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://apilayer-mailboxlayer-v1.p.rapidapi.com/check'\nquerystring = {\"email\": \"\", \"catch_all\": \"\", \"smtp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://apilayer-mailboxlayer-v1.p.rapidapi.com/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "email",
                    "description": "the email address to be validated",
                    "type": "STRING"
                },
                {
                    "name": "catch_all",
                    "description": "Set to \"0\" (default) to turn off Catch-all detection, set to \"1\" to turn on Catch-all detection",
                    "type": "NUMBER"
                },
                {
                    "name": "smtp",
                    "description": "Set to \"0\" to turn off SMTP check, set to \"1\" (default) to turn on SMTP check",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://apilayer-mailboxlayer-v1.p.rapidapi.com/check\"\nquerystring = {\"email\": \"\", \"catch_all\": \"0\", \"smtp\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"apilayer-mailboxlayer-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "mailboxlayer",
            "api_arguments_original": [
                {
                    "name": "email",
                    "type": "STRING",
                    "description": "the email address to be validated",
                    "default": ""
                },
                {
                    "name": "catch_all",
                    "type": "NUMBER",
                    "description": "Set to \"0\" (default) to turn off Catch-all detection, set to \"1\" to turn on Catch-all detection",
                    "default": "0"
                },
                {
                    "name": "smtp",
                    "type": "NUMBER",
                    "description": "Set to \"0\" to turn off SMTP check, set to \"1\" (default) to turn on SMTP check",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to check if the postal code 12345 corresponds to any municipality in Spain.",
        "model_answer": "requests.get(\"https://codigos-postales-de-espana.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"codigos-postales-de-espana.p.rapidapi.com\"}, params={\"codigo-postal\": \"12345\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Es una API que permite a los usuarios encontrar el municipio correspondiente a un c\u00f3digo postal espec\u00edfico en Espa\u00f1a. Simplemente ingresa el c\u00f3digo postal y recibir\u00e1s informaci\u00f3n detallada del municipio asociado. Es una herramienta f\u00e1cil de usar e ideal para desarrolladores y aplicaciones que requieren informaci\u00f3n precisa de municipios basada en c\u00f3digos postales espa\u00f1oles",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://codigos-postales-de-espana.p.rapidapi.com/'\nquerystring = {\"codigo-postal\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://codigos-postales-de-espana.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "codigo_postal",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://codigos-postales-de-espana.p.rapidapi.com/\"\nquerystring = {\"codigo-postal\": \"32500\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"codigos-postales-de-espana.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "C\u00f3digos Postales de Espa\u00f1a",
            "api_arguments_original": [
                {
                    "name": "codigo-postal",
                    "type": "STRING",
                    "description": "",
                    "default": "32500"
                }
            ]
        }
    },
    {
        "query": "Can you help me generate a QR code for the URL \"https://example.com\" using the URL Shortener API?",
        "model_answer": "response = requests.get(\"https://url-shortener25.p.rapidapi.com/short-urls\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"url-shortener25.p.rapidapi.com\"}, params={\"url\": \"https://example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "URL Shortener with free QR Code generation, tracking features and more. Backed by ultra fast CDN and Hosting.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://url-shortener25.p.rapidapi.com/short-urls/j95Aj/visits'\nquerystring = {\"code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://url-shortener25.p.rapidapi.com/short-urls/j95Aj/visits\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "code",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://url-shortener25.p.rapidapi.com/short-urls/j95Aj/visits\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"url-shortener25.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "URL Shortener",
            "api_arguments_original": [
                {
                    "name": "code",
                    "type": "string",
                    "description": "",
                    "default": "j95Aj"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://swagger-petstore8.p.rapidapi.com/user/string'\nquerystring = {\"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://swagger-petstore8.p.rapidapi.com/user/string\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "username",
                    "description": "The name that needs to be fetched. Use user1 for testing.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://swagger-petstore8.p.rapidapi.com/user/string\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"swagger-petstore8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Swagger PetStore",
            "api_arguments_original": [
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The name that needs to be fetched. Use user1 for testing. ",
                    "default": "string"
                }
            ]
        }
    },
    {
        "query": "Can you get me the betting status for Pinnacle Odds API?",
        "model_answer": "requests.get(\"https://pinnacle-odds.p.rapidapi.com/kit/v1/betting-status\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pinnacle-odds.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Pinnacle Sport API is a RESTful service for getting pre-match and live odds. Historical odds, score and results. Updates without delay. Sports: Soccer, tennis, basketball, hockey, american football, MMA, baseball. **Support**:  [tipsters@rapi.one](mailto:tipsters@rapi.one) / t.me/api_tipsters **Other sports api:** https://rapi.one",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pinnacle-odds.p.rapidapi.com/kit/v1/betting-status'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pinnacle-odds.p.rapidapi.com/kit/v1/betting-status\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pinnacle-odds.p.rapidapi.com/kit/v1/betting-status\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pinnacle-odds.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pinnacle Odds",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you give me the list of regions for AI News - Global API?",
        "model_answer": "requests.get(\"https://ai-news-global.p.rapidapi.com/get_regions\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"ai-news-global.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Global News produced by AI",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ai-news-global.p.rapidapi.com/get_regions'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ai-news-global.p.rapidapi.com/get_regions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ai-news-global.p.rapidapi.com/get_regions\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-news-global.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AI News - Global",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if an email address example@gmail.com is valid.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "0MMO ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://0mmo.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://0mmo.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://0mmo.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"0mmo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "0MMO",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check if this selfie image is live and genuine.",
        "model_answer": "requests.get(\"https://face-liveness-check.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"face-liveness-check.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Check if the selfie your users take is indeed live, optimally clicked to save in your records, if there are multiple faces detected in the image, and what percentage of the image does the face actually cover.  Face liveness detection helps you uncover frauds by ensuring that the image you have been provided isn\u2019t a picture of a picture, a passport sized image, or an image of another individual on a cell phone / laptop screen.  Pair it to the Face Compare API to have complete confidence that t...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://face-liveness-check.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://face-liveness-check.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://face-liveness-check.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-liveness-check.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Face liveness check",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you validate the given CNPJ number '12.345.678/0001-90' using the CNPJ Validator API?",
        "model_answer": "requests.get(\"https://cnpj-validator.p.rapidapi.com/generate/cnpj\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"cnpj-validator.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Validates Brazilian CNPJ numbers. It can also generate random, valid numbers.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://cnpj-validator.p.rapidapi.com/generate/cnpj'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://cnpj-validator.p.rapidapi.com/generate/cnpj\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://cnpj-validator.p.rapidapi.com/generate/cnpj\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"cnpj-validator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CNPJ Validator",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve the list of bookable items from the Sagenda v3 API.",
        "model_answer": "requests.get(\"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"sagenda-sagenda-v3-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Events",
            "framework": "RapidAPI",
            "functionality": "We are now hosted on PostMan : https://documenter.getpostman.com/view/3283093/SW7aXT2M?version=latest",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sagenda-sagenda-v3-v1.p.rapidapi.com/api/v3/bookableItems\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sagenda-sagenda-v3-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sagenda v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you analyze the emotion of this text \"I'm so excited for the weekend!\"?",
        "model_answer": "response = requests.get(\"https://emoai-ai-powered-text-emotion-analyzer.p.rapidapi.com/emotion\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"emoai-ai-powered-text-emotion-analyzer.p.rapidapi.com\"}, params={\"text\": \"I'm so excited for the weekend!\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "\ud83d\udd25 Are you looking for a powerful API that can analyze the emotions of your text data? Look no further than EmoAI! Our AI-powered endpoint can analyze text in over 140 languages, providing fast and accurate emotion scores for six basic emotions plus a neutral class - anger \ud83e\udd2c, disgust \ud83e\udd22, fear \ud83d\ude28, joy \ud83d\ude00, neutral \ud83d\ude10, and sadness \ud83d\ude2d. Whether you're analyzing social media posts, customer feedback, or any other form of text data, EmoAI can help you gain valuable insights into the emotions of your conte...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://emoai-ai-powered-text-emotion-analyzer.p.rapidapi.com/emotion'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://emoai-ai-powered-text-emotion-analyzer.p.rapidapi.com/emotion\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://emoai-ai-powered-text-emotion-analyzer.p.rapidapi.com/emotion\"\nquerystring = {\"text\": \"Our AI-powered endpoint can analyze text in over 140 languages, try it now :)\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"emoai-ai-powered-text-emotion-analyzer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "EmoAI - AI powered Text Emotion Analyzer",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Our AI-powered endpoint can analyze text in over 140 languages, try it now :)"
                }
            ]
        }
    },
    {
        "query": "I want to search for pornstars with the query \"abella\" and get their profile images in base64 format.",
        "model_answer": "requests.get(\"https://quality-porn.p.rapidapi.com/pornstar/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quality-porn.p.rapidapi.com\"}, params={\"query\": \"abella\", \"responseProfileImageBase64\": \"1\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "JSON search API for best free porn videos and pornstars gathered from the most popular porn sites. Filter by terms, quality and specific types and preferences.\nAdult, NSFW, Porn, Nudes, Pornstars as JSON",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quality-porn.p.rapidapi.com/pornstar/search'\nquerystring = {\"query\": \"\", \"responseImagesBase64\": \"\", \"responseImages\": \"\", \"responseProfileImageBase64\": \"\", \"responseProfileImage\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quality-porn.p.rapidapi.com/pornstar/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "responseimagesbase64",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "responseimages",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "responseprofileimagebase64",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "responseprofileimage",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quality-porn.p.rapidapi.com/pornstar/search\"\nquerystring = {\"responseImagesBase64\": \"1\", \"responseImages\": \"1\", \"responseProfileImageBase64\": \"1\", \"query\": \"abella\", \"responseProfileImage\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quality-porn.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quality Porn",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "abella"
                },
                {
                    "name": "responseImagesBase64",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "responseImages",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "responseProfileImageBase64",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "responseProfileImage",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you get me the music links for the artist with Spotify URL \"https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C\"?",
        "model_answer": "requests.get(\"https://musiclinkssapi.p.rapidapi.com/search/url\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"musiclinkssapi.p.rapidapi.com\"}, params={\"spotify_url\": \"https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C\"})",
        "original": {
            "domain": "Mapping",
            "framework": "RapidAPI",
            "functionality": "Get music links of song or artist.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://musiclinkssapi.p.rapidapi.com/search/url'\nquerystring = {\"spotify_url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://musiclinkssapi.p.rapidapi.com/search/url\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "spotify_url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://musiclinkssapi.p.rapidapi.com/search/url\"\nquerystring = {\"spotify_url\": \"https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"musiclinkssapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MusiclinkssApi",
            "api_arguments_original": [
                {
                    "name": "spotify_url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://open.spotify.com/artist/1nIUhcKHnK6iyumRyoV68C"
                }
            ]
        }
    },
    {
        "query": "I want to get the country information for United States.",
        "model_answer": "requests.get(\"https://country-information-and-conversion-api1.p.rapidapi.com/api/v1/country/name/United%20States\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"country-information-and-conversion-api1.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "The Country Information and Conversion API provides developers with a wide range of country-related data and conversion capabilities. \n\nHere are the details of what the API offers:  \n\nCountry Name: The full name of the country. \nCountry Code: The unique country code that identifies the country.\nCapital: The capital city of the country. \nPopulation: The population count of the country.\nLanguage(s): The official language(s) spoken in the country.\nCurrency: The currency used in the country.\nTime...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://country-information-and-conversion-api1.p.rapidapi.com/api/v1/country/name/United%20States'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://country-information-and-conversion-api1.p.rapidapi.com/api/v1/country/name/United%20States\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://country-information-and-conversion-api1.p.rapidapi.com/api/v1/country/name/United%20States\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"country-information-and-conversion-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Country Information and Conversion API",
            "api_arguments_original": []
        }
    },
    {
        "query": "I have a GS1 barcode with the value (01)12345678901231(10)ABCD-123(30)27(11)211015. Can you help me parse and validate it using the GS1Parser API?",
        "model_answer": "requests.get(\"https://gs1parser.p.rapidapi.com/parse\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gs1parser.p.rapidapi.com\"}, params={\"q\": \"(01)12345678901231(10)ABCD-123(30)27(11)211015\"})",
        "original": {
            "domain": "Logistics",
            "framework": "RapidAPI",
            "functionality": "Parse and validate GS1 barcode data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gs1parser.p.rapidapi.com/parse'\nquerystring = {\"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gs1parser.p.rapidapi.com/parse\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "Machine- or human-readable GS1 barcode data.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gs1parser.p.rapidapi.com/parse\"\nquerystring = {\"q\": \"(01)12345678901231(10)ABCD-123(30)27(11)211015\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gs1parser.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GS1Parser",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Machine- or human-readable GS1 barcode data.",
                    "default": "(01)12345678901231(10)ABCD-123(30)27(11)211015"
                }
            ]
        }
    },
    {
        "query": "Please check the weather forecast for New York City tomorrow.",
        "model_answer": "requests.get(\"https://weather-forecast-api.p.rapidapi.com/forecast\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weather-forecast-api.p.rapidapi.com\"}, params={\"q\": \"New York, US\", \"date\": \"tomorrow\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "testing api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://myapi32.p.rapidapi.comtest'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://myapi32.p.rapidapi.comtest\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://myapi32.p.rapidapi.comtest\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"myapi32.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MyAPI",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please list all available languages for translation?",
        "model_answer": "requests.get(\"https://translef-translator.p.rapidapi.com/language/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"translef-translator.p.rapidapi.com\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Translate text to 85+ languages. 0.3$ for million symbols \nFree translation of 50.000 characters.\nSimple and intuitive API.\nFor all questions, please contact telegram - https://t.me/translef",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translef-translator.p.rapidapi.com/language/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translef-translator.p.rapidapi.com/language/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translef-translator.p.rapidapi.com/language/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translef-translator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translef - translator",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the details of the photo associated with the phone number +1234567890?",
        "model_answer": "requests.get(\"https://dimondevosint.p.rapidapi.com/photo\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"dimondevosint.p.rapidapi.com\"}, params={\"phone\" \"+1234567890\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "It is an API for mobile phone number OSINT. If you abuse it, you will be immediately banned!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dimondevosint.p.rapidapi.com/photo'\nquerystring = {\"phone\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dimondevosint.p.rapidapi.com/photo\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "phone",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dimondevosint.p.rapidapi.com/photo\"\nquerystring = {\"phone\": \"+79999999999\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dimondevosint.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dimondevosint",
            "api_arguments_original": [
                {
                    "name": "phone",
                    "type": "STRING",
                    "description": "",
                    "default": "+79999999999"
                }
            ]
        }
    },
    {
        "query": "how can I get a list of countries in Arabic using the ArabicCountryList API?",
        "model_answer": "requests.get(\"https://arabiccountrylist.p.rapidapi.com/mi2tech/public/api/v1/country/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"arabiccountrylist.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Country list in Arabic",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://arabiccountrylist.p.rapidapi.com/mi2tech/public/api/v1/country/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://arabiccountrylist.p.rapidapi.com/mi2tech/public/api/v1/country/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://arabiccountrylist.p.rapidapi.com/mi2tech/public/api/v1/country/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"arabiccountrylist.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ArabicCountryList",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if there are any Python developer jobs available in California using the Indeed Jobs API?",
        "model_answer": "requests.get(\"https://indeed-jobs-api.p.rapidapi.com/indeed-us/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indeed-jobs-api.p.rapidapi.com\"}, params={\"location\": \"California\", \"keyword\": \"Python\", \"offset\": 0})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Indeed Jobs Search API - USA\nGet the Jobs List as JSON by giving Keyword, Location (USA Only) and offset value.\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indeed-jobs-api.p.rapidapi.com/indeed-us/'\nquerystring = {\"location\": \"\", \"keyword\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indeed-jobs-api.p.rapidapi.com/indeed-us/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "location",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "keyword",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "offset",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indeed-jobs-api.p.rapidapi.com/indeed-us/\"\nquerystring = {\"location\": \"california\", \"keyword\": \"python\", \"offset\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indeed-jobs-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indeed Jobs API",
            "api_arguments_original": [
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "",
                    "default": "california"
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": "python"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "Can you check the details of the invite code \"ABC123\" in the Discord Lookup API?",
        "model_answer": "requests.get(\"https://discord-lookup.p.rapidapi.com/invites/minecraft\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"discord-lookup.p.rapidapi.com\"}, params={\"invite\": \"ABC123\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Easily lookup Discord users by ID, invite data & joins by invite code and hidden vanity data",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://discord-lookup.p.rapidapi.com/invites/minecraft'\nquerystring = {\"invite\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://discord-lookup.p.rapidapi.com/invites/minecraft\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "invite",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://discord-lookup.p.rapidapi.com/invites/minecraft\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"discord-lookup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Discord Lookup",
            "api_arguments_original": [
                {
                    "name": "invite",
                    "type": "string",
                    "description": "",
                    "default": "minecraft"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest space news.",
        "model_answer": "requests.get(\"https://news-space.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"news-space.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "Space news scraper API for project",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://news-space.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://news-space.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://news-space.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"news-space.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "News space",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the dataset with the database code \"WIKI\", return format \"json\", and dataset code \"FB\" using the Quandl API.",
        "model_answer": "requests.get(\"https://quandl1.p.rapidapi.com/datasets/WIKI/FB.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"quandl1.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "The premier source for financial, economic, and alternative datasets, serving investment professionals. Quandl\u2019s platform is used by over 400,000 people, including analysts from the world\u2019s top hedge funds, asset managers and investment banks, see https://docs.quandl.com/docs/in-depth-usage",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quandl1.p.rapidapi.com/datasets/WIKI/FB.json'\nquerystring = {\"database_code\": \"\", \"return_format\": \"\", \"dataset_code\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quandl1.p.rapidapi.com/datasets/WIKI/FB.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "database_code",
                    "description": "The code for the database this time-series belongs to",
                    "type": "STRING"
                },
                {
                    "name": "return_format",
                    "description": "json, xml or csv",
                    "type": "STRING"
                },
                {
                    "name": "dataset_code",
                    "description": "The code for this time-series",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quandl1.p.rapidapi.com/datasets/WIKI/FB.json\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quandl1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Quandl",
            "api_arguments_original": [
                {
                    "name": "database_code",
                    "type": "STRING",
                    "description": "The code for the database this time-series belongs to",
                    "default": "WIKI"
                },
                {
                    "name": "return_format",
                    "type": "STRING",
                    "description": "json, xml or csv",
                    "default": "json"
                },
                {
                    "name": "dataset_code",
                    "type": "STRING",
                    "description": "The code for this time-series",
                    "default": "FB"
                }
            ]
        }
    },
    {
        "query": "I want to search for NFT collections with the name \"CryptoPunks\" in the Ethereum network.",
        "model_answer": "requests.get(url=\"https://nft-explorer.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nft-explorer.p.rapidapi.com\"}, params={\"filter\": \"name\", \"chain\": \"eth\", \"q\": \"CryptoPunks\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "Gets all NFT collections that match a given metadata search in +20 networks and including testnets.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nft-explorer.p.rapidapi.com/search'\nquerystring = {\"filter\": \"\", \"offset\": \"\", \"chain\": \"\", \"q\": \"\", \"from_block\": \"\", \"to_block\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nft-explorer.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "filter",
                    "description": "- To look into the entire metadata set the value to '*global*'. \n- To have a better response time you can look into a specific field like '*name*'",
                    "type": "STRING"
                },
                {
                    "name": "offset",
                    "description": "Pagination index. Default is set to 0",
                    "type": "NUMBER"
                },
                {
                    "name": "chain",
                    "description": "The chain to query:\n- eth\n- bsc\n- avalanche\n- polygon\n- 0x1\n- kovan\n- avalanche testnet\n- bsc testnet\n- mumbai\n- ropsten\n- 0x3\n- 0x4\n- goerli",
                    "type": "STRING"
                },
                {
                    "name": "q",
                    "description": "Term to look for.",
                    "type": "STRING"
                },
                {
                    "name": "from_block",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "to_block",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nft-explorer.p.rapidapi.com/search\"\nquerystring = {\"filter\": \"name\", \"from_block\": \"\", \"to_block\": \"\", \"offset\": \"0\", \"chain\": \"eth\", \"q\": \"ape\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nft-explorer.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NFT Explorer",
            "api_arguments_original": [
                {
                    "name": "filter",
                    "type": "STRING",
                    "description": "- To look into the entire metadata set the value to '*global*'. \n- To have a better response time you can look into a specific field like '*name*'\n",
                    "default": "name"
                },
                {
                    "name": "offset",
                    "type": "NUMBER",
                    "description": "Pagination index. Default is set to 0",
                    "default": "0"
                },
                {
                    "name": "chain",
                    "type": "STRING",
                    "description": "The chain to query:\n- eth\n- bsc\n- avalanche\n- polygon\n- 0x1\n- kovan\n- avalanche testnet\n- bsc testnet\n- mumbai\n- ropsten\n- 0x3\n- 0x4\n- goerli",
                    "default": "eth"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Term to look for.",
                    "default": "ape"
                },
                {
                    "name": "from_block",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "to_block",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you validate the phone number \"(123) 456-7890\" using the Phone verification API?",
        "model_answer": "requests.get(\"https://phone-verification3.p.rapidapi.com/api/v1/file/downloadFile/filename_output.xlsx\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"phone-verification3.p.rapidapi.com\"}, params={\"fileName\": \"filename_output.xlsx\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Validate any phone number across the USA, in bulk or single. Use free and forever.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://phone-verification3.p.rapidapi.com/api/v1/file/downloadFile/filename_output.xlsx'\nquerystring = {\"fileName\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://phone-verification3.p.rapidapi.com/api/v1/file/downloadFile/filename_output.xlsx\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "filename",
                    "description": "Name of file to be downloaded. Result file name is always in format {filename}_output.xlsx Replace {filename} with the name returned from upload file call.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://phone-verification3.p.rapidapi.com/api/v1/file/downloadFile/filename_output.xlsx\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"phone-verification3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Phone verification",
            "api_arguments_original": [
                {
                    "name": "fileName",
                    "type": "STRING",
                    "description": "Name of file to be downloaded. Result file name is always in format {filename}_output.xlsx Replace {filename} with the name returned from upload file call.",
                    "default": "filename_output.xlsx"
                }
            ]
        }
    },
    {
        "query": "I want to generate a fake credit card for Visa brand.",
        "model_answer": "requests.get(\"https://fake-credit-card-generator.p.rapidapi.com/v1/generatecard\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fake-credit-card-generator.p.rapidapi.com\"}, params={\"brand\": \"Visa\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Select the kind of card you want to generate and let the API generate a new Test Card for you. Using industry standard algorithms, the cards generated will be unique and tied to real instututions, providing a close to real testing number",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fake-credit-card-generator.p.rapidapi.com/v1/generatecard'\nquerystring = {\"brand\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fake-credit-card-generator.p.rapidapi.com/v1/generatecard\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "brand",
                    "description": "Enter your desired card brand",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fake-credit-card-generator.p.rapidapi.com/v1/generatecard\"\nquerystring = {\"brand\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fake-credit-card-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fake Credit Card Generator ",
            "api_arguments_original": [
                {
                    "name": "brand",
                    "type": "ENUM",
                    "description": "Enter your desired card brand",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me find the price of the item \"Ring of Healing\" in the Tibia game?",
        "model_answer": "requests.get(\"https://tibia-items.p.rapidapi.com/tibia-item/imbuements/epiphany\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tibia-items.p.rapidapi.com\"}, params={\"World\": \"Adra\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "this API will helps you find tibia items princes around the worlds\n\nAll endpoints to get items values, this is all we try to get on day.\n\nDiscord Channel for talk.\nhttps://discord.gg/bwZGtaz56P",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tibia-items.p.rapidapi.com/tibia-item/imbuements/epiphany'\nquerystring = {\"World\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tibia-items.p.rapidapi.com/tibia-item/imbuements/epiphany\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "world",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tibia-items.p.rapidapi.com/tibia-item/imbuements/epiphany\"\nquerystring = {\"World\": \"Adra\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tibia-items.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tibia Items",
            "api_arguments_original": [
                {
                    "name": "World",
                    "type": "STRING",
                    "description": "",
                    "default": "Adra"
                }
            ]
        }
    },
    {
        "query": "What events are happening in Linz, Austria?",
        "model_answer": "requests.get(\"https://events-linz.p.rapidapi.com/events\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"events-linz.p.rapidapi.com\"}, params={\"pageSize\": \"150\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "API that provides events in Linz, Austria",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://events-linz.p.rapidapi.com/events'\nquerystring = {\"pageSize\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://events-linz.p.rapidapi.com/events\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pagesize",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://events-linz.p.rapidapi.com/events\"\nquerystring = {\"pageSize\": \"150\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"events-linz.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Events Linz",
            "api_arguments_original": [
                {
                    "name": "pageSize",
                    "type": "NUMBER",
                    "description": "",
                    "default": "150"
                }
            ]
        }
    },
    {
        "query": "Can you show me the latest news from The Guardian related to the global recession?",
        "model_answer": "requests.get(\"https://global-recession-live.p.rapidapi.com/news/theguardian\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"global-recession-live.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API showing all the latest recession news around the world, collected from The New York Times, The Guardian, World Economic Forum, The Economist, AP News, Reuters, and Politico.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://global-recession-live.p.rapidapi.com/news/theguardian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://global-recession-live.p.rapidapi.com/news/theguardian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaperid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://global-recession-live.p.rapidapi.com/news/theguardian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"global-recession-live.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Global Recession Live",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "theguardian"
                }
            ]
        }
    },
    {
        "query": "I want to download a facebook video from the URL \"https://www.facebook.com/video123\".",
        "model_answer": "requests.get(\"https://fb-video-reels.p.rapidapi.com/api/fb\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fb-video-reels.p.rapidapi.com\"}, params={\"url\": \"https://www.facebook.com/video123\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "download facebook videos and reels in high quality",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fb-video-reels.p.rapidapi.com/api/fb'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fb-video-reels.p.rapidapi.com/api/fb\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "Facebook video url",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fb-video-reels.p.rapidapi.com/api/fb\"\nquerystring = {\"url\": \"https://www.facebook.com/reel/165180706514225/?mibextid=xM1NMCEE8qaB7NWz\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fb-video-reels.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "fb-video-reels",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "Facebook video url",
                    "default": "https://www.facebook.com/reel/165180706514225/?mibextid=xM1NMCEE8qaB7NWz"
                }
            ]
        }
    },
    {
        "query": "Can you help me compile my C99 code using the C99 Code Compiler API? I want to compile the file \"code.c\".",
        "model_answer": "response = requests.post(\"https://c99-code-compiler.p.rapidapi.com/compile\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"c99-code-compiler.p.rapidapi.com\"}, files={\"file\": open(\"code.c\", \"rb\")})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "C99 Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://c99-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://c99-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://c99-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"c99-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "C99 Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide the details of the top 50 fast food restaurants in the USA?",
        "model_answer": "requests.get(\"https://fast-food-restaurants-usa-top-50-chains.p.rapidapi.com/restaurants-top/all-city\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fast-food-restaurants-usa-top-50-chains.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "\nOur Fast Food Restaurants API provides you with a comprehensive database of the most popular fast food chains, allowing you to access vital information about their locations, hours and web presence.\n\nSign up now to get access!\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fast-food-restaurants-usa-top-50-chains.p.rapidapi.com/restaurants-top/all-city'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fast-food-restaurants-usa-top-50-chains.p.rapidapi.com/restaurants-top/all-city\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fast-food-restaurants-usa-top-50-chains.p.rapidapi.com/restaurants-top/all-city\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fast-food-restaurants-usa-top-50-chains.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fast Food Restaurants USA - TOP 50 Chains",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to search for \"apple\" using Bing Search APIs.",
        "model_answer": "requests.get(\"https://bing-search-apis.p.rapidapi.com/api/rapid/web_search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bing-search-apis.p.rapidapi.com\"}, params={\"size\": \"30\", \"keyword\": \"apple\", \"page\": \"0\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "An AI service from Microsoft Azure that enables secure, ad-free location search for your users, displaying relevant information from web results, images, local businesses, news and images Photo.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bing-search-apis.p.rapidapi.com/api/rapid/web_search'\nquerystring = {\"size\": \"\", \"keyword\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bing-search-apis.p.rapidapi.com/api/rapid/web_search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "size",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "keyword",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bing-search-apis.p.rapidapi.com/api/rapid/web_search\"\nquerystring = {\"size\": \"30\", \"keyword\": \"how-to-use-excel-for-free\", \"page\": \"0\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bing-search-apis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bing Search APIs",
            "api_arguments_original": [
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "",
                    "default": "30"
                },
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": "how-to-use-excel-for-free"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "0"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Devices",
            "framework": "RapidAPI",
            "functionality": "fsafsafsa",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asdasd23.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asdasd23.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asdasd23.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asdasd23.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "asdasd",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please translate the latitude 40.7128 and longitude -74.0060 to a timezone string.",
        "model_answer": "requests.get(\"https://location-to-timezone.p.rapidapi.com/v1/point-to-timezone\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"location-to-timezone.p.rapidapi.com\"}, params={\"lng\": \"-74.0060\", \"lat\": \"40.7128\"})",
        "original": {
            "domain": "Cryptography",
            "framework": "RapidAPI",
            "functionality": "Translate latitude & longitude coordinates to a timezone string. \nLow Latency results within 1ms from the back-end server. High accuracy; results close to country borders will be correct.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://location-to-timezone.p.rapidapi.com/v1/point-to-timezone'\nquerystring = {\"lng\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://location-to-timezone.p.rapidapi.com/v1/point-to-timezone\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lng",
                    "description": "Longitude",
                    "type": "STRING"
                },
                {
                    "name": "lat",
                    "description": "Latitude",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://location-to-timezone.p.rapidapi.com/v1/point-to-timezone\"\nquerystring = {\"lng\": \"4.869119\", \"lat\": \"52.362244\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"location-to-timezone.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Location to Timezone",
            "api_arguments_original": [
                {
                    "name": "lng",
                    "type": "STRING",
                    "description": "Longitude",
                    "default": "4.869119"
                },
                {
                    "name": "lat",
                    "type": "STRING",
                    "description": "Latitude",
                    "default": "52.362244"
                }
            ]
        }
    },
    {
        "query": "Can you please check the status of the payment with reference ID 1234567890?",
        "model_answer": "requests.get(\"https://ppob.p.rapidapi.com/prabayar/check-status/1234567890\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ppob.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Payment Point Online Banking\nIndonesia, China, Philippines, Malaysia, Singapore, Vietnam and Thailand. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ppob.p.rapidapi.com/prabayar/check-status/{ref_id}'\nquerystring = {\"ref_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ppob.p.rapidapi.com/prabayar/check-status/{ref_id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ref_id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ppob.p.rapidapi.com/prabayar/check-status/{ref_id}\"\nquerystring = {\"ref_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ppob.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PPOB",
            "api_arguments_original": [
                {
                    "name": "ref_id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "What news sources are available for sports in the United States?",
        "model_answer": "requests.get(\"https://newsdata2.p.rapidapi.com/sources\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"newsdata2.p.rapidapi.com\"}, params={\"country\" \"us\", \"category\" \"sports\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "Best News API To Search And Collect Worldwide News",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://newsdata2.p.rapidapi.com/sources'\nquerystring = {\"country\": \"\", \"language\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://newsdata2.p.rapidapi.com/sources\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "country",
                    "description": "Find sources that display news in a specific country. Possible Options: us gb in jp ae sa au ca sg",
                    "type": "STRING"
                },
                {
                    "name": "language",
                    "description": "Find sources that display news in a specific language. Possible Options: en ar jp in es fr",
                    "type": "STRING"
                },
                {
                    "name": "category",
                    "description": "Find sources that display news of this category. Possible Options: top business science technology sports health entertainment",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://newsdata2.p.rapidapi.com/sources\"\nquerystring = {\"country\": \"\", \"language\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"newsdata2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NewsData",
            "api_arguments_original": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "Find sources that display news in a specific country. Possible Options: us gb in jp ae sa au ca sg",
                    "default": ""
                },
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Find sources that display news in a specific language. Possible Options: en ar jp in es fr",
                    "default": ""
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "Find sources that display news of this category. Possible Options: top business science technology sports health entertainment",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "How can I get the population for China?",
        "model_answer": "requests.get(\"https://get-population.p.rapidapi.com/population/country\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"get-population.p.rapidapi.com\"}, params={\"country\": \"China\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get world population in realtime.  \ud83c\udf0d",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://get-population.p.rapidapi.com/population/country'\nquerystring = {\"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://get-population.p.rapidapi.com/population/country\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "country",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://get-population.p.rapidapi.com/population/country\"\nquerystring = {\"country\": \"Egypt\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"get-population.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Get Population",
            "api_arguments_original": [
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": "Egypt"
                }
            ]
        }
    },
    {
        "query": "What are the available genres in the Media Group API?",
        "model_answer": "requests.get(\"https://media-group.p.rapidapi.com/genres\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"media-group.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://media-group.p.rapidapi.com/genres'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://media-group.p.rapidapi.com/genres\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://media-group.p.rapidapi.com/genres\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"media-group.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Media-Group",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check if there are any available appointments for Dr. Smith?",
        "model_answer": "requests.get(\"https://supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com/api/users/Dr_Smith.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "The SuperSaaS API provides calendar services that can be used to add online booking and scheduling functionality to an existing website or CRM software.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com/api/users/{id}.json'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com/api/users/{id}.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com/api/users/{id}.json\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"supersaas-supersaas-online-bookings-and-appointment-scheduling-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SuperSaaS - Online Bookings and Appointment Scheduling",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide the current weather in New York City?",
        "model_answer": "requests.get(\"https://current-weather.p.rapidapi.com/api/weather\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"current-weather.p.rapidapi.com\"}, params={\"location\": \"New York City\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Demo api for test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://hello-world31.p.rapidapi.com/hello'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://hello-world31.p.rapidapi.com/hello\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://hello-world31.p.rapidapi.com/hello\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"hello-world31.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Hello world_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you reverse geocode the coordinates (40.7128, -74.0060) to get the corresponding address?",
        "model_answer": "requests.get(\"https://reverse-geocoding3.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"reverse-geocoding3.p.rapidapi.com\"}, params={\"request_id\" \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "This API gets address from a lat-long and latlong from a respective address.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reverse-geocoding3.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reverse-geocoding3.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reverse-geocoding3.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reverse-geocoding3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Reverse Geocoding_v2",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "\"What are the latest 50 clips from the channel jakubloveshorror on Twitch?\"",
        "model_answer": "requests.get(\"https://twitch-channel-clips.p.rapidapi.com/public/clips/jakubloveshorror\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"twitch-channel-clips.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "An API to get info about the latest 50 clips from a channel, including direct download links",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://twitch-channel-clips.p.rapidapi.com/public/clips/jakubloveshorror'\nquerystring = {\"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://twitch-channel-clips.p.rapidapi.com/public/clips/jakubloveshorror\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://twitch-channel-clips.p.rapidapi.com/public/clips/jakubloveshorror\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"twitch-channel-clips.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Twitch Channel Clips",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "string",
                    "description": "",
                    "default": "jakubloveshorror"
                }
            ]
        }
    },
    {
        "query": "I want to get the format of the Vimeo API response as XML.",
        "model_answer": "requests.get(\"https://vimeo.p.rapidapi.com/v2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"vimeo.p.rapidapi.com\"}, params={\"format\": \"xml\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Vimeo API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vimeo.p.rapidapi.com/v2'\nquerystring = {\"format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vimeo.p.rapidapi.com/v2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "format",
                    "description": "json or xml or php",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vimeo.p.rapidapi.com/v2\"\nquerystring = {\"format\": \"json\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vimeo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Vimeo",
            "api_arguments_original": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "json or xml or php",
                    "default": "json"
                }
            ]
        }
    },
    {
        "query": "I want to get information on the corporate retirement plan for EIN number 311334685.",
        "model_answer": "requests.get(\"https://form-5500-data.p.rapidapi.com/api/721937f76ee4118d05d4268531b648ae/311334685\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"form-5500-data.p.rapidapi.com\"}, params={\"EIN\" \"311334685\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Get information from all US Corporate Retirement plans from the Form 5500.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://form-5500-data.p.rapidapi.com/api/721937f76ee4118d05d4268531b648ae/311334685'\nquerystring = {\"EIN\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://form-5500-data.p.rapidapi.com/api/721937f76ee4118d05d4268531b648ae/311334685\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ein",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://form-5500-data.p.rapidapi.com/api/721937f76ee4118d05d4268531b648ae/311334685\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"form-5500-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Form 5500 Data",
            "api_arguments_original": [
                {
                    "name": "EIN",
                    "type": "NUMBER",
                    "description": "",
                    "default": "311334685"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the geolocation details for a specific address in New York?",
        "model_answer": "requests.get(\"https://geo_coder_dev.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"geo_coder_dev.p.rapidapi.com\"}, params={\"text\" \"New York\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Geocoder",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://geo_coder_dev.p.rapidapi.com/search/?'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://geo_coder_dev.p.rapidapi.com/search/?\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://geo_coder_dev.p.rapidapi.com/search/?\"\nquerystring = {\"text\": \"newyork\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"geo_coder_dev.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Geo_Coder_Dev",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "newyork"
                }
            ]
        }
    },
    {
        "query": "I want to check example@example.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@example.com\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "fvfvfv",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fffvfv.p.rapidapi.com/pastebin.com/raw/QjV2V98h'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fffvfv.p.rapidapi.com/pastebin.com/raw/QjV2V98h\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fffvfv.p.rapidapi.com/pastebin.com/raw/QjV2V98h\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fffvfv.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "fffvfv",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the live weather for New York City.",
        "model_answer": "requests.get(\"https://rapidapi.com/weatherapi/api/weatherapi-com\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weatherapi-com.p.rapidapi.com\"}, params={\"q\": \"New York City\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "oDesk APIs allowed for authorized users to can access and build their own oDesk applications.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://odeskapis.p.rapidapi.com/https://www.odesk.com/api/otask/v1/tasks/companies/12345/tasks/12;23;34.xml, json ,  https://www.odesk.com/api/otask/v1/tasks/companies/12345/teams/45678/tasks/12;23;34.xml, json,  https://www.odesk.com/api/otask/v1/tasks/companies/12345/teams/45678/users/myuser/tasks/12;23;34.xml, json'\nquerystring = {\"code1-code2-coden-format\": \"\", \"code1;code2;...;codeN\": \"\", \"format\": \"\", \"company\": \"\", \"team\": \"\", \"username\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://odeskapis.p.rapidapi.com/https://www.odesk.com/api/otask/v1/tasks/companies/12345/tasks/12;23;34.xml, json ,  https://www.odesk.com/api/otask/v1/tasks/companies/12345/teams/45678/tasks/12;23;34.xml, json,  https://www.odesk.com/api/otask/v1/tasks/companies/12345/teams/45678/users/myuser/tasks/12;23;34.xml, json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "code1_code2_coden_format",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "code1;code2;...;coden",
                    "description": "The specific task codes, the list of codes should be separated with \";\"",
                    "type": "STRING"
                },
                {
                    "name": "format",
                    "description": "formation of response",
                    "type": "STRING"
                },
                {
                    "name": "company",
                    "description": "The company ID",
                    "type": "NUMBER"
                },
                {
                    "name": "team",
                    "description": "The team ID",
                    "type": "NUMBER"
                },
                {
                    "name": "username",
                    "description": "The username of the target user account",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://odeskapis.p.rapidapi.com/https://www.odesk.com/api/otask/v1/tasks/companies/12345/tasks/12;23;34.xml, json ,  https://www.odesk.com/api/otask/v1/tasks/companies/12345/teams/45678/tasks/12;23;34.xml, json,  https://www.odesk.com/api/otask/v1/tasks/companies/12345/teams/45678/users/myuser/tasks/12;23;34.xml, json\"\nquerystring = {\"code1-code2-coden-format\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"odeskapis.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "oDesk APIs",
            "api_arguments_original": [
                {
                    "name": "code1-code2-coden-format",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "code1;code2;...;codeN",
                    "type": "STRING",
                    "description": "The specific task codes, the list of codes should be separated with \";\"",
                    "default": "12;23;34"
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "formation of response",
                    "default": "xml, json"
                },
                {
                    "name": "company",
                    "type": "NUMBER",
                    "description": "The company ID",
                    "default": "12345"
                },
                {
                    "name": "team",
                    "type": "NUMBER",
                    "description": "The team ID",
                    "default": "45678"
                },
                {
                    "name": "username",
                    "type": "STRING",
                    "description": "The username of the target user account",
                    "default": "myuser"
                }
            ]
        }
    },
    {
        "query": "I want to check if this boleto with id \"123456789\" has been paid.",
        "model_answer": "response = requests.get(\"https://consulta-de-boleto.p.rapidapi.com/consulta\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"consulta-de-boleto.p.rapidapi.com\"}, params={\"id\": \"123456789\"})",
        "original": {
            "domain": "Financial",
            "framework": "RapidAPI",
            "functionality": "Consulte se um boleto j\u00e1 foi pago ou n\u00e3o, e caso n\u00e3o tenha sido pago, tenha as informa\u00e7\u00f5es do boleto, tais como: Vencimento, banco emissor, nome e documento do benefici\u00e1rio, valor, etc.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://consulta-de-boleto.p.rapidapi.com/consulta'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://consulta-de-boleto.p.rapidapi.com/consulta\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://consulta-de-boleto.p.rapidapi.com/consulta\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"consulta-de-boleto.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Consulta de boleto",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get news articles from The Guardian using the Green Gold API.",
        "model_answer": "response = requests.get(\"https://green-gold.p.rapidapi.com/news/guardian\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"green-gold.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API aggregating news articles related to green technology, stocks, start-ups, and trends.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://green-gold.p.rapidapi.com/news/guardian'\nquerystring = {\"newspaperId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://green-gold.p.rapidapi.com/news/guardian\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "newspaperid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://green-gold.p.rapidapi.com/news/guardian\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"green-gold.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Green Gold",
            "api_arguments_original": [
                {
                    "name": "newspaperId",
                    "type": "string",
                    "description": "",
                    "default": "guardian"
                }
            ]
        }
    },
    {
        "query": "Can you give me the list of sidearms in Valorant?",
        "model_answer": "requests.get(\"https://valorant-weapons.p.rapidapi.com/Sidearms\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"valorant-weapons.p.rapidapi.com\"}, params={\"weapon_class_name\": \"\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Provides users with all relevant information regarding weapons in Valorant",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://valorant-weapons.p.rapidapi.com/Sidearms'\nquerystring = {\"weapon_class_name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://valorant-weapons.p.rapidapi.com/Sidearms\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "weapon_class_name",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://valorant-weapons.p.rapidapi.com/Sidearms\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"valorant-weapons.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Valorant Weapons",
            "api_arguments_original": [
                {
                    "name": "weapon_class_name",
                    "type": "string",
                    "description": "",
                    "default": "Sidearms"
                }
            ]
        }
    },
    {
        "query": "I want to compile this bash code file located at /home/user/code/script.sh.",
        "model_answer": "requests.post(\"https://bash-code-compiler.p.rapidapi.com/compile\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bash-code-compiler.p.rapidapi.com\"}, files={\"file\": open(\"/home/user/code/script.sh\", \"rb\")})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Bash Code Compiler API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bash-code-compiler.p.rapidapi.com/versions/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bash-code-compiler.p.rapidapi.com/versions/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bash-code-compiler.p.rapidapi.com/versions/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bash-code-compiler.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bash Code Compiler",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get popular posts from Reddit.",
        "model_answer": "requests.get(\"https://reddit34.p.rapidapi.com/getPopularPosts\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"reddit34.p.rapidapi.com\"}, params={\"sort\": \"new\", \"cursor\": \"\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Please join our telegram channel to get notified about updates. https://t.me/social_miner_news",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reddit34.p.rapidapi.com/getPopularPosts'\nquerystring = {\"sort\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reddit34.p.rapidapi.com/getPopularPosts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sort",
                    "description": "you can just send `new `or `hot`",
                    "type": "STRING"
                },
                {
                    "name": "cursor",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reddit34.p.rapidapi.com/getPopularPosts\"\nquerystring = {\"cursor\": \"\", \"sort\": \"new\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reddit34.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Reddit",
            "api_arguments_original": [
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "you can just send `new `or `hot`",
                    "default": "new"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide details for the Chattydata API?",
        "model_answer": "requests.get(\"https://chattydata.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"chattydata.p.rapidapi.com\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "This API is for chatty app",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://chattydata.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://chattydata.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://chattydata.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chattydata.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Chattydata",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to use the MagicMirrorAPI to fetch information for my smart mirror.",
        "model_answer": "requests.get(\"https://magicmirrorapi1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"magicmirrorapi1.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "MagicMirror",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://magicmirrorapi1.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://magicmirrorapi1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://magicmirrorapi1.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"magicmirrorapi1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MagicMirrorAPI",
            "api_arguments_original": []
        }
    },
    {
        "query": "Get the Chinese zodiac for the sign \"Tiger\" in Chinese Simplified language for the period \"2021\".",
        "model_answer": "requests.get(\"https://chinese-zodiacs-ai.p.rapidapi.com/get_zodiac/Tiger/2021/simplified\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"chinese-zodiacs-ai.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Chinese Zodiacs in Simplified &amp; Traditional languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://chinese-zodiacs-ai.p.rapidapi.com/get_zodiac/{sign}/{period}/{lang}'\nquerystring = {\"sign\": \"\", \"lang\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://chinese-zodiacs-ai.p.rapidapi.com/get_zodiac/{sign}/{period}/{lang}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sign",
                    "description": "",
                    "type": "ENUM"
                },
                {
                    "name": "lang",
                    "description": "Chinese Simplified or Traditional",
                    "type": "ENUM"
                },
                {
                    "name": "period",
                    "description": "",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://chinese-zodiacs-ai.p.rapidapi.com/get_zodiac/{sign}/{period}/{lang}\"\nquerystring = {\"sign\": \"\", \"lang\": \"\", \"period\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"chinese-zodiacs-ai.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Chinese Zodiacs - AI",
            "api_arguments_original": [
                {
                    "name": "sign",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "ENUM",
                    "description": "Chinese Simplified or Traditional",
                    "default": ""
                },
                {
                    "name": "period",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get all transactions for the virtual account with ID \"0dd3a3be-7783-4f87-b347-d9aed69a4334\".",
        "model_answer": "response = requests.get(\"https://virtual-accounts-api.p.rapidapi.com/api/v1/accountsrvc/virtualaccounts/transactions/account/0dd3a3be-7783-4f87-b347-d9aed69a4334/all\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"virtual-accounts-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "Use this API to create virtual accounts, manage them, create financial transations, create transaction channels (payment provider).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://virtual-accounts-api.p.rapidapi.com/api/v1/accountsrvc/virtualaccounts/transactions/account/0dd3a3be-7783-4f87-b347-d9aed69a4334/all'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://virtual-accounts-api.p.rapidapi.com/api/v1/accountsrvc/virtualaccounts/transactions/account/0dd3a3be-7783-4f87-b347-d9aed69a4334/all\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "(Required)",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://virtual-accounts-api.p.rapidapi.com/api/v1/accountsrvc/virtualaccounts/transactions/account/0dd3a3be-7783-4f87-b347-d9aed69a4334/all\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"virtual-accounts-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Virtual Accounts API",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "(Required) ",
                    "default": "0dd3a3be-7783-4f87-b347-d9aed69a4334"
                }
            ]
        }
    },
    {
        "query": "How can I find relevant people in the Data Axle database?",
        "model_answer": "requests.get(\"https://data-axle-consumer-address-search.p.rapidapi.com/v1/people/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"data-axle-consumer-address-search.p.rapidapi.com\"}, params={\"limit\": \"20\", \"packages\": \"standard_v2\", \"query\": \"123 Main St\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Find relevant People in the Data Axle database",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://data-axle-consumer-address-search.p.rapidapi.com/v1/people/search'\nquerystring = {\"limit\": \"\", \"packages\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://data-axle-consumer-address-search.p.rapidapi.com/v1/people/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "packages",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://data-axle-consumer-address-search.p.rapidapi.com/v1/people/search\"\nquerystring = {\"query\": \"123 Main St\", \"limit\": \"20\", \"packages\": \"standard_v2\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"data-axle-consumer-address-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Data Axle Consumer Address Search",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                },
                {
                    "name": "packages",
                    "type": "STRING",
                    "description": "",
                    "default": "standard_v2"
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "123 Main St"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the health status from the Open API?",
        "model_answer": "requests.get(\"https://open7.p.rapidapi.com/api/v1/health\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"open7.p.rapidapi.com\"}, params={\"text\": \"\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Open API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://open7.p.rapidapi.com/api/v1/health'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://open7.p.rapidapi.com/api/v1/health\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://open7.p.rapidapi.com/api/v1/health\"\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"open7.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Open",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you search for a recipe for Italian wedding soup?",
        "model_answer": "requests.get(\"https://recipe-by-api-ninjas.p.rapidapi.com/v1/recipe\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"recipe-by-api-ninjas.p.rapidapi.com\"}, params={\"query\": \"Italian wedding soup\"})",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "Search over 200,000 creative recipes. See more info at https://api-ninjas.com/api/recipe.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://recipe-by-api-ninjas.p.rapidapi.com/v1/recipe'\nquerystring = {\"query\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://recipe-by-api-ninjas.p.rapidapi.com/v1/recipe\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "query text to search.",
                    "type": "STRING"
                },
                {
                    "name": "offset",
                    "description": "number of results to offset for pagination.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://recipe-by-api-ninjas.p.rapidapi.com/v1/recipe\"\nquerystring = {\"offset\": \"\", \"query\": \"italian wedding soup\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"recipe-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Recipe by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "query text to search.",
                    "default": "italian wedding soup"
                },
                {
                    "name": "offset",
                    "type": "STRING",
                    "description": "number of results to offset for pagination.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the nearest alternative fuel stations to my location?",
        "model_answer": "requests.get(\"https://community-nrel-national-renewable-energy-laboratory.p.rapidapi.com/api/alt-fuel-stations/v1/nearest.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"community-nrel-national-renewable-energy-laboratory.p.rapidapi.com\"}, params={\"location\": \"433 Bryant St., San Francisco\", \"fuel_type\": \"ELEC\", \"limit\": \"1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "The National Renewable Energy Laboratory's developer network helps developers access and use energy data via Web services, including renewable energy and alternative fuel data.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://community-nrel-national-renewable-energy-laboratory.p.rapidapi.com/api/alt-fuel-stations/v1/nearest.json'\nquerystring = {\"format\": \"\", \"location\": \"\", \"latitude\": \"\", \"longitude\": \"\", \"radius\": \"\", \"status\": \"\", \"access\": \"\", \"fuel_type\": \"\", \"cards_accepted\": \"\", \"owner_type\": \"\", \"federal_agency_id\": \"\", \"ev_network\": \"\", \"ev_charging_level\": \"\", \"state\": \"\", \"zip\": \"\", \"limit\": \"\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://community-nrel-national-renewable-energy-laboratory.p.rapidapi.com/api/alt-fuel-stations/v1/nearest.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "format",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "location",
                    "description": "Type: string Default: None A free-form input describing the address of the location. This may include the address given in a variety of formats, such as:  street, city, state, postal code street, city, state street, postal code postal code city, state (Either the location parameter or both the latitude and longitude parameters are required)",
                    "type": "STRING"
                },
                {
                    "name": "latitude",
                    "description": "Type: decimal Default: -90 to 90 The latitude of the desired location.  (Either the location parameter or both the latitude and longitude parameters are required)",
                    "type": "STRING"
                },
                {
                    "name": "longitude",
                    "description": "Type: decimal Default: -180 to 180 The longitude of the desired location.  (Either the location parameter or both the latitude and longitude parameters are required)",
                    "type": "STRING"
                },
                {
                    "name": "radius",
                    "description": "Type: decimal Default: 5.0 The radius (in miles) around the search location to search for stations within.",
                    "type": "STRING"
                },
                {
                    "name": "status",
                    "description": "Type: string Default: all Options: all, E, P Return stations that match the given status. A single status, or a comma-separated list of multiple statuses, may be given.  Option\tDescription all\tInclude both open and planned stations. E\tOpen: The station is open and carries alternative fuel. P\tPlanned: The station is not yet open, but plans to carry alternative fuel in the future, or the station is temporarily out of service.",
                    "type": "STRING"
                },
                {
                    "name": "access",
                    "description": "Type: string Default: all Options: all, public, private",
                    "type": "STRING"
                },
                {
                    "name": "fuel_type",
                    "description": "Type: string Default: all Options: all, BD, CNG, E85, ELEC, HY, LNG, LPG Return stations that supply any of the given fuel types. A single fuel type, or a comma-separated list of multiple fuel types, may be given.  Option\tDescription all\tInclude all fuel types BD\tBiodiesel (B20 and above) CNG\tCompressed Natural Gas E85\tEthanol (E85) ELEC\tElectric HY\tHydrogen LNG\tLiquefied Natural Gas LPG\tLiquefied Petroleum Gas (Propane)",
                    "type": "STRING"
                },
                {
                    "name": "cards_accepted",
                    "description": "Type: string Default: all Options: all, A, D, M, V, Cash, Checks, CFN, CleanEnergy, FuelMan, GasCard, PHH, Voyager, Wright_Exp Return stations that accept any of the given payment methods. A single payment method, or a comma-separated list of multiple payment methods, may be given.  Option\tDescription all\tInclude all payment types A\tAmerican Express D\tDiscover M\tMasterCard V\tVisa Cash\t Checks\t CFN\t CleanEnergy\t FuelMan\t GasCard\t PHH\tPHH Services Wright_Exp\tWright Express",
                    "type": "STRING"
                },
                {
                    "name": "owner_type",
                    "description": "Type: string Default: all Options: all, FG, LG, P, SG, T Return stations owned by the given types of owners. A single owner type, or a comma-separated list of multiple owner types, may be given.  Option\tDescription all\tInclude all owner types P\tPrivately owned T\tUtility owned FG\tFederal government owned LG\tLocal government owned SG\tState government owned J\tJointly owned (combination of owner types)",
                    "type": "STRING"
                },
                {
                    "name": "federal_agency_id",
                    "description": "Type: integer Default: all Options: all, (see table to right for IDs) Return stations owned by the given federal agency. A federal agency ID, or a comma-separated list of multiple federal agency IDs, may be given.  Option\tDescription all\tInclude all stations, regardless of federal agency owner 3\tDefense Agencies 4\tU.S. Department of Agriculture 5\tDepartment of Air Force 6\tDepartment of Army 7\tDepartment of Commerce 8\tU.S. Department of Energy 9\tDepartment of Health and Human Services 10\tDepartment of Homeland Security 12\tDepartment of Justice 14\tDepartment of Navy 16\tDepartment of the Interior 17\tU.S. Department of Transportation 19\tDepartment of Veterans Affairs 20\tU.S. Environmental Protection Agency 22\tNational Aeronautics and Space Administration 23\tSmithsonian Institution 24\tSocial Security Administration 25\tU.S. Postal Service 26\tUnited States Marine Corps",
                    "type": "STRING"
                },
                {
                    "name": "ev_network",
                    "description": "Type: string Default: all Options: all, Blink Network, ChargeNet, ChargePoint Network, eVgo Network, EVSE LLC WebNet, RechargeAccess, Rideshare Online, Shorepower Return only electric charging stations that belong to the given network. A single network, or a comma separate list of multiple networks, may be given.  Option all Blink Network ChargeNet ChargePoint Network eVgo Network EVSE LLC WebNet RechargeAccess Rideshare Online Shorepower",
                    "type": "STRING"
                },
                {
                    "name": "ev_charging_level",
                    "description": "Type: string Default: all Options: all, 1, 2, dc_fast Return only electric charging stations that provide the given level of electric vehicle supply equipment (EVSE).  Option\tDescription all\tInclude all charging levels 1\tLevel 1 EVSE (standard 110V outlet) 2\tLevel 2 EVSE (J1772 connector) dc_fast\tDC Fast Charging",
                    "type": "STRING"
                },
                {
                    "name": "state",
                    "description": "Type: string Default: None Return only stations within the given state. State must be given as a two character state code (eg, \"CO\" for Colorado). A single state, or a comma-separate list of multiple states, may be given.",
                    "type": "STRING"
                },
                {
                    "name": "zip",
                    "description": "Type: string Default: None Return only stations within the given ZIP code. ZIP codes must be exactly 5 digits long. A single ZIP code, or a comma-separate list of multiple ZIP codes, may be given.",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "Type: integer Default: None Minimum: 1 The maximum number of results to return.",
                    "type": "STRING"
                },
                {
                    "name": "offset",
                    "description": "Type: integer Default: 0 Minimum: 0 Offset the results found (can be used with the limit parameter to paginate the results).",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://community-nrel-national-renewable-energy-laboratory.p.rapidapi.com/api/alt-fuel-stations/v1/nearest.json\"\nquerystring = {\"location\": \"433 Bryant St., San Francisco\", \"latitude\": \"\", \"longitude\": \"\", \"radius\": \"\", \"status\": \"\", \"access\": \"\", \"fuel_type\": \"ELEC\", \"cards_accepted\": \"\", \"owner_type\": \"\", \"federal_agency_id\": \"\", \"ev_network\": \"\", \"ev_charging_level\": \"\", \"state\": \"\", \"zip\": \"\", \"limit\": \"1\", \"offset\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"community-nrel-national-renewable-energy-laboratory.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NREL National Renewable Energy Laboratory",
            "api_arguments_original": [
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "",
                    "default": "json"
                },
                {
                    "name": "location",
                    "type": "STRING",
                    "description": "Type: string Default: None A free-form input describing the address of the location. This may include the address given in a variety of formats, such as:  street, city, state, postal code street, city, state street, postal code postal code city, state (Either the location parameter or both the latitude and longitude parameters are required)",
                    "default": "433 Bryant St., San Francisco"
                },
                {
                    "name": "latitude",
                    "type": "STRING",
                    "description": "Type: decimal Default: -90 to 90 The latitude of the desired location.  (Either the location parameter or both the latitude and longitude parameters are required)",
                    "default": ""
                },
                {
                    "name": "longitude",
                    "type": "STRING",
                    "description": "Type: decimal Default: -180 to 180 The longitude of the desired location.  (Either the location parameter or both the latitude and longitude parameters are required)",
                    "default": ""
                },
                {
                    "name": "radius",
                    "type": "STRING",
                    "description": "Type: decimal Default: 5.0 The radius (in miles) around the search location to search for stations within.",
                    "default": ""
                },
                {
                    "name": "status",
                    "type": "STRING",
                    "description": "Type: string Default: all Options: all, E, P Return stations that match the given status. A single status, or a comma-separated list of multiple statuses, may be given.  Option\tDescription all\tInclude both open and planned stations. E\tOpen: The station is open and carries alternative fuel. P\tPlanned: The station is not yet open, but plans to carry alternative fuel in the future, or the station is temporarily out of service.",
                    "default": ""
                },
                {
                    "name": "access",
                    "type": "STRING",
                    "description": "Type: string Default: all Options: all, public, private",
                    "default": ""
                },
                {
                    "name": "fuel_type",
                    "type": "STRING",
                    "description": "Type: string Default: all Options: all, BD, CNG, E85, ELEC, HY, LNG, LPG Return stations that supply any of the given fuel types. A single fuel type, or a comma-separated list of multiple fuel types, may be given.  Option\tDescription all\tInclude all fuel types BD\tBiodiesel (B20 and above) CNG\tCompressed Natural Gas E85\tEthanol (E85) ELEC\tElectric HY\tHydrogen LNG\tLiquefied Natural Gas LPG\tLiquefied Petroleum Gas (Propane)",
                    "default": "ELEC"
                },
                {
                    "name": "cards_accepted",
                    "type": "STRING",
                    "description": "Type: string Default: all Options: all, A, D, M, V, Cash, Checks, CFN, CleanEnergy, FuelMan, GasCard, PHH, Voyager, Wright_Exp Return stations that accept any of the given payment methods. A single payment method, or a comma-separated list of multiple payment methods, may be given.  Option\tDescription all\tInclude all payment types A\tAmerican Express D\tDiscover M\tMasterCard V\tVisa Cash\t Checks\t CFN\t CleanEnergy\t FuelMan\t GasCard\t PHH\tPHH Services Wright_Exp\tWright Express",
                    "default": ""
                },
                {
                    "name": "owner_type",
                    "type": "STRING",
                    "description": "Type: string Default: all Options: all, FG, LG, P, SG, T Return stations owned by the given types of owners. A single owner type, or a comma-separated list of multiple owner types, may be given.  Option\tDescription all\tInclude all owner types P\tPrivately owned T\tUtility owned FG\tFederal government owned LG\tLocal government owned SG\tState government owned J\tJointly owned (combination of owner types)",
                    "default": ""
                },
                {
                    "name": "federal_agency_id",
                    "type": "STRING",
                    "description": "Type: integer Default: all Options: all, (see table to right for IDs) Return stations owned by the given federal agency. A federal agency ID, or a comma-separated list of multiple federal agency IDs, may be given.  Option\tDescription all\tInclude all stations, regardless of federal agency owner 3\tDefense Agencies 4\tU.S. Department of Agriculture 5\tDepartment of Air Force 6\tDepartment of Army 7\tDepartment of Commerce 8\tU.S. Department of Energy 9\tDepartment of Health and Human Services 10\tDepartment of Homeland Security 12\tDepartment of Justice 14\tDepartment of Navy 16\tDepartment of the Interior 17\tU.S. Department of Transportation 19\tDepartment of Veterans Affairs 20\tU.S. Environmental Protection Agency 22\tNational Aeronautics and Space Administration 23\tSmithsonian Institution 24\tSocial Security Administration 25\tU.S. Postal Service 26\tUnited States Marine Corps",
                    "default": ""
                },
                {
                    "name": "ev_network",
                    "type": "STRING",
                    "description": "Type: string Default: all Options: all, Blink Network, ChargeNet, ChargePoint Network, eVgo Network, EVSE LLC WebNet, RechargeAccess, Rideshare Online, Shorepower Return only electric charging stations that belong to the given network. A single network, or a comma separate list of multiple networks, may be given.  Option all Blink Network ChargeNet ChargePoint Network eVgo Network EVSE LLC WebNet RechargeAccess Rideshare Online Shorepower",
                    "default": ""
                },
                {
                    "name": "ev_charging_level",
                    "type": "STRING",
                    "description": "Type: string Default: all Options: all, 1, 2, dc_fast Return only electric charging stations that provide the given level of electric vehicle supply equipment (EVSE).  Option\tDescription all\tInclude all charging levels 1\tLevel 1 EVSE (standard 110V outlet) 2\tLevel 2 EVSE (J1772 connector) dc_fast\tDC Fast Charging",
                    "default": ""
                },
                {
                    "name": "state",
                    "type": "STRING",
                    "description": "Type: string Default: None Return only stations within the given state. State must be given as a two character state code (eg, \"CO\" for Colorado). A single state, or a comma-separate list of multiple states, may be given.",
                    "default": ""
                },
                {
                    "name": "zip",
                    "type": "STRING",
                    "description": "Type: string Default: None Return only stations within the given ZIP code. ZIP codes must be exactly 5 digits long. A single ZIP code, or a comma-separate list of multiple ZIP codes, may be given.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "Type: integer Default: None Minimum: 1 The maximum number of results to return.",
                    "default": "1"
                },
                {
                    "name": "offset",
                    "type": "STRING",
                    "description": "Type: integer Default: 0 Minimum: 0 Offset the results found (can be used with the limit parameter to paginate the results).",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you get me the latest F1 news articles?",
        "model_answer": "requests.get(\"https://f1-latest-news.p.rapidapi.com/news/f1\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"f1-latest-news.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "This API scrapes the most recent F1 news articles from, the official F1 website, Sky F1, BBC F1, WTF1, and Autosport. More may be added in the future...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://f1-latest-news.p.rapidapi.com/news/f1'\nquerystring = {\"sourceID\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://f1-latest-news.p.rapidapi.com/news/f1\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sourceid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://f1-latest-news.p.rapidapi.com/news/f1\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"f1-latest-news.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "F1 Latest News",
            "api_arguments_original": [
                {
                    "name": "sourceID",
                    "type": "string",
                    "description": "",
                    "default": "f1"
                }
            ]
        }
    },
    {
        "query": "Can you provide information about a specific item on Amazon with ASIN B09DKV849B?",
        "model_answer": "requests.get(\"https://amazon-live-data.p.rapidapi.com/getasin/us/B09DKV849B\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-live-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "yurna discord bot",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yurna.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yurna.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yurna.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yurna.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "yurna",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide the Fear & Greed Index for the last 5 records.",
        "model_answer": "requests.get(\"https://crypto-fear-greed-index2.p.rapidapi.com/index\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crypto-fear-greed-index2.p.rapidapi.com\"}, params={\"limit\": \"5\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Index calculated by https://alternative.me/crypto/",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crypto-fear-greed-index2.p.rapidapi.com/index'\nquerystring = {\"limit\": \"\", \"timestamp\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crypto-fear-greed-index2.p.rapidapi.com/index\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "description": "Limit number of last N records",
                    "type": "NUMBER"
                },
                {
                    "name": "timestamp",
                    "description": "Get fear & greed index value by specified utc timestamp",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crypto-fear-greed-index2.p.rapidapi.com/index\"\nquerystring = {\"limit\": \"10\", \"timestamp\": \"1518048000\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crypto-fear-greed-index2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crypto Fear & Greed Index",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "Limit number of last N records",
                    "default": "10"
                },
                {
                    "name": "timestamp",
                    "type": "STRING",
                    "description": "Get fear & greed index value by specified utc timestamp",
                    "default": "1518048000"
                }
            ]
        }
    },
    {
        "query": "I want to send a new message \"Hello World\" using the Grup Terbuka API.",
        "model_answer": "requests.get(\"https://grup-terbuka.p.rapidapi.com/sendapi.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"grup-terbuka.p.rapidapi.com\"}, params={\"pesan\": \"Hello World\", \"key\":\"\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "open api group chat",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://grup-terbuka.p.rapidapi.com/sendapi.php'\nquerystring = {\"pesan\": \"\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://grup-terbuka.p.rapidapi.com/sendapi.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pesan",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "key",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://grup-terbuka.p.rapidapi.com/sendapi.php\"\nquerystring = {\"pesan\": \"pesan baru\", \"key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"grup-terbuka.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Grup Terbuka",
            "api_arguments_original": [
                {
                    "name": "pesan",
                    "type": "STRING",
                    "description": "",
                    "default": "pesan baru"
                },
                {
                    "name": "key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to calculate the number of business days for the next 5 days in the US.",
        "model_answer": "requests.get(\"https://daysapi.p.rapidapi.com/calendar/arithmetic\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"daysapi.p.rapidapi.com\"}, params={\"days\": 5})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "An API that will count business days including holidays for the US.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://daysapi.p.rapidapi.com/calendar/arithmetic'\nquerystring = {\"seconds\": \"\", \"months\": \"\", \"hours\": \"\", \"days\": \"\", \"date\": \"\", \"minutes\": \"\", \"years\": \"\", \"tz\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://daysapi.p.rapidapi.com/calendar/arithmetic\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "seconds",
                    "description": "number of seconds.",
                    "type": "NUMBER"
                },
                {
                    "name": "months",
                    "description": "Number of months",
                    "type": "NUMBER"
                },
                {
                    "name": "hours",
                    "description": "Number of hours.",
                    "type": "NUMBER"
                },
                {
                    "name": "days",
                    "description": "Number of days.",
                    "type": "NUMBER"
                },
                {
                    "name": "date",
                    "description": "Date for arithmetic calculation.",
                    "type": "STRING"
                },
                {
                    "name": "minutes",
                    "description": "Number of minutes.",
                    "type": "NUMBER"
                },
                {
                    "name": "years",
                    "description": "Number of years.",
                    "type": "NUMBER"
                },
                {
                    "name": "tz",
                    "description": "Time Zone. Timezone must be in [IANA](https://bit.ly/3h8wd73) format.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://daysapi.p.rapidapi.com/calendar/arithmetic\"\nquerystring = {\"seconds\": 0, \"months\": 0, \"hours\": 0, \"days\": 8, \"date\": \"2021-09-08 21:07:09\", \"minutes\": 0, \"years\": 0, \"tz\": \"UTC\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"daysapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DaysAPI",
            "api_arguments_original": [
                {
                    "name": "seconds",
                    "type": "NUMBER",
                    "description": "number of seconds.",
                    "default": 0
                },
                {
                    "name": "months",
                    "type": "NUMBER",
                    "description": "Number of months",
                    "default": 0
                },
                {
                    "name": "hours",
                    "type": "NUMBER",
                    "description": "Number of hours.",
                    "default": 0
                },
                {
                    "name": "days",
                    "type": "NUMBER",
                    "description": "Number of days.",
                    "default": 8
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "Date for arithmetic calculation.",
                    "default": "2021-09-08 21:07:09"
                },
                {
                    "name": "minutes",
                    "type": "NUMBER",
                    "description": "Number of minutes.",
                    "default": 0
                },
                {
                    "name": "years",
                    "type": "NUMBER",
                    "description": "Number of years.",
                    "default": 0
                },
                {
                    "name": "tz",
                    "type": "STRING",
                    "description": "Time Zone. Timezone must be in [IANA](https://bit.ly/3h8wd73) format.",
                    "default": "UTC"
                }
            ]
        }
    },
    {
        "query": "I want to get the most popular news from the global stock market API.",
        "model_answer": "requests.get(\"https://global-stock-market-api-data.p.rapidapi.com/news/most_popular_news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"global-stock-market-api-data.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This API is your gateway for information on world financial markets with respect to country wise. Included are World Stock Markets, Indices Futures, Commodities and much more in future.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://global-stock-market-api-data.p.rapidapi.com/news/most_popular_news'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://global-stock-market-api-data.p.rapidapi.com/news/most_popular_news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://global-stock-market-api-data.p.rapidapi.com/news/most_popular_news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"global-stock-market-api-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Global Stock Market API Data",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "api_call = requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Email",
            "framework": "RapidAPI",
            "functionality": "its for matin",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://matinapi.p.rapidapi.comhttps://privatix-temp-mail-v1.p.mashape.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://matinapi.p.rapidapi.comhttps://privatix-temp-mail-v1.p.mashape.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://matinapi.p.rapidapi.comhttps://privatix-temp-mail-v1.p.mashape.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"matinapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "MatinApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get data from Shreehari API.",
        "model_answer": "requests.get(\"https://shreehari.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shreehari.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Shreehari",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shreehari.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shreehari.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shreehari.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shreehari.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shreehari",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please help me to access the Slovenian Government company register using the Slovenia Company Data API? I need to search for a company with the name \"Adria\" and retrieve its information.",
        "model_answer": "response = requests.get(\"https://slovenia-company-data.p.rapidapi.com/prs/ajax.asp\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"slovenia-company-data.p.rapidapi.com\"}, params={\"s\": 1, \"method\": \"getNaziv\", \"term\": \"Adria\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Access the official Slovenian Government company register, basic search only. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://slovenia-company-data.p.rapidapi.com/prs/ajax.asp'\nquerystring = {\"s\": \"\", \"method\": \"\", \"term\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://slovenia-company-data.p.rapidapi.com/prs/ajax.asp\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "s",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "method",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "term",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://slovenia-company-data.p.rapidapi.com/prs/ajax.asp\"\nquerystring = {\"s\": 1, \"method\": \"getNaziv\", \"term\": \"adria\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"slovenia-company-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Slovenia Company Data",
            "api_arguments_original": [
                {
                    "name": "s",
                    "type": "NUMBER",
                    "description": "",
                    "default": 1
                },
                {
                    "name": "method",
                    "type": "STRING",
                    "description": "",
                    "default": "getNaziv"
                },
                {
                    "name": "term",
                    "type": "STRING",
                    "description": "",
                    "default": "adria"
                }
            ]
        }
    },
    {
        "query": "Can you help me take a screenshot of www.example.com with a width of 800 and height of 600?",
        "model_answer": "requests.get(\"https://web-capture2.p.rapidapi.com/pdf\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"web-capture2.p.rapidapi.com\"}, params={\"width\": 800, \"height\": 600, \"url\": \"www.example.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Take screenshots of any website or generate a pdf either from the website or an HTML file.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://web-capture2.p.rapidapi.com/pdf'\nquerystring = {\"width\": \"\", \"height\": \"\", \"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://web-capture2.p.rapidapi.com/pdf\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "width",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://web-capture2.p.rapidapi.com/pdf\"\nquerystring = {\"width\": \"1024\", \"height\": \"780\", \"url\": \"https://google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"web-capture2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Web Capture",
            "api_arguments_original": [
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1024"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "",
                    "default": "780"
                },
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://google.com"
                }
            ]
        }
    },
    {
        "query": "I want to search for iOS apps using the Ignition API.",
        "model_answer": "requests.get(\"https://ignition.p.rapidapi.comapi/searchApp.php\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"ignition.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "iOS Apps",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ignition.p.rapidapi.comapi/searchApp.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ignition.p.rapidapi.comapi/searchApp.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ignition.p.rapidapi.comapi/searchApp.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ignition.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ignition",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the data on all crypto coins related to sports teams?",
        "model_answer": "requests.get(\"https://fan-crypto-coins.p.rapidapi.com/datablinkx_crypto/coins\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fan-crypto-coins.p.rapidapi.com\"}, params={\"cursor\": \"\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Get data on all crypto coins related to sports teams through this API!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fan-crypto-coins.p.rapidapi.com/datablinkx_crypto/coins'\nquerystring = {\"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fan-crypto-coins.p.rapidapi.com/datablinkx_crypto/coins\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cursor",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fan-crypto-coins.p.rapidapi.com/datablinkx_crypto/coins\"\nquerystring = {\"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fan-crypto-coins.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fan Crypto Coins",
            "api_arguments_original": [
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "\"I want to check if example@gmail.com is a valid email address.\"",
        "model_answer": "response = requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "This API provides an easy way to analyze websites with Ecoindex. You have the ability to:\n\n- Make a page analysis\n- Define screen resolution\n- Save results to a DB\n- Retrieve results\n- Limit the number of request per day for a given host\n\nThis API is built on top of ecoindex-python with FastAPI",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ecoindex.p.rapidapi.com/health'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ecoindex.p.rapidapi.com/health\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ecoindex.p.rapidapi.com/health\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ecoindex.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ecoindex",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you find me a list of nearby pharmacies in Istanbul, Turkey?",
        "model_answer": "requests.get(url=\"https://eczanem.p.rapidapi.com/eczane\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"eczanem.p.rapidapi.com\"}, params={\"ilce\": \"\", \"il\": \"Istanbul\"})",
        "original": {
            "domain": "Medical",
            "framework": "RapidAPI",
            "functionality": "il ve il\u00e7e bilgisine g\u00f6re n\u00f6bet\u00e7i eczaneleri g\u00f6r\u00fcnt\u00fcleyin!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://eczanem.p.rapidapi.com/eczane'\nquerystring = {\"ilce\": \"\", \"il\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://eczanem.p.rapidapi.com/eczane\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ilce",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "il",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://eczanem.p.rapidapi.com/eczane\"\nquerystring = {\"ilce\": \"Merkez\", \"il\": \"\u00c7anakkale\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"eczanem.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Eczanem",
            "api_arguments_original": [
                {
                    "name": "ilce",
                    "type": "STRING",
                    "description": "",
                    "default": "Merkez"
                },
                {
                    "name": "il",
                    "type": "STRING",
                    "description": "",
                    "default": "\u00c7anakkale"
                }
            ]
        }
    },
    {
        "query": "I want to check if this image \"https://example.com/image.jpg\" contains any adult content.",
        "model_answer": "requests.get(url=\"https://nsfw-image-classification3.p.rapidapi.com/nsfwjs/check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"nsfw-image-classification3.p.rapidapi.com\"}, params={\"link\": \"https://example.com/image.jpg\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Use our Content Moderation API to flag possible inappropriate/ nude / adult content in your images.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nsfw-image-classification3.p.rapidapi.com/nsfwjs/check'\nquerystring = {\"link\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nsfw-image-classification3.p.rapidapi.com/nsfwjs/check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "link",
                    "description": "Image link",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nsfw-image-classification3.p.rapidapi.com/nsfwjs/check\"\nquerystring = {\"link\": \"https://cdn77-pic.xvideos-cdn.com/videos/thumbs169poster/c5/d0/e4/c5d0e4cd6124e1d2f5b3add1f582ca13/c5d0e4cd6124e1d2f5b3add1f582ca13.30.jpg\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nsfw-image-classification3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "NSFW Image Classification_v2",
            "api_arguments_original": [
                {
                    "name": "link",
                    "type": "STRING",
                    "description": "Image link",
                    "default": "https://cdn77-pic.xvideos-cdn.com/videos/thumbs169poster/c5/d0/e4/c5d0e4cd6124e1d2f5b3add1f582ca13/c5d0e4cd6124e1d2f5b3add1f582ca13.30.jpg"
                }
            ]
        }
    },
    {
        "query": "I want to get information about a pet with ID 123.",
        "model_answer": "requests.get(\"https://thisshouldbefree.p.rapidapi.com/pet/123\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "ThisshouldbeFREE",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://thisshouldbefree.p.rapidapi.com/pet/{petId}'\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "petid",
                    "description": "ID of pet to return",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://thisshouldbefree.p.rapidapi.com/pet/{petId}\"\nquerystring = {\"petId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"thisshouldbefree.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ThisshouldbeFREE",
            "api_arguments_original": [
                {
                    "name": "petId",
                    "type": "NUMBER",
                    "description": "ID of pet to return",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you validate the formatting of this driver's license number 1234567890 in the state of California?",
        "model_answer": "requests.get(\"https://dl-format-validation.p.rapidapi.com/GetArchiveReport\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"dl-format-validation.p.rapidapi.com\"}, params={\"AppId\": \"1234567890\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Confirms that the submitted driver\u2019s license formatting is the correct format as stipulated for the submitted state.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dl-format-validation.p.rapidapi.com/GetArchiveReport'\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dl-format-validation.p.rapidapi.com/GetArchiveReport\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "appid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dl-format-validation.p.rapidapi.com/GetArchiveReport\"\nquerystring = {\"AppId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dl-format-validation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DL Format Validation",
            "api_arguments_original": [
                {
                    "name": "AppId",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you show me a list of categories for Fiverr Pro services?",
        "model_answer": "requests.get(\"https://fiverr-pro-services.p.rapidapi.com/categories\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"fiverr-pro-services.p.rapidapi.com\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "API to provide a list of vetted professional sellers for any category.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://fiverr-pro-services.p.rapidapi.com/categories'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://fiverr-pro-services.p.rapidapi.com/categories\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://fiverr-pro-services.p.rapidapi.com/categories\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"fiverr-pro-services.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Fiverr Pro services",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the synonyms for the word \"happy\" in English using the Webit Language API?",
        "model_answer": "requests.get(\"https://webit-language.p.rapidapi.com/dictionary-synonyms\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"webit-language.p.rapidapi.com\"}, params={\"language\" \"en\", \"q\" \"happy\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "A.I. Text Paraphrase (Rewrite), Dictionary (Lookup, Examples, Bilingual, Synonyms, Antonyms), Key Phrases, Sentences Breaker.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://webit-language.p.rapidapi.com/dictionary-synonyms'\nquerystring = {\"language\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://webit-language.p.rapidapi.com/dictionary-synonyms\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "language",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://webit-language.p.rapidapi.com/dictionary-synonyms\"\nquerystring = {\"language\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"webit-language.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Webit Language",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if this link \"https://www.youtube.com/watch?v=ybJ_R08SogU\" has any open graph protocol data.",
        "model_answer": "requests.get(\"https://link-preview4.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"link-preview4.p.rapidapi.com\"}, params={\"url\": \"https://www.youtube.com/watch?v=ybJ_R08SogU\", \"oembed\": \"false\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Open graph protocol data parser. Can fetch various meta data from an url link.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://link-preview4.p.rapidapi.com/'\nquerystring = {\"url\": \"\", \"oembed\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://link-preview4.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "oembed",
                    "description": "",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://link-preview4.p.rapidapi.com/\"\nquerystring = {\"url\": \"https://www.youtube.com/watch?v=ybJ_R08SogU\", \"oembed\": \"false\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"link-preview4.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Link Preview",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.youtube.com/watch?v=ybJ_R08SogU"
                },
                {
                    "name": "oembed",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "false"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the horoscope for the sign Taurus in Portuguese?",
        "model_answer": "requests.get(\"https://horoscope-api.p.rapidapi.com/pt/taurus\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"horoscope-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Horoscope API - Professional Horoscopes as a simple JSON API - Access 12 horoscopes every day, written by professional astrologers. Important: Only Portuguese (PT) language is currently available.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://horoscope-api.p.rapidapi.com/pt/aquario'\nquerystring = {\"signId\": \"\", \"langId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://horoscope-api.p.rapidapi.com/pt/aquario\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "signid",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "langid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://horoscope-api.p.rapidapi.com/pt/aquario\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"horoscope-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Horoscope API",
            "api_arguments_original": [
                {
                    "name": "signId",
                    "type": "string",
                    "description": "",
                    "default": "aquario"
                },
                {
                    "name": "langId",
                    "type": "string",
                    "description": "",
                    "default": "pt"
                }
            ]
        }
    },
    {
        "query": "How can I get a random adult picture?",
        "model_answer": "requests.get(\"https://rapid-porn.p.rapidapi.com/photo\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"rapid-porn.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "If you're looking for a random adult picture, our API is just what you need. Simply send a request to our API and you'll receive a random adult picture in return. Whether you need a picture for a project or just for fun, our API is perfect.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://rapid-porn.p.rapidapi.com/photo'\nquerystring = {\"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://rapid-porn.p.rapidapi.com/photo\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "category",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://rapid-porn.p.rapidapi.com/photo\"\nquerystring = {\"category\": \"ass\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"rapid-porn.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "rapid-porn",
            "api_arguments_original": [
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": "ass"
                }
            ]
        }
    },
    {
        "query": "I want to calculate the amortized loan repayment for a loan with 36 installments, a principal amount of $5000, an annual interest rate of 5%, starting on January 1, 2023, and monthly repayment intervals.",
        "model_answer": "requests.get(\"https://loan-amortization-calculator.p.rapidapi.com/loan-amortization\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"loan-amortization-calculator.p.rapidapi.com\"}, params={\"installmentCount\": \"36\", \"principalAmount\": \"5000\", \"annualInterestRate\": \"0.05\", \"startDate\": \"2023-01-01\", \"repaymentInterval\": \"month\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "This API calculates Amortized loan repayment with details.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://loan-amortization-calculator.p.rapidapi.com/loan-amortization'\nquerystring = {\"installmentCount\": \"\", \"principalAmount\": \"\", \"annualInterestRate\": \"\", \"startDate\": \"\", \"repaymentInterval\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://loan-amortization-calculator.p.rapidapi.com/loan-amortization\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "installmentcount",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "principalamount",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "annualinterestrate",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "startdate",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "repaymentinterval",
                    "description": "default: 'month'",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://loan-amortization-calculator.p.rapidapi.com/loan-amortization\"\nquerystring = {\"installmentCount\": \"\", \"principalAmount\": \"\", \"annualInterestRate\": \"\", \"startDate\": \"\", \"repaymentInterval\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"loan-amortization-calculator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Loan Amortization Calculator",
            "api_arguments_original": [
                {
                    "name": "installmentCount",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "principalAmount",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "annualInterestRate",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "startDate",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "repaymentInterval",
                    "type": "STRING",
                    "description": "default: 'month'",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Is there a free API for getting bank sector reports?",
        "model_answer": "requests.get(\"https://argaam-data-apis-free.p.rapidapi.com/api/v1/json/facts-statistics/get-bank-sector-reports\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"argaam-data-apis-free.p.rapidapi.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Free APIs By Argaam",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://argaam-data-apis-free.p.rapidapi.com/api/v1/json/facts-statistics/get-bank-sector-reports'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://argaam-data-apis-free.p.rapidapi.com/api/v1/json/facts-statistics/get-bank-sector-reports\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://argaam-data-apis-free.p.rapidapi.com/api/v1/json/facts-statistics/get-bank-sector-reports\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"argaam-data-apis-free.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Argaam Data APIs Free",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get product information for a phone from the Ecommerce Product API.",
        "model_answer": "response = requests.get(\"https://ecommerce-product-api1.p.rapidapi.com/data\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ecommerce-product-api1.p.rapidapi.com\"}, params={\"product\": \"phone\", \"page\": \"1\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "The Ecommerce Product API is a comprehensive solution for retrieving and managing product information in ecommerce stores. This API provides access to a wide range of product data, including titles, descriptions, images, and more. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ecommerce-product-api1.p.rapidapi.com/data'\nquerystring = {\"product\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ecommerce-product-api1.p.rapidapi.com/data\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "product",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ecommerce-product-api1.p.rapidapi.com/data\"\nquerystring = {\"product\": \"phone\", \"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ecommerce-product-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Ecommerce Product API",
            "api_arguments_original": [
                {
                    "name": "product",
                    "type": "STRING",
                    "description": "",
                    "default": "phone"
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to check if this image is a human face.",
        "model_answer": "requests.get(\"https://face-detection14.p.rapidapi.com/v1/version\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"face-detection14.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "This ready-to-use API provides a pack of options in human face detection: face and landmarks detection, face re-identification of an already detected face. [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/face-analyzer) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/face-analysis?utm_source=face_analyzer_rapidapi&utm_medium=endpoints&utm_campaign...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://face-detection14.p.rapidapi.com/v1/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://face-detection14.p.rapidapi.com/v1/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://face-detection14.p.rapidapi.com/v1/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-detection14.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Face Detection_v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check the current web technologies used by the domain example.com.",
        "model_answer": "requests.get(\"https://builtwith-domain.p.rapidapi.com/v19/api.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"builtwith-domain.p.rapidapi.com\"}, params={\"LOOKUP\": \"example.com\", \"KEY\": \"your-api-key\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get web technology current and usage history for a domain going back to 2000.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://builtwith-domain.p.rapidapi.com/v19/api.json'\nquerystring = {\"LOOKUP\": \"\", \"KEY\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://builtwith-domain.p.rapidapi.com/v19/api.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lookup",
                    "description": "The domain you want to lookup.\n\n**Multi-Lookup Option**\nWhen doing RAW domain lookups, you can parse up to 16 domains at once as a CSV. For example cnn.com,about.com,builtwith.com - this dramatically improves throughput.",
                    "type": "STRING"
                },
                {
                    "name": "key",
                    "description": "This is your key, use this for lookups. Get this key from https://api.builtwith.com",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://builtwith-domain.p.rapidapi.com/v19/api.json\"\nquerystring = {\"LOOKUP\": \"overstock.com\", \"KEY\": \"your-api-key\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"builtwith-domain.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "BuiltWith Domain",
            "api_arguments_original": [
                {
                    "name": "LOOKUP",
                    "type": "STRING",
                    "description": "The domain you want to lookup.\n\n**Multi-Lookup Option**\nWhen doing RAW domain lookups, you can parse up to 16 domains at once as a CSV. For example cnn.com,about.com,builtwith.com - this dramatically improves throughput.",
                    "default": "overstock.com"
                },
                {
                    "name": "KEY",
                    "type": "STRING",
                    "description": "This is your key, use this for lookups. Get this key from https://api.builtwith.com",
                    "default": "your-api-key"
                }
            ]
        }
    },
    {
        "query": "How can I get the tags used for a YouTube video with the URL \"https://www.youtube.com/watch?v=OHOJFv4iaMc\"?",
        "model_answer": "requests.get(\"https://youtube-video-tags1.p.rapidapi.com/Getvideotags\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-video-tags1.p.rapidapi.com\"}, params={\"URL\": \"https://www.youtube.com/watch?v=OHOJFv4iaMc\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Get the tags used for YouTube video SEO without any youtube data api key.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-video-tags1.p.rapidapi.com/Getvideotags'\nquerystring = {\"URL\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-video-tags1.p.rapidapi.com/Getvideotags\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-video-tags1.p.rapidapi.com/Getvideotags\"\nquerystring = {\"URL\": \"https://www.youtube.com/watch?v=OHOJFv4iaMc\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-video-tags1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube Video Tags",
            "api_arguments_original": [
                {
                    "name": "URL",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.youtube.com/watch?v=OHOJFv4iaMc"
                }
            ]
        }
    },
    {
        "query": "I want to check if example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "This API compares and finds similarity between 2 face images. This is used to authenticate a person and detect an impersonation scenario.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://face-compare1.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://face-compare1.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://face-compare1.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"76d1c748-51ed-435b-bcd8-3d9c9d3eb68a\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"face-compare1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Face Compare",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "76d1c748-51ed-435b-bcd8-3d9c9d3eb68a"
                }
            ]
        }
    },
    {
        "query": "How can I use the QuickMocker API to retrieve user data?",
        "model_answer": "requests.get(\"https://quickmocker.p.rapidapi.com/user/12345\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"quickmocker.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Online API mocking tool to create a fake web services, intercept and debug requests in live mode, forward requests to any URL including localhost.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://quickmocker.p.rapidapi.com/user/12345'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://quickmocker.p.rapidapi.com/user/12345\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://quickmocker.p.rapidapi.com/user/12345\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"quickmocker.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "QuickMocker",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you fetch the live session data for session ID 2757 from the F1 Live Motorsport Data API?",
        "model_answer": "requests.get(\"https://f1-live-motorsport-data.p.rapidapi.com/session/2757\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"f1-live-motorsport-data.p.rapidapi.com\"}, params={\"session_id\": \"2757\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Formula 1 data for the ultimate motorsport fanatic!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://f1-live-motorsport-data.p.rapidapi.com/session/2757'\nquerystring = {\"session_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://f1-live-motorsport-data.p.rapidapi.com/session/2757\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "session_id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://f1-live-motorsport-data.p.rapidapi.com/session/2757\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"f1-live-motorsport-data.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "F1 Live Motorsport Data",
            "api_arguments_original": [
                {
                    "name": "session_id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "2757"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the tide forecast for a location with longitude -122.431297 and latitude 37.773972 for the dates September 1, 2022, to September 7, 2022?",
        "model_answer": "requests.get(\"https://stormglass-complete.p.rapidapi.com/tideex/{apiKey}/{lat}/{lng}/{startDate}/{endDate}/{datum}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"stormglass-complete.p.rapidapi.com\"}, params={\"lng\": \"-122.431297\", \"apiKey\": \"API_KEY_HERE\", \"lat\": \"37.773972\", \"startDate\": \"2022-09-01\", \"endDate\": \"2022-09-07\", \"datum\": \"LAT\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": " API to Complete Stormglass Weather, Bio, Tides, Astronomy, Solar, and Elevation",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://stormglass-complete.p.rapidapi.com/tideex/{apiKey}/{lat}/{lng}/{startDate}/{endDate}/{datum}'\nquerystring = {\"lng\": \"\", \"apiKey\": \"\", \"lat\": \"\", \"endDate\": \"\", \"startDate\": \"\", \"datum\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://stormglass-complete.p.rapidapi.com/tideex/{apiKey}/{lat}/{lng}/{startDate}/{endDate}/{datum}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lng",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "apikey",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "lat",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "enddate",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "startdate",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "datum",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://stormglass-complete.p.rapidapi.com/tideex/{apiKey}/{lat}/{lng}/{startDate}/{endDate}/{datum}\"\nquerystring = {\"endDate\": \"\", \"lng\": \"\", \"apiKey\": \"\", \"startDate\": \"\", \"datum\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"stormglass-complete.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Stormglass Complete",
            "api_arguments_original": [
                {
                    "name": "lng",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "apiKey",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lat",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "endDate",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "startDate",
                    "type": "string",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "datum",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please generate a personalized trip plan for 5 days in Paris, France.",
        "model_answer": "requests.get(\"https://ai-trip-planner.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"ai-trip-planner.p.rapidapi.com\"}, params={\"days\": \"5\", \"destination\": \"Paris, France\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "The API generates personalized trip plans based on the user's specified number of days and location. Using AI, the system recommends popular tourist attractions, local experiences, and accommodations based on user preferences and past travel behavior. The generated trip plans can be customized and adjusted to suit the user's needs, making it a valuable tool for anyone planning a trip.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ai-trip-planner.p.rapidapi.com/'\nquerystring = {\"days\": \"\", \"destination\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ai-trip-planner.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "days",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "destination",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ai-trip-planner.p.rapidapi.com/\"\nquerystring = {\"days\": \"3\", \"destination\": \"London,UK\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ai-trip-planner.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AI Trip Planner",
            "api_arguments_original": [
                {
                    "name": "days",
                    "type": "NUMBER",
                    "description": "",
                    "default": "3"
                },
                {
                    "name": "destination",
                    "type": "STRING",
                    "description": "",
                    "default": "London,UK"
                }
            ]
        }
    },
    {
        "query": "Can you please check the location for the address with postal code 12345?",
        "model_answer": "response = requests.get(\"https://viacep.p.rapidapi.com/12345/json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"viacep.p.rapidapi.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Webservice gratuito para pesquisa de endere\u00e7o via CEP. https://viacep.com.br",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://viacep.p.rapidapi.com/{CEP}/json'\nquerystring = {\"CEP\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://viacep.p.rapidapi.com/{CEP}/json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cep",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://viacep.p.rapidapi.com/{CEP}/json\"\nquerystring = {\"CEP\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"viacep.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ViaCEP",
            "api_arguments_original": [
                {
                    "name": "CEP",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you help me explore popular email marketing topics?",
        "model_answer": "requests.get(\"https://question-explorer3.p.rapidapi.com/general/email marketing\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"question-explorer3.p.rapidapi.com\"}, params={\"keyword\": \"email marketing\", \"FullData\": \"digital marketing\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Question Explorer",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://question-explorer3.p.rapidapi.com/general/email marketing'\nquerystring = {\"keyword\": \"\", \"FullData\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://question-explorer3.p.rapidapi.com/general/email marketing\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "keyword",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "fulldata",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://question-explorer3.p.rapidapi.com/general/email marketing\"\nquerystring = {\"FullData\": \"digital marketing\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"question-explorer3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Question Explorer",
            "api_arguments_original": [
                {
                    "name": "keyword",
                    "type": "string",
                    "description": "",
                    "default": "email marketing"
                },
                {
                    "name": "FullData",
                    "type": "STRING",
                    "description": "",
                    "default": "digital marketing"
                }
            ]
        }
    },
    {
        "query": "Please provide me with a quote by Kimi Raikkonen from the F1 drivers quotes API.",
        "model_answer": "requests.get(\"https://f1-drivers-quotes.p.rapidapi.com/authors/raikkonen\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"f1-drivers-quotes.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "An API that provides numerous quotes said by famous Formula 1 drivers and personalities.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://f1-drivers-quotes.p.rapidapi.com/authors/raikkonen'\nquerystring = {\"driverId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://f1-drivers-quotes.p.rapidapi.com/authors/raikkonen\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "driverid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://f1-drivers-quotes.p.rapidapi.com/authors/raikkonen\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"f1-drivers-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "F1 drivers quotes",
            "api_arguments_original": [
                {
                    "name": "driverId",
                    "type": "string",
                    "description": "",
                    "default": "raikkonen"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the meaning of the word \"apple\" using the English Words API?",
        "model_answer": "requests.get(\"https://english-words2.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"english-words2.p.rapidapi.com\"}, params={\"word\": \"apple\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "4, 5 and 6 letter english words with meanings to create your own word based games",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://english-words2.p.rapidapi.com/'\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://english-words2.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "word",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://english-words2.p.rapidapi.com/\"\nquerystring = {\"word\": \"apple\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"english-words2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "English Words",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "STRING",
                    "description": "",
                    "default": "apple"
                }
            ]
        }
    },
    {
        "query": "I want to scrape Instagram post info for the post with URL https://www.instagram.com/p/Crk0I2Uo0es .",
        "model_answer": "requests.get(\"https://instagram110.p.rapidapi.com/v2/instagram/post/info\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"instagram110.p.rapidapi.com\"}, params={\"query\": \"https://www.instagram.com/p/Crk0I2Uo0es\", \"related_posts\": \"false\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "\ud83d\udfe2\ud83d\udc9a 2023 API Scraping Instagram public data scraper for search, users, posts, hashtags, locations and more. You are only charged for the traffic you use.\n\n",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://instagram110.p.rapidapi.com/v2/instagram/post/info'\nquerystring = {\"query\": \"\", \"related_posts\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://instagram110.p.rapidapi.com/v2/instagram/post/info\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "related_posts",
                    "description": "",
                    "type": "BOOLEAN"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://instagram110.p.rapidapi.com/v2/instagram/post/info\"\nquerystring = {\"query\": \"https://www.instagram.com/p/Crk0I2Uo0es\", \"related_posts\": \"false\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"instagram110.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Instagram_v9",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.instagram.com/p/Crk0I2Uo0es"
                },
                {
                    "name": "related_posts",
                    "type": "BOOLEAN",
                    "description": "",
                    "default": "false"
                }
            ]
        }
    },
    {
        "query": "How can I check if the email address \"example@gmail.com\" is valid?",
        "model_answer": "requests.get(url=\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Amazon Data Scraper is the easiest way to get access to products, price, sales and reviews data from amazon in JSON format",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazon-data-scraper126.p.rapidapi.com/search/mac'\nquerystring = {\"searchQuery\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazon-data-scraper126.p.rapidapi.com/search/mac\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchquery",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazon-data-scraper126.p.rapidapi.com/search/mac\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazon-data-scraper126.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Amazon Data Scraper _v2",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "mac"
                }
            ]
        }
    },
    {
        "query": "Can you help me get information about job vacancies at Ubisoft?",
        "model_answer": "requests.get(url=\"https://indeed12.p.rapidapi.com/company/Ubisoft/jobs\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"indeed12.p.rapidapi.com\"}, params={\"locality\": \"\", \"start\": \"1\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Get company and job information from indeed",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indeed12.p.rapidapi.com/company/Ubisoft/jobs'\nquerystring = {\"company_id\": \"\", \"locality\": \"\", \"start\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indeed12.p.rapidapi.com/company/Ubisoft/jobs\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "company_id",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "locality",
                    "description": "Select the Indeed's country. Each value correspond to a specific indeed subdomain. Default value if missing is 'us'",
                    "type": "ENUM"
                },
                {
                    "name": "start",
                    "description": "Use to control the pagination of results. If omitted return the first page",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indeed12.p.rapidapi.com/company/Ubisoft/jobs\"\nquerystring = {\"locality\": \"\", \"start\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indeed12.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "indeed",
            "api_arguments_original": [
                {
                    "name": "company_id",
                    "type": "string",
                    "description": "",
                    "default": "Ubisoft"
                },
                {
                    "name": "locality",
                    "type": "ENUM",
                    "description": "Select the Indeed's country. Each value correspond to a specific indeed subdomain. Default value if missing is 'us'",
                    "default": ""
                },
                {
                    "name": "start",
                    "type": "NUMBER",
                    "description": "Use to control the pagination of results. If omitted return the first page",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you get the wave conditions at a specific location in the ocean?",
        "model_answer": "requests.get(\"https://wavebase.p.rapidapi.com/v1/tiles/singleband/VHM0/{datetime}/0/0/0.png\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"wavebase.p.rapidapi.com\"}, params={\"variable\": \"VHM0\", \"datetime\": \"\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Wave, Weather and Tide Conditions for any spot on the Ocean Surface.\n\nXYZ Tiles for Global Wave Conditions\n\nhttps://wavebase.app",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://wavebase.p.rapidapi.com/v1/tiles/singleband/VHM0/{datetime}/0/0/0.png'\nquerystring = {\"variable\": \"\", \"datetime\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://wavebase.p.rapidapi.com/v1/tiles/singleband/VHM0/{datetime}/0/0/0.png\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "variable",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "datetime",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://wavebase.p.rapidapi.com/v1/tiles/singleband/VHM0/{datetime}/0/0/0.png\"\nquerystring = {\"datetime\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"wavebase.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Wavebase",
            "api_arguments_original": [
                {
                    "name": "variable",
                    "type": "string",
                    "description": "",
                    "default": "VHM0"
                },
                {
                    "name": "datetime",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me the current status of my Indian bank statement with the request id \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"?",
        "model_answer": "requests.get(\"https://indian-bank-statement.p.rapidapi.com/v3/tasks\",headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"indian-bank-statement.p.rapidapi.com\"},params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "The bank statement API helps banks and lenders make decisions b providing outputs about Salary frequency and estimation, current financial health of the individual, any risky behaviour associated with the transactions.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://indian-bank-statement.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://indian-bank-statement.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://indian-bank-statement.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"indian-bank-statement.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Indian Bank Statement",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the Myanmar 2D live lottery results?",
        "model_answer": "requests.get(\"https://shwe-2d-live-api.p.rapidapi.com/3d.php\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"shwe-2d-live-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Myanmar 2D ,Thai Stock ,Set",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shwe-2d-live-api.p.rapidapi.com/3d.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shwe-2d-live-api.p.rapidapi.com/3d.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shwe-2d-live-api.p.rapidapi.com/3d.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shwe-2d-live-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Shwe 2D Live Api",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I get the list of users who liked the media with mediaId 2869228867263131000 on Instagram?",
        "model_answer": "requests.get(\"https://100-success-instagram-api-scalable-robust.p.rapidapi.com/instagram/v1/media/2869228867263131000/likers\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"100-success-instagram-api-scalable-robust.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "750 requests a minute, 100% success rate Instagram API, any scale is supported. Need help/ custom plan? contact us on Telegram: https://t.me/apimaster10 Join the channel for updates: https://t.me/socialdataapis",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://100-success-instagram-api-scalable-robust.p.rapidapi.com/instagram/v1/media/2869228867263131000/likers'\nquerystring = {\"mediaId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://100-success-instagram-api-scalable-robust.p.rapidapi.com/instagram/v1/media/2869228867263131000/likers\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "mediaid",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://100-success-instagram-api-scalable-robust.p.rapidapi.com/instagram/v1/media/2869228867263131000/likers\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"100-success-instagram-api-scalable-robust.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "100% Success Instagram API - Scalable & Robust",
            "api_arguments_original": [
                {
                    "name": "mediaId",
                    "type": "NUMBER",
                    "description": "",
                    "default": 2869228867263131000
                }
            ]
        }
    },
    {
        "query": "Please provide the real estate transaction records for zipcode 90210, starting from page 3.",
        "model_answer": "requests.get(\"https://real-estate-records.p.rapidapi.com/search/zipcode\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"real-estate-records.p.rapidapi.com\"}, params={\"zipcode\": \"90210\", \"page\": \"3\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Real estate transaction records for New York City and whole New Jersey. Public records have been collected from various sites, standardized using Here.com API, with geolocation information for your consumption. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://real-estate-records.p.rapidapi.com/search/zipcode'\nquerystring = {\"zipcode\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://real-estate-records.p.rapidapi.com/search/zipcode\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "zipcode",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://real-estate-records.p.rapidapi.com/search/zipcode\"\nquerystring = {\"page\": \"1\", \"zipcode\": \"10019\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"real-estate-records.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Real Estate Records",
            "api_arguments_original": [
                {
                    "name": "zipcode",
                    "type": "STRING",
                    "description": "",
                    "default": "10019"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you log out the user from the API?",
        "model_answer": "requests.get(\"https://tes78.p.rapidapi.com/user/logout\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tes78.p.rapidapi.com\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tes78.p.rapidapi.com/user/logout'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tes78.p.rapidapi.com/user/logout\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tes78.p.rapidapi.com/user/logout\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tes78.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "tes",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check the nutritional facts of an apple in English using DietaGram API.",
        "model_answer": "requests.get(\"https://dietagram.p.rapidapi.com/apiFood.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"dietagram.p.rapidapi.com\"}, params={\"name\": \"apple\", \"lang\": \"en\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Find nutrition facts by food name or by UPC (barcode). API supports English, Russian, Polish, Spanish, Bulgarian, Ukrainian",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dietagram.p.rapidapi.com/apiFood.php'\nquerystring = {\"name\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dietagram.p.rapidapi.com/apiFood.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "name",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "Lang is necessary for search in the certain lang food base.  It will be detected automatically or you could set manually from this set of values (\\\\\\\"en\\\\\\\", \\\\\\\"ru\\\\\\\", \\\\\\\"pl\\\\\\\", \\\\\\\"bg\\\\\\\", \\\\\\\"de\\\\\\\", \\\\\\\"es\\\\\\\", \\\\\\\"ua\\\\\\\", \\\\\\\"by\\\\\\\")",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dietagram.p.rapidapi.com/apiFood.php\"\nquerystring = {\"lang\": \"pl\", \"name\": \"Jab\u0142ko\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dietagram.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "DietaGram",
            "api_arguments_original": [
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "",
                    "default": "Jab\u0142ko"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "Lang is necessary for search in the certain lang food base.  It will be detected automatically or you could set manually from this set of values (\\\\\\\"en\\\\\\\", \\\\\\\"ru\\\\\\\", \\\\\\\"pl\\\\\\\", \\\\\\\"bg\\\\\\\", \\\\\\\"de\\\\\\\", \\\\\\\"es\\\\\\\", \\\\\\\"ua\\\\\\\", \\\\\\\"by\\\\\\\")",
                    "default": "pl"
                }
            ]
        }
    },
    {
        "query": "Can you retrieve a joke with id 123?",
        "model_answer": "requests.get(\"https://retrieve-info.p.rapidapi.com/Searchjoke/123\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"retrieve-info.p.rapidapi.com\"}, params={})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "to retrieve information",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://retrieve-info.p.rapidapi.com/Searchjoke/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://retrieve-info.p.rapidapi.com/Searchjoke/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://retrieve-info.p.rapidapi.com/Searchjoke/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"retrieve-info.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "retrieve info",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check the country statistics for India with the minimum population of 100 million using the Country by API-Ninjas API.",
        "model_answer": "requests.get(\"https://country-by-api-ninjas.p.rapidapi.com/v1/country\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"country-by-api-ninjas.p.rapidapi.com\"}, params={\"name\": \"India\", \"min_population\": 100000000})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Get useful statistics on every country in the world. See more info at https://api-ninjas.com/api/country.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://country-by-api-ninjas.p.rapidapi.com/v1/country'\nquerystring = {\"min_area\": \"\", \"name\": \"\", \"min_fertility\": \"\", \"min_gdp_growth\": \"\", \"limit\": \"\", \"min_population\": \"\", \"max_unemployment\": \"\", \"max_urban_pop_rate\": \"\", \"max_population\": \"\", \"max_gdp\": \"\", \"min_urban_pop_rate\": \"\", \"min_unemployment\": \"\", \"max_area\": \"\", \"min_gdp\": \"\", \"min_infant_mortality\": \"\", \"max_gdp_growth\": \"\", \"max_infant_mortality\": \"\", \"currency\": \"\", \"max_fertility\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://country-by-api-ninjas.p.rapidapi.com/v1/country\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "min_area",
                    "description": "Minimum surface area of country in km2.",
                    "type": "NUMBER"
                },
                {
                    "name": "name",
                    "description": "Plain English name, 2-letter ISO-3166 alpha-2, or 3-letter ISO-3166 alpha-3 code of country.",
                    "type": "STRING"
                },
                {
                    "name": "min_fertility",
                    "description": "Minimum fertility rate in %.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_gdp_growth",
                    "description": "Minimum GDP growth rate in %.",
                    "type": "NUMBER"
                },
                {
                    "name": "limit",
                    "description": "How many results to return. Must be between **1** and **30**. Default is **5**.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_population",
                    "description": "Minimum population of country.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_unemployment",
                    "description": "Maximum unemployment rate in %.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_urban_pop_rate",
                    "description": "Maximum urban population rate in %.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_population",
                    "description": "Maximum population of country.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_gdp",
                    "description": "Maximum gross domestic product (GDP) of country, in US Dollars.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_urban_pop_rate",
                    "description": "Minimum urban population rate in %.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_unemployment",
                    "description": "Minimum unemployment rate in %.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_area",
                    "description": "Maximum surface area of country in km2.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_gdp",
                    "description": "Minimum gross domestic product (GDP) of country, in US Dollars.",
                    "type": "NUMBER"
                },
                {
                    "name": "min_infant_mortality",
                    "description": "Minimum infant mortality rate in %.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_gdp_growth",
                    "description": "Maximum GDP growth rate in %.",
                    "type": "NUMBER"
                },
                {
                    "name": "max_infant_mortality",
                    "description": "Maximum infant mortality rate in %.",
                    "type": "NUMBER"
                },
                {
                    "name": "currency",
                    "description": "3-letter currency code of country (e.g. **USD**).",
                    "type": "STRING"
                },
                {
                    "name": "max_fertility",
                    "description": "Maximum fertility rate in %.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://country-by-api-ninjas.p.rapidapi.com/v1/country\"\nquerystring = {\"min_area\": \"\", \"name\": \"United States\", \"min_fertility\": \"\", \"min_gdp_growth\": \"\", \"limit\": \"\", \"min_population\": \"\", \"max_unemployment\": \"\", \"max_urban_pop_rate\": \"\", \"max_population\": \"\", \"max_gdp\": \"\", \"min_urban_pop_rate\": \"\", \"min_unemployment\": \"\", \"max_area\": \"\", \"min_gdp\": \"\", \"min_infant_mortality\": \"\", \"max_gdp_growth\": \"\", \"max_infant_mortality\": \"\", \"currency\": \"\", \"max_fertility\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"country-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Country by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "min_area",
                    "type": "NUMBER",
                    "description": "Minimum surface area of country in km2.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Plain English name, 2-letter ISO-3166 alpha-2, or 3-letter ISO-3166 alpha-3 code of country.",
                    "default": "United States"
                },
                {
                    "name": "min_fertility",
                    "type": "NUMBER",
                    "description": "Minimum fertility rate in %.",
                    "default": ""
                },
                {
                    "name": "min_gdp_growth",
                    "type": "NUMBER",
                    "description": "Minimum GDP growth rate in %.",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "How many results to return. Must be between **1** and **30**. Default is **5**.",
                    "default": ""
                },
                {
                    "name": "min_population",
                    "type": "NUMBER",
                    "description": "Minimum population of country.",
                    "default": ""
                },
                {
                    "name": "max_unemployment",
                    "type": "NUMBER",
                    "description": "Maximum unemployment rate in %.",
                    "default": ""
                },
                {
                    "name": "max_urban_pop_rate",
                    "type": "NUMBER",
                    "description": "Maximum urban population rate in %.",
                    "default": ""
                },
                {
                    "name": "max_population",
                    "type": "NUMBER",
                    "description": "Maximum population of country.",
                    "default": ""
                },
                {
                    "name": "max_gdp",
                    "type": "NUMBER",
                    "description": "Maximum gross domestic product (GDP) of country, in US Dollars.",
                    "default": ""
                },
                {
                    "name": "min_urban_pop_rate",
                    "type": "NUMBER",
                    "description": "Minimum urban population rate in %.",
                    "default": ""
                },
                {
                    "name": "min_unemployment",
                    "type": "NUMBER",
                    "description": "Minimum unemployment rate in %.",
                    "default": ""
                },
                {
                    "name": "max_area",
                    "type": "NUMBER",
                    "description": "Maximum surface area of country in km2.",
                    "default": ""
                },
                {
                    "name": "min_gdp",
                    "type": "NUMBER",
                    "description": "Minimum gross domestic product (GDP) of country, in US Dollars.",
                    "default": ""
                },
                {
                    "name": "min_infant_mortality",
                    "type": "NUMBER",
                    "description": "Minimum infant mortality rate in %.",
                    "default": ""
                },
                {
                    "name": "max_gdp_growth",
                    "type": "NUMBER",
                    "description": "Maximum GDP growth rate in %.",
                    "default": ""
                },
                {
                    "name": "max_infant_mortality",
                    "type": "NUMBER",
                    "description": "Maximum infant mortality rate in %.",
                    "default": ""
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "3-letter currency code of country (e.g. **USD**).",
                    "default": ""
                },
                {
                    "name": "max_fertility",
                    "type": "NUMBER",
                    "description": "Maximum fertility rate in %.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to retrieve SSH honeypot data for page 5.",
        "model_answer": "requests.get(\"https://sshpot.p.rapidapi.com/ssh_commands.json\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sshpot.p.rapidapi.com\"}, params={\"page\": 5})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "SSH honeypot data including logins, commands, and proxy requests",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sshpot.p.rapidapi.com/ssh_commands.json'\nquerystring = {\"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sshpot.p.rapidapi.com/ssh_commands.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sshpot.p.rapidapi.com/ssh_commands.json\"\nquerystring = {\"page\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sshpot.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SSH Honeypot",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to get the top chart songs for 2022 from the Spotify Top Charts 2022 API.",
        "model_answer": "requests.get(\"https://spotify-top-charts-2022.p.rapidapi.com/spotify_top_charts_22\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"spotify-top-charts-2022.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "Dataset with global top chart songs during 2022. With danceability, loudness, and energy metrics.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://spotify-top-charts-2022.p.rapidapi.com/spotify_top_charts_22'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://spotify-top-charts-2022.p.rapidapi.com/spotify_top_charts_22\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://spotify-top-charts-2022.p.rapidapi.com/spotify_top_charts_22\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"spotify-top-charts-2022.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Spotify Top Charts 2022",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide a random love quote from the Olato Quotes API.",
        "model_answer": "requests.get(\"https://olato-quotes.p.rapidapi.com/love\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"olato-quotes.p.rapidapi.com\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Olato Quote APIs gives you random quotes about motivation, sucess and love quotes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://olato-quotes.p.rapidapi.com/love'\nquerystring = {\"quotes\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://olato-quotes.p.rapidapi.com/love\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "quotes",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://olato-quotes.p.rapidapi.com/love\"\nquerystring = {\"quotes\": \"random quotes\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"olato-quotes.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Olato Quotes",
            "api_arguments_original": [
                {
                    "name": "quotes",
                    "type": "STRING",
                    "description": "",
                    "default": "random quotes"
                }
            ]
        }
    },
    {
        "query": "Please generate an image with width 800 and height 600 using the Bruzu API.",
        "model_answer": "requests.get(\"https://bruzu.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bruzu.p.rapidapi.com\"}, params={\"width\": \"800\", \"height\": \"600\"})",
        "original": {
            "domain": "Media",
            "framework": "RapidAPI",
            "functionality": "Image Generation API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bruzu.p.rapidapi.com/'\nquerystring = {\"width\": \"\", \"backgroundImage\": \"\", \"height\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bruzu.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "width",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "backgroundimage",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bruzu.p.rapidapi.com/\"\nquerystring = {\"width\": \"500\", \"backgroundImage\": \"https://source.unsplash.com/500x500/\", \"height\": \"500\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bruzu.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bruzu",
            "api_arguments_original": [
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "",
                    "default": "500"
                },
                {
                    "name": "backgroundImage",
                    "type": "STRING",
                    "description": "",
                    "default": "https://source.unsplash.com/500x500/"
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "",
                    "default": "500"
                }
            ]
        }
    },
    {
        "query": "Can you help me retrieve product details using the ShopeeApi? I want to search for \"Keripik Kentang\" in the Indonesian region.",
        "model_answer": "requests.get(\"https://shopeeapi2.p.rapidapi.com/id/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shopeeapi2.p.rapidapi.com\"}, params={\"region\": \"id\", \"q\": \"Keripik Kentang\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "Shopee product search api & product details api",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shopeeapi2.p.rapidapi.com/id/search'\nquerystring = {\"region\": \"\", \"q\": \"\", \"p\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shopeeapi2.p.rapidapi.com/id/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "region",
                    "description": "The region must one of [\\\\\\\"en\\\\\\\", \\\\\\\"sg\\\\\\\", \\\\\\\"my\\\\\\\", \\\\\\\"id\\\\\\\", \\\\\\\"th\\\\\\\", \\\\\\\"vn\\\\\\\", \\\\\\\"ph\\\\\\\", \\\\\\\"tw\\\\\\\", \\\\\\\"br\\\\\\\", \\\\\\\"cl\\\\\\\", \\\\\\\"mx\\\\\\\", \\\\\\\"co\\\\\\\"]",
                    "type": "string"
                },
                {
                    "name": "q",
                    "description": "A product search query",
                    "type": "STRING"
                },
                {
                    "name": "p",
                    "description": "Page number",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shopeeapi2.p.rapidapi.com/id/search\"\nquerystring = {\"p\": \"1\", \"q\": \"Keripik Kentang\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shopeeapi2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ShopeeApi",
            "api_arguments_original": [
                {
                    "name": "region",
                    "type": "string",
                    "description": "The region must one of [\\\\\\\"en\\\\\\\", \\\\\\\"sg\\\\\\\", \\\\\\\"my\\\\\\\", \\\\\\\"id\\\\\\\", \\\\\\\"th\\\\\\\", \\\\\\\"vn\\\\\\\", \\\\\\\"ph\\\\\\\", \\\\\\\"tw\\\\\\\", \\\\\\\"br\\\\\\\", \\\\\\\"cl\\\\\\\", \\\\\\\"mx\\\\\\\", \\\\\\\"co\\\\\\\"]",
                    "default": "id"
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "A product search query",
                    "default": "Keripik Kentang"
                },
                {
                    "name": "p",
                    "type": "NUMBER",
                    "description": "Page number",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "I want to get information about the mobile phone with device ID 123.",
        "model_answer": "requests.get(\"https://mobile-phones1.p.rapidapi.com/v1/api/get-device\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mobile-phones1.p.rapidapi.com\"}, params={\"device_id\": \"123\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "An API that provides information about all mobile brands and their devices would be a comprehensive source of data for developers seeking to build applications or services related to mobile devices. Such an API could include details on all the mobile brands currently on the market, as well as information about each brand's individual devices, such as model names, technical specifications, and images. The \nAPI might also provide additional metadata, such as operating system versions and releas...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mobile-phones1.p.rapidapi.com/v1/api/get-device'\nquerystring = {\"device_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mobile-phones1.p.rapidapi.com/v1/api/get-device\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "device_id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mobile-phones1.p.rapidapi.com/v1/api/get-device\"\nquerystring = {\"device_id\": \"725\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mobile-phones1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Mobile-Phones",
            "api_arguments_original": [
                {
                    "name": "device_id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "725"
                }
            ]
        }
    },
    {
        "query": "Translate the sentence \"Hello, how are you?\" from English to French.",
        "model_answer": "requests.get(\"https://google-translate1.p.rapidapi.com/language/translate/v2/languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"google-translate1.p.rapidapi.com\"}, params={\"target\": \"fr\", \"model\": \"\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Dynamically translate between languages.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://google-translate1.p.rapidapi.com/language/translate/v2/languages'\nquerystring = {\"target\": \"\", \"model\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://google-translate1.p.rapidapi.com/language/translate/v2/languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "target",
                    "description": "The target language code for the results. If specified, then the language names are returned in the name field of the response, localized in the target language. If you do not supply a target language, then the name field is omitted from the response and only the language codes are returned.",
                    "type": "STRING"
                },
                {
                    "name": "model",
                    "description": "The translation model of the supported languages. Can be either base to return languages supported by the Phrase-Based Machine Translation (PBMT) model, or nmt to return languages supported by the Neural Machine Translation (NMT) model. If omitted, then all supported languages are returned.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://google-translate1.p.rapidapi.com/language/translate/v2/languages\"\nquerystring = {\"target\": \"\", \"model\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-translate1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google Translate",
            "api_arguments_original": [
                {
                    "name": "target",
                    "type": "STRING",
                    "description": "The target language code for the results. If specified, then the language names are returned in the name field of the response, localized in the target language. If you do not supply a target language, then the name field is omitted from the response and only the language codes are returned.",
                    "default": ""
                },
                {
                    "name": "model",
                    "type": "STRING",
                    "description": "The translation model of the supported languages. Can be either base to return languages supported by the Phrase-Based Machine Translation (PBMT) model, or nmt to return languages supported by the Neural Machine Translation (NMT) model. If omitted, then all supported languages are returned.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you classify the text \"Bank of Americate all your financial and banking requirements satisfied here.\" using the IAB Taxonomy Text Classification API?",
        "model_answer": "requests.get(\"https://iab-taxonomy-text-classification.p.rapidapi.com/classify.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"iab-taxonomy-text-classification.p.rapidapi.com\"}, params={\"text\": \"Bank of Americate all your financial and banking requirements satisfied here.\"})",
        "original": {
            "domain": "Text_Analysis",
            "framework": "RapidAPI",
            "functionality": "Most accurate IAB v2 Taxonomy Text Classification, Economical Pricing, Best in class Infrastructure",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://iab-taxonomy-text-classification.p.rapidapi.com/classify.php'\nquerystring = {\"text\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://iab-taxonomy-text-classification.p.rapidapi.com/classify.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "text",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://iab-taxonomy-text-classification.p.rapidapi.com/classify.php\"\nquerystring = {\"text\": \"Bank of Americate all your financial and banking requirements satisfied here.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"iab-taxonomy-text-classification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "IAB Taxonomy Text Classification",
            "api_arguments_original": [
                {
                    "name": "text",
                    "type": "STRING",
                    "description": "",
                    "default": "Bank of Americate all your financial and banking requirements satisfied here."
                }
            ]
        }
    },
    {
        "query": "Can you help me scan the subdomains of a domain?",
        "model_answer": "requests.get(\"https://subdomain-scan1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"subdomain-scan1.p.rapidapi.com\"}, params={\"domain\": \"example.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Enter a domain here and we'll check all subdomains  and return it in a JSON format for you.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://subdomain-scan1.p.rapidapi.com/'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://subdomain-scan1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://subdomain-scan1.p.rapidapi.com/\"\nquerystring = {\"domain\": \"rapidapi.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"subdomain-scan1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Subdomain Scan",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "rapidapi.com"
                }
            ]
        }
    },
    {
        "query": "I want to book a flight.",
        "model_answer": "requests.get(\"https://flight-booking.p.rapidapi.comhttp://www.unitedwetravel.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"flight-booking.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "book flight ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://flight-booking.p.rapidapi.comhttp://www.unitedwetravel.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://flight-booking.p.rapidapi.comhttp://www.unitedwetravel.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://flight-booking.p.rapidapi.comhttp://www.unitedwetravel.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"flight-booking.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Flight Booking",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the list of cryptocurrency transactions for a specific Bitcoin address?",
        "model_answer": "response = requests.get(\"https://jseims-trustedcoin.p.rapidapi.com/1/cosigner/{script_hash_address}\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"jseims-trustedcoin.p.rapidapi.com\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Trusted Coin is a Bitcoin transaction cosigning service. Users of this API can create M-of-N multisignature P2SH addresses (where Trusted Coin acts as one of the cosigners). The policy logic Trusted Coin should apply when deciding if to cosign (and thus approve) individual transactions is user configurable. Via this mechanism higher-level services can be built including wallet protection schemes and escrow.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jseims-trustedcoin.p.rapidapi.com/1/cosigner/<script_hash_address>'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jseims-trustedcoin.p.rapidapi.com/1/cosigner/<script_hash_address>\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jseims-trustedcoin.p.rapidapi.com/1/cosigner/<script_hash_address>\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jseims-trustedcoin.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TrustedCoin",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please provide me with the number of Covid-19 cases in India on January 1, 2022?",
        "model_answer": "requests.get(\"https://covid-19-by-api-ninjas.p.rapidapi.com/v1/covid19\", headers={\"X-RapidAPI-Key\" \"TO BE FILLED\", \"X-RapidAPI-Host\" \"covid-19-by-api-ninjas.p.rapidapi.com\"}, params={\"type\" \"cases\", \"country\" \"India\", \"date\" \"2022-01-01\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "Covid-19 case count and death data for every country in the world. See more info at https://api-ninjas.com/api/covid19.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://covid-19-by-api-ninjas.p.rapidapi.com/v1/covid19'\nquerystring = {\"type\": \"\", \"country\": \"\", \"date\": \"\", \"county\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://covid-19-by-api-ninjas.p.rapidapi.com/v1/covid19\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "type",
                    "description": "type of data to retrieve. Must be either cases or deaths. If not set, cases will be used by default.",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "country name (case insensitive).",
                    "type": "STRING"
                },
                {
                    "name": "date",
                    "description": "date to retrieve single-day snapshot. Must be in the form of YYYY-MM-DD (e.g. 2022-01-01)",
                    "type": "STRING"
                },
                {
                    "name": "county",
                    "description": "county name for US states (case insensitive). For United States data only. Must be used in conjunction with country (United States) and region (e.g. California).",
                    "type": "STRING"
                },
                {
                    "name": "region",
                    "description": "administrative region (also known as state or province in many countries) name (case insensitive). Must be used in conjunction with country. If not set, countries with data broken down by administrative regions will return separate data for each region.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://covid-19-by-api-ninjas.p.rapidapi.com/v1/covid19\"\nquerystring = {\"type\": \"\", \"country\": \"\", \"date\": \"2022-01-01\", \"county\": \"\", \"region\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"covid-19-by-api-ninjas.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Covid-19 by API-Ninjas",
            "api_arguments_original": [
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "type of data to retrieve. Must be either cases or deaths. If not set, cases will be used by default.",
                    "default": ""
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "country name (case insensitive).",
                    "default": ""
                },
                {
                    "name": "date",
                    "type": "STRING",
                    "description": "date to retrieve single-day snapshot. Must be in the form of YYYY-MM-DD (e.g. 2022-01-01)",
                    "default": "2022-01-01"
                },
                {
                    "name": "county",
                    "type": "STRING",
                    "description": "county name for US states (case insensitive). For United States data only. Must be used in conjunction with country (United States) and region (e.g. California).",
                    "default": ""
                },
                {
                    "name": "region",
                    "type": "STRING",
                    "description": "administrative region (also known as state or province in many countries) name (case insensitive). Must be used in conjunction with country. If not set, countries with data broken down by administrative regions will return separate data for each region.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the upcoming match details for league with id 1980 using the Pinaculo API?",
        "model_answer": "requests.get(\"https://pinaculo.p.rapidapi.com/api/pinaculo/leagues/1980/matchups\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pinaculo.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Pinaculo API provides over 15 different sports odds. \nBelow is a list of top sports you\u2019d find there. The list on the API varies with respect to the active seasons, so you can check from the sports endpoint.\nFootball; eSports; Volleyball; Aussie rules; Formula 1; Boxing; Baseball; Basketball; MMA; Rugby; Golf; Soccer; Tennis; Crossfit;\n\nFor custom plans please contact us.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pinaculo.p.rapidapi.com/api/pinaculo/leagues/1980/matchups'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pinaculo.p.rapidapi.com/api/pinaculo/leagues/1980/matchups\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "The league id.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pinaculo.p.rapidapi.com/api/pinaculo/leagues/1980/matchups\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pinaculo.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pinaculo",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "The league id.",
                    "default": 1980
                }
            ]
        }
    },
    {
        "query": "Can you please give me a random yes or no answer?",
        "model_answer": "requests.get(\"https://random-yes-no.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"random-yes-no.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Get some random Yes or No",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://random-yes-no.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://random-yes-no.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://random-yes-no.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"random-yes-no.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Yes/No",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "A school's score or placement on the API is designed to be an indicator of a school's performance level and is calculated annually by the California Department of Education",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aqeel-mashkraft-touchbase-v1.p.rapidapi.com/words/hello/synonyms?accessToken=j4d04qyNZGmshUdUIjqOJWoG3AuZp1tt0zxjsn2KQE1Wg0esvG'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aqeel-mashkraft-touchbase-v1.p.rapidapi.com/words/hello/synonyms?accessToken=j4d04qyNZGmshUdUIjqOJWoG3AuZp1tt0zxjsn2KQE1Wg0esvG\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aqeel-mashkraft-touchbase-v1.p.rapidapi.com/words/hello/synonyms?accessToken=j4d04qyNZGmshUdUIjqOJWoG3AuZp1tt0zxjsn2KQE1Wg0esvG\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aqeel-mashkraft-touchbase-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Touchbase",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to retrieve the cards for the user with muid",
        "model_answer": "requests.get(\"https://test2113.p.rapidapi.com/string/cards\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test2113.p.rapidapi.com\"}, params={\"muid\": \"user123\", \"msid\": \"session456\", \"orgCode\": \"orgXYZ\", \"locale\": \"en_US\"})",
        "original": {
            "domain": "Business_Software",
            "framework": "RapidAPI",
            "functionality": "test2",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test2113.p.rapidapi.com/string/cards'\nquerystring = {\"muid\": \"\", \"msid\": \"\", \"orgCode\": \"\", \"locale\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test2113.p.rapidapi.com/string/cards\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "muid",
                    "description": "User ID.",
                    "type": "STRING"
                },
                {
                    "name": "msid",
                    "description": "Session ID.",
                    "type": "STRING"
                },
                {
                    "name": "orgcode",
                    "description": "The organization associated with the request.",
                    "type": "STRING"
                },
                {
                    "name": "locale",
                    "description": "Language used.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test2113.p.rapidapi.com/string/cards\"\nquerystring = {\"muid\": \"string\", \"msid\": \"string\", \"locale\": \"string\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test2113.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test2",
            "api_arguments_original": [
                {
                    "name": "muid",
                    "type": "STRING",
                    "description": "User ID.",
                    "default": "string"
                },
                {
                    "name": "msid",
                    "type": "STRING",
                    "description": "Session ID.",
                    "default": "string"
                },
                {
                    "name": "orgCode",
                    "type": "STRING",
                    "description": "The organization associated with the request.",
                    "default": "string"
                },
                {
                    "name": "locale",
                    "type": "STRING",
                    "description": "Language used.",
                    "default": "string"
                }
            ]
        }
    },
    {
        "query": "I want to get the latest NAV information for the mutual fund with ISIN",
        "model_answer": "requests.get(\"https://latest-mutual-fund-nav.p.rapidapi.com/fetchDividends\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"latest-mutual-fund-nav.p.rapidapi.com\"}, params={\"isin\": \"IN1234567890\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "API provides latest NAV information of all mutual funds in India from Association of Mutual Funds of India (AMFI). The database will update as soon as data is updated on AMFI.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://latest-mutual-fund-nav.p.rapidapi.com/fetchDividends'\nquerystring = {\"isin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://latest-mutual-fund-nav.p.rapidapi.com/fetchDividends\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "isin",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://latest-mutual-fund-nav.p.rapidapi.com/fetchDividends\"\nquerystring = {\"isin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"latest-mutual-fund-nav.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Latest Mutual Fund NAV",
            "api_arguments_original": [
                {
                    "name": "isin",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the information about a passbook with passTypeIdentifier \"pass.example.id1\" and serialNumber \"27f145d2-5713-4a8d-af64-b269f95ade3b\".",
        "model_answer": "requests.get(\"https://passbook.p.rapidapi.com/passes/pass.example.id1/27f145d2-5713-4a8d-af64-b269f95ade3b\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"passbook.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "PassSlot is a free service for developers that aims to make Passbook integration easy \u2013 Really easy.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://passbook.p.rapidapi.com/passes/{passTypeIdentifier}/{serialNumber}'\nquerystring = {\"passtypeidentifier\": \"\", \"serialnumber\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://passbook.p.rapidapi.com/passes/{passTypeIdentifier}/{serialNumber}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "passtypeidentifier",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "serialnumber",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://passbook.p.rapidapi.com/passes/{passTypeIdentifier}/{serialNumber}\"\nquerystring = {\"passtypeidentifier\": \"pass.example.id1\", \"serialnumber\": \"27f145d2-5713-4a8d-af64-b269f95ade3b\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"passbook.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Passbook",
            "api_arguments_original": [
                {
                    "name": "passtypeidentifier",
                    "type": "STRING",
                    "description": "",
                    "default": "pass.example.id1"
                },
                {
                    "name": "serialnumber",
                    "type": "STRING",
                    "description": "",
                    "default": "27f145d2-5713-4a8d-af64-b269f95ade3b"
                }
            ]
        }
    },
    {
        "query": "Can you please generate an affiliate link for a product on Shopee?",
        "model_answer": "requests.get(\"https://shopeeapi1.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"shopeeapi1.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Wrapper for shopee api\ngenerate a affiliate link for shopee",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://shopeeapi1.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://shopeeapi1.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://shopeeapi1.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"shopeeapi1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ShopeeApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the categories for Facebook Marketplace.",
        "model_answer": "requests.get(\"https://facebook-marketplace.p.rapidapi.com/categories\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"facebook-marketplace.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Get complete Facebook Marketplace data to include number sold, number saved, title, description, location and category of current and past listings on FBMP. \n\nWe are the ONLY provider of Facebook Marketplace data anywhere!",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://facebook-marketplace.p.rapidapi.com/categories'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://facebook-marketplace.p.rapidapi.com/categories\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://facebook-marketplace.p.rapidapi.com/categories\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"facebook-marketplace.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Facebook Marketplace",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the list of categories for products on Amazon?",
        "model_answer": "requests.get(\"https://amazon-data6.p.rapidapi.com/categories-list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"amazon-data6.p.rapidapi.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Amazon Data provides you with comprehensive information about products on Amazon, including pricing, customer reviews, product descriptions, and more. With this valuable data, you can make informed decisions about your online retail strategy and stay ahead of the competition",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazon-data6.p.rapidapi.com/categories-list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazon-data6.p.rapidapi.com/categories-list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazon-data6.p.rapidapi.com/categories-list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazon-data6.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Amazon Data_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you fetch the latest climate change news?",
        "model_answer": "requests.get(\"https://climate-news-api3.p.rapidapi.com/scrap/news\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"climate-news-api3.p.rapidapi.com\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "An API showing all the Climate change related news around the world.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://climate-news-api3.p.rapidapi.com/scrap/news'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://climate-news-api3.p.rapidapi.com/scrap/news\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://climate-news-api3.p.rapidapi.com/scrap/news\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"climate-news-api3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Climate News API_v2",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the last tournaments details for team with id 275923 in tennis.",
        "model_answer": "response = requests.get(\"https://allsportsapi2.p.rapidapi.com/api/tennis/team/275923/tournaments/last\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"allsportsapi2.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "AllSportsApi offers real-time football, esports, motorsport, ice hockey, basketball, tennis, baseball, cricket and american football scores. It covers hundreds of sports leagues, cups and tournaments with live updated results, statistics, league tables, video highlights and fixtures.Check our specific sport API's: https://rapidapi.com/user/fluis.lacasse",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://allsportsapi2.p.rapidapi.com/api/tennis/team/275923/tournaments/last'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://allsportsapi2.p.rapidapi.com/api/tennis/team/275923/tournaments/last\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "The player or team id you want to retrieve the players seasons.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://allsportsapi2.p.rapidapi.com/api/tennis/team/275923/tournaments/last\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"allsportsapi2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AllSportsApi",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "The player or team id you want to retrieve the players seasons.",
                    "default": "275923"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with vegan recipes from \"thewoksoflife\" blog?",
        "model_answer": "requests.get(\"https://vegan-recipes-api.p.rapidapi.com/recipes/thewoksoflife\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"vegan-recipes-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "An API that returns links to vegan recipes",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://vegan-recipes-api.p.rapidapi.com/recipes/thewoksoflife'\nquerystring = {\"blogId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://vegan-recipes-api.p.rapidapi.com/recipes/thewoksoflife\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "blogid",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://vegan-recipes-api.p.rapidapi.com/recipes/thewoksoflife\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"vegan-recipes-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "vegan-recipes-api",
            "api_arguments_original": [
                {
                    "name": "blogId",
                    "type": "string",
                    "description": "",
                    "default": "thewoksoflife"
                }
            ]
        }
    },
    {
        "query": "I want to check if an email address example@gmail.com is valid.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "24hkhoedep.com l\u00e0 trang b\u00e1n l\u1ebb tr\u1ef1c tuy\u1ebfn tr\u1ef1c thu\u1ed9c C\u00f4ng Ty TNHH Ch\u0103m S\u00f3c Kho\u1ebb V\u00e0 \u0110\u1eb9p Vi\u1ec7t Nam \u2013 m\u1ed9t c\u00f4ng ty chuy\u00ean nh\u1eadp kh\u1ea9u v\u00e0 ph\u00e2n ph\u1ed1i \u0111\u1ed9c quy\u1ec1n cho c\u00e1c h\u00e3ng d\u01b0\u1ee3c m\u1ef9 ph\u1ea9m v\u00e0 trang thi\u1ebft b\u1ecb y t\u1ebf t\u1eeb Ch\u00e2u  u.\n#khoedep #khoedepvietnam #mypham #myphamchauau #duocphamchauau #duocmypham\n#m\u1ee5n th\u1ecbt #r\u1ed1i lo\u1ea1n ti\u00eau h\u00f3a #ng\u1ef1c ch\u1ea3y x\u1ec7\n\u0110\u1ecba ch\u1ec9 : 40/19 B\u00e0u C\u00e1t 2, Ph\u01b0\u1eddng 14, Qu\u1eadn T\u00e2n B\u00ecnh, TP. HCM, Vi\u1ec7t Nam\nHotline 028 - 6296 2262 | 0931320062\nEmail: hbcvn@healthbeautycare.com.vn\nGoogle map https://www....",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://24hkhoedep.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://24hkhoedep.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://24hkhoedep.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"24hkhoedep.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "24hkhoedep",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to analyze the keyword \"SEO tools\" for the country \"us\".",
        "model_answer": "response = requests.get(\"https://seo-keyword-research.p.rapidapi.com/keynew.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"seo-keyword-research.p.rapidapi.com\"}, params={\"keyword\": \"SEO tools\", \"country\": \"us\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Keyword Research helps to analyze keywords and related keywords competitions , search volume (google) and CPC. For private plans, custom plans, custom billing contact : info@getecz.com",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://seo-keyword-research.p.rapidapi.com/keynew.php'\nquerystring = {\"keyword\": \"\", \"country\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://seo-keyword-research.p.rapidapi.com/keynew.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "keyword",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "country",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://seo-keyword-research.p.rapidapi.com/keynew.php\"\nquerystring = {\"keyword\": \"email marketing\", \"country\": \"in\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"seo-keyword-research.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "SEO Keyword Research",
            "api_arguments_original": [
                {
                    "name": "keyword",
                    "type": "STRING",
                    "description": "",
                    "default": "email marketing"
                },
                {
                    "name": "country",
                    "type": "STRING",
                    "description": "",
                    "default": "in"
                }
            ]
        }
    },
    {
        "query": "Please translate the text \"Hello, how are you?\" into French.",
        "model_answer": "requests.get(\"https://translate-language.p.rapidapi.com/supported-languages\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"translate-language.p.rapidapi.com\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Translate Language - Quickly translate your text into all the different languages .\n\nThe Translate Language API is a service that enables the translation of a text passage into various languages. This API allows users to input a text that needs to be translated and select the desired target language.\n\nThe API provides a convenient way to automatically translate text between different languages without the need for manual translation work. By utilizing the API, users can translate sentences, p...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://translate-language.p.rapidapi.com/supported-languages'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://translate-language.p.rapidapi.com/supported-languages\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://translate-language.p.rapidapi.com/supported-languages\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"translate-language.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Translate Language",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the data for school information using the \"sekolah\" API.",
        "model_answer": "requests.get(\"https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "penilaian sekolah",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sekolah.p.rapidapi.comhttp://localhost/api_wa/get_data.php\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sekolah.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "sekolah",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to get the historical prices chart for the company AAPL for the last 6 months.",
        "model_answer": "requests.get(\"https://finshorts.p.rapidapi.com/history_chart_monthly.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"finshorts.p.rapidapi.com\"}, params={\"q\": \"aapl\", \"month\": \"6\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Finshorts is a platform where you can access companies Stock Quote, Company Info, Historical Prices Chart, Historical  Dividends, Cash flow statement in realtime",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://finshorts.p.rapidapi.com/history_chart_monthly.php'\nquerystring = {\"q\": \"\", \"month\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://finshorts.p.rapidapi.com/history_chart_monthly.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "month",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://finshorts.p.rapidapi.com/history_chart_monthly.php\"\nquerystring = {\"q\": \"aapl\", \"month\": \"6\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"finshorts.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Finshorts",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "",
                    "default": "aapl"
                },
                {
                    "name": "month",
                    "type": "STRING",
                    "description": "",
                    "default": "6"
                }
            ]
        }
    },
    {
        "query": "Can you find me relevant businesses near San Francisco?",
        "model_answer": "response = requests.get(\"https://data-axle-business-address-search.p.rapidapi.com/v1/places/search/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"data-axle-business-address-search.p.rapidapi.com\"}, params={\"limit\": \"20\", \"packages\": \"standard_v1\", \"query\": \"San Francisco\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Find relevant businesses in real-time.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://data-axle-business-address-search.p.rapidapi.com/v1/places/search/'\nquerystring = {\"limit\": \"\", \"packages\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://data-axle-business-address-search.p.rapidapi.com/v1/places/search/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "limit",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "packages",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "query",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://data-axle-business-address-search.p.rapidapi.com/v1/places/search/\"\nquerystring = {\"limit\": \"20\", \"query\": \"301 W Main Street\", \"packages\": \"standard_v1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"data-axle-business-address-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Data Axle Business Address Search",
            "api_arguments_original": [
                {
                    "name": "limit",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                },
                {
                    "name": "packages",
                    "type": "STRING",
                    "description": "",
                    "default": "standard_v1"
                },
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "",
                    "default": "301 W Main Street"
                }
            ]
        }
    },
    {
        "query": "Can you please retrieve the first page of Amazon product reviews for ASIN B01H6GUCCQ on the domain amazon.in?",
        "model_answer": "requests.get(\"https://amazon-product-reviews1.p.rapidapi.com/amazonreviews/\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"amazon-product-reviews1.p.rapidapi.com\"}, params={\"pageNum\":1, \"domain\":\"amazon.in\", \"asin\":\"B01H6GUCCQ\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Amazon Product Reviews\nContact me at: vuesdata@gmail.com or visit https://www.vuesdata.com for building custom spiders or custom requests.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://amazon-product-reviews1.p.rapidapi.com/amazonreviews/'\nquerystring = {\"pageNum\": \"\", \"domain\": \"\", \"asin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://amazon-product-reviews1.p.rapidapi.com/amazonreviews/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pagenum",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "asin",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://amazon-product-reviews1.p.rapidapi.com/amazonreviews/\"\nquerystring = {\"pageNum\": \"1\", \"domain\": \"amazon.com\", \"asin\": \"B01H6GUCCQ\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"amazon-product-reviews1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Amazon Product Reviews",
            "api_arguments_original": [
                {
                    "name": "pageNum",
                    "type": "NUMBER",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "amazon.com"
                },
                {
                    "name": "asin",
                    "type": "STRING",
                    "description": "",
                    "default": "B01H6GUCCQ"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the OpenSea rankings for a specific page.",
        "model_answer": "requests.get(\"https://opensea-graphql3.p.rapidapi.com/requestTemplate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"opensea-graphql3.p.rapidapi.com\"}, params={\"id\": \"RankingsPageTopQuery\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "An API that provides easy and efficient access to both OpenSea's GraphQL API and OpenSea's Testnet GraphQL API.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://opensea-graphql3.p.rapidapi.com/requestTemplate'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://opensea-graphql3.p.rapidapi.com/requestTemplate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://opensea-graphql3.p.rapidapi.com/requestTemplate\"\nquerystring = {\"id\": \"RankingsPageTopQuery\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opensea-graphql3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OpenSea GraphQL",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "RankingsPageTopQuery"
                }
            ]
        }
    },
    {
        "query": "I want to get the trades data from Prague Stock Exchange for the ISIN \"US12345678\" between the dates \"2022-01-01\" and \"2022-01-31\" with a limit of 100 trades.",
        "model_answer": "requests.get(\"https://prague-stock-exchange.p.rapidapi.com/api/Trades\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"prague-stock-exchange.p.rapidapi.com\"}, params={\"iSIN\": \"US12345678\", \"from\": \"2022-01-01\", \"to\": \"2022-01-31\", \"limit\": 100})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "REST API for Prague Stock Exchange https://www.pse.cz",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://prague-stock-exchange.p.rapidapi.com/api/Trades'\nquerystring = {\"iSIN\": \"\", \"bIC\": \"\", \"to\": \"\", \"from\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://prague-stock-exchange.p.rapidapi.com/api/Trades\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "isin",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "bic",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "from",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://prague-stock-exchange.p.rapidapi.com/api/Trades\"\nquerystring = {\"iSIN\": \"\", \"bIC\": \"\", \"to\": \"\", \"from\": \"\", \"limit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"prague-stock-exchange.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Prague Stock Exchange",
            "api_arguments_original": [
                {
                    "name": "iSIN",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "bIC",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "requests.get(\"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/wmf\", headers={\"X-RapidAPI-Key\"",
        "model_answer": "requests.get(\"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/wmf\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"}, params={\"pageHeight\": \"\", \"pageWidth\": \"\", \"borderY\": \"\", \"bkColor\": \"\", \"borderX\": \"\", \"name\": \"\", \"fromScratch\": False, \"storage\": \"\", \"format\": \"png\", \"folder\": \"\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "Aspose.Imaging Cloud provides the most demanding imaging routines such as Re-sizing, Cropping, Rotation, and Conversion. It supports the most common raster file-formats including PSD, PNG, JPG, BMP, TIFF, and GIF.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/wmf'\nquerystring = {\"pageHeight\": \"\", \"pageWidth\": \"\", \"borderY\": \"\", \"bkColor\": \"\", \"borderX\": \"\", \"name\": \"\", \"fromScratch\": \"\", \"storage\": \"\", \"format\": \"\", \"folder\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/wmf\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "pageheight",
                    "description": "Height of the page.",
                    "type": "NUMBER"
                },
                {
                    "name": "pagewidth",
                    "description": "Width of the page.",
                    "type": "NUMBER"
                },
                {
                    "name": "bordery",
                    "description": "Border height.",
                    "type": "NUMBER"
                },
                {
                    "name": "bkcolor",
                    "description": "Color of the background.",
                    "type": "STRING"
                },
                {
                    "name": "borderx",
                    "description": "Border width.",
                    "type": "NUMBER"
                },
                {
                    "name": "name",
                    "description": "Filename of image.",
                    "type": "STRING"
                },
                {
                    "name": "fromscratch",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "type": "BOOLEAN"
                },
                {
                    "name": "storage",
                    "description": "Your Aspose Cloud Storage name.",
                    "type": "STRING"
                },
                {
                    "name": "format",
                    "description": "Export format (PNG is the default one). Please, refer to the export table from https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "type": "STRING"
                },
                {
                    "name": "folder",
                    "description": "Folder with image to process.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://aspose-imaging-cloud1.p.rapidapi.com/imaging/{name}/wmf\"\nquerystring = {\"pageHeight\": \"\", \"fromScratch\": false, \"storage\": \"\", \"pageWidth\": \"\", \"borderY\": \"\", \"bkColor\": \"\", \"format\": \"png\", \"borderX\": \"\", \"folder\": \"\", \"name\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"aspose-imaging-cloud1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Aspose.Imaging Cloud",
            "api_arguments_original": [
                {
                    "name": "pageHeight",
                    "type": "NUMBER",
                    "description": "Height of the page.",
                    "default": ""
                },
                {
                    "name": "pageWidth",
                    "type": "NUMBER",
                    "description": "Width of the page.",
                    "default": ""
                },
                {
                    "name": "borderY",
                    "type": "NUMBER",
                    "description": "Border height.",
                    "default": ""
                },
                {
                    "name": "bkColor",
                    "type": "STRING",
                    "description": "Color of the background.",
                    "default": ""
                },
                {
                    "name": "borderX",
                    "type": "NUMBER",
                    "description": "Border width.",
                    "default": ""
                },
                {
                    "name": "name",
                    "type": "STRING",
                    "description": "Filename of image.",
                    "default": ""
                },
                {
                    "name": "fromScratch",
                    "type": "BOOLEAN",
                    "description": "Specifies where additional parameters we do not support should be taken from. If this is true \u2013 they will be taken from default values for standard image, if it is false \u2013 they will be saved from current image. Default is false.",
                    "default": false
                },
                {
                    "name": "storage",
                    "type": "STRING",
                    "description": "Your Aspose Cloud Storage name.",
                    "default": ""
                },
                {
                    "name": "format",
                    "type": "STRING",
                    "description": "Export format (PNG is the default one). Please, refer to the export table from https://docs.aspose.cloud/display/imagingcloud/Supported+File+Formats#SupportedFileFormats-CommonOperationsFormatSupportMap for possible use-cases.",
                    "default": "png"
                },
                {
                    "name": "folder",
                    "type": "STRING",
                    "description": "Folder with image to process.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the details of menu item with ID 5a76c927bb5d660001e09731 in Chinese for Viva City venue?",
        "model_answer": "requests.get(\"https://viva-city-documentation.p.rapidapi.com/venue-i18n/menus/5a76c927bb5d660001e09731/details\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"viva-city-documentation.p.rapidapi.com\"}, params={\"lang\": \"zh-hans\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Viva City APIs for Venue &amp; Menu",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://viva-city-documentation.p.rapidapi.com/venue-i18n/menus/5a76c927bb5d660001e09731/details'\nquerystring = {\"id\": \"\", \"lang\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://viva-city-documentation.p.rapidapi.com/venue-i18n/menus/5a76c927bb5d660001e09731/details\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "You can get the list of the menu ids from ```/vebue-i8n/menus/{id}/details```  with the key of  **\"menu_item\"**",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://viva-city-documentation.p.rapidapi.com/venue-i18n/menus/5a76c927bb5d660001e09731/details\"\nquerystring = {\"lang\": \"zh-hans\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"viva-city-documentation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Viva City Documentation",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "You can get the list of the menu ids from ```/vebue-i8n/menus/{id}/details```  with the key of  **\"menu_item\"**",
                    "default": "5a76c927bb5d660001e09731"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "zh-hans"
                }
            ]
        }
    },
    {
        "query": "Can you give me the BUY/SELL signals and trends for Bitcoin on the Binance exchange in the spot market?",
        "model_answer": "requests.get(\"https://greenlight3.p.rapidapi.com/signals\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"greenlight3.p.rapidapi.com\"}, params={\"coin\": \"BTC\", \"exchange\": \"Binance\", \"market_type\": \"SPOT\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "BUY/SELL signals and trends from a range of popular technical indicators (24 total)",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://greenlight3.p.rapidapi.com/signals'\nquerystring = {\"coin\": \"\", \"exchange\": \"\", \"market_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://greenlight3.p.rapidapi.com/signals\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "coin",
                    "description": "BTC, ETH or TRX",
                    "type": "STRING"
                },
                {
                    "name": "exchange",
                    "description": "Binance, Bybit, Huobi, Kucoin, Coinex, MXC, Gate",
                    "type": "STRING"
                },
                {
                    "name": "market_type",
                    "description": "SPOT or FUTURES",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://greenlight3.p.rapidapi.com/signals\"\nquerystring = {\"coin\": \"BTC\", \"exchange\": \"Bybit\", \"market_type\": \"SPOT\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"greenlight3.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Greenlight",
            "api_arguments_original": [
                {
                    "name": "coin",
                    "type": "STRING",
                    "description": "BTC, ETH or TRX",
                    "default": "BTC"
                },
                {
                    "name": "exchange",
                    "type": "STRING",
                    "description": "Binance, Bybit, Huobi, Kucoin, Coinex, MXC, Gate",
                    "default": "Bybit"
                },
                {
                    "name": "market_type",
                    "type": "STRING",
                    "description": "SPOT or FUTURES",
                    "default": "SPOT"
                }
            ]
        }
    },
    {
        "query": "Can you check if the domains 'example.com', 'test.org', and 'foo.xyz' are available for registration?",
        "model_answer": "requests.get(\"https://pointsdb-bulk-domain-check-v1.p.rapidapi.com/domain_check\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"pointsdb-bulk-domain-check-v1.p.rapidapi.com\"}, params={\"domains\": \"example.com,test.org,foo.xyz\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Bulk Domain Availability Check. All tlds supported. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pointsdb-bulk-domain-check-v1.p.rapidapi.com/domain_check'\nquerystring = {\"domains\": \"\", \"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pointsdb-bulk-domain-check-v1.p.rapidapi.com/domain_check\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domains",
                    "description": "Coma separated list of domains.",
                    "type": "STRING"
                },
                {
                    "name": "domain",
                    "description": "domain name",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pointsdb-bulk-domain-check-v1.p.rapidapi.com/domain_check\"\nquerystring = {\"domain\": \"\", \"domains\": \"foo.com,example.org,somefoobardomain.io\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pointsdb-bulk-domain-check-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bulk Domain Check",
            "api_arguments_original": [
                {
                    "name": "domains",
                    "type": "STRING",
                    "description": "Coma separated list of domains.",
                    "default": "foo.com,example.org,somefoobardomain.io"
                },
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "domain name",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the live games and pre-game odds for Betway?",
        "model_answer": "requests.get(\"https://betway.p.rapidapi.com/matches/betway\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"betway.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Games and pre-game Odds for Betway",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://betway.p.rapidapi.com/matches/betway'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://betway.p.rapidapi.com/matches/betway\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://betway.p.rapidapi.com/matches/betway\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"betway.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Betway",
            "api_arguments_original": []
        }
    },
    {
        "query": "What is the latitude and longitude of the location with start latitude 40.7128 and start longitude -74.0060 and end latitude 34.0522 and end longitude -118.2437 in Tunisia?",
        "model_answer": "requests.get(\"https://tunisia-api.p.rapidapi.com/directions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tunisia-api.p.rapidapi.com\"}, params={\"start_lat\": \"40.7128\", \"start_lon\": \"-74.0060\", \"end_lat\": \"34.0522\", \"end_lon\": \"-118.2437\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "The Tunisia Lookup API allows you to look up the latitude, longitude, and address of a location in Tunisia.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tunisia-api.p.rapidapi.com/directions'\nquerystring = {\"start_lon\": \"\", \"end_lon\": \"\", \"start_lat\": \"\", \"end_lat\": \"\", \"distance_unit\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tunisia-api.p.rapidapi.com/directions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "start_lon",
                    "description": "Longitude of the starting point (required)",
                    "type": "NUMBER"
                },
                {
                    "name": "end_lon",
                    "description": "Longitude of the ending point (required)",
                    "type": "NUMBER"
                },
                {
                    "name": "start_lat",
                    "description": "Latitude of the starting point (required)",
                    "type": "NUMBER"
                },
                {
                    "name": "end_lat",
                    "description": "Latitude of the ending point (required)",
                    "type": "NUMBER"
                },
                {
                    "name": "distance_unit",
                    "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tunisia-api.p.rapidapi.com/directions\"\nquerystring = {\"start_lon\": \"10.7603483\", \"distance_unit\": \"km\", \"end_lon\": \"10.103167361330975\", \"start_lat\": \"34.797783\", \"end_lat\": \"36.81395975\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tunisia-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Tunisia API",
            "api_arguments_original": [
                {
                    "name": "start_lon",
                    "type": "NUMBER",
                    "description": "Longitude of the starting point (required)",
                    "default": "10.7603483"
                },
                {
                    "name": "end_lon",
                    "type": "NUMBER",
                    "description": "Longitude of the ending point (required)",
                    "default": "10.103167361330975"
                },
                {
                    "name": "start_lat",
                    "type": "NUMBER",
                    "description": "Latitude of the starting point (required)",
                    "default": "34.797783"
                },
                {
                    "name": "end_lat",
                    "type": "NUMBER",
                    "description": "Latitude of the ending point (required)",
                    "default": "36.81395975"
                },
                {
                    "name": "distance_unit",
                    "type": "STRING",
                    "description": "Unit of distance measurement, valid options are **km** (default), and **mi**.",
                    "default": "km"
                }
            ]
        }
    },
    {
        "query": "Can you please get me the prematch data for a specific sports event?",
        "model_answer": "requests.get(\"https://sports-betting-api.p.rapidapi.com/api/v2/prematch\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sports-betting-api.p.rapidapi.com\"}, params={\"sp\": \"\", \"lang\": \"en\", \"lid\": \"\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Get up and running in less than 5 minutes with our comprehensive developer documentation. Get Start - https://bet365soft.com/docs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sports-betting-api.p.rapidapi.com/api/v2/prematch'\nquerystring = {\"sp\": \"\", \"lang\": \"\", \"lid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sports-betting-api.p.rapidapi.com/api/v2/prematch\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sp",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "lid",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sports-betting-api.p.rapidapi.com/api/v2/prematch\"\nquerystring = {\"sp\": \"\", \"lang\": \"en\", \"lid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sports-betting-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sports Betting API",
            "api_arguments_original": [
                {
                    "name": "sp",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "lid",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you please provide the details for a user with ID=5 from the Reqres API?",
        "model_answer": "requests.get(\"https://reqres-dont-change.p.rapidapi.com/api/users/5\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"reqres-dont-change.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://reqres-dont-change.p.rapidapi.com/api/users'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://reqres-dont-change.p.rapidapi.com/api/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://reqres-dont-change.p.rapidapi.com/api/users\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"reqres-dont-change.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Reqres - dont change!",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I generate an article with the article ID 2f14bf7a-b915-47ce-996e-b599abc04faf?",
        "model_answer": "requests.get(\"https://articles-generator.p.rapidapi.com/articles/get/2f14bf7a-b915-47ce-996e-b599abc04faf\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"articles-generator.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "Generate articles about specific subjects or niches, with specific word length, keyword density and multiple other parameters.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://articles-generator.p.rapidapi.com/articles/get/2f14bf7a-b915-47ce-996e-b599abc04faf'\nquerystring = {\"article-id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://articles-generator.p.rapidapi.com/articles/get/2f14bf7a-b915-47ce-996e-b599abc04faf\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "article_id",
                    "description": "Article ID that was outputted by the generate new article endpoint",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://articles-generator.p.rapidapi.com/articles/get/2f14bf7a-b915-47ce-996e-b599abc04faf\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"articles-generator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Articles Generator",
            "api_arguments_original": [
                {
                    "name": "article-id",
                    "type": "string",
                    "description": "Article ID that was outputted by the generate new article endpoint",
                    "default": "2f14bf7a-b915-47ce-996e-b599abc04faf"
                }
            ]
        }
    },
    {
        "query": "I want to get the details of the user with id '123' from the Node Express API Tutorial.",
        "model_answer": "requests.get(\"https://node-express-api-tutorial.p.rapidapi.com/users/123\", headers={\"X-RapidAPI-Key\":\"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"node-express-api-tutorial.p.rapidapi.com\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "An API that allows users to be stored, retrieved, and deleted from a database.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://node-express-api-tutorial.p.rapidapi.com/users/{id}'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://node-express-api-tutorial.p.rapidapi.com/users/{id}\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://node-express-api-tutorial.p.rapidapi.com/users/{id}\"\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"node-express-api-tutorial.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Node Express API Tutorial",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "string",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you predict the credit score for an individual with the following information",
        "model_answer": "requests.get(\"https://credit-card-prediction.p.rapidapi.com/1/2/3/4\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"https://credit-card-prediction.p.rapidapi.com/1/2/3/4\"}, params={\"age\": 35, \"income\": 50000, \"education\": \"Master's degree\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "At Credit Card, we know that your time is valuable. That\u2019s why we offer a fast and easy way to get the information you need. With our new API, you can get the data you need in seconds",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://credit-card-prediction.p.rapidapi.com/1/2/3/4'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://credit-card-prediction.p.rapidapi.com/1/2/3/4\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://credit-card-prediction.p.rapidapi.com/1/2/3/4\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"credit-card-prediction.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Credit card prediction",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please get the current weather?",
        "model_answer": "requests.get(\"https://weathertest19.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weathertest19.p.rapidapi.com\"})",
        "original": {
            "domain": "Weather",
            "framework": "RapidAPI",
            "functionality": "Get random weather",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weathertest19.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weathertest19.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weathertest19.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weathertest19.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "WeatherTest",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to verify the driving license with the request id",
        "model_answer": "requests.get(\"https://driving-license-verification.p.rapidapi.com/v3/tasks\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"driving-license-verification.p.rapidapi.com\"}, params={\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "IDfy\u2019s Driving License Verification API instantly verifies details of a driving license by confirming them from the Government database.  \n\nThis makes your onboarding process safer, faster, and smarter. With IDfy\u2019s DL verification API, you can be confident that the individuals you onboard hold a valid DL and have provided you with the right identity proof. \n\nCouple it with IDfy\u2019s Driving License OCR API to make your identity verification and onboarding process seamless and instant.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://driving-license-verification.p.rapidapi.com/v3/tasks'\nquerystring = {\"request_id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://driving-license-verification.p.rapidapi.com/v3/tasks\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "request_id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://driving-license-verification.p.rapidapi.com/v3/tasks\"\nquerystring = {\"request_id\": \"68bbb910-da9b-4d8a-9a1d-4bd878b19846\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"driving-license-verification.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Driving License Verification",
            "api_arguments_original": [
                {
                    "name": "request_id",
                    "type": "STRING",
                    "description": "",
                    "default": "68bbb910-da9b-4d8a-9a1d-4bd878b19846"
                }
            ]
        }
    },
    {
        "query": "I have a PDF file called \"example.pdf\". Extract the text from it using the PDF Text Extractor API.",
        "model_answer": "requests.get(\"https://pdf-text-extractor.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pdf-text-extractor.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "An api that helps you to extract all text in a PDF format file with ease",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pdf-text-extractor.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pdf-text-extractor.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pdf-text-extractor.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pdf-text-extractor.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PDF Text Extractor",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you check the pricing details for a gaming laptop?",
        "model_answer": "requests.get(\"https://h30-e-commerce-data-scraper.p.rapidapi.com/search/gaming laptop\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"h30-e-commerce-data-scraper.p.rapidapi.com\"}, params={\"api_key\": \"\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "H30 E-commerce Data scraper is the simplest way to get  access to product's details from Amazon in JSON format",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://h30-e-commerce-data-scraper.p.rapidapi.com/search/gaming laptop '\nquerystring = {\"searchQuery\": \"\", \"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://h30-e-commerce-data-scraper.p.rapidapi.com/search/gaming laptop \"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "searchquery",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "api_key",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://h30-e-commerce-data-scraper.p.rapidapi.com/search/gaming laptop \"\nquerystring = {\"api_key\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"h30-e-commerce-data-scraper.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "H30 E-commerce Data scraper",
            "api_arguments_original": [
                {
                    "name": "searchQuery",
                    "type": "string",
                    "description": "",
                    "default": "gaming laptop "
                },
                {
                    "name": "api_key",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you check if the email address example@gmail.com is disposable?",
        "model_answer": "response = requests.get(\"https://disposable-email-checker1.p.rapidapi.com/validate\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"disposable-email-checker1.p.rapidapi.com\"}, params={\"domain\": \"example@gmail.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "This is an easy way to check if a email address is disposable or valid so you can avoid fake users on your database.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://disposable-email-checker1.p.rapidapi.com/validate'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://disposable-email-checker1.p.rapidapi.com/validate\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://disposable-email-checker1.p.rapidapi.com/validate\"\nquerystring = {\"domain\": \"gmail.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"disposable-email-checker1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Disposable Email Checker",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "gmail.com"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the current weather in New York City?",
        "model_answer": "requests.get(\"https://weatherjs1.p.rapidapi.comhttp://127.0.0.1:5500\")",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "testing api project",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://weatherjs1.p.rapidapi.comhttp://127.0.0.1:5500'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://weatherjs1.p.rapidapi.comhttp://127.0.0.1:5500\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://weatherjs1.p.rapidapi.comhttp://127.0.0.1:5500\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"weatherjs1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "weatherJS",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you please get me a list of remote jobs from Shopify?",
        "model_answer": "response = requests.get(\"https://remote-jobs-api.p.rapidapi.com/jobs\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"remote-jobs-api.p.rapidapi.com\"}, params={\"company\": \"shopify\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Get a list of remote jobs from different resources: weworkremotely, remoteok, GitHub, StackOverflow, Twitch, Mailchimp, Figma...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://remote-jobs-api.p.rapidapi.com/jobs'\nquerystring = {\"company\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://remote-jobs-api.p.rapidapi.com/jobs\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "company",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "category",
                    "description": "",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://remote-jobs-api.p.rapidapi.com/jobs\"\nquerystring = {\"company\": \"shopify\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"remote-jobs-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Remote Jobs API",
            "api_arguments_original": [
                {
                    "name": "company",
                    "type": "STRING",
                    "description": "",
                    "default": "shopify"
                },
                {
                    "name": "category",
                    "type": "ENUM",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get the latest posts from the test API.",
        "model_answer": "requests.get(\"https://test1928.p.rapidapi.com/getPosts\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"test1928.p.rapidapi.com\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "test",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test1928.p.rapidapi.com/getPosts'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test1928.p.rapidapi.com/getPosts\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test1928.p.rapidapi.com/getPosts\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test1928.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test_v6",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to search for popular cartoons on YouTube.",
        "model_answer": "requests.get(\"https://youtube-data8.p.rapidapi.com/auto-complete/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-data8.p.rapidapi.com\"}, params={\"q\": \"cartoon\", \"hl\": \"en\", \"gl\": \"US\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Use the API for search, videos, playlists, channels and more.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-data8.p.rapidapi.com/auto-complete/'\nquerystring = {\"q\": \"\", \"hl\": \"\", \"gl\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-data8.p.rapidapi.com/auto-complete/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "query text",
                    "type": "STRING"
                },
                {
                    "name": "hl",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "gl",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-data8.p.rapidapi.com/auto-complete/\"\nquerystring = {\"hl\": \"en\", \"q\": \"cartoon\", \"gl\": \"US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-data8.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "YouTube Data",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "query text",
                    "default": "cartoon"
                },
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "gl",
                    "type": "STRING",
                    "description": "",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "Can you get me the full information of this TikTok video without watermark? The video URL is https://www.tiktok.com/@user/video/1234567890",
        "model_answer": "requests.get(\"https://tiktok-full-video-info-without-watermark.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"tiktok-full-video-info-without-watermark.p.rapidapi.com\"}, params={\"url\": \"https://www.tiktok.com/@user/video/1234567890\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "A fast and stable API that uses a request directly to the TikTok server.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://tiktok-full-video-info-without-watermark.p.rapidapi.com/'\nquerystring = {\"url\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://tiktok-full-video-info-without-watermark.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "url",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://tiktok-full-video-info-without-watermark.p.rapidapi.com/\"\nquerystring = {\"url\": \"https://www.tiktok.com/@pepsi/video/7132906413705350446\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"tiktok-full-video-info-without-watermark.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "TikTok Full Video Info (without watermark)",
            "api_arguments_original": [
                {
                    "name": "url",
                    "type": "STRING",
                    "description": "",
                    "default": "https://www.tiktok.com/@pepsi/video/7132906413705350446"
                }
            ]
        }
    },
    {
        "query": "Please provide me the percent change of the Inflation Rate for Food Prices for the last 2 years.",
        "model_answer": "requests.get(\"https://food-price-inflation.p.rapidapi.com/yUNJ9j/food_data\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"food-price-inflation.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "This API provides the percent change of the Inflations Rate for the Food Prices in the last 2 Years independent of the Price Index (CPI) for food is a component of the all-items CPI.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://food-price-inflation.p.rapidapi.com/yUNJ9j/food_data'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://food-price-inflation.p.rapidapi.com/yUNJ9j/food_data\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://food-price-inflation.p.rapidapi.com/yUNJ9j/food_data\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"food-price-inflation.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Food Price Inflation",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you generate a random word for me?",
        "model_answer": "response = requests.get(\"https://xkubist-random-word-v1.p.rapidapi.com/run.cgi\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"xkubist-random-word-v1.p.rapidapi.com\"})",
        "original": {
            "domain": "Education",
            "framework": "RapidAPI",
            "functionality": "The application generating random words is very useful not only as a tool for various parlor games but it is also essential for the authors of articles or literary works.\r\nThe application is developed in cooperation with nlp centre.  According to parameters entered by a user it returns a random word as a text.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://xkubist-random-word-v1.p.rapidapi.com/run.cgi'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://xkubist-random-word-v1.p.rapidapi.com/run.cgi\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://xkubist-random-word-v1.p.rapidapi.com/run.cgi\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"xkubist-random-word-v1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Random Word",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please check if example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "fewfwe",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://dxjewof.p.rapidapi.combgnhyt'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://dxjewof.p.rapidapi.combgnhyt\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://dxjewof.p.rapidapi.combgnhyt\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"dxjewof.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "dxjewof",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with the live games and pre-game odds for Admiralbet?",
        "model_answer": "requests.get(\"https://admiralbet.p.rapidapi.com/matches/admiralbet\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"admiralbet.p.rapidapi.com\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "Games and pre-game Odds for Admiralbet",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://admiralbet.p.rapidapi.com/matches/admiralbet'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://admiralbet.p.rapidapi.com/matches/admiralbet\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://admiralbet.p.rapidapi.com/matches/admiralbet\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"admiralbet.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Admiralbet",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the English synonyms for the word \"beautiful\".",
        "model_answer": "requests.get(\"https://english-synonyms.p.rapidapi.com/bourgeois\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"english-synonyms.p.rapidapi.com\"}, params={\"word\": \"beautiful\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "Get all english synonyms from a given word",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://english-synonyms.p.rapidapi.com/bourgeois'\nquerystring = {\"word\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://english-synonyms.p.rapidapi.com/bourgeois\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "word",
                    "description": "An english word",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://english-synonyms.p.rapidapi.com/bourgeois\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"english-synonyms.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "English synonyms",
            "api_arguments_original": [
                {
                    "name": "word",
                    "type": "string",
                    "description": "An english word",
                    "default": "bourgeois"
                }
            ]
        }
    },
    {
        "query": "I want to fetch the MP4 format of the video with videoId \"M0VWroX0gZA\" from YouTube.",
        "model_answer": "requests.get(\"https://youtube-videos.p.rapidapi.com/mp4\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"youtube-videos.p.rapidapi.com\"}, params={\"videoId\": \"M0VWroX0gZA\"})",
        "original": {
            "domain": "Video_Images",
            "framework": "RapidAPI",
            "functionality": "An easy-to-use API to fetch videos from Youtube in MP4 format.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://youtube-videos.p.rapidapi.com/mp4'\nquerystring = {\"videoId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://youtube-videos.p.rapidapi.com/mp4\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "videoid",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://youtube-videos.p.rapidapi.com/mp4\"\nquerystring = {\"videoId\": \"M0VWroX0gZA\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"youtube-videos.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Youtube Videos",
            "api_arguments_original": [
                {
                    "name": "videoId",
                    "type": "STRING",
                    "description": "",
                    "default": "M0VWroX0gZA"
                }
            ]
        }
    },
    {
        "query": "I want to check if the company with the CNPJ number 37335118000180 has a street address.",
        "model_answer": "requests.get(\"https://consulta-cnpj-tempo-real.p.rapidapi.com/office/37335118000180/street\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"consulta-cnpj-tempo-real.p.rapidapi.com\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "API Tempo Real de Consultas a Receita Federal, Simples Nacional e Cadastro de Contribuintes (SINTEGRA).",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://consulta-cnpj-tempo-real.p.rapidapi.com/office/37335118000180/street'\nquerystring = {\"CNPJ\": \"\", \"fov\": \"\", \"height\": \"\", \"width\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://consulta-cnpj-tempo-real.p.rapidapi.com/office/37335118000180/street\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "cnpj",
                    "description": "",
                    "type": "string"
                },
                {
                    "name": "fov",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://consulta-cnpj-tempo-real.p.rapidapi.com/office/37335118000180/street\"\nquerystring = {\"fov\": \"\", \"height\": \"\", \"width\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"consulta-cnpj-tempo-real.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Consulta CNPJ Tempo Real",
            "api_arguments_original": [
                {
                    "name": "CNPJ",
                    "type": "string",
                    "description": "",
                    "default": "37335118000180"
                },
                {
                    "name": "fov",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "height",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "width",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the current standings and table for the German Bundesliga for the 2022 season?",
        "model_answer": "requests.get(\"https://bundesliga-standings.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"bundesliga-standings.p.rapidapi.com\"}, params={\"season\": \"2022\"})",
        "original": {
            "domain": "Sports",
            "framework": "RapidAPI",
            "functionality": "German Bundesliga Standings & Table",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://bundesliga-standings.p.rapidapi.com/'\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://bundesliga-standings.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "season",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://bundesliga-standings.p.rapidapi.com/\"\nquerystring = {\"season\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"bundesliga-standings.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Bundesliga Standings",
            "api_arguments_original": [
                {
                    "name": "season",
                    "type": "STRING",
                    "description": "e.g. `2022`\ne.g. `2021`",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check if the product with ID 123456 is available on Otto.de.",
        "model_answer": "requests.get(\"https://axesso-otto-data-service.p.rapidapi.com/ott/otto-lookup-reviews\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"axesso-otto-data-service.p.rapidapi.com\"}, params={\"page\": \"1\", \"productId\": \"123456\", \"sortBy\": \"newest\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Our Otto Data Service API provides real-time data about product details, keyword search result and reviews from the german online shop Otto.de.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://axesso-otto-data-service.p.rapidapi.com/ott/otto-lookup-reviews'\nquerystring = {\"page\": \"\", \"productId\": \"\", \"sortBy\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://axesso-otto-data-service.p.rapidapi.com/ott/otto-lookup-reviews\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "productid",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "sortby",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://axesso-otto-data-service.p.rapidapi.com/ott/otto-lookup-reviews\"\nquerystring = {\"sortBy\": \"newest\", \"page\": \"1\", \"productId\": \"417479273\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"axesso-otto-data-service.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Axesso - Otto Data Service",
            "api_arguments_original": [
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "productId",
                    "type": "STRING",
                    "description": "",
                    "default": "417479273"
                },
                {
                    "name": "sortBy",
                    "type": "STRING",
                    "description": "",
                    "default": "newest"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with metadata on publicly available information on various pageant contests?",
        "model_answer": "requests.get(\"https://pageantdb.p.rapidapi.com/countries/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"pageantdb.p.rapidapi.com\"}, params={\"id\": \"5\"})",
        "original": {
            "domain": "Database",
            "framework": "RapidAPI",
            "functionality": "Metadata on publicly available information on various pageant contests. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pageantdb.p.rapidapi.com/countries/'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pageantdb.p.rapidapi.com/countries/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pageantdb.p.rapidapi.com/countries/\"\nquerystring = {\"id\": \"5\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pageantdb.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "PageantDB",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "",
                    "default": "5"
                }
            ]
        }
    },
    {
        "query": "I want to get information about crops with the common name \"Wheat\" and the specie name \"Triticum\".",
        "model_answer": "requests.get(\"https://crops.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"crops.p.rapidapi.com\"}, params={\"commonName\": \"Wheat\", \"specieName\": \"Triticum\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Plants for agricultural purposes in Spain: info about taxonomy, growing period, fruit type, categorization, and other. Total of 293 species. Being possible to filter by any of the characteristics mentioned above.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://crops.p.rapidapi.com/'\nquerystring = {\"subcategory\": \"\", \"family\": \"\", \"commonName\": \"\", \"specieName\": \"\", \"consistency\": \"\", \"cropCycle\": \"\", \"fruitType\": \"\", \"category\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://crops.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "subcategory",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "family",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "commonname",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "speciename",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "consistency",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "cropcycle",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "fruittype",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "category",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://crops.p.rapidapi.com/\"\nquerystring = {\"subcategory\": \"De invierno\", \"family\": \"Poaceae\", \"commonName\": \"Trigo\", \"specieName\": \"Triticum\", \"consistency\": \"herb\u00e1cea\", \"cropCycle\": \"anual\", \"fruitType\": \"cariopsis\", \"category\": \"Cereales de grano\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"crops.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Crops",
            "api_arguments_original": [
                {
                    "name": "subcategory",
                    "type": "STRING",
                    "description": "",
                    "default": "De invierno"
                },
                {
                    "name": "family",
                    "type": "STRING",
                    "description": "",
                    "default": "Poaceae"
                },
                {
                    "name": "commonName",
                    "type": "STRING",
                    "description": "",
                    "default": "Trigo"
                },
                {
                    "name": "specieName",
                    "type": "STRING",
                    "description": "",
                    "default": "Triticum"
                },
                {
                    "name": "consistency",
                    "type": "STRING",
                    "description": "",
                    "default": "herb\u00e1cea"
                },
                {
                    "name": "cropCycle",
                    "type": "STRING",
                    "description": "",
                    "default": "anual"
                },
                {
                    "name": "fruitType",
                    "type": "STRING",
                    "description": "",
                    "default": "cariopsis"
                },
                {
                    "name": "category",
                    "type": "STRING",
                    "description": "",
                    "default": "Cereales de grano"
                }
            ]
        }
    },
    {
        "query": "I want to search for images of cats.",
        "model_answer": "requests.get(\"https://image-search19.p.rapidapi.com/v2/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"image-search19.p.rapidapi.com\"}, params={\"q\": \"cats\", \"suggestion_query\": \"\", \"hl\": \"en\", \"cursor\": \"\"})",
        "original": {
            "domain": "Search",
            "framework": "RapidAPI",
            "functionality": "The Image Search API is a tool that allows developers to integrate image search functionality into their applications or websites.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://image-search19.p.rapidapi.com/v2/'\nquerystring = {\"q\": \"\", \"suggestion_query\": \"\", \"hl\": \"\", \"cursor\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://image-search19.p.rapidapi.com/v2/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "q",
                    "description": "Search Query",
                    "type": "STRING"
                },
                {
                    "name": "suggestion_query",
                    "description": "Suggestion Query Token",
                    "type": "STRING"
                },
                {
                    "name": "hl",
                    "description": "Language",
                    "type": "STRING"
                },
                {
                    "name": "cursor",
                    "description": "Cursor Token",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://image-search19.p.rapidapi.com/v2/\"\nquerystring = {\"suggestion_query\": \"\", \"hl\": \"en\", \"cursor\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"image-search19.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Image Search",
            "api_arguments_original": [
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "Search Query",
                    "default": ""
                },
                {
                    "name": "suggestion_query",
                    "type": "STRING",
                    "description": "Suggestion Query Token",
                    "default": ""
                },
                {
                    "name": "hl",
                    "type": "STRING",
                    "description": "Language",
                    "default": "en"
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "Cursor Token",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you give me the top 10 songs using the \"getSongs\" API?",
        "model_answer": "requests.get(\"https://getsongs.p.rapidapi.com/getTopSongs\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\": \"getsongs.p.rapidapi.com\"})",
        "original": {
            "domain": "Music",
            "framework": "RapidAPI",
            "functionality": "top 10 Songs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://getsongs.p.rapidapi.com/getTopSongs'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://getsongs.p.rapidapi.com/getTopSongs\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://getsongs.p.rapidapi.com/getTopSongs\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"getsongs.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "getSongs",
            "api_arguments_original": []
        }
    },
    {
        "query": "Please provide me with the details of order ID 123456 using the firstAPI_v2.",
        "model_answer": "requests.get(\"https://firstapi116.p.rapidapi.com/store/order/10\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"firstapi116.p.rapidapi.com\"}, params={\"orderid\": \"123456\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "TESTING PURPOSE",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://firstapi116.p.rapidapi.com/store/order/10'\nquerystring = {\"orderid\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://firstapi116.p.rapidapi.com/store/order/10\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "orderid",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://firstapi116.p.rapidapi.com/store/order/10\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"firstapi116.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "firstAPI_v2",
            "api_arguments_original": [
                {
                    "name": "orderid",
                    "type": "NUMBER",
                    "description": "",
                    "default": "10"
                }
            ]
        }
    },
    {
        "query": "I want to track the actions of the user with user id \"12345\" on the site with site id \"example.com\" using the JSMon API.",
        "model_answer": "response = requests.get(\"https://jsmon.p.rapidapi.com/track/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"jsmon.p.rapidapi.com\"}, params={\"site_id\": \"example.com\", \"session_id\": \"1380352501-B90e7Cppo2\", \"user_id\": \"12345\", \"callback_id\": \"_1380352523030\", \"action_type\": \"1\"})",
        "original": {
            "domain": "Commerce",
            "framework": "RapidAPI",
            "functionality": "JSMon is an interactive tracking & conversion tool.\r\nGet started to understand who is on your site at a particular moment: occasional visitor or potential customer. And interact with him.\r\nOur system will analyze visitor's behavioral factors and offer optimal variants for interaction with him.\r\n1) We help to understand who are your visitors on line.\r\n2) We make it possible to set up behavioral models you like.\r\n3) We offer the visitor what he is interested in.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jsmon.p.rapidapi.com/track/'\nquerystring = {\"site_id\": \"\", \"session_id\": \"\", \"user_id\": \"\", \"callback_id\": \"\", \"action_type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jsmon.p.rapidapi.com/track/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "site_id",
                    "description": "Site ID",
                    "type": "STRING"
                },
                {
                    "name": "session_id",
                    "description": "Session ID",
                    "type": "STRING"
                },
                {
                    "name": "user_id",
                    "description": "User ID",
                    "type": "STRING"
                },
                {
                    "name": "callback_id",
                    "description": "Callback function",
                    "type": "STRING"
                },
                {
                    "name": "action_type",
                    "description": "Action ID",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jsmon.p.rapidapi.com/track/\"\nquerystring = {\"site_id\": \"demo\", \"session_id\": \"1380352501-B90e7Cppo2\", \"user_id\": \"A1F57492-628D-93B4-8313-3D3143713A1E\", \"callback_id\": \"_1380352523030\", \"action_type\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jsmon.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "JSMon",
            "api_arguments_original": [
                {
                    "name": "site_id",
                    "type": "STRING",
                    "description": "Site ID",
                    "default": "demo"
                },
                {
                    "name": "session_id",
                    "type": "STRING",
                    "description": "Session ID",
                    "default": "1380352501-B90e7Cppo2"
                },
                {
                    "name": "user_id",
                    "type": "STRING",
                    "description": "User ID",
                    "default": "A1F57492-628D-93B4-8313-3D3143713A1E"
                },
                {
                    "name": "callback_id",
                    "type": "STRING",
                    "description": "Callback function",
                    "default": "_1380352523030"
                },
                {
                    "name": "action_type",
                    "type": "STRING",
                    "description": "Action ID",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you please provide me with the timezone, DST offset, and UTC offset of the coordinates -87.627717 and 41.881832 ?",
        "model_answer": "requests.get(\"https://timezone-by-coordinates.p.rapidapi.com/timezone\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"timezone-by-coordinates.p.rapidapi.com\"}, params={\"lng\": -87.627717, \"timestamp\": 1646179205, \"lat\": 41.881832})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Get the Timezone, DST offset, and UTC offset of a location.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://timezone-by-coordinates.p.rapidapi.com/timezone'\nquerystring = {\"lng\": \"\", \"timestamp\": \"\", \"lat\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://timezone-by-coordinates.p.rapidapi.com/timezone\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lng",
                    "description": "Longitude",
                    "type": "NUMBER"
                },
                {
                    "name": "timestamp",
                    "description": "The desired time as **seconds **since midnight, January 1, 1970 UTC.",
                    "type": "NUMBER"
                },
                {
                    "name": "lat",
                    "description": "Latitude",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://timezone-by-coordinates.p.rapidapi.com/timezone\"\nquerystring = {\"lng\": \"-123.045868\", \"timestamp\": \"1646179205\", \"lat\": \"49.282409\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"timezone-by-coordinates.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Timezone by Coordinates",
            "api_arguments_original": [
                {
                    "name": "lng",
                    "type": "NUMBER",
                    "description": "Longitude",
                    "default": "-123.045868"
                },
                {
                    "name": "timestamp",
                    "type": "NUMBER",
                    "description": "The desired time as **seconds **since midnight, January 1, 1970 UTC.",
                    "default": "1646179205"
                },
                {
                    "name": "lat",
                    "type": "NUMBER",
                    "description": "Latitude",
                    "default": "49.282409"
                }
            ]
        }
    },
    {
        "query": "Can you please provide the list of champions in League of Legends?",
        "model_answer": "requests.get(\"https://league-of-legends-champion-informaion.p.rapidapi.com/LolInfo/GetChampions\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"league-of-legends-champion-informaion.p.rapidapi.com\"}, params={\"champions\": \"\"})",
        "original": {
            "domain": "Gaming",
            "framework": "RapidAPI",
            "functionality": "API that will return a Champion object containing a list of Abilities including the champions passive ability. ",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://league-of-legends-champion-informaion.p.rapidapi.com/LolInfo/GetChampions'\nquerystring = {\"champions\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://league-of-legends-champion-informaion.p.rapidapi.com/LolInfo/GetChampions\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "champions",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://league-of-legends-champion-informaion.p.rapidapi.com/LolInfo/GetChampions\"\nquerystring = {\"champions\": \"cait\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"league-of-legends-champion-informaion.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "League Of Legends Champion Informaion",
            "api_arguments_original": [
                {
                    "name": "champions",
                    "type": "STRING",
                    "description": "",
                    "default": "cait"
                }
            ]
        }
    },
    {
        "query": "Can you help me search for movies with the genre \"action\" using the Advanced Movie Search API?",
        "model_answer": "requests.get(\"https://advanced-movie-search.p.rapidapi.com/genre/movie/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"advanced-movie-search.p.rapidapi.com\"})",
        "original": {
            "domain": "Movies",
            "framework": "RapidAPI",
            "functionality": "Search for movies via advanced queries like genre, name, etc. And get all their details",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://advanced-movie-search.p.rapidapi.com/genre/movie/list'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://advanced-movie-search.p.rapidapi.com/genre/movie/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://advanced-movie-search.p.rapidapi.com/genre/movie/list\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"advanced-movie-search.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Advanced Movie Search",
            "api_arguments_original": []
        }
    },
    {
        "query": "How can I detect the brand of an image using the Brand Recognition API?",
        "model_answer": "response = requests.get(\"https://brand-recognition.p.rapidapi.com/v1/version\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"brand-recognition.p.rapidapi.com\"})",
        "original": {
            "domain": "Visual_Recognition",
            "framework": "RapidAPI",
            "functionality": "This ready-to-use API provides high-accuracy brand detection and logo recognition. [![Examples](https://img.shields.io/badge/View%20examples-gray?logo=gitlab&style=flat)](https://gitlab.com/api4ai/examples/brand-det) [![API4AI](https://img.shields.io/badge/api4.ai%20platform-fee33c?logo=icloud&flat&logoColor=black)](https://api4.ai/apis/brand-recognition?utm_source=brand_det_rapidapi&utm_medium=endpoints&utm_campaign=rapidapi) [![Telegram](https://img.shields.io/badge/-Telegram%20demo-white?l...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://brand-recognition.p.rapidapi.com/v1/version'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://brand-recognition.p.rapidapi.com/v1/version\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://brand-recognition.p.rapidapi.com/v1/version\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"brand-recognition.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Brand Recognition",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you help me generate an automatic response for a restaurant called Fuzi based on the review \"C'\u00e9tait excellent\"?",
        "model_answer": "requests.get(\"https://automatic-custom-response-creator.p.rapidapi.com/get_response\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"automatic-custom-response-creator.p.rapidapi.com\"}, params={\"business_type\": \"Restaurant\", \"business_brand\": \"Fuzi\", \"avis\": \"C'\u00e9tait excellent\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "send a customer review, you will receive a personalized response proposal automatically",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://automatic-custom-response-creator.p.rapidapi.com/get_response'\nquerystring = {\"business_type\": \"\", \"business_brand\": \"\", \"avis\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://automatic-custom-response-creator.p.rapidapi.com/get_response\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "business_type",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "business_brand",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "avis",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://automatic-custom-response-creator.p.rapidapi.com/get_response\"\nquerystring = {\"business_type\": \"Restaurant\", \"business_brand\": \"Fuzi\", \"avis\": \"C'\u00e9tait excellent\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"automatic-custom-response-creator.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Automatic-custom-response-creator",
            "api_arguments_original": [
                {
                    "name": "business_type",
                    "type": "STRING",
                    "description": "",
                    "default": "Restaurant"
                },
                {
                    "name": "business_brand",
                    "type": "STRING",
                    "description": "",
                    "default": "Fuzi"
                },
                {
                    "name": "avis",
                    "type": "STRING",
                    "description": "",
                    "default": "C'\u00e9tait excellent"
                }
            ]
        }
    },
    {
        "query": "I want to get detailed information about a product with ID \"12345\" on Asos.",
        "model_answer": "requests.get(\"https://asos2.p.rapidapi.com/products/v3/list-similarities\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"asos2.p.rapidapi.com\"}, params={\"id\": \"12345\", \"sizeSchema\": \"US\", \"currency\": \"USD\", \"lang\": \"en-US\", \"store\": \"US\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Asos API helps to query for all information about categories, products, etc... as on the official website",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asos2.p.rapidapi.com/products/v3/list-similarities'\nquerystring = {\"id\": \"\", \"sizeSchema\": \"\", \"currency\": \"\", \"lang\": \"\", \"store\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asos2.p.rapidapi.com/products/v3/list-similarities\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "The value of id field that returned in .../products/v2/list",
                    "type": "NUMBER"
                },
                {
                    "name": "sizeschema",
                    "description": "Get suitable value from .../countries/list endpoint",
                    "type": "STRING"
                },
                {
                    "name": "currency",
                    "description": "Get suitable value from .../countries/list endpoint",
                    "type": "STRING"
                },
                {
                    "name": "lang",
                    "description": "The language code",
                    "type": "STRING"
                },
                {
                    "name": "store",
                    "description": "The store code gotten from .../countries/list",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asos2.p.rapidapi.com/products/v3/list-similarities\"\nquerystring = {\"sizeSchema\": \"US\", \"currency\": \"USD\", \"lang\": \"en-US\", \"id\": \"\", \"store\": \"US\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asos2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Asos",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "NUMBER",
                    "description": "The value of id field that returned in .../products/v2/list",
                    "default": ""
                },
                {
                    "name": "sizeSchema",
                    "type": "STRING",
                    "description": "Get suitable value from .../countries/list endpoint",
                    "default": "US"
                },
                {
                    "name": "currency",
                    "type": "STRING",
                    "description": "Get suitable value from .../countries/list endpoint",
                    "default": "USD"
                },
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "The language code",
                    "default": "en-US"
                },
                {
                    "name": "store",
                    "type": "STRING",
                    "description": "The store code gotten from .../countries/list",
                    "default": "US"
                }
            ]
        }
    },
    {
        "query": "I want to check if the weather temperature in New York City is above 80 degrees Fahrenheit.",
        "model_answer": "requests.get(\"https://weather-api.p.rapidapi.com/temperature\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"weather-api.p.rapidapi.com\"}, params={\"city\": \"New York City\"}).json()",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "s",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://test6226.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://test6226.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://test6226.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"test6226.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "test_v3",
            "api_arguments_original": []
        }
    },
    {
        "query": "Can you provide me with a list of the top memes?",
        "model_answer": "requests.get(\"https://memes9.p.rapidapi.com/api/list\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"memes9.p.rapidapi.com\"}, params={\"genre\": \"memes\", \"type\": \"top\"})",
        "original": {
            "domain": "Social",
            "framework": "RapidAPI",
            "functionality": "Memes api with several genre",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://memes9.p.rapidapi.com/api/list'\nquerystring = {\"genre\": \"\", \"type\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://memes9.p.rapidapi.com/api/list\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "genre",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://memes9.p.rapidapi.com/api/list\"\nquerystring = {\"genre\": \"memes\", \"type\": \"top\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"memes9.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Memes",
            "api_arguments_original": [
                {
                    "name": "genre",
                    "type": "STRING",
                    "description": "",
                    "default": "memes"
                },
                {
                    "name": "type",
                    "type": "STRING",
                    "description": "",
                    "default": "top"
                }
            ]
        }
    },
    {
        "query": "Can you check the response time from 12 global locations for the domain \"example.com\"?",
        "model_answer": "requests.get(\"https://global-webserver-or-ip-response-time-and-location.p.rapidapi.com/geoping.php\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"global-webserver-or-ip-response-time-and-location.p.rapidapi.com\"}, params={\"domain\": \"example.com\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Check any domain or IP address for response time from 12 Global locations in all continents. IPv4 and IPv6 addresses detected, location, ping time, http time ,https time\n\nLocations\n1. California USA\n2. New York USA\n3. Toronto Canada\n4.  London UK\n5. Bahrain UAE\n6. Mumbai India\n7. Singapore\n8. Tokyo Japan\n9. Sydney Australia\n10. Sao Paulo Brazil\n11. Cape Town South Africa\n12. Hong Kong China",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://global-webserver-or-ip-response-time-and-location.p.rapidapi.com/geoping.php'\nquerystring = {\"domain\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://global-webserver-or-ip-response-time-and-location.p.rapidapi.com/geoping.php\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "domain",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://global-webserver-or-ip-response-time-and-location.p.rapidapi.com/geoping.php\"\nquerystring = {\"domain\": \"www.google.com\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"global-webserver-or-ip-response-time-and-location.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Global WebServer  or IP Response Time and Location",
            "api_arguments_original": [
                {
                    "name": "domain",
                    "type": "STRING",
                    "description": "",
                    "default": "www.google.com"
                }
            ]
        }
    },
    {
        "query": "Please provide me with the results from the ProbablyThese API.",
        "model_answer": "requests.get(\"https://probablythese.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"probablythese.p.rapidapi.com\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "API for app ProbablyThese",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://probablythese.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://probablythese.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://probablythese.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"probablythese.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "ProbablyThese",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to track my package with reference number 123456789.",
        "model_answer": "requests.get(\"https://pack-send.p.rapidapi.com/api/Tracking/ReferenceNumberHere\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"pack-send.p.rapidapi.com\"}, params={\"reference\" \"123456789\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Logistics and Shipment Services",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://pack-send.p.rapidapi.com/api/Tracking/ReferenceNumberHere'\nquerystring = {\"reference\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://pack-send.p.rapidapi.com/api/Tracking/ReferenceNumberHere\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "reference",
                    "description": "",
                    "type": "string"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://pack-send.p.rapidapi.com/api/Tracking/ReferenceNumberHere\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"pack-send.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Pack & Send",
            "api_arguments_original": [
                {
                    "name": "reference",
                    "type": "string",
                    "description": "",
                    "default": "ReferenceNumberHere"
                }
            ]
        }
    },
    {
        "query": "Can you give me information about the kanji character '\u96e8'?",
        "model_answer": "response = requests.get(\"https://kanjialive-api.p.rapidapi.com/api/public/search/%E9%9B%A8\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"})",
        "original": {
            "domain": "Artificial_Intelligence_Machine_Learning",
            "framework": "RapidAPI",
            "functionality": "Free API to the Kanji alive web application with CC-BY licensed language data on Japanese kanji, radicals and associated media files.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://kanjialive-api.p.rapidapi.com/api/public/search/rain'\nquerystring = {\"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://kanjialive-api.p.rapidapi.com/api/public/search/rain\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "N.B. With Basic Search, Onyomi and Kunyomi values must be in katakana or hiragana.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://kanjialive-api.p.rapidapi.com/api/public/search/rain\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"kanjialive-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Learn to read and write Japanese kanji",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "N.B. With Basic Search, Onyomi and Kunyomi values must be in katakana or hiragana.",
                    "default": "rain"
                }
            ]
        }
    },
    {
        "query": "Can you provide me with the GaiaLens ESG scores for Apple Inc.?",
        "model_answer": "requests.get(\"https://gaialens-esg-scores.p.rapidapi.com/scores\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"gaialens-esg-scores.p.rapidapi.com\"}, params={\"companyname\": \"Apple Inc.\"})",
        "original": {
            "domain": "Finance",
            "framework": "RapidAPI",
            "functionality": "Real-time, data-driven and transparent ESG scores for over 17,500 companies",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://gaialens-esg-scores.p.rapidapi.com/scores'\nquerystring = {\"isin\": \"\", \"sedol\": \"\", \"companyname\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://gaialens-esg-scores.p.rapidapi.com/scores\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "isin",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "sedol",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "companyname",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://gaialens-esg-scores.p.rapidapi.com/scores\"\nquerystring = {\"isin\": \"\", \"sedol\": \"\", \"companyname\": \"Apple Inc.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"gaialens-esg-scores.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "GaiaLens ESG Scores",
            "api_arguments_original": [
                {
                    "name": "isin",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "sedol",
                    "type": "STRING",
                    "description": "",
                    "default": ""
                },
                {
                    "name": "companyname",
                    "type": "STRING",
                    "description": "",
                    "default": "Apple Inc."
                }
            ]
        }
    },
    {
        "query": "I want to download historical stock prices for AAPL from Yahoo Finance.",
        "model_answer": "requests.get(\"https://yahoo-finance-historical-stock-prices1.p.rapidapi.com/GetHistoricalPrices\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"yahoo-finance-historical-stock-prices1.p.rapidapi.com\"}, params={\"symbol\": \"AAPL\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "Download historical stock prices found as found on Yahoo Finance quickly and efficiently.\n\nA list of avaliable stock prices can be found here: https://filedn.com/lLxy9lfpvrpRqRrS9ftjPcF/lookupOverview.csv",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://yahoo-finance-historical-stock-prices1.p.rapidapi.com/GetHistoricalPrices'\nquerystring = {\"symbol\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://yahoo-finance-historical-stock-prices1.p.rapidapi.com/GetHistoricalPrices\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "symbol",
                    "description": "The *symbol* parameter, e.g. **AAPL**.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://yahoo-finance-historical-stock-prices1.p.rapidapi.com/GetHistoricalPrices\"\nquerystring = {\"symbol\": \"AAPL\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"yahoo-finance-historical-stock-prices1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Yahoo Finance Historical Stock Prices",
            "api_arguments_original": [
                {
                    "name": "symbol",
                    "type": "STRING",
                    "description": "The *symbol* parameter, e.g. **AAPL**.",
                    "default": "AAPL"
                }
            ]
        }
    },
    {
        "query": "Can you please check if the barcode 9780142410383 exists in the database?",
        "model_answer": "requests.get(\"https://barcodes-lookup.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"barcodes-lookup.p.rapidapi.com\"}, params={\"query\" \"9780142410383\"})",
        "original": {
            "domain": "Data",
            "framework": "RapidAPI",
            "functionality": "Search over 500 million products with UPC, EAN, JAN, ISBN barcodes.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://barcodes-lookup.p.rapidapi.com/'\nquerystring = {\"query\": \"\", \"page\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://barcodes-lookup.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "query",
                    "description": "**Barcode** or **search term**",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "If you want search results - **page number**\nIf you are querying for a barcode, leave it blank.\n\nIf you leave it blank (if you are querying for a search term), the first page will be returned.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://barcodes-lookup.p.rapidapi.com/\"\nquerystring = {\"page\": \"\", \"query\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"barcodes-lookup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Barcodes Lookup",
            "api_arguments_original": [
                {
                    "name": "query",
                    "type": "STRING",
                    "description": "**Barcode** or **search term**",
                    "default": ""
                },
                {
                    "name": "page",
                    "type": "NUMBER",
                    "description": "If you want search results - **page number**\nIf you are querying for a barcode, leave it blank.\n\nIf you leave it blank (if you are querying for a search term), the first page will be returned.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Please provide me with the healthcare mailing list.",
        "model_answer": "requests.get(\"https://healthcaremailing.p.rapidapi.comhttps://rapidapi.com/user/Healthcaremailing\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"healthcaremailing.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Healthcare mailing, a direct marketing business founded on a rock solid base of many successful years of experience building and managing lists used in direct marketing campaigns. Our primary principle of providing true quality leads with great customer service is never taken lightly - as a full service mailing list broker, and as a friend to our customers, our direct marketing experts are always happy to go the extra mile for you.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://healthcaremailing.p.rapidapi.comhttps://rapidapi.com/user/Healthcaremailing'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://healthcaremailing.p.rapidapi.comhttps://rapidapi.com/user/Healthcaremailing\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://healthcaremailing.p.rapidapi.comhttps://rapidapi.com/user/Healthcaremailing\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"healthcaremailing.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Healthcaremailing",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to search for news articles in English language with the keyword \"COVID-19\".",
        "model_answer": "requests.get(\"https://google-news-api1.p.rapidapi.com/search\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"google-news-api1.p.rapidapi.com\"}, params={\"language\": \"EN\", \"q\": \"COVID-19\"})",
        "original": {
            "domain": "News_Media",
            "framework": "RapidAPI",
            "functionality": "By using the Google News API, which is a straightforward REST API, you may look through over 1,000,000 news sources, both current and archived. You may also aggregate and arrange today's most talked-about news stories in accordance with Google News's rating with the help of this news API. You can also use filters and a keyword search to sift through all the articles.\n\nWe have compiled tens of millions of articles from over 250,000 sources in ten different languages for inclusion in our databa...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://google-news-api1.p.rapidapi.com/search'\nquerystring = {\"language\": \"\", \"sort\": \"\", \"required_props\": \"\", \"cursor\": \"\", \"to\": \"\", \"limit\": \"\", \"from\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://google-news-api1.p.rapidapi.com/search\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "language",
                    "description": "Supported by 10 languages. \n\nLanguage request codes:\n\n    TR, EN, FR, DE,  IT, ZH, ES, RU, KO, PT",
                    "type": "STRING"
                },
                {
                    "name": "sort",
                    "description": "You can arrange the articles systematically in groups; separate according to type, class, etc.\n\nSorting refers to ordering articles in an increasing or decreasing manner according to some linear relationship among the article items. You can order the articles and arrange them in a sequence ordered by category with similar properties.\n\nExpected values:\n\ndate:asc\ndate:desc\n\n_score:asc\n_score:desc",
                    "type": "STRING"
                },
                {
                    "name": "required_props",
                    "description": "Required props are delimited by commas. Each property must have a name. If one of the property names is missing from the article, that property is excluded.\n\nExample:\n\ntitle, image",
                    "type": "STRING"
                },
                {
                    "name": "cursor",
                    "description": "This defines the returned value of the \\\\\\\"next_cursor\\\\\\\". It allows you to navigate to next article list.",
                    "type": "STRING"
                },
                {
                    "name": "to",
                    "description": "\\\\\\\"to\\\\\\\" when used defines the date of items published before the specified date.\n\nFormat:\nISO date standart format is used. \nYYYY-MM-DDTHH:mm:ss\n\nExample:\n2022-10-17T18:41:34.306Z",
                    "type": "STRING"
                },
                {
                    "name": "limit",
                    "description": "With \\\\\\\"limit,\\\\\\\" you can specify the number of articles required per request. Maximum limit is set to 100 articles per request.",
                    "type": "NUMBER"
                },
                {
                    "name": "from",
                    "description": "\\\\\\\"from\\\\\\\" when used defines the date of items published after the specified date.\n\nFormat:\nISO date standart format is used. \nYYYY-MM-DDTHH:mm:ss\n\nExample:\n2022-10-17T18:41:34.306Z",
                    "type": "STRING"
                },
                {
                    "name": "q",
                    "description": "The search term or terms used to locate the article.\n\n\\\\\\\"AND\\\\\\\" or \\\\\\\"OR\\\\\\\" may be placed between the keywords.\n\nIf you wish to group the keywords, you may include them in parenthesis.\n\nFor instance: (cats and dogs) OR (fish)\n\nIf you wish to omit articles by term, you can do so by prefixing the keyword with a (-) sign.\n\nExample: cats -dogs\n(This will return articles featuring cats but exclude those with the term \\\\\\\"dog.\\\\\\\"",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://google-news-api1.p.rapidapi.com/search\"\nquerystring = {\"sort\": \"\", \"required_props\": \"\", \"cursor\": \"\", \"to\": \"\", \"limit\": \"\", \"from\": \"\", \"language\": \"\", \"q\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"google-news-api1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Google News API",
            "api_arguments_original": [
                {
                    "name": "language",
                    "type": "STRING",
                    "description": "Supported by 10 languages. \n\nLanguage request codes:\n\n    TR, EN, FR, DE,  IT, ZH, ES, RU, KO, PT",
                    "default": ""
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "You can arrange the articles systematically in groups; separate according to type, class, etc.\n\nSorting refers to ordering articles in an increasing or decreasing manner according to some linear relationship among the article items. You can order the articles and arrange them in a sequence ordered by category with similar properties.\n\nExpected values:\n\ndate:asc\ndate:desc\n\n_score:asc\n_score:desc",
                    "default": ""
                },
                {
                    "name": "required_props",
                    "type": "STRING",
                    "description": "Required props are delimited by commas. Each property must have a name. If one of the property names is missing from the article, that property is excluded.\n\nExample:\n\ntitle, image\n\n",
                    "default": ""
                },
                {
                    "name": "cursor",
                    "type": "STRING",
                    "description": "This defines the returned value of the \\\\\\\"next_cursor\\\\\\\". It allows you to navigate to next article list.",
                    "default": ""
                },
                {
                    "name": "to",
                    "type": "STRING",
                    "description": "\\\\\\\"to\\\\\\\" when used defines the date of items published before the specified date.\n\nFormat:\nISO date standart format is used. \nYYYY-MM-DDTHH:mm:ss\n\nExample:\n2022-10-17T18:41:34.306Z",
                    "default": ""
                },
                {
                    "name": "limit",
                    "type": "NUMBER",
                    "description": "With \\\\\\\"limit,\\\\\\\" you can specify the number of articles required per request. Maximum limit is set to 100 articles per request.",
                    "default": ""
                },
                {
                    "name": "from",
                    "type": "STRING",
                    "description": "\\\\\\\"from\\\\\\\" when used defines the date of items published after the specified date.\n\nFormat:\nISO date standart format is used. \nYYYY-MM-DDTHH:mm:ss\n\nExample:\n2022-10-17T18:41:34.306Z\n\n",
                    "default": ""
                },
                {
                    "name": "q",
                    "type": "STRING",
                    "description": "The search term or terms used to locate the article.\n\n\\\\\\\"AND\\\\\\\" or \\\\\\\"OR\\\\\\\" may be placed between the keywords.\n\nIf you wish to group the keywords, you may include them in parenthesis.\n\nFor instance: (cats and dogs) OR (fish)\n\nIf you wish to omit articles by term, you can do so by prefixing the keyword with a (-) sign.\n\nExample: cats -dogs\n(This will return articles featuring cats but exclude those with the term \\\\\\\"dog.\\\\\\\"\n\n",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you check if the address with postcode 3021GS, house number 288, and house number suffix B is valid in the Netherlands?",
        "model_answer": "requests.get(\"https://address-validation-nl1.p.rapidapi.com/api/v1/addresses\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"address-validation-nl1.p.rapidapi.com\"}, params={\"Postcode\": \"3021GS\", \"HouseNumber\": \"288\", \"HouseNumberSuffix\": \"B\"})",
        "original": {
            "domain": "Location",
            "framework": "RapidAPI",
            "functionality": "Address Validation NL API returns a valid Dutch address (street name and city/town) for a given postcode and house number",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://address-validation-nl1.p.rapidapi.com/api/v1/addresses'\nquerystring = {\"Postcode\": \"\", \"HouseNumber\": \"\", \"HouseNumberSuffix\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://address-validation-nl1.p.rapidapi.com/api/v1/addresses\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "postcode",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "housenumber",
                    "description": "",
                    "type": "NUMBER"
                },
                {
                    "name": "housenumbersuffix",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://address-validation-nl1.p.rapidapi.com/api/v1/addresses\"\nquerystring = {\"Postcode\": \"3021GS\", \"HouseNumberSuffix\": \"B\", \"HouseNumber\": \"288\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"address-validation-nl1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Address Validation NL",
            "api_arguments_original": [
                {
                    "name": "Postcode",
                    "type": "STRING",
                    "description": "",
                    "default": "3021GS"
                },
                {
                    "name": "HouseNumber",
                    "type": "NUMBER",
                    "description": "",
                    "default": "288"
                },
                {
                    "name": "HouseNumberSuffix",
                    "type": "STRING",
                    "description": "",
                    "default": "B"
                }
            ]
        }
    },
    {
        "query": "I want to check example@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example@gmail.com\"})",
        "original": {
            "domain": "eCommerce",
            "framework": "RapidAPI",
            "functionality": "Search makeup products",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://makeup.p.rapidapi.com/products.json'\nquerystring = {\"price_less_than\": \"\", \"product_type\": \"\", \"product_tags\": \"\", \"brand\": \"\", \"rating_less_than\": \"\", \"product_category\": \"\", \"price_greater_than\": \"\", \"rating_greater_than\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://makeup.p.rapidapi.com/products.json\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "price_less_than",
                    "description": "see API details",
                    "type": "STRING"
                },
                {
                    "name": "product_type",
                    "description": "product type",
                    "type": "STRING"
                },
                {
                    "name": "product_tags",
                    "description": "see API details",
                    "type": "STRING"
                },
                {
                    "name": "brand",
                    "description": "Examples: maybelline, covergirl",
                    "type": "STRING"
                },
                {
                    "name": "rating_less_than",
                    "description": "see API details",
                    "type": "STRING"
                },
                {
                    "name": "product_category",
                    "description": "Sub-category for each makeup-type. (ie. lip gloss is a category of lipstick). See product types below. If a category exists it will be under 'By Category'. Will return a list of all products of this category",
                    "type": "STRING"
                },
                {
                    "name": "price_greater_than",
                    "description": "see API details",
                    "type": "STRING"
                },
                {
                    "name": "rating_greater_than",
                    "description": "see API details",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://makeup.p.rapidapi.com/products.json\"\nquerystring = {\"price_less_than\": \"\", \"product_type\": \"\", \"product_tags\": \"\", \"brand\": \"colourpop\", \"rating_less_than\": \"\", \"product_category\": \"lipstick\", \"price_greater_than\": \"\", \"rating_greater_than\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"makeup.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Makeup",
            "api_arguments_original": [
                {
                    "name": "price_less_than",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                },
                {
                    "name": "product_type",
                    "type": "STRING",
                    "description": "product type",
                    "default": ""
                },
                {
                    "name": "product_tags",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                },
                {
                    "name": "brand",
                    "type": "STRING",
                    "description": "Examples: maybelline, covergirl",
                    "default": "colourpop"
                },
                {
                    "name": "rating_less_than",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                },
                {
                    "name": "product_category",
                    "type": "STRING",
                    "description": "Sub-category for each makeup-type. (ie. lip gloss is a category of lipstick). See product types below. If a category exists it will be under 'By Category'. Will return a list of all products of this category",
                    "default": "lipstick"
                },
                {
                    "name": "price_greater_than",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                },
                {
                    "name": "rating_greater_than",
                    "type": "STRING",
                    "description": "see API details",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to get user information for user ID 10.",
        "model_answer": "response = requests.get(\"https://asd20.p.rapidapi.com/users\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\"X-RapidAPI-Host\":\"asd20.p.rapidapi.com\"}, params={\"id\": \"10\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "user url endpoint",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://asd20.p.rapidapi.com/users'\nquerystring = {\"id\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://asd20.p.rapidapi.com/users\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "id",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://asd20.p.rapidapi.com/users\"\nquerystring = {\"id\": \"1\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"asd20.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "asd",
            "api_arguments_original": [
                {
                    "name": "id",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                }
            ]
        }
    },
    {
        "query": "Can you get me a daily inspirational quote from the My Daily Inspiration API?",
        "model_answer": "response = requests.get(\"https://mydailyinspiration.p.rapidapi.com/helloworld\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"mydailyinspiration.p.rapidapi.com\"})",
        "original": {
            "domain": "Entertainment",
            "framework": "RapidAPI",
            "functionality": "Sync API for the My Daily Inspiration App",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://mydailyinspiration.p.rapidapi.com/helloworld'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://mydailyinspiration.p.rapidapi.com/helloworld\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://mydailyinspiration.p.rapidapi.com/helloworld\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"mydailyinspiration.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "mydailyinspiration",
            "api_arguments_original": []
        }
    },
    {
        "query": "I want to rewrite the article \"Dedicated servers or bare metal servers are a server in itself with no server resources sharing with  other hosting account users. These servers offer a higher power and flexibility, but usually comes at a  premium cost. In such cases, you must have to research well about the dedicated hosting service providers.\" in French.",
        "model_answer": "requests.get(\"https://article-rewriter-pro-api.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"article-rewriter-pro-api.p.rapidapi.com\"}, params={\"lang\": \"fr\", \"article\": \"Dedicated servers or bare metal servers are a server in itself with no server resources sharing with other hosting account users. These servers offer a higher power and flexibility, but usually comes at a premium cost. In such cases, you must have to research well about the dedicated hosting service providers.\"})",
        "original": {
            "domain": "Health_and_Fitness",
            "framework": "RapidAPI",
            "functionality": "Article Rewriter Pro helps you to rewrite articles within seconds. \nMulti-language supported : en,fr,ge,du,sp,tr.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://article-rewriter-pro-api.p.rapidapi.com/'\nquerystring = {\"lang\": \"\", \"article\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://article-rewriter-pro-api.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "lang",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "article",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://article-rewriter-pro-api.p.rapidapi.com/\"\nquerystring = {\"lang\": \"en\", \"article\": \"Dedicated servers or bare metal servers are a server in itself with no server resources sharing with  other hosting account users. These servers offer a higher power and flexibility, but usually comes at a  premium cost. In such cases, you must have to research well about the dedicated hosting service providers.\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"article-rewriter-pro-api.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Article Rewriter Pro API",
            "api_arguments_original": [
                {
                    "name": "lang",
                    "type": "STRING",
                    "description": "",
                    "default": "en"
                },
                {
                    "name": "article",
                    "type": "STRING",
                    "description": "",
                    "default": "Dedicated servers or bare metal servers are a server in itself with no server resources sharing with  other hosting account users. These servers offer a higher power and flexibility, but usually comes at a  premium cost. In such cases, you must have to research well about the dedicated hosting service providers."
                }
            ]
        }
    },
    {
        "query": "Please translate the sentence \"Hello, how are you?\" from English to French.",
        "model_answer": "requests.get(\"https://13f918yf19o1t1f1of1t9.p.rapidapi.com/\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"13f918yf19o1t1f1of1t9.p.rapidapi.com\"}, params={\"input\": \"Hello, how are you?\", \"from_lang\": \"en\", \"to_lang\": \"fr\"})",
        "original": {
            "domain": "Translation",
            "framework": "RapidAPI",
            "functionality": "rrrrrrr",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://13f918yf19o1t1f1of1t9.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://13f918yf19o1t1f1of1t9.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://13f918yf19o1t1f1of1t9.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"13f918yf19o1t1f1of1t9.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "13f918yf19o1t1f1of1t9",
            "api_arguments_original": []
        }
    },
    {
        "query": "How do I send a WhatsApp message to a group with the whin API using Python?",
        "model_answer": "response = requests.get(\"https://whin2.p.rapidapi.com/webhk\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"whin2.p.rapidapi.com\"}, params={\"gid\": \"1234567890123\", \"origin\": \"\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "Send and receive any message type to your WhatsApp or owned groups with our gateway.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://whin2.p.rapidapi.com/webhk'\nquerystring = {\"gid\": \"\", \"origin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://whin2.p.rapidapi.com/webhk\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "gid",
                    "description": "Each whatsapp group will have its own webhook address; set the group-id on this field to get a unique valid url and deliver webhooks as messages on each whatsapp group. Learn how to get a valid value [here](https://rapidapi.com/inutil-inutil-default/api/whin2/tutorials/how-to-use-the-groups-category-to-send-and-receive-whatsapps-to%2Ffrom-groups%3F-1).",
                    "type": "STRING"
                },
                {
                    "name": "origin",
                    "description": "This is the service that is sending Webhooks to your whin personal receiver. If the origin service is nos listed you can select `Do not include in request`, or leave the value blank, and whin will do its best to parse the payload received.",
                    "type": "ENUM"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://whin2.p.rapidapi.com/webhk\"\nquerystring = {\"gid\": \"1234567890123\", \"origin\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"whin2.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "whin",
            "api_arguments_original": [
                {
                    "name": "gid",
                    "type": "STRING",
                    "description": "Each whatsapp group will have its own webhook address; set the group-id on this field to get a unique valid url and deliver webhooks as messages on each whatsapp group. Learn how to get a valid value [here](https://rapidapi.com/inutil-inutil-default/api/whin2/tutorials/how-to-use-the-groups-category-to-send-and-receive-whatsapps-to%2Ffrom-groups%3F-1).",
                    "default": "1234567890123"
                },
                {
                    "name": "origin",
                    "type": "ENUM",
                    "description": "This is the service that is sending Webhooks to your whin personal receiver. If the origin service is nos listed you can select `Do not include in request`, or leave the value blank, and whin will do its best to parse the payload received.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "Can you recommend some popular cities for digital nomads in Latin America?",
        "model_answer": "requests.get(\"https://nomad-list-cities.p.rapidapi.com/nomad-list/latin-america\", headers={\"X-RapidAPI-Key\": \"TO BE FILLED\", \"X-RapidAPI-Host\": \"nomad-list-cities.p.rapidapi.com\"}, params={\"sort_by\": \"overall_score\", \"page\": \"1\", \"sort\": \"desc\", \"size\": \"20\"})",
        "original": {
            "domain": "Travel",
            "framework": "RapidAPI",
            "functionality": "Explore best cities to live for digital nomads! Sort by internet speed, cost of living and more! Filter by continents",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://nomad-list-cities.p.rapidapi.com/nomad-list/latin-america'\nquerystring = {\"sort_by\": \"\", \"page\": \"\", \"sort\": \"\", \"size\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://nomad-list-cities.p.rapidapi.com/nomad-list/latin-america\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "sort_by",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "page",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "sort",
                    "description": "",
                    "type": "STRING"
                },
                {
                    "name": "size",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://nomad-list-cities.p.rapidapi.com/nomad-list/latin-america\"\nquerystring = {\"sort_by\": \"overall_score\", \"page\": \"1\", \"sort\": \"desc\", \"size\": \"20\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"nomad-list-cities.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Nomad List Cities",
            "api_arguments_original": [
                {
                    "name": "sort_by",
                    "type": "STRING",
                    "description": "",
                    "default": "overall_score"
                },
                {
                    "name": "page",
                    "type": "STRING",
                    "description": "",
                    "default": "1"
                },
                {
                    "name": "sort",
                    "type": "STRING",
                    "description": "",
                    "default": "desc"
                },
                {
                    "name": "size",
                    "type": "STRING",
                    "description": "",
                    "default": "20"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the participants in the folder with id 12345 using Sertifi eSignature and ePayment API.",
        "model_answer": "requests.get(\"https://sertifi-esignature-and-epayment.p.rapidapi.com/v1/12345/participants\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"sertifi-esignature-and-epayment.p.rapidapi.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "Our agreement platform available as an integratable API\nallows your company to send signatures and payments\ndirectly through your technology.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://sertifi-esignature-and-epayment.p.rapidapi.com/v1/{folderId}/participants'\nquerystring = {\"folderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://sertifi-esignature-and-epayment.p.rapidapi.com/v1/{folderId}/participants\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "folderid",
                    "description": "The id of the folder to retrieve data for.",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://sertifi-esignature-and-epayment.p.rapidapi.com/v1/{folderId}/participants\"\nquerystring = {\"folderId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"sertifi-esignature-and-epayment.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Sertifi eSignature and ePayment",
            "api_arguments_original": [
                {
                    "name": "folderId",
                    "type": "STRING",
                    "description": "The id of the folder to retrieve data for.",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to list the available jobs using the JobsApi API.",
        "model_answer": "requests.get(\"https://jobsapi.p.rapidapi.com/api/job\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"jobsapi.p.rapidapi.com\"}, params={\"api_token\": \"iyOSd0gsuR9TZIqWe9wAWuRbLai0HYCmLG3OrUFfFct1ePozfiCoZlOVKVfqfTMGung2IxC9LY2WGZUf\"})",
        "original": {
            "domain": "Advertising",
            "framework": "RapidAPI",
            "functionality": "List jobs",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://jobsapi.p.rapidapi.com/api/job?api_token=iyOSd0gsuR9TZIqWe9wAWuRbLai0HYCmLG3OrUFfFct1ePozfiCoZlOVKVfqfTMGung2IxC9LY2WGZUf'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://jobsapi.p.rapidapi.com/api/job?api_token=iyOSd0gsuR9TZIqWe9wAWuRbLai0HYCmLG3OrUFfFct1ePozfiCoZlOVKVfqfTMGung2IxC9LY2WGZUf\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://jobsapi.p.rapidapi.com/api/job?api_token=iyOSd0gsuR9TZIqWe9wAWuRbLai0HYCmLG3OrUFfFct1ePozfiCoZlOVKVfqfTMGung2IxC9LY2WGZUf\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"jobsapi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "JobsApi",
            "api_arguments_original": []
        }
    },
    {
        "query": "Check if example123@gmail.com is a disposable email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"example123@gmail.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": ".61 API",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://punto-61.p.rapidapi.com/public/api/blog/archive/it/00000000'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://punto-61.p.rapidapi.com/public/api/blog/archive/it/00000000\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://punto-61.p.rapidapi.com/public/api/blog/archive/it/00000000\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"punto-61.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Punto 61",
            "api_arguments_original": []
        }
    },
    {
        "query": "Could you please provide the scores for the address \"123 Main St, Anytown, USA\" using the OpenNWI API?",
        "model_answer": "requests.get(\"https://opennwi.p.rapidapi.com/scores\", headers={\"X-RapidAPI-Key\" \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\" \"opennwi.p.rapidapi.com\"}, params={\"address\" \"123 Main St, Anytown, USA\"})",
        "original": {
            "domain": "Payments",
            "framework": "RapidAPI",
            "functionality": "An open-source API to access local walk scores and regional bike and transit data for any address recognized by US Census Geocoding.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://opennwi.p.rapidapi.com/scores'\nquerystring = {\"address\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://opennwi.p.rapidapi.com/scores\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "address",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://opennwi.p.rapidapi.com/scores\"\nquerystring = {\"address\": \"1600 Pennsylvania Ave. NW Washington, DC 20500\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"opennwi.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "OpenNWI",
            "api_arguments_original": [
                {
                    "name": "address",
                    "type": "STRING",
                    "description": "",
                    "default": "1600 Pennsylvania Ave. NW Washington, DC 20500"
                }
            ]
        }
    },
    {
        "query": "I want to retrieve the content of a LINE Messaging API message with the message ID \"123456\".",
        "model_answer": "response = requests.get(\"https://line-messaging1.p.rapidapi.com/bot/message/123456/content\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\":\"line-messaging1.p.rapidapi.com\"})",
        "original": {
            "domain": "Communication",
            "framework": "RapidAPI",
            "functionality": "LINE Messaging API lets you develop two-way communication between your service and LINE users. Push and reply messages Push messages are messages that your bot can send to users at any time. Reply messages are messages that your bot sends in response to users' messages. 1-on-1 and group chats Send messages not only to users who have added your bot as a friend but also in group chats that your bot has been added to.",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://line-messaging1.p.rapidapi.com/bot/message/{messageId}/content'\nquerystring = {\"messageId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://line-messaging1.p.rapidapi.com/bot/message/{messageId}/content\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "messageid",
                    "description": "Message ID",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://line-messaging1.p.rapidapi.com/bot/message/{messageId}/content\"\nquerystring = {\"messageId\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"line-messaging1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "LINE Messaging",
            "api_arguments_original": [
                {
                    "name": "messageId",
                    "type": "STRING",
                    "description": "Message ID",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to generate a recipe based on chicken.",
        "model_answer": "requests.get(\"https://generate-a-recipe-based-on-an-ingredient.p.rapidapi.com/generate_recipe\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"generate-a-recipe-based-on-an-ingredient.p.rapidapi.com\"}, params={\"ingredient\": \"chicken\"})",
        "original": {
            "domain": "Food",
            "framework": "RapidAPI",
            "functionality": "Generate a health recipe based on the ingredients you specify in the request",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://generate-a-recipe-based-on-an-ingredient.p.rapidapi.com/generate_recipe'\nquerystring = {\"ingredient\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://generate-a-recipe-based-on-an-ingredient.p.rapidapi.com/generate_recipe\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "ingredient",
                    "description": "",
                    "type": "STRING"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://generate-a-recipe-based-on-an-ingredient.p.rapidapi.com/generate_recipe\"\nquerystring = {\"ingredient\": \"chicken\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"generate-a-recipe-based-on-an-ingredient.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "Generate a recipe based on an ingredient",
            "api_arguments_original": [
                {
                    "name": "ingredient",
                    "type": "STRING",
                    "description": "",
                    "default": "chicken"
                }
            ]
        }
    },
    {
        "query": "How can I retrieve Google Calendar events from a public calendar for the next 3 months?",
        "model_answer": "requests.get(\"https://calendarevents.p.rapidapi.com/calendar/a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com/2\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"calendarevents.p.rapidapi.com\"}, params={\"src\": \"a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com\", \"months\": \"3\"})",
        "original": {
            "domain": "Other",
            "framework": "RapidAPI",
            "functionality": "Retrieve Google Calendar Events from a public calendar",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://calendarevents.p.rapidapi.com/calendar/a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com/2'\nquerystring = {\"src\": \"\", \"months\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://calendarevents.p.rapidapi.com/calendar/a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com/2\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "src",
                    "description": "Calendar ID (ending in `@group.calendar.google.com`).\nYou can find it in the `src` parameter of the embed URL",
                    "type": "string"
                },
                {
                    "name": "months",
                    "description": "Number of months of events to retireve.\nDefault is `2`. Max is `12`.",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://calendarevents.p.rapidapi.com/calendar/a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com/2\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"calendarevents.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "CalendarEvents",
            "api_arguments_original": [
                {
                    "name": "src",
                    "type": "string",
                    "description": "Calendar ID (ending in `@group.calendar.google.com`).\nYou can find it in the `src` parameter of the embed URL",
                    "default": "a212edcb509733e73dca4ef55f447980c6b2b5db055aaa46bf3fda05f3c6e452@group.calendar.google.com"
                },
                {
                    "name": "months",
                    "type": "NUMBER",
                    "description": "Number of months of events to retireve.\nDefault is `2`. Max is `12`.",
                    "default": "2"
                }
            ]
        }
    },
    {
        "query": "Get the prime number for the input 37.",
        "model_answer": "requests.get(\"https://teamriverbubbles-random-utilities1.p.rapidapi.com/math/prime\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"teamriverbubbles-random-utilities1.p.rapidapi.com\"}, params={\"number\": \"37\"})",
        "original": {
            "domain": "Tools",
            "framework": "RapidAPI",
            "functionality": "random utilities you may use",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://teamriverbubbles-random-utilities1.p.rapidapi.com/math/prime'\nquerystring = {\"number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://teamriverbubbles-random-utilities1.p.rapidapi.com/math/prime\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [
                {
                    "name": "number",
                    "description": "",
                    "type": "NUMBER"
                }
            ],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://teamriverbubbles-random-utilities1.p.rapidapi.com/math/prime\"\nquerystring = {\"number\": \"\"}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"teamriverbubbles-random-utilities1.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "teamriverbubbles random utilities",
            "api_arguments_original": [
                {
                    "name": "number",
                    "type": "NUMBER",
                    "description": "",
                    "default": ""
                }
            ]
        }
    },
    {
        "query": "I want to check sample@gmail.com is a valid email address.",
        "model_answer": "requests.get(\"https://check-disposable-email.p.rapidapi.com/api/disposable\", headers={\"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\", \"X-RapidAPI-Host\": \"check-disposable-email.p.rapidapi.com\"}, params={\"email\": \"sample@gmail.com\"})",
        "original": {
            "domain": "Business",
            "framework": "RapidAPI",
            "functionality": "AE6888  - Ae6888.net\u2b50 Trang ch\u1ee7 \u0111\u0103ng k\u00fd, \u0111\u0103ng nh\u1eadp AE888 m\u1edbi nh\u1ea5t \u2b50\ufe0f bao g\u1ed3m: \u0111\u00e1 g\u00e0 thomo, t\u00e0i x\u1ec9u, th\u1ec3 thao, l\u00f4 \u0111\u1ec1 online \u2b50\ufe0f Link v\u00e0o ae388 - ae688 - ae88 ch\u00ednh th\u1ee9c.\n#\u0111\u0103ng_k\u00fd_ae6888 #n\u1ea1p_ti\u1ec1n_ae6888  #link_v\u00e0o_ae6888 #t\u1ea3i app ae6888 #/m/033_l8  /m/033_l8 #Casino #l\u1ecbnkvaoae68882022 #dangnhap #\u0111\u0103ng_nh\u1eadp_ae6888\n\u0110\u1ecba ch\u1ec9 : 74 Ng\u00f5 238 T\u00e2n Mai, T\u00e2n Mai, Hai B\u00e0 Tr\u01b0ng, H\u00e0 N\u1ed9i, Vi\u1ec7t Nam\t\nHotline 0839138910\t\nGmail: ae6888net@gmail.com\t\nWebsite https://ae6888.net/\nhttps://ae6888.net/huong-dan-dang-ky-ae6...",
            "api_name": "requests.get",
            "api_call": "import requests\n\nurl = 'https://ae6888-link-vao-nha-cai-ae688-2022.p.rapidapi.com/'\nquerystring = {}\n\nheaders = {\n            \"X-RapidAPI-Key\": \"TO BE FILLED\",\n            \"X-RapidAPI-Host\": \"https://ae6888-link-vao-nha-cai-ae688-2022.p.rapidapi.com/\"\n        }\n\nresponse = requests.get(url, headers=headers, params=querystring)\nprint(response.json())\n",
            "api_arguments": [],
            "python_environment_requirements": [
                "requests"
            ],
            "example_code": "import requests\n\nurl = \"https://ae6888-link-vao-nha-cai-ae688-2022.p.rapidapi.com/\"\n\nheaders = {\n            \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n            \"X-RapidAPI-Host\": \"ae6888-link-vao-nha-cai-ae688-2022.p.rapidapi.com\"\n        }\n\nresponse = requests.get(url, headers=headers)\nprint(response.json())\n",
            "metadata": [],
            "api_name_original": "AE6888 Link vao nha cai AE688  2022",
            "api_arguments_original": []
        }
    }
]